{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "3dab3286-deba-485c-a8d0-b40c4dfb437c",
        "name": "Clear Cache",
        "item": [
          {
            "id": "ac4a656b-0a22-4969-b865-1197bae1dad3",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c9bd0c19-a4cc-4935-b96b-277be33d643f",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "23a840e6-d185-4d18-8f7f-0d2367ac19bb"
                }
              }
            ]
          },
          {
            "id": "be922372-ac92-4280-aa9c-84e8d6b5a8ca",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "53f1a005-b8f6-417c-b461-52e63a529378",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "6e2ad2d6-d694-4162-9f19-6a7b8e2a036f"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "35a5dc60-05c3-4e33-b89f-015424e19734",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "b99a7eb7-c6ca-4192-861b-71dab4b6f43a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8e420911-56dd-4721-8ec0-e5c01624a6df",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fcdb15e9-f3af-4648-8d4e-686a6dcf31c4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "54009ce7-f162-471c-8245-7b435df75d05"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "fa1248b0-d9f4-4094-8f15-b579e421dc2e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6bf3c522-4b7c-4435-804e-2d1d3bc67b64"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "dfbdea4c-c63a-4d95-b75f-b18cb9d43e5c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3cfc4406-a977-45cb-858d-fd8ab464941c"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "229f176f-1cc9-4261-a14c-15bda14dd8db",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "efd5edc5-3354-4b82-bab0-e1038b93f713"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d3a4cb3b-375a-446d-9563-e721587acadb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "66cf14f6-1815-481c-88d8-5de58b7d27e5"
            }
          }
        ]
      },
      {
        "id": "a853b0c0-ebdd-404d-b310-69f421c61202",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "5c6ad201-713f-4970-aa3f-0f15944f613a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9f76bf90-ed0c-4d9b-b01a-4025ac740482",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "0b02fd53-07e9-442c-8ee0-d99ecb83b355",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29b62ebe-b99d-458a-bfd9-c6e457eef411",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "87fa1afb-0697-49d5-bc6b-73650616d726"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98398b2c-e2f6-4955-885b-3b99726ae4d5",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2731b59-0178-46d1-adb0-dd2604d34fa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "692b2daa-cf3f-4e1b-94ad-40e1e24b96ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ccb6ee3-0536-4db0-8138-aa7d2edb66cb",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5e34a0e-40aa-42bc-9c92-0f173880c2ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5c571848-9c6d-4974-afcb-a0ec9be9d449"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6798765a-d585-48dc-a451-8e756476b5c0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1e320db4-d5f0-4b99-9d14-fc0b15802fcc",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44838827-2fa9-4d4c-be62-f59c4473bd43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1c11b8c0-ecce-4bae-a32e-86c4ce7c7c5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a16665a2-2c93-407f-a5b9-c15cf1383f22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3372e677-b187-4cf9-997d-64f041dc20c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa283276-fe17-4107-b160-68ee86d893fa",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d14b448-8a8a-4971-8ecd-4bb098efa61d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "697a5bb7-d896-4e74-8168-a02f5142b66c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64548c9d-51c3-4503-90c2-e0df14f9626b",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "dd3ca072-d853-41a2-b441-92594675d9b2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "5162fe30-03f5-4fd3-92aa-d2273ed1d0f8",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e222226e-2326-495a-963c-b69372525930",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c77c51fb-59fb-4bbd-8baf-aa0b881c5560",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "aa0abaa1-a2bb-4a4e-b4ab-ac9e690b2165"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a14e00da-59cf-46cc-8bc1-894c830d9ef3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "e8c38b91-5d45-41aa-a14d-3f199d20ec75"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a715cef6-ad9f-4892-9fc0-2558f454c6cf",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6b2b140b-384f-4bc0-96df-b68632b0bd81"
            }
          }
        ]
      },
      {
        "id": "8777c603-a043-48fd-b004-3d4324d62282",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "1ee38cbd-196d-4c33-b2c6-b1db7a6291fe",
            "name": "Negative Testing",
            "item": [
              {
                "id": "891367eb-2aaa-475f-af80-396d397e1b64",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "0ef3118f-f4b4-4879-9d11-0e0f88fa77d9",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff0a3c6d-c830-4e6a-8a32-2d79c22c82b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33b07988-b314-4958-9cf2-b7d551f8c081"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d028344f-b46b-4248-9450-1433614acda1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2d041e11-e6d8-4171-b57f-17b4fa1ffdb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1b786c0-dc4a-4bf4-ba42-bbca81b398dc",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12d44e29-6c61-45ab-bae0-d1eaf5ffe0a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "709156db-9a93-40de-86b0-7f56efcc8de3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fa4e328-b685-486c-9803-b69bda121508",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e73a9285-937e-42f8-b5db-2c9e0807457b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e33c0cbc-45b1-4085-822c-31458aaf6d2f",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e269416-605c-43a3-820d-f0c4f4d4c9c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c54c73d5-840f-4710-beb9-a068235e83a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "497d6792-d978-4b8f-ada7-c73b6096c06f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9e0e7e17-5cf0-48e9-8e9f-016b4ebbf367"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22aa2e63-a16d-40d5-afe1-19fc3850db65",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "580d7f63-857d-4481-8439-214984a09d91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bfdfc95-bbf3-4076-a49d-1cbd8e2d2057"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8b54387-c3c3-41b6-bce6-61622e53c39e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "462e72c7-1227-4658-b29c-bbc76ee362a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5519ed6-e47a-469c-9d6b-d6c778c45642",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ec27302-5969-4e6a-8e28-2cd5b2ac193e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6661ccc9-986b-45ac-8c76-060bdf803a30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e64475fb-08c3-47a2-b360-da6f81313a1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "98d20dfb-655c-415c-9d50-f9e43e949c51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66e05d23-155f-4c74-940c-fbbbb699df7f",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ceca7f1b-5143-4cc2-a04d-feb57e782816",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "717c602b-05d7-480f-b335-334abe6ee999"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67d37883-a0f9-48ad-9f37-f406a6574513",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "64754072-8323-44a6-83d5-6bdfa7e5578f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50d9f499-3e16-43c2-b210-9e31acbd169c",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2454e37a-42be-4efe-aedb-4348130e65ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57435af7-b0d3-4dc3-bc8a-82497e66a2b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a720d8f-a6bf-4fc7-82e0-053478661642",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "80beee56-f826-4365-a88d-0e8852e96209"
                        }
                      }
                    ]
                  },
                  {
                    "id": "493e6538-4c61-4b2b-be1f-e0b51d0fa6f1",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da91ec81-69c6-4983-9d07-9e2d6a8268ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71679a0b-7ad5-4d69-87fb-3e5a8ad6de31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7893c123-3474-41a7-992a-815eb8a7d02b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "31c6863b-bbcd-49d2-92a9-af058b275694"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bee5096-7f20-4bd9-8790-d6a4cb3a5c34",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6543509-438c-4bb4-9d1e-2372ef7410ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98ae22a0-094d-448c-9e6a-f2a9c8ed2fe0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eccac5fc-bb60-4541-be53-5b165cc9f6d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b9f4a8f6-1b8a-4c6b-a6ba-d00adea0c864"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faf97332-8346-413e-a4f9-dc3029889987",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c542a4e8-5795-4a5a-a8e7-4ec757babca0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "306d76bc-f569-40eb-9499-a5406312d988"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62afb11f-c016-4a1a-b704-9bafd9ed9c54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aef5a6ca-055b-4038-8b26-95141236c9ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e7b8e2d-d4cd-40c3-8eff-31889746c770",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38040799-0da4-4e01-a63f-bd69a39980e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a96a9a50-f5ac-4e6f-ae86-f1c81f1a1d95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e438d33c-e497-453c-a099-912bb98adf00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fc3d2d9f-81b6-407c-8a24-c16cf2a6ef24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e79b7c5-96d3-40c4-aac3-c64f9c7f2bf4",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15aea649-3502-4d9d-9c2c-931883c6d6a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21d403ff-a006-4fe8-907f-c17aae0ff3b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3b38103-2ab7-4418-b4f3-a526a2b24246",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cdab1e91-34a8-47c7-af49-c1b6d6e970bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53ea4ab6-c459-4f32-b1ec-5197f794a0f5",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "465709ce-3682-4e22-a013-37db72e2489f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d495cfbd-da83-4e01-837b-efdc33594e1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c00acb2-a1f6-4ef1-82f0-67771c467180",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "acfb4100-cb75-45f3-b43e-e0c9f15ca9c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4221fab8-26e2-4039-8d04-256a1c29bd58",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38972dbf-47b1-4018-80d5-d58061e2b06c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4e469cb-ac0d-47f5-ad22-f4d8f02bf266"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "034a6b0f-c3ed-4b92-8b15-d36b7e8afd36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1342ec2d-4b1b-42aa-9c16-2cdcced42a7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91b95bfe-42ee-4f77-9736-543b9ab069f9",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65b00355-e666-4388-ad2e-5ad264310a6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53502759-b47a-49f0-a8d5-6ffa78c306d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2b8ba31-b79a-40ec-b619-af1230d01a5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a4f1ffde-4596-429e-8401-e52ce3018437"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7985507a-6239-492c-8fa7-128f26961f0f",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e71619a-1026-4378-8b61-46df98e91322",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cdcb90b-0e30-4f37-ba8e-f412546dc489"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7165df2d-fa8e-4551-a7d6-fe4b7d9f53f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d97ea8c0-1533-4bd4-9cf1-046cab73341e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83c8d93d-733e-405b-bc26-dfd49c2d2453",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fa80baf-7aae-45f3-a4a1-2f6da9ce5d42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a553426b-4f77-4ad2-aa9f-4e3e5e47f6f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e98e1187-ef47-45c5-9806-4a49b292602a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3352bfcb-5086-4e7c-99f8-1459e9bf0b70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "641eb0f4-a103-4303-a169-edb1d1015484",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f8ec829-ba75-4ed5-a153-fc1e43c89dbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "caff43ec-e65f-45d8-a07d-6c106617d56a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eda30112-2e56-4762-a21d-ac1b82cc463b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "825a2633-f3d3-4433-ade5-a7009ae5e1f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dddbb430-5ca3-4392-9604-eaa7a1894e20",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1d712d2-b095-416f-9eef-1fa83aedc12f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f49a32c3-bd35-482e-b991-a784b8ed926e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0d80c49-5b36-4c3a-91d7-0a7e2a652f68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c2f8ea53-c562-4b78-8449-73dc82970921"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a79799ae-28eb-4b69-8fc5-cf23da02df6a",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9de126de-376f-441e-8e2b-1d5eb93ca064",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c639107-4b6e-498a-91e1-efb5a57cc9de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b0ec15b-49c3-4410-a8af-6a16ad8c9ee1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ab501ccb-bef4-403f-a4b5-3623ca65b2fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e22b137e-b4a1-4ef7-933b-140be2aec736",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4947a8f4-1e70-449e-bf86-2bd73a6ddbd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "019a21d7-f507-4ffc-af12-c485459d8dde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a4ce43e-75dc-493e-9b6d-e9ea0cd12c6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9508b1c6-436b-423f-9bd3-bb7e81ecdb6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6426357-57e5-4c1a-9e4f-8f70ce274870",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1aaebe32-811e-4e2e-9601-7c1737df8439",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "725086a4-a6f5-41f3-8d7c-1213196d10fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad6a2bd1-4a03-4c93-8da0-f2fa6140c5b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a0cf3d31-2b9a-4412-a2a6-81ad6edfef68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa6441cf-4c68-437d-a050-a0c001eaf18f",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d851a30-9647-4991-a0a5-6ab703e3ffba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecfe1094-b8dc-4c22-98f2-8a284ae42d98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb761467-231b-438a-ac9e-e66c03b9ac79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "75c3dcf6-a2ef-4df1-9bdf-36e27398fa98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2435bb6f-dc6e-40fa-bebf-b58c316ec6bf",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03eecbbb-a67c-46f4-bcda-5a1511d8fc31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b0711e3-77b4-48e8-8c9f-2eb74d78e751"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f3101cd-2cc7-4c40-af75-a03b07ff4ba4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "3751f8a3-98b7-4d21-8588-af493e4451fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afe3521f-6d85-4660-969c-ae496d03685b",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc246614-48eb-44d5-aa67-01f0a1a7d6fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "007fc7fe-eee7-43ca-ba4b-52ebea0c11cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd184188-7ac4-4f9a-9f3f-65eb28b2c5a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ccbd74e8-5b46-4206-94d8-c50758ef602b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cb5c582-2820-4232-94a2-f8f3a49b7ed0",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19ef8eb2-5bec-47ef-827a-d1fe55c5668f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b57281a-1b72-4119-9df7-f3504ff19164"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "832d2257-c916-49ad-ab16-1db822d4c3cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3b4ad391-8f4c-418b-82d0-e1d4d418db11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0008a36-9acd-49d2-be61-fa0941a66d00",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd15598f-663e-47cb-b917-46ac5fdfcbeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d63a8aca-9f80-47e7-ba46-967cadfc7aab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89e73465-22d0-4f0b-bc63-d583243bc008",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "032c325e-e610-4bc5-bad9-1f111898d069"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6f155be-a158-4eb9-b93b-6f74c99f8acf",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d964fdab-64c4-44c3-af7a-817785128bb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad58e7f6-cd84-448d-b408-41acb9c8fe84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74c90998-2f5d-4b91-b3ba-cc7e8234ddfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a758b407-4df2-453f-a841-c1118854e264"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cb4ec77-4237-48f9-a66c-49d5ef6621ae",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d346765a-423d-412b-8403-b361060e19a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "285588cc-a9ce-4c36-a30f-1ba58cf34528"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66968b08-59b1-4ac6-9aa4-8f1e42af98c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e3384aaa-153d-499d-a4d8-9c323e15a8c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "234f784d-ed67-41b8-8104-2e0f1c6dc126",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a70f7add-dee3-4988-aed2-62a51e8d6109",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a6267b5-3a51-4eb0-813e-5c628083b040"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10d2be8c-bbfb-4680-ab9e-4b763cdc951f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "208859fa-7619-48a7-97a1-b8dcb8c3581d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e636d82c-b11a-4a07-bc78-10f64b00c5d4",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3dc610e-6751-4a25-8e59-185ed3f31b3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c36f2f99-e27c-49f7-9ec1-b147c524796e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e699b0e-ae5b-4d30-a799-acad1c2bb7dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "78aaf631-78fb-4353-a102-73f124009037"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efa0549b-c5d6-4eaf-99df-ac3d742a6316",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbe6a950-8ad1-49ed-bec3-c5a5ba74f6c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1aaa4ca0-1b09-4469-a897-24cf7b0bfa75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec0a819e-b4c8-49f0-8ff5-e93f6939cc91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e51a7088-3844-42d0-b2f7-b967988beb86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98cf9b2a-d228-48c9-8afc-b1f870598ccc",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29233088-caf1-411d-a8f8-f32b5467cb0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf89367b-52e2-4d0b-beed-8d8c80933692"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51b76bce-a7d9-4c58-a8f8-67101fe1f279",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f0b6a39a-fb38-48fd-b6fa-7448ce1f8439"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f1a58b1-be04-4977-b9c7-c83a0f361e6d",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18adf806-2a9d-4035-b6a2-4618bfe6149f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c8045c6-8c47-4697-86b1-4dbc6059cebf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "226f16e3-9d62-4794-8254-a77d7bff2350",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e5b48b14-f9d5-4b9b-b002-c59d28efd315"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72d3fe3e-7f16-4267-af34-c90221094992",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b91f806e-bceb-49fe-bc89-7072466bda04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f4ebe5c-a02e-4ac3-8431-1ade0bbc4ede"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87deaf47-481c-444a-a37b-88191b83420a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "22c969db-42cc-4442-9764-a07945f3a202"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc1de9a9-38ba-4e2c-8799-1208116e7bbc",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c700b5ea-4350-4c22-838d-0e34d99fb956",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0fc940c5-2599-4a11-9eaf-fa7a8955d0fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdfcec2d-efdc-4b81-99f9-3614172e3d7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3f424535-0cb5-489d-95bc-e2cddf3c5d05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "115ab545-edc6-4664-aa3f-5d04e28fb097",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62a856f7-baf1-49a8-87fe-8658badac2b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5eefb40b-609e-4969-ad08-658bcbced79c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9682e2a4-382e-456a-94ca-10b9b24b3e74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cc659fff-8830-4ac4-a8d4-e478e28f7db4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "877e0e73-952c-4140-be0a-4fc7f63aed0c",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfc9979b-c750-485f-adb1-6b2c6994afdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9b200c0-677a-484f-a0a2-157918c02acc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00d2aa19-8eb4-435c-a2b5-0b0a8e0e3731",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "ea506a2a-1174-45a1-ab92-45905f6826c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b37e4062-9df2-4f99-b3d0-9fdd50fd9df3",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c36677a-1fb3-48f5-a419-6de0612d2df8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "391da744-af17-4b40-a6ef-b077933223c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02011130-b95a-4919-a6b5-297b2f321afd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "d8090ef8-de0c-4920-b5a9-7f0996d370fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd1873b3-32af-47c2-a537-44405cdacfe0",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d97b608-1795-4e78-98f8-9addc2564aee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b74fd708-09c5-4393-8f03-953d7c60ce64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b9bcac7-0386-486e-807b-ad460d2c5835",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "def91332-dcc5-4928-a06c-c5184819c932"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b4c621a-fbf6-4bf6-bbc0-d308eb8a171d",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0506c822-55e5-42e1-a25a-566089f9be68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51711280-f1db-459c-8f51-9e4a46d6db77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24df776d-63de-4606-95a3-00468560848e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "28e3dc02-769d-4910-8e7d-2c663295e763"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb229102-e677-478c-bcbf-6fbea319b590",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1b6bcb2-9654-4e21-ae4d-01b3d85cb294",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a8e1079-0287-4cd2-b290-9a6912635a12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2e62425-212c-40cf-88e3-815b1270c76c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "27c40a52-b120-4ee4-8907-e6110d7e2060"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28ad430e-f0d2-493c-800f-3c8fd90c997a",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62877d89-560a-4758-ad10-6d35056d44d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "248836d5-1664-482f-8845-46e891e0b2d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ad32c0f-f8a1-4c25-b59e-f4e11912f643",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "5261c858-30b7-472e-9b96-7552c9c4df30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7efe9efe-584b-4c23-9559-7ba5522133d0",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe17d47e-6231-4379-b771-1d3f2e827c1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfb5fa68-98af-4463-bd43-92c7af5b78cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d690048-cb7c-4764-830d-2994317ba04a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "4993d110-0d6e-4808-874d-37df3913c762"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dcb13a2-10b1-4a7d-8eca-1f874a830f69",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46716ea6-cef6-4589-9edd-422de55f0db0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53c569b8-4d4c-43d2-b920-38012eb71ad4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13d7af70-f460-4531-93f4-4cf33860f0f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "58fd38e4-a69d-4726-b5c6-e988b2ebeeb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b4435d0-b24b-4c44-8bff-496c4c91368c",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "477313f1-ebc6-4523-a50a-134abbfb6315",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a239193a-e3de-4fbb-bab5-9a03cde79d2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cceca2c-fff3-4202-ab26-387b8e3e6901",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "db52a80d-9d34-49cf-b8da-82ebf2a66723"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef6f6f67-acb9-4fcb-a722-7698fbcca53c",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db0ebe27-8bf1-4b38-bd5c-d2605cea25d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3cca87a-65d0-4f18-ae99-632c04517580"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "007cc446-5397-4231-b868-89b29e6b6911",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5bc71cb7-dd28-4c06-bf24-d353d389de42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "128cb95e-85fc-4a06-ae30-e65be08a2ba0",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56b462d9-38d7-4601-9e9a-518f2f745caa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eaeb933b-3fd0-43ce-9d57-07391b5a5d11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "768aecc3-13df-4d58-bedc-3e68cd9c33b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3ad0d8c9-80c7-4a59-a3ca-3c624a91ac03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d15962c2-c82f-4fe3-8d8a-b19b9c4fbff6",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46092ab4-8592-43fe-a573-42b09fe60b6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9642229d-41ec-4e96-8d06-ec764f518683"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c540e7b-58a9-4809-a798-6a4c150881d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2982b55c-6915-4482-a384-271d66438f9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "877a7197-ec54-4086-af17-c7c45149989d",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00232a3f-1fe4-4fb2-a36b-c130b1c9f777",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7f0b99d-6b75-4a4d-88ae-ed8590b1410c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b643e4b9-5b70-41c4-99c0-f161c151f21c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5c674773-2dab-4bf7-9627-1346f0676caa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4511348-ecdc-4e0f-980a-7d5b9c83fac4",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a782a4d-52a5-457f-a5ee-db1a0ec6fd04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d04362c9-2daf-4f8e-8f3f-d6d6721d6ea9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "808e0429-877e-4550-b267-fde32e12d7a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "08f26722-fee0-4f87-9a69-4795bc26a180"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c37f1a0b-1d5e-4bfa-b9f5-a41257e2fbd8",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48098ce1-15e1-435a-be9c-564823c57beb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57fc2b83-20f8-4618-8577-2006a1fb9583"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc8ca2fa-67d9-4fa1-97ae-69f4b664c212",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b076c5ba-6b7f-4334-9eae-11f2004c3364"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a90b0aec-08ab-4059-b8a7-1d0d3451feab",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22516c8f-abc8-4386-a79e-4541e31cfeea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fc0b69a-76c0-4b1d-981c-cc5c8136751e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9301c85-274b-4f76-a053-3064855c1585",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "88206ba3-9ec1-47d1-84b0-8146e646df99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e3913f7-a72c-4a00-b924-e3ccb3b2519b",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e34ca716-20e4-43b5-85cd-c7bb7ff6510a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "897f6ec0-1605-49e8-8bd6-ae4c1f741891"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d57fc92-3f58-49cb-b12a-51526ad12251",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "041f268e-0873-49c8-9087-768fcd0df0db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97faffcb-f635-4d4b-8153-50ecb1f1974c",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecd3fd87-6f44-49c7-9f64-fca5035d402a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa263811-f6f0-4be7-b125-c8a5f78dafc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d20395d2-7cd1-404e-8c82-aadc812ec1a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9506137e-7ad6-4675-9cf5-afab4e5f9414"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c251fd2-c232-442e-8d01-fd0390762601",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83019cf0-2d11-42b8-824a-919af0a6bf77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27bba429-b587-4801-a40d-cb3ed84e1fe8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f588a1fb-e417-4db5-a74d-2bac3b0fb800",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "be9d76b5-0a94-4482-9c3f-3b581248b9e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "946ec8ac-a2f1-476f-be20-cc40a3c1b9fc",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3398571-0a12-4972-ae11-5bc247ec30c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77b559bf-0fb1-4f1c-adfd-1bc08bb5988f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cee0974-dd0c-4fec-ba11-2f1dff649dc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "24da7868-c664-4465-93a8-b412c982fe84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d756d73-e412-4173-9e79-27ded4dea864",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3188fa6e-8c26-4d35-ad8d-189b638ac968",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66ba20b6-6811-4e9c-8a5d-9f02e10d5ed5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ddb7009-c2c9-456a-ab42-54ed59d86208",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "4c52bf61-f79d-4820-bdc9-7ef5f76993c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0acbe5b-bd6b-4562-be0f-7d9e4e402378",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f63d46f-bbd5-4129-88fe-6f421d97b818",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "befa7b58-1507-4deb-b4b3-199053112f8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06edf6d7-c1ae-4602-b8cd-d9b9618210ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "28bef5ed-83c3-48ab-ae6c-9e1c81250e29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6514d82b-070a-4c26-ab7f-c179f9f3321f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d87912a-b665-4702-8100-af81e76ab43e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33b9acba-ddf5-44c8-8d4a-1429be3d37ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bad632fd-bad2-415d-b27b-1760749ee46a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "5f0534d2-fc4e-47bb-98fc-9796bc304294"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7703440-d7f8-41cb-8220-94d1ce548f93",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "402b1624-fa7a-4121-a97e-adbaf3f2324c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17c2aa4a-6902-4882-bfcb-494ed04ec341"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5c5596c-dd0f-4835-aeaf-f2130da8c3dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "099c13e0-9dba-4204-9d6d-5efc42fd3e94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "577499b5-8de9-479b-9ea2-5869c165852d",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33317b3d-a0f1-4ce9-83b6-e8f99e70302f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c08d8a1-c865-4acf-a2ba-351aeb401c17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d387007-81e3-4c96-90fb-974179292d26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "e65c6f4c-ab1f-4d06-a52d-83bc36c6613f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0cfff0a-2660-47f1-a097-44e2808c8ba1",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33d8e9df-8727-4985-b481-22ada3eacb54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2be55ca3-3502-40de-99f7-67f268dcbf9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28d96a9e-5114-48e3-98f9-ab520ad59ab5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "1144e6d6-250f-419a-9025-ae05d8c16afe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01d829d0-be6c-49d4-b67f-10aaa577b668",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c5c53c4-990d-41c0-8e28-d98f0b40f61d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58759ae4-929d-49e7-b87e-180ff8a10406"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a309fea-06a2-4a02-881f-d63bd8a181ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "035f70b5-f5c1-44ef-a0a3-706405b26e12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b32ffe5-b0dc-44ab-8d8c-d83e9256fede",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7325fb47-011f-49b2-8276-831c464fb4da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "361ed882-9ce8-47d7-945a-c4038cfa7de8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f7682dc-6b6f-4ba3-9934-58e6ac679060",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "854f0c9c-8135-4bd2-8ad8-4f13c12fb9ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0de1bdd-ef41-448e-9143-d8cb15877bf6",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f44295e-4d66-498a-b7d7-00dac4553143",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af715258-930d-44cb-8f14-a0fcc86f9885"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf5dc474-48f7-41c8-a1d2-72f0709d95b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1b2ee5bd-595e-4696-833c-499ba06a9deb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef7916d7-e235-4629-92e7-cdd945ad07f6",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "601d61f7-eb70-4320-8bdc-fa1a93c34ea8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75c7ff11-b093-46f5-b43a-7a87737c8ef4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98e74a2f-95ae-4ebf-8310-1f05da22fb60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "86e824ae-8230-4e63-9bba-b97263e4cd23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03ab30e7-55da-4a98-8da9-cfdcfc143d33",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fda199e-6c84-4525-997d-75abf21b0445",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29625061-607e-4917-b2bf-27de657801c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7e7d21b-9ffd-4ff9-b2e6-16d2322e8b5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "2f7ab36a-37a5-4003-a805-fbf62769cab7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2516aca-6452-4c96-9ac8-bc8495307b00",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1eda496-6e12-4015-a5ba-f8c4c1e59a0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "261bfb86-6eb6-42ab-bb8a-5b08e6ab6d02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "156e50d9-b618-4bde-9a76-f2665adc4758",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d412e9e6-aa2b-4042-bc9e-672bfb6c319b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0962ae0-3eb9-478b-b516-c6fa1ee18d39",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "966e92fe-b2b2-42c8-a921-7f250c735a17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40fb9d3b-4fb9-418c-a337-3d4f0c571789"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d199d0fb-f6ba-4d81-926c-9d6bed6ef40d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c3158fe4-f595-4145-a782-1fd13463cb91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24c9fbb4-5617-4ca9-9246-a8d9cbb6c4f5",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2df59fbd-d1d3-444a-82fe-83a823fb94b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80a15e70-688a-4ea8-8e32-b2aaab9c295c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "337cc3ed-37d0-4a61-8b6f-c7046573d91b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ba1ab342-c440-492a-8dc9-9a7425c5392f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91bad096-8d78-45b8-9250-d35c5a4bd4c9",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4d1c65c-3eae-488c-9603-3426fdec4ebf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94d0845c-be57-44c2-9779-f60837198c58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bbaca85-f81f-4e35-89c2-4fe2bad58aa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3dafff85-9f14-4e85-8a85-c62d7ea5b5af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73ebb5a0-6d59-477b-bc9d-f3b5e21cfd69",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfaa5bee-fbf8-4812-ac15-1ea0c3a3c8ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f933c300-f541-48e9-8556-a56ff2111d25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90ce953d-68f2-4a56-b6dc-450ac9275f51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "35e27364-6aa6-4c48-a303-92612dc4aa5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09ec8553-7b90-45f4-9f5a-78bd536d3e32",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2d053c1-c2a4-4404-9be6-9a060dbe76fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a18912cb-ffab-42fd-84f9-58c93aef2e0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4759eb3-775e-4973-a7ab-ddc2cc7957fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f133aae4-d310-4343-999c-ae3794091b1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bd7ebaa-a6cc-4edc-b643-2aca1366eaf6",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6cbb59a-4d01-4b6a-ace0-e531312f4949",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd32f1c2-f728-4af1-a87a-7b04be496c45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3b48e21-d02e-4234-b34a-24eb0e8060a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ffadf3e-7be5-48a8-92b1-d45966524179"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b931cf7-c6fa-4daf-9b3f-eee5a24fb582",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b663769-b9f7-4456-b1fe-ff87718addb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53dc3754-50ba-4584-b0b3-97b0b53b939f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbf4b490-7059-4549-a9f9-0c930e09f0e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "379faf58-742b-4d63-9dbb-fa4a307d25c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "423b93fe-fa2d-4b22-a740-42abe0c9e2a0",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "103385c5-008b-4c60-afd1-0810b956d9af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "817de591-0b22-4d9a-b7e7-21dd1f67c76a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "121afb2a-fe50-4c92-a943-84f3550df0aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "571fe6be-01b1-41ea-8c11-ee8babb813e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaf0e877-0048-48b9-a332-9035d0d4ea51",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bed513fc-1759-4cbd-821a-9912b80b847c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43925ab0-12e3-4fe0-b975-81ff335d69e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebd6397f-ae0b-44f0-a011-4e36a098207b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bb430c06-71a4-4766-a515-c27d91568096"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87fab5e1-71c8-40d8-85ee-65913b7fc982",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09475cbd-6901-4dfd-9f66-7be2e2934a6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb376cfb-7fdb-460e-8642-49e32d4512a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2db8955d-1e19-4a43-b08a-77d42c17fa4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d5edee51-0889-41a3-9835-9e8a2c92ba29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d77acdbe-9de2-4cc2-8462-f883900f5482",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "688f4d4f-5d24-42ba-85a7-d12cb4445d32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0afd707f-46da-4a83-9f4c-2e9526d89512"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75aa4908-3d94-4ce8-bff7-1791449ef464",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c40d54c3-f32c-4705-becc-0cf9f422de48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bc205f8-9c16-4525-a386-1510891674c0",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94aa3773-54e7-40e9-b780-c58ab8207bb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02fa7bc4-719f-4978-a88a-c60ebf2d5d5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9461d60-64ad-4229-9f4a-2bcaf3a2c7a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "32b94275-57c3-4f40-b669-c242b90218fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f224a615-ba27-4d39-99ca-bac89b8cf038",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e9a12df-16e5-4d55-8b03-d62330d403a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0dfba04a-d9b1-457f-bf94-40fa5bbc45ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d95f760c-aa21-4059-8880-5b5daba9a13f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "31485b31-c3a7-4a01-8175-8dc45e8ddc8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9a5635b-afa4-4ddc-be8b-3381ac2b3b3f",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "458e7224-2ba0-4547-8b19-21a0a05f94ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a13a76ca-3dcd-4b26-a21f-4f770166b79a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c39b4120-b21d-43ba-955e-c416da36be8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a27b039c-621c-4434-9fa4-bf3bfa91ea29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68475121-ec30-4de7-afc5-9c18a5b99571",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "820c5048-5996-410d-a116-178ede5cd8c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fddb11f9-b9bb-49e8-9132-3e5c226bd960"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bbb4ad9-8731-4129-8708-d25a5c014f3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "83fb7804-6e77-4565-a0f4-4af3dccc6db0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb731583-891f-480b-b275-fbff5601f69c",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdae693e-3603-48db-930d-db3d8b2a2d96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94231a71-b792-4dd8-b7ba-6597f842b4d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc41ae8a-5571-4b8d-bdb2-16d98cb0070c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f5f6273d-fc77-4234-842d-7d99643a1348"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66a4861d-cb3e-45d7-a2c6-cb49e3ad971d",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "259cef76-9c2d-4b1e-a098-fcb93a2fcde7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e9c565d-a0cd-4e77-b499-4858e61e6393"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13f42179-04b0-472f-94c0-bf2ab13789a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "02ae51c4-0a74-43fa-aedf-91d3c44b587c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f483180-03f8-4600-9c89-5ce99636b4c5",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1e6b684-1c4e-4ac1-9566-84e8b082b49e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0df182b-cef0-422a-a056-8e841a4b3e8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e70d3568-ca48-4b9b-a5b0-850bd477004b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "1a2441a6-47bb-486b-84b7-79630cf3876f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9c1b320-b9cd-4569-97cd-6f1cb6436a57",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c7ebdad-981a-4942-be1f-0f6fc792d0df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98e0ad3e-fc40-469c-93ec-908df4d3fe24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "accbc301-d208-4f7e-a69b-a2b7dadffb68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "5d1d676e-b3cd-4c24-afd9-83b088dcdbaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9db8f42-157d-4596-9102-dc415d674b93",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9418c9f1-4a92-4dbc-870e-5932b933fd85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2610b327-264a-43a8-b089-607cb12248ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "578a923b-9db9-438b-91e2-5570cb1b34e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "98a0bc79-3308-406f-9edb-4a7fb31bff0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94d6f1c9-8502-43be-81e4-a6631329c9bc",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce467a9c-f007-49cb-ac3f-8ac8c4c87700",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3fcd589-3b57-4d5e-860d-9b2ffeaf8dae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8930844-9d4e-438a-826d-ac1762475460",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "81e26f83-7850-463d-abb1-b5075e37c406"
                        }
                      }
                    ]
                  },
                  {
                    "id": "717413a9-cef6-457b-bebc-5e71e9402302",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e98bafb-202b-426b-971e-897bcf1e995c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cbb4815-ee9f-4ded-9a4e-792105e14748"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04134a52-df4c-4e5c-9083-d6d589e2d175",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "6ce338b6-db33-4757-83ea-b19bf1fb45f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b05c4bb6-a674-4d95-8306-c5becedc4930",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcf88152-4d11-4e21-8edc-36bcd0f04b02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "8ce9764d-2fe4-48cf-872b-da1c58860e44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f048fbd-29c3-4f95-b0b7-d65641768743",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "1b501242-3a40-4851-9ff8-fcc7f65e6b63"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ec560ce6-0c3e-4650-aaa9-f4b6facaf936",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1d237e2e-49ea-45cb-9db6-bb93c3b07c15",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25d2c3fd-3496-4b97-94b3-fc85a2cd8792",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "26b0d2f7-7bd6-4d36-9124-ae00b546c7ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71f52227-2b0c-4c19-a360-c739e3be85c7",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "80fe9b55-1663-4add-8606-eae65d8c9591"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f232fa77-dff6-4774-abca-091d448defa5",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d2112ef-4df3-4430-8fec-8215e60bad6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "71de1d36-c6b8-4629-852b-de2f40032d82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c094ad74-8eec-4ca2-be13-02e601e9dc7a",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "941464eb-0392-4d37-9ef5-4f04daaf9733"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "82b0b6d3-8718-43bd-b5d7-f56970adb44f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "307ac27b-0f2f-4b8b-a2fd-427930f50a0a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a5890bbe-360e-44b6-ba1d-3b578c2d72bd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6a06a81d-c24f-4540-9350-ab0ff625cea4"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0e6a8aa4-6541-4d94-b1ec-53dff03685ae",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f15afb0a-612f-4b1e-b107-80d2e46348c5"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "fe37f099-609a-4cb2-b6ad-13fd8dad08e7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "50698e9f-98f1-4137-a6c6-7a040b1ed717"
                }
              }
            ]
          },
          {
            "id": "a474db5e-2250-4e83-bd10-cdf5048c573b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ef5c9cf7-9b39-4e7f-af3e-ba509722a86b",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "474b04c8-352b-4d14-990d-a1b43aa3997a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4c76669d-8734-4e0b-9706-041622ca28a2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7255f147-7a87-4966-9f7d-96969644bc12",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "dd884702-7aff-425a-8a88-f39d1b832a74"
                    }
                  }
                ]
              },
              {
                "id": "c39498fe-2a2d-4235-bb9e-57c3e2a04de7",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bc706b21-5a7d-46f8-84cb-ac2b0bbd8a34",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "de6a8927-e745-4bf6-be81-c74a5384524a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d5ab4ae6-7aea-4643-b657-8ca9d65339eb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5f0278a2-6984-4971-8156-73147e5dceb4"
                    }
                  }
                ]
              },
              {
                "id": "5d97e0e7-a55b-49bb-8672-0d83cbb643d6",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c9b68459-699b-4a8c-aefa-4cacd9a168b6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5b886da5-635c-4021-b32f-139addec8f7a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "aabc8ecd-e622-409c-85cc-f3ad1d80eee1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "3a2035f0-60c0-4c6d-ae6e-17051c0bf66a"
                    }
                  }
                ]
              },
              {
                "id": "1bc8365e-bcc1-423c-a86b-20071378bea0",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c5ce8863-1e3d-4345-9879-75f9f64c9867",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a3d81b50-ec9a-4e0c-921f-6cb52aa3dc9f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "380a6d70-2f94-4bc4-90d4-00da0165afe6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "58cfaa2e-7715-42d1-aa06-153290982e92"
                    }
                  }
                ]
              },
              {
                "id": "fff40e1e-f905-4aab-9fa0-87da3f834c6f",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b9a75203-f30b-4286-b3ac-0cdfc33ea1c5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5c6a91c0-d90d-47f8-abf7-0ee6e85d1f3c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a0f91af7-bb13-4562-846f-659ac021f44f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "4ce5fd7e-c510-4496-87a1-c6ba2d16e33b"
                    }
                  }
                ]
              },
              {
                "id": "d9c5b72e-e6e2-4306-8bcb-9e68a292e0d0",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "68dce50d-a4d8-433d-a175-b2ec4199441f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8e8bf2a1-807d-4a2b-b60f-ef3d4ff241f8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dfca72f3-d8b0-4ddb-b999-a7372f613bb2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d664a2e9-e8c5-4ff4-9a01-5dd6c8c39d31"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "29a22b3d-3732-4cc3-874d-12bf0593fc5b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "706cf2ef-f6e3-4ac4-8574-92d37c6d15b6"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "1fe7c353-4c16-4729-ac46-10ed3da7384d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "229c4304-99eb-408f-87c5-f386e65c4974"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0ba8d1ff-6f38-4a38-94e9-9e1a13b4bf2b",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "8bbc8524-9e20-4ab1-a38d-ad50513bc95d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3d6bd3ef-d2cf-42fb-8824-6a0bb809391f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "da7912b2-7354-44d5-8581-6628bd554d06"
            }
          }
        ]
      },
      {
        "id": "40b1c818-635d-415d-aade-2734ce23d792",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "524cda68-45ad-41db-b477-76b9991a204c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8ded7745-a8c8-49e0-93d3-2d880b6ca3db",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "0587f870-a47c-4197-847e-a6e6fbb046ae",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c28d12b9-6473-4af5-b0a8-a75bd1fcee58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7878f8b8-e8b1-48d4-89df-ab5d850795d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6efa50b7-4fb7-4fe9-8219-776856bf516a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "4ae0e93c-48fb-4875-9b84-fdeda544318b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fcb6b51-96a8-4b68-8061-787de526ae0a",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "870e54c3-5b71-4570-b4c3-a73c67bb9651",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0cf4f5c-c71c-4536-a06a-6e8d2c43b957"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cca188b7-b875-4576-91c2-378136cda596",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9eaefc44-6895-48d5-8df4-cf30bb7202b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0befb9a6-03e6-4fcb-b7a2-a4cec834a7fd",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edaaa070-a249-4679-9d76-bd411061925d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9a00f56-796e-45a5-8676-43fc8cc2bcf3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b746bac3-9854-4f7a-8d12-91e6120d2c66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7672c36b-970e-414d-95ef-2ffc6a578645"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57e2184e-677d-49ba-a59a-50fa07757673",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d40414a0-764e-4d60-8a9b-d435729c6a30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87e1628f-6876-42d1-ac50-fafddfa9d559"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "355e5f31-4a42-485e-8beb-7aa990e14b9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "594d2909-3dca-4195-b807-56fa08f373b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00518db8-263c-42f9-93af-aab73d865b35",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf6ca3cf-b16d-4085-97ff-1722e87cf4e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfa27872-3b93-4bf0-b3a3-a51205f01a3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "972bed3a-6845-4d35-841e-e862e619b307",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0ca76c0c-b395-4651-b7d9-9c30afb0f50b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de983492-7e74-43a5-bad1-b3877c688690",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aec61a68-1a27-4eb5-805f-85d6ecf1e64f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9d9276c-d47f-433e-aedf-d43d9602fce4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10a1de8a-6fee-4327-81c1-722bea07f309",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2f6b2d82-fa09-4af1-9a10-17c21abda065"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f03bbaf-63a9-471f-bfe3-42792dfc3344",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca27636e-a35d-480f-bacb-3ffbf85bbfd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7f5f495-22ca-4941-8af3-d762b4059fe3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dd535f1-5e85-49e5-9c54-1dc59f8da30e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "c9946903-ff94-4c0b-b40d-864aa45d4486"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aba59e96-dce1-4652-94c7-31113cdd732d",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16e11c46-741e-43bc-80ed-77b32625dd50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17848c99-f9e7-45e2-9a2f-cfe4dc763316"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d04a60c0-2e24-47ae-8314-91924d32ab15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cfcc2515-d474-42f1-86a1-b7f4c32cb277"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04e661e7-bee5-48db-bf61-c8520e866987",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "814faf4e-b767-4125-8b95-d7894d1af079",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b4972b3-9af0-4e04-bb1e-d3c383fc83a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa02eabd-0871-47b6-a077-8f07cd22d1ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1269f9e0-1e00-48a0-837f-1c883edc65b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "345f5ba9-ac39-4003-a942-7589d2b6be0e",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7096159-e7d4-42cc-af4f-62242d6f814e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25fa366a-6cb0-4981-b8c1-fcd60a583439"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9bcd92e-15f3-4769-a70f-af10359d0fa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f4f2b68c-510e-4a11-8fc8-be8e93c6b459"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29bb638e-0032-4765-8bb2-04b8eaf83d5c",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2270f229-b329-470f-9cea-43126c8c97db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dfa472f-ca47-4618-9fb0-325ae1ab481b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1f7170e-0297-4386-966e-9aedaba939f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "9ed10c61-9ce4-4e36-a463-74f7dc5b57c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e80c19e-3190-4dfd-ab4a-14bfcf573889",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a42a186-5add-46b0-861f-6e1d82255e3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1015582c-919c-4ad6-8335-ecf569858077"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3a43d77-145f-4f43-9053-5564c3eab1f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "05f3edae-769c-43e9-a80d-a38f48cc6597"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fd0814a-f927-4955-ae42-ca55083996c3",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3099c6f2-b2ea-462d-bbda-fe8dbff55fbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9aad34b3-c0f1-4514-83f1-b3c92c48aed5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ab51403-fae0-474b-8e05-981261c4577d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e175776d-9c1e-486f-b504-21a09831ffb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80067845-04d6-4051-82f9-48eb849868f3",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e3ef336-4fc0-43d1-98f7-cf684646289b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0cc7ade-90ef-43ac-9eff-7fac08776011"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ee40f9f-8432-459f-8f9e-f0d53b6396fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "b88e6823-5a75-4dc2-adaa-73d9432fbf26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27aa995e-c0f4-49af-8fa2-43910676b70c",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c8abd2a-33e0-4eff-8df6-5b30f149ad47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9402b5bd-7aec-49b1-8222-0636f0e29d8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d7e0d86-8151-4f61-ad44-ff225ccae8ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf30827c-7740-4beb-8638-130f894c39da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9033f408-7ef2-4b96-8e8d-6d7065ace915",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c46d26b-bf70-473d-9489-3969f4d5c192",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0894395-e746-4781-b13f-8007aeb78826"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46f0565a-4ec5-4cd7-bc9b-db579ce891a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c44a34c-4ae8-4e9c-b4ab-701059af10c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e142be84-b87e-48ae-b300-b8f2fd1f69b0",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3502d6ff-5397-4324-9742-666b25665546",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "788551d4-539d-4a15-b558-8e00ae541dea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdab6709-ae93-4fdd-a60b-107f743079de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "4aad2ab0-2ba6-4ad4-b9fb-6adac2fcf880"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33303d51-ddc0-4803-86f5-8aabcd37f643",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cdfad7e-aa6f-4444-9499-38b64e20ba57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ba50eae-ceaf-40b0-be52-0fc3dfae8d97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7742eaf-7556-4f33-8838-6d3a0e596408",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "108beb7a-56b3-4e9a-896c-2b680ef80368"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d25807e-ffcf-4726-9c5c-ab7f032cdf1b",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36cbba80-dc68-40c9-9ea1-197a2784f05a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f25a9a4-14f5-4f41-b086-bf3c447e25e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9475076-8482-4a8a-ba6c-e442116455d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c0353482-d1a0-4260-b7d7-e8826598fc01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec9bfaee-914f-4bda-aada-e121967c0ada",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81977219-194d-4169-8734-f2cc60cf0ca8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f8bfe12-c6d8-4a21-9b18-b5fbd08c9b91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de935903-c229-4af5-add6-3df90eef5def",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "00b0df27-8ec2-44bd-93f4-c6d6b5845127"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f827c5f0-d489-4be3-b889-0e07ef617697",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32e964c3-1bc2-4d5f-aa29-fc4931561da7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d34083b1-f292-406b-8dc2-ccfd284fbaaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23a2c96b-b56a-4195-9c00-4aecdeb2c4e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "778497fe-6691-4452-a44a-40156ff9c0df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c75396ab-6516-4dcc-aad3-64e0c0e720e8",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "352ccadf-32dc-4816-8388-dc06f1260b28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24bbab04-65b3-4593-b1a5-8ef6fe155a5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a258e9f-fcb0-4d44-bd4d-e08981a91aec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f51459c7-183c-421a-87f1-defbcbee6154"
                        }
                      }
                    ]
                  },
                  {
                    "id": "341af2df-bd80-4d42-9e2a-90ced786cd37",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0859ae98-3ebb-42d4-8529-3e8b0d68c992",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "700a709c-3bc2-419e-87ff-fecf98d31b13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fdf76da-2f9c-4c63-8264-5d75774f584a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b0b2bc9-e0f4-4aab-a465-5919e4991298"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7561abc9-6a07-43cd-9ecf-0018b38116c5",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "676a4842-1017-42a6-9073-580b0b0daf5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9dd79046-a1f1-481e-b137-2bb429bfbdce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c2ff1af-ce86-43d2-8280-335c56e3e614",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "84969b31-a9b6-41a0-a3e4-f49e35807ee1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5b38e69-1b58-4e10-a35d-6a31ac7aca04",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57153264-3de5-4e31-a41f-6308b7299fd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d318499-b889-406a-ac45-f9912e091fc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1027181-625b-4997-a17c-372dec1da68d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c70828b8-abf3-477e-860d-f23e0ca6bb9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b7c92a5-a719-4146-977d-028ac62eba9c",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0da66fa-9655-4eb0-ab1b-5e4ea0b7849a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c5097c1-7371-4930-8d30-57a410376f4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8eb76145-9545-4983-bf4f-f3fd2d0f918f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "057ed146-341c-4e22-80b2-35306f95ed29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b969d243-80c4-4633-b43e-550939e9bc20",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f041874-2e0b-4e70-8b65-cf447ed66ed8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0fcff38-fb5a-4d23-8780-72d2dd7bfc3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09a14eda-5aea-4b23-9592-dde2ca305bcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "262a1422-8be3-474e-8323-72220a4e4a41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5db3a8db-edeb-4acb-bd84-c5c16b1bee87",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3421bef5-3cea-4ce8-858d-3817b76b15e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "677794aa-e6af-45b0-be23-4b13955ead5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f84aa88c-1b3c-4006-a5d5-16dc1c3e1fb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "88705d90-69c4-46ff-a343-d4deb30b3399"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1935c566-3caf-4208-a35a-d298841ec1d0",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aba4a267-1745-4800-943e-dc87c2d8adf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc717a4b-fc44-491f-8459-ef074eaeff9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed21bb8c-3ff6-48f9-badd-e9c5cb6eb2cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f81b391c-ccd7-4acc-a2eb-fe9ecb073a9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "075a0417-6de4-4269-9bbe-a057cd5b6cef",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc9d1285-9fed-4907-9b06-42541f63b915",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac8baa2b-03a8-485d-92ee-dada325f11a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "927ed175-109e-4915-a994-817a4249e904",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "801b36ff-b347-4a80-9ac7-9e5e2e2f482a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edfd3c8a-183b-41e0-8e10-a18c07f55df0",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26bb25ab-b73a-4819-80eb-f0276a3e05bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4010e1d7-e089-4cec-a493-f17aef1bf7e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44b6960b-7391-438b-ba8b-8e8745b8663f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "030c038b-0d3b-4572-a828-19967eb8ed55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae67c634-7444-4013-82db-0f2b215b7e08",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bdcb950-5f01-4231-a822-b8701875cbbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27dd7086-89ce-4876-8ccd-25657e5706d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9a1e86e-7362-4054-9a78-1e4797c3073d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff3b63d6-b24e-4930-b7f6-f40e438c57ab"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d101ce76-e99b-4e54-82fc-2806b4350765",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "685f3c3a-09c9-4f6a-9b66-3a4ce73ab13d",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d974ea78-cd38-41e1-8c68-3bbd517947e6",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "fbaefd8c-14f5-4b5d-a892-c8c958845f02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21074005-36e7-4e65-a2d3-e925ecef2684",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d2688fb2-d8d1-476e-a6f0-00d4c2f2ad9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99d97953-cdb8-4333-b51d-d0969a8f8413",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e820dcef-eb4a-433a-9c5e-b3ecdaa437df",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "a028e471-731f-424c-933b-7ef1326eceb0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ec31272-73b4-40c6-a610-3144b13747bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9f2fd682-2595-42bf-9601-110b82f8b4c2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "74d5d687-5278-432e-a46d-bec245ac170d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7aa107ac-d463-4e5a-aaaf-f3f90becf998"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "eeed1523-4833-4353-b15b-fe3f0c65d202",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bb24276a-799f-410d-bb76-65c51203114c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fa963423-7fdf-4e03-9a40-249d956b6bad",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "501a5e7d-ce55-43d7-8dbd-19a7fab7e0a5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0fab8b3b-53f7-44c3-9acd-0054e7b625d7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "dda4e430-bb00-4ff5-8468-f45012aef415"
            }
          }
        ]
      },
      {
        "id": "b9e64f77-66d7-4f83-a23c-069af73fd9ab",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "48a86fd0-2e20-4bb9-9733-7baa8006287e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "829a27bc-286a-4bd4-83cb-cfde47af4c48",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "3aa44f7d-05ca-46a2-82df-2bde6d57b031",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e7a795b-6d7b-43cb-833b-a8c05a535639",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9780574-a4f6-4691-9a80-9b181c91df38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aae650b7-3ba2-4eff-9395-c31e3cd5379d",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc07d2d2-1dd6-4635-a4b8-72ec810d4ee2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0d60ff0-f0c9-4725-9500-2d423198bf5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b37e3fc0-1557-4d0d-b148-770d37ba466b",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "104df6be-2c20-44e5-8204-0a0ed013d5a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3de009dd-a36b-4980-9d7a-6de812f49361"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33b6f21e-47ef-466f-b44b-d23b762e59e1",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "485a1409-7c9d-48da-9176-24796a1ad356",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1d31d89-58e1-42f5-b5e5-ba357523ff42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43482115-4f79-45e7-b183-69b47ad51126",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e24bc25-261e-4952-afd6-91374d187d55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd69ff49-642b-4561-a2ba-b8c3334bab4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b26d4e57-e894-42c1-8ae3-add62ef05197",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "678ff71f-33ee-47de-9988-d4ca15e345f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb1ab5ee-cb7d-4a8d-9634-b25e1e963af0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef296060-71d8-411f-b43b-cf986146b09f",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b9fe2e8-20f2-4daa-b7ba-1b9904bc3082",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7aa5c61a-de69-4f55-b552-435e355366b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15753b6c-6e75-4b54-9f2d-09276640ecc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "deda7214-9cc2-4a33-8645-0e94a55feae5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27bdb16b-066e-430b-bfa2-e35998261cd7",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61d4f54a-cffb-4895-a0f3-2da702ba3d6e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7905e43d-31ac-461e-b38b-69a409f1aee5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dcff0d1-0390-49a3-98c8-795655cd90a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d64fb49-6a49-4536-b9fd-b31c4ccce04a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cea5248-fe23-41a9-a11b-867d86a9ce70",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0acf793b-9e62-49b9-b501-265984b8f74f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "920c953b-f96e-4658-83ba-467c1fd91b34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27b9bd91-14df-488a-b401-0978a4c63534",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b70d1b4-9019-484d-83d9-e27936b1058b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "083cb72c-d721-4c5d-8484-aa58d30795b5",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65c51c39-054c-4733-b77a-b52cabee21b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e593967-c5cf-4c68-975d-3039dd66eff5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2064754-c3c2-4b33-a537-394c4a092687",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "142cfcfb-6133-4f90-9666-d1235b96f4c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa5f7829-1513-48ba-8784-6abe2578bfab",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebd0cbdd-059c-4c07-9642-f2b7a2b502b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68e122f7-07ff-4a37-a9fa-1cbb679365df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5d2d7a4-43c2-4c33-8a66-8a830d14b2dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "229a05bb-ee2e-45f9-b0a8-e4d0c2eb3359"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1eb1ee6-9138-45ca-b302-7814e0452655",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d70025d3-2819-4594-9b97-3322bc17ebd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9adcc59c-5e75-4d42-9055-274fee053f00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3baf867-2c59-4bf3-8129-bae19e840d76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b22d8c3-ad72-4f12-8d54-dd8cba58142c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ee7d214-25c2-4df6-b61d-ab79a3ce3f46",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "054ff1c2-9df6-4ca1-a3d8-a553225fc45c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "479b25d3-dcd3-4a65-8236-696c4c843a2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "484a4e57-acab-41b7-8cc1-795a02bc3100",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f4ecc45-d6b8-4b81-98f7-9a5fccfaa656"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1472a570-4f9b-4c19-b34b-c06b5dbe4f79",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67d33125-94be-4c74-9592-682756d2ed69",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c2da41b3-4242-4ee5-980f-abc5d66acee3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc3e85b1-b113-4b49-b67f-b93cd0f74c3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d141040e-46f0-4962-9903-f7111f296d3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dfcffec-01c3-4a1e-9d37-e8fb29cd77f3",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfce2344-5d58-4814-8631-406684430b67",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "add78cdc-e401-4c68-91aa-a06e9a837e09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f9dd779-ae88-4f81-aaaa-a66baf4f399f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "caa0f96b-4d6f-4a5e-963f-b529b9d6c0b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5badf6f0-edbb-435a-94eb-ab91eddf1211",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b53e75d1-6d7f-4bbe-99a6-33d10041e21a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d5a15471-054f-4dc0-ac6f-5e0c944eb49b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e618706-914c-4941-9eda-2efe411a2279",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d2b2178-89f7-4bb9-acee-62ed0ac80baa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ab88154-f1e7-4e6d-b4c0-2c14b25e761a",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ebc0ef4-2766-482b-bc53-066d870571b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb86ac76-6a42-4b71-a6bf-d0cebd6f402a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4b2f98f-e686-41ac-83c1-d0bc697aca54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6541966e-411c-4f5e-88ca-98db1aa22072"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c5574f8-7b9b-47c7-bcc0-b7ef19ea29c3",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3103d3c8-2477-45e4-b127-92b1e44f7fea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df04a82f-5180-476f-a08d-b790deb771e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "136f852b-82f7-4906-a184-8a8721d911c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8437d523-13e6-43e8-b34b-ad25f24efab9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f2914fa-249c-4d9a-a791-4e00c3b0848c",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9718c86b-e98e-410f-8f11-aff764fd34f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d52c0d8f-337e-4ec6-9ba4-17976fa751d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "016041de-545a-44ef-9f12-d3ac9626899f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5eb9dc42-b25f-4995-a833-7b0c0ad06c46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a62cd233-a71d-4327-bef9-4e46999bfb21",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a555844d-d52c-4722-a3fc-dfd0d95b25ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "828c5097-52a0-4ab1-990f-4a21d26bb392"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c24f464-c1a2-4353-8355-987e1db7b939",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69e5ab11-458c-4b5e-9ce3-808116b7050e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b68fa8a4-897e-4f7a-88c5-8f17ed562a8f",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b3d7b9a-7aa1-46ce-9c7e-39fe18388a42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e90c31b-9998-44a5-a748-105a90ccf34c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fc2c457-11da-4e35-af94-41fe88e658f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f5cbaba-9191-4615-8b67-2c9aa6306de5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae49b7a7-a03f-45ab-a88f-ba7f9d3f7957",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3a4c038-2fc2-47d6-a7ee-b5d9a30f3346",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5003450-3b11-4fae-97ca-4c0c2da1b135"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95381c1a-44dd-4ccf-bd53-69e318a3c0b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "527189c8-3121-48e8-9650-b79852d64018"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5be82ff-a3e9-4b0b-809c-1b654f820c4f",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af7c5e4c-58b0-46fa-9eb8-670904de3e5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5dc50fb9-3a76-43a5-81dc-63731da47e59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2927454b-cdf9-4f10-8533-af5203ab46b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5116c577-d0a8-4add-9f45-fd2abb80d4a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d60f6d6f-a4eb-4a5d-9ab1-ad0662ed1776",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73ed6044-bdef-4231-bd4b-54f34bf3d404",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9178d466-8d6b-408d-a170-cfe2154fe80e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c65b0c41-621a-4a34-86f6-606f27442c65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5440df25-1271-46a3-a258-82c1cebe5960"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe73d15f-b18a-4966-b7e2-e4645b55e46b",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15c4a46c-d0b2-460b-8f5c-a5c77d2dea0e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "70fc1af0-d56d-4297-9e7c-65dc44daf865"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fde39de7-f9f6-4272-8bca-454a7227a3c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87e62668-2eb7-41f1-8a2d-5dd47519a202"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c06796c-c8ae-4555-85e8-d45b12cd119d",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11cc3297-cdac-4679-8cef-b7f7e05acce1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc3e0d47-1b6d-407e-b2a3-a9aee8906758"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac8bddba-c82e-44b0-8ae5-02a517fcc7ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73e5bcb3-04d7-4d75-81af-d4baa6cf802f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8de1cd16-9b08-4d55-8199-478eed7ff13f",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a253108-af01-4a85-9e03-5ed4b3c666a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4dd06698-eb38-485a-b814-9ac77c283f87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57c03f19-3b56-4cad-8ca9-c125c732c3df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db8a1bc7-0c41-4460-a37c-34fa0aa7b4c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28ea1dad-9bda-43b6-9da3-cf690e8c84f3",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a62c39d4-a440-4324-8ef4-446a33e3bc2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "240cf677-dd3a-46cb-96f4-2989db92092c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e477a89b-aef2-443e-9906-dd69c99a7a68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd906fba-bb91-47b3-a56b-4ffc973426c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39d442c3-74a9-47d3-a4cb-32315d891698",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e3be8ff-de23-4857-9572-56d3e9241301",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "86fc89c0-c648-4837-80cd-efddd2dda89f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12e56485-2a6b-4847-a4ab-3989d05a6de8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46172f9c-016f-41b2-b9ac-fc2502140826"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f76854eb-b237-45f1-8e79-a76160e7b232",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5553903c-d9d1-4fd9-b0c4-d47df3949969",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e464999d-d3d2-4156-8d7f-ffb7a29cae27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92e4d5ec-d505-4a4b-8bec-f5f11c007438",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3908cab2-1b08-4fc1-86f3-5417f8119d11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e105e0c-c54f-43dd-aaad-a6953491b640",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fe1fbd5-d106-441f-b59d-15fadeae0a45",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad271fff-86fa-4b8f-b705-2cd81054b46d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9b1004f-54c3-492a-82d1-119dcdd1f249",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "120c0597-79bb-411c-be71-a9e57e7fce09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe5e9342-92b6-4676-9e49-bbed47687e6c",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49015041-8034-41eb-aafa-f9a99678c0bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "43641e8d-c436-4e45-8f99-7a376decc115"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1df2a226-b467-4142-b7fe-e9efcd91327b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cf1a0d0-c652-4f32-93c2-b0721ce9f25a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e863307-ba57-4c16-9c91-d3caa0b39220",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e03aa1cb-4d5c-48b6-9c85-20ef43d5b7c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cd8cf7d2-ddd0-40fb-a8c4-f295e95f0e6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c917c57-cdf2-4cd7-b7fd-2dcba349ba9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5734a399-0394-4805-98fb-908e98eb1bb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e9bb5be-5b02-4de0-a576-d9dadc1b65a7",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94f5340d-0f6e-41f0-8277-a8504ce45de9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ebf85b8-1e95-4096-b458-927825463ee7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2541dd30-f2c0-4b9e-9232-26b0c722cc68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2aaa230d-d4b1-47b8-b77e-cdc904ccc9b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0176eb09-0342-44db-b97f-204307e7016a",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96b3b180-a4c1-49d8-8ede-17caa5606eed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd7c1a7a-dff6-4651-88d7-0460a894787f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e46d34c5-4798-4de8-bd84-e4ff20afda3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87c00ab0-010e-4246-ae78-ac57864ae751"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13c56607-4ba9-4b44-bff4-a8e96dd1142d",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b30f6b6-1108-488c-aeeb-4986b5f404ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05da1e95-e278-4be2-ad12-b0eae8f8c1d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f71df8e-e2b9-42f1-8f97-4a89763c0c86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c67652d-a04a-42d9-a27d-182e3ba2eaa7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adf60330-028f-48a5-9cad-c3bed9c62f26",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e1db8fa-8f22-4d04-a762-400562ed19cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13663b08-162f-4c33-bd39-94b9e79559c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "214f15b2-e540-4b03-9846-3d257c33ef9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce436ff1-4229-4dc9-b281-e15bf9fd2b9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93c07bfe-53eb-4378-ba90-5d022946cf1b",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8c0206a-3a20-4164-acc5-ca678a4f5a96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5da04ba0-08d6-41d1-8678-e147add7d60b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "216f6584-5b9e-4d4e-a1e1-2cb87ba34ba3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c539c0fa-aedb-4e8f-9365-cd44b1c0554a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92939135-0e2a-4ce1-b061-75a7400dac80",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90f7080b-25d2-4c3f-887d-06df8b1c2cbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87c31bc1-c8c0-4351-bfd0-136bdbb6196c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d95e8b1d-91b3-4800-82e5-c36792b5c012",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bd642ec-ca1a-47b9-b519-8691206f789c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c204e9b-68ff-4d90-ab60-8d9aa68f3691",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88fd4932-3a6c-442b-a9aa-02a7e2a4772c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "300b1b0c-0ac9-449b-a9e4-559e8a7308cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd08591b-9c6a-44a7-9289-9dd82d653859",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25cc42f5-f1c6-4703-becc-126acaf8cc1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c3dedbc-7dff-4a92-8b4e-38bfb82fa034",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "261f192d-d758-4514-b6ae-0199a400523b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58d0fe5e-d4b9-46b6-95ed-581c1eea48fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "253d675d-dbf3-4da8-b7af-b721bc646633",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2603fa5a-ad8f-49c2-bc73-2a40e4b29450"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df220a5e-8377-46a7-a91a-9719f6f57b9d",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b7db20a-d99a-4a34-b11e-2999eb9e6fc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a869d52a-7a1a-414d-9bb1-af9212a9052e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f834b2b-4de0-430a-a4f5-9e7c0f72a056",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ff0b622-1525-4fdf-ba72-36ee0d1542ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b11f50bb-7afb-4632-bea9-a82599660985",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90f2a9dc-725f-4fbe-b2cb-b4810e75642f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f91c5d7-029f-4c9d-9ed7-dc1f34187769"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64b419ab-069e-4337-b9d3-f19710e5d267",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "154fca28-005c-49d4-94b6-a5e1a8daae78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bc5b032-8ec5-40aa-b51c-37464d2b865d",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3aefad5-f074-4abd-904d-ecbbc2ceab69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a914c3c-c9cd-4b68-9de6-913b7b93b658"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5b56b15-f9bd-4188-9d40-dcec6f49d240",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "758e9778-b8a9-48fd-849a-07c34870290e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bac4fbb2-3ab9-4f99-88fd-884536fc1d16",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9185df83-0aae-4df4-8a80-854847bfc79c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80c23cd7-d94b-4129-a9c9-caddbb2390bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb5293e5-124d-42a8-b5da-49e14918e8dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d59db475-6741-4eb8-9ae2-c1dae3d0e09d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "812c2f89-a453-40de-83c5-b77cc0bf1f28",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2158bdf9-db24-49f2-a3df-8057d8cb7e18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e0725f1-e6eb-497e-bb5c-8326bf162af4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7c56dcd-53e3-4a7a-bc84-104f09094062",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de4b8212-5be3-46a1-bbff-5c57062da2b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb7266fb-2228-4888-946c-ea81b8541e3d",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "559a1ba0-6593-425b-8819-167f9753d55f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f23ba6e-7040-4cab-8400-f41bdd3fdeb8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50ad99ab-83ce-4d48-9970-dd8b38150e69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59f5db16-ea16-41eb-a3de-5804e4637554"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdabf699-810a-4b95-93b1-0be5a81a8fa2",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eae536f2-63a4-4cfb-9c16-9af8023553ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "098b5da4-d33c-4bf7-b719-3994945ab950"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c05e9c62-0e34-4092-bf3a-d1b0e0ab4f61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aed96e31-118d-4b98-84c7-a48687a74459"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d3ed39a-39a1-4d43-a534-73f1f07d4850",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a683907-d7fb-44c8-b59a-d3a14911ad34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d193e6f-e9e0-4a24-849f-70b27630fdc9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6beb133e-a45d-4224-a230-92b9426c1c72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74ff4c0b-517f-40a6-8ba6-70e54bc9a8a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "757ebd1b-be9f-4eaa-96ba-a101167d982d",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecbe5bcf-fb26-401a-93c5-795953e00830",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c873d85-0616-430a-8b99-b6ab7ba58114"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e01821f-7a58-4b58-b1c3-3c4d6ca6daea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ba7397d-7c8a-4f98-9602-90fff54b5894"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4f2283e-76c0-41c3-9e2c-9501d86d0f4e",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "880024e7-3f14-4632-a784-844432ecc347",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34f70f86-566d-4259-b1f7-1a889a2b68a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4128e305-ca0e-4cd7-944d-0b0314027723",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e49ad033-2158-45e3-b66d-e433b020302e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8157b208-a555-4a05-9c3c-94dcab3a3dc4",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a6ff02a-2436-4173-a3b7-9aff74e31b85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfd74b62-3a9f-4778-afb1-b47c3e52c6a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a41cb647-2bf1-4a9a-a552-fd7b6d1107a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9dc8e654-47f9-45cb-b9c2-c15e1d018e22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25458b4a-d312-41cf-9db7-65fd84f1bcf1",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ba92385-3ae7-4de6-bd26-eb4325595549",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6785521d-0340-4637-8031-80c5e6c0b9e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65975784-81cd-41d4-a2b5-2ef680687e15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fa42509-073b-4348-a21b-419cc35af887"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a3a5f47-9830-4d2a-a958-e180db11ba84",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2c21850-07d5-486b-8cb7-dc1561a2f3c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11ab9a18-b046-45bf-8b4b-5e2eabc2db16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "026e80f2-7e84-49ae-9759-2a35902886aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7229292d-dd4b-46ee-925f-7fb5ce36070e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52585c80-4268-42ee-8da8-97d7cdf7bbc0",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e46ac980-62b9-48b7-9dd1-98223ba6b06d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62487d52-8134-47b0-8f25-4d51594f353f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "550dfd59-05a3-480f-9381-1e18ba95da91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bd806c1-dfb2-449b-9c8d-b956293f9861"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0d20ef6-9795-4401-8ca7-4360bca29828",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a3e8232-3686-4227-a74e-bd02e72f5c2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0deeae6a-131b-4be5-a7ce-583c5b125d7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27ec3d74-6185-4915-90fe-8490cee30663",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffe92721-41ca-47c9-90a9-11be6b0356c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f5cc446-a7be-4777-9a54-9675417f5b51",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80a71aea-8c87-49fc-99e3-50e184d6dce0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "970f252f-f067-4c2a-8267-87d2f304a70b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75ff45c2-220b-4475-956a-dfdf2572db5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43db3b18-fab7-4c16-bf77-b57b64f7d59e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "188f3c28-74ca-4735-a964-11196173b4e2",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3f0e76b-4283-4bc3-81a2-b079b225f9f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e5c3021-bc9c-477c-bcae-7bef83f7ef45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9d439fd-ebeb-49c4-9698-f589cb5d1879",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc5061fa-a462-4783-a6cf-9daf19b94937"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a305de9-1b35-4fcc-bcd8-bc068de3adb7",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e827c6d-c437-4cb5-b665-d06a7f5a176b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ee50ed4-6b41-4b02-9331-b9825471b640"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73a1d2e4-de0b-4aa3-b0a2-c683ab96322a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7364df97-f650-418d-9676-4d19606a13b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebb2a7c4-5cd4-4814-acb1-066f58de838c",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "904bf2f6-5b57-42b4-b3f2-c20d1ecc659f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "809c6e8e-81eb-4d3c-b612-42b6f344d788"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93eb972c-fb46-491c-a1a1-2522d2fae8e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "770449b5-80d3-4fff-a752-57ab0bb2420d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "591aeb22-571a-4f67-9bed-a335640dcf80",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de1fb56b-d70d-4c23-bdcd-f48bd55d9cd1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "970d8e93-2398-4658-8bb2-46b5d04df1ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf5bd5c8-60d6-4044-bc1c-937bd350e6d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b99a1d7e-5693-4820-859c-d8cb062261cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f01955d3-ef49-49d2-a209-65826cf09e63",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55409575-d831-47c0-96fb-50a97e1492ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f546fee-b484-4867-bde1-aa36ad3cb3de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cef0d156-d02b-4369-be97-1c0f3ef57c12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7c41375-6291-4284-af8f-70bfe32bc257"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c5b6d6d-2e23-43b9-a2e8-37ed97859feb",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3eb31179-a2aa-4715-9d73-7f2478a5429d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21e5fab2-3d60-4421-83ce-dc1c8e7fff78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d046f98f-d2be-468d-ba2d-09eb5f71cf0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9375fc67-4d44-45ec-8946-02d1199c0f47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc05cbe1-ad03-49fb-943a-051e1f2aa4df",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d9e1071-b508-46ad-99af-95927f8588a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e990a92-e600-4f14-886f-3001ea4a996b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d130b49-295f-411a-8a0b-040a2359f7a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e4d8b89-b4bd-4091-8ae7-84538dfdf687"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a3be52e-39a2-4476-8a80-391fb7ed8040",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f7f1c75-211a-40b9-9a12-ccccf4646dd5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04e33438-1158-4e64-8ae6-9bf3329ea794"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48072304-bb5e-4a06-a01c-a21fa3429a6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e075ad7b-56a2-46f4-a02d-3639445d42a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bf50457-9ab1-417b-a216-09afc2975c68",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39833972-8ac4-4380-b0b2-90453aa59ae5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e0a958d6-be4e-461b-847f-684b228ca088"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da81c838-4472-4e88-a524-a49be3cabc35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e087d0f-f225-4251-a73a-f71c4b6a57f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f2ebb90-f757-48b6-92c2-d731ef4ef4a6",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efc6524c-2d45-4e95-8a9b-37832c6716d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "88444df9-c7ec-43de-9fcf-0e07e4ebe223"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74bcd4fc-e657-4b71-8ddd-2cc1a8d5ac91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05d8f44f-4948-4941-ba6c-fe9380f462c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb340361-9152-4181-84e1-8682310d25fc",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04974cdc-a6fe-4d6b-97b2-6f66380e936d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "204851a6-e7c3-483e-a615-719369017f38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63680558-ace8-41b0-a7ba-7c9dce3ccb1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a872fce-c2b1-461c-9f65-5d3c498b9732"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1de9cd49-0c41-456f-a740-d851dffaf757",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f780d0b-295b-4044-b645-eaa5359a9fca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a657a51-4cba-4d12-ba39-9ad4c0920651"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb11f149-446f-4242-aefe-e46dedd5f0fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65e14ed7-b263-4ec3-beaf-899d80c52166"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c342fb6-2c3f-4abc-9047-b63a000d0477",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d31ca6dc-5930-496e-bda6-d05cf35adec2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "39954410-81be-4e6a-a433-057db89db711"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cf07b48-faef-4062-9ef1-daa6300d5f2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0165f717-5f34-4714-affc-1228a5406c6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d230ac20-9610-43fd-8309-e7f832949be3",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0dad4e1-d49c-4fed-aeae-7539ad284a50",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4573ebc6-0f68-401c-8b58-277e30a8f45a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c55417e-b673-47b5-93af-004c0084541d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "411c61f6-9004-4d00-a2ea-acd636523c77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1273e454-930e-44b6-95db-dfd44df01e79",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9b96b8d-e95a-49fa-a0a8-f03ee1222d89",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "54e4048f-cd6b-4f8a-a28a-d82cb9a99939"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ac3cf71-8ca3-4e64-8563-4880f8edcf99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09e2920c-fb4a-415c-8e8f-fa341cf1c008"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9d4a835-fc0a-490d-9802-965a389ac1bb",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ded584e2-f53e-4829-a113-8b18c505af14",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "440a1fd1-e50e-49b2-9213-2223e64017ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb283626-b75b-4b23-979d-6a3b506f00fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b30dd323-8917-4031-a7c0-61661c3aa2fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c63af3c-667b-46e3-8dc2-192313710512",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f9cf35f-3250-427d-bca1-01eaf3211459",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b9dbec1f-cc9c-43dc-9d3c-c5c35b9ad46b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "186a2418-5f29-468e-afb8-a05de12638c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "637058be-2db7-40cc-9394-d79aa70f428c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3cdf099-c3f9-4a4e-9fa1-f4fc657559af",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2af71917-3da7-4c11-95b8-1bd3eda89ad4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "391163ef-28f7-4258-a296-98e96d36c6fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "606e62b7-c5b6-4d85-92f3-9b78ce9fcdaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae712d40-4036-4aaa-b93d-4fd4146fba84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e691fb32-3ab5-45b0-b72c-73fcc7a579fd",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22bd4f6e-3e7a-4a32-ba41-19a72aa5d064",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8bbdaaa0-cbc0-4f6d-acd9-694f44c047f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a13cb15-7fc1-4cc6-84a6-2153c140dc5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e206358d-8df6-4d23-987a-ab5887b2a91a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "837ea030-700a-46aa-b795-a9ed6edc6674",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eceebf3a-2d6f-4ec4-9c53-94741cf4ed2d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bdb6ef99-ba95-4a8c-a92a-8a8bb1b1e863"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec87b777-aefb-4c83-a80d-a82fd6486e0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdae169c-e866-41c5-875a-5714b041fb2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34151353-c598-4da4-ad9d-a2b1ebe7fce5",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e68689de-a079-4f3e-ba43-c9ee96fd530c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f1701420-0c4b-47ac-9109-a26db7ece6fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3255becd-0208-4767-a837-b842530a822f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eba4ab1e-e73f-46b2-9aa5-01f5fcbcd395"
                        }
                      }
                    ]
                  },
                  {
                    "id": "115a9f84-395c-4a38-a514-f6c635a1106b",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2336ffd8-9ac5-4c8c-9b12-af1ef0427d56",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "10dec119-874e-4b3f-a9cb-abaefb68b3db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9a912cd-45c8-4a84-9aaf-063ba5a2761e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61bd8ac7-8948-4c77-834d-46649bbd66d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c58decf-0ad2-4f34-b6ec-83373f419be6",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77c42e13-b538-444a-9dfd-fde566ffcbf5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06cc8bda-39b3-44e9-a88a-a1e0192df4ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94c60f31-e4cd-4a5f-a4d6-0315d0d0d689",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a695ef0-a0d8-4200-8e30-1599566ce166"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e52d815f-4515-4e71-ad28-8d8034c9c6e1",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "916186b8-f535-45ec-81d6-723014d25214",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9093ebac-0b45-4eb7-a6db-67eef124fc0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8226ce58-c235-4ee5-a61d-f582e32f719a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce385f8a-99ec-4d0e-ba54-829574c50c8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3088e598-d550-42df-9b2a-207aacb247e6",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b3cc360-2511-4b18-914a-9acf276626ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "39102a93-f58e-4dfc-99e1-23587c692950"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37792c9b-3fad-4482-a3c2-aca395818d15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40c64f81-e847-4556-9669-b8690c93e844"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ba567c9-ed54-4123-ba36-1ceed58fffe6",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f64d3ef-d4d6-4cc7-9a03-4f9fb8a639d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a544a8f-9cf7-4375-a74a-5e8e73dec75f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "704deb9b-0d1b-4491-91eb-f4634dc928a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "663dc4ed-748a-4af3-99b4-041ff0cf1410"
                        }
                      }
                    ]
                  },
                  {
                    "id": "924a5d8a-b34e-420e-89cf-d2feaf012c12",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e7c3964-b2b2-4fda-9495-d1b779ce52d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d0103a69-e390-4607-973e-61229f79d3cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37343e5d-634e-43ee-83c7-efee052623e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7f50fa5-3c3c-4abc-b5d5-d293d3025a41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fb7581b-b757-422f-bbdc-4d9225b22706",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f167c7dd-97de-4743-9a4e-66abbe25fb9c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "96329523-752a-4f14-9e0c-654560adcd26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b29da143-1a01-4478-84a7-f1591093b901",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c350fd64-7102-4061-91bf-abab3b8efc00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed1393bf-d2f6-42f5-8122-59da87a6de8e",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0439cdf2-6b78-471e-83cd-77e08baa8f5b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf01e8ed-53cf-48d9-93da-406ea9d7bbc3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c21adf0-a7e2-42bb-b868-8c4b24e04181",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd0aec0b-cf5d-4f59-91d7-af8a9ad6f40f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95b8d939-4d51-41f4-8bd2-e802e3d4e897",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a16d942-48ba-492c-8d14-6043450dbd35",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca22bd85-d442-4719-b9f6-614ee9b6978d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39b9dbdd-4688-4697-bd95-888fd68b5690",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2211fe7-5a9f-4cb1-a96f-67f39e11987d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d844b2f-730c-4cac-bc0d-af7ae0af79b0",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdc7a222-1bc6-4822-8c70-acd164d7055c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "41125881-2bb6-4c61-bd04-33605c52cfb5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cef1463-4863-48d2-837c-2cb10b0b9f18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6acfd1b9-4f71-4681-b306-ce657fce686f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd510094-b374-4534-b9d3-2b7a679217c9",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2a22f35-7a97-4000-8151-28a9a57e40bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b1d16502-9b4f-4e0d-bde7-75232f369cc0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db9a9435-f78f-4e1f-bbe4-b015db0b34db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46ddbfdf-fd0c-4e67-9137-21aa1ff5af88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01f3ae10-23a6-4007-8bcf-2c5adffd8f95",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6c9dd72-1938-4513-b072-9028e380ca8a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "78ea6e4b-de74-40db-bca9-47678887f838"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c88d330-4ea8-4ab4-8fb8-25be5827f4e2",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6426f344-1ef9-45ae-8214-9512f99e711d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e34388a2-fe25-4081-a1cc-a6934d49cda6",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "532e67b5-9957-4a05-bf5b-77afac54bd36",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "820262dc-222d-4ba0-bee7-136084c513b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1efc2e91-f67e-4ef8-9e01-a0cbcba5d85e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "732f70de-0ebd-4960-be13-366a905e9e65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef8649b3-a52a-4282-9dd4-f8084dc06217",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9d7c3b0-4c2b-44c3-956a-ca97af1a9a99",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f4a9cff5-8e4e-4127-9f14-e9f7b6d8f7d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af6c3710-8a6e-4e6f-b656-93a486892639",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf726da3-f77a-4873-b530-3e537a7278a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05302508-959e-458f-b91e-f53ed5376126",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88ebd6a2-00b9-4366-a6c0-4c90775e6d45",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3ddbe5d-71cb-412e-a7d6-5d4763502713"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4244def-8ae0-420a-990e-956fb5542472",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fbb46d5-6f80-4722-b3f4-b39a584db58d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9d8567e-36df-4fc1-ba41-3f3263b30408",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4aee5563-947a-47f2-87bc-3717eb9b3b31",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3cc28067-eb7a-4d4b-a8b7-d69f206ed243"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d16225f-295c-41c6-959b-435d3d49091d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2ab83f6-835d-47e9-aa85-b6840be4f3ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0f3cf8c-8c8f-4a51-a11d-c0d22a3ea2ca",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "949ede73-a456-41b8-b9ae-327ea47cb79f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "025d4697-d684-48b7-bce7-b8878c9f56eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43d6e1fa-f28b-4402-ba8e-683aa8fd6a98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64a2b3b5-4a4d-440a-a59e-968d2bd23fcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb0aa246-3cfe-4753-a0e9-53add0a31712",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "271e6f50-1c14-451f-80b1-ffad703dc0ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d26bf44-65e6-4e5f-9917-ac80ed2fbb38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e13abaf7-2b91-422b-8174-f0b36bf476f1",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c964162d-3c3b-4327-8987-35d234f1c051"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66368202-24ad-47f8-aa3e-30edb8088887",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e02d62cd-e6dc-47c0-bfc8-8495ba77b78a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "708da986-4a56-4b50-b47a-3bf5817f2ab1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9d49581-de92-4f93-9dfd-1f46b73f4c6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73f1c9c4-b280-44d2-8f46-a1a55548dfb9"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fb2f707b-d1f6-483d-8e37-de946c7d4c32",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0e1f6ae6-2301-4314-b1fb-839cd565c7b9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d2a0fd22-edb6-44b6-8bf2-4d74b9e66f29",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bacd1a04-793e-4b9e-a65e-fc001f2b46a9"
                    }
                  }
                ]
              },
              {
                "id": "43d7614b-396a-4a77-86a6-86f6de4ddcbc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "21f3d9df-df35-4af6-82cd-232f9f4353e1",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4e28b06-dfb1-4e8d-8dc6-496014c463c6",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "ed7284c5-6b1c-4902-a3a5-af8a25145247"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db569257-25f2-4142-94b0-8cefebe43d97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "502c730a-9f09-4ebb-b1e9-d7ba1b32766c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b73316b6-82e5-4812-bd09-d748977bf77c",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0436aec3-80e1-4f3e-a4d6-554e79660c28",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "6a617b94-c64f-40c1-b766-18f20748f06a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d37569b-fd98-4d44-8a15-bfc11b97a0cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "01d14e8d-dfe4-49ee-aacc-e8b74439669d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "54ec46ae-89aa-4a90-bdc7-d02a8798c0eb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e8f64f43-324d-49f0-840b-d00d89f61812"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "25d72c3a-b384-4497-bc59-5ba47250dcd7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dd96ac24-d568-4cf7-bf53-1a461251e863"
                    }
                  }
                ]
              },
              {
                "id": "177245b8-923b-4de7-b313-a4a11f6d1bb1",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "88fc4f1a-3cd7-4660-a4a7-d08df6cd8435",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c83b53b0-ad4d-4a59-8e3a-7fc87d1f8af3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "2f0c154d-7a6d-42e5-a362-c1858902c60f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e24211b7-5149-4d13-8aff-1f7979410589",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90a83896-b17a-49fd-b6ce-a1e017114501"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "a5120b42-7e00-416a-a0f6-dfec71dce86c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d4d7eda5-e8a9-4f03-b76d-963ae81a159d",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e96bdccd-5046-4b79-a1b4-c8250057a5ca",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "cba29dca-e542-4919-a748-fffa21a0a3c3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9c640f0c-c0ad-46c4-af8a-2b508af8a87a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5615cb89-e0f6-42b6-b480-a718a3b15c95"
                    }
                  }
                ]
              },
              {
                "id": "7de758c6-07e6-4841-9a00-ac7f070e2c24",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ac33b8a3-e986-40a1-88f7-b9c6da408ac6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "2e6d9d5e-465a-45de-aa3c-ea1e29bb085b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1ac3a7dd-c9bb-4ae4-a12b-2a56839314d0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3dc5a3a1-fddc-48e0-b2e1-c8fb1b68cb8a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "31f6865b-9ef8-45e3-bd21-ec01483c940a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "b90ca336-0b8d-4eed-bedf-ed6cdc61e54e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4e55a400-4443-4c29-b23f-08599f82154b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a0d865ea-b3ac-4bbf-afe9-d4961435f783"
            }
          }
        ]
      },
      {
        "id": "47204374-bdf0-4ff4-ad54-f000ee13a964",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "49ea66c1-1e98-4b96-818b-5bd1de092299",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0460b3f1-1f65-4274-9e17-a5a59924ac13",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d5cf5419-84dd-47f2-92bc-ac11535e04b7",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cac76d06-0bc7-450a-ab23-e7d2b10f24e9",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "2c9b4659-6772-4810-978f-87d5e21d22e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "630877f5-2313-43a1-8ea2-c01c8a6f08f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "65081ae6-c45d-4696-8f27-6d7ac4b49046"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b8b0c2c-3f9b-463e-ba1b-fce903bdff57",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7750294-c4cb-4f6c-bb2f-92c1956268fb",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "4db889a8-90a6-442a-99c0-c04b6120d5a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "733edb00-09c7-40a7-929f-8566ab1101ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e4522d34-46c9-4eca-84c2-c28ec5c595f3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "696708e3-fe21-43e4-be35-f929a760b826",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3df498d8-7abd-4efb-8121-0559ff1c259a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "da75e7ef-7475-42a6-8599-59b48f32366b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a19b9d83-2605-47e7-901b-dbad7ee04f69"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a8d1bd48-01c6-4824-9a01-7cbafb4ff9cf",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "d7e5438d-c40c-4afc-8b82-6c2a506a62a9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d611ec44-9781-4d9b-a982-5b181d9f09eb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7510ef48-df91-4640-b707-61bca4b3c2ff"
            }
          }
        ]
      },
      {
        "id": "78e2fe88-81c0-462f-b2a5-4f507e616db7",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "a27c06a7-4f75-40c4-bde9-aac41c7c6ba1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e7ff23fc-2743-40bc-8fba-bb00c1c02fc5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "23f18a57-824a-4e2b-89ef-a075bc9e5536",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59014f94-655c-40b3-886f-ed3777ebcbb8",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d54e26d7-3019-484e-86d0-7a0b5a6c8ae4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54673222-6068-4eca-889b-3a96a46f1c02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "52efc216-d87e-4308-b6c1-f5e15fab5f0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e285601-3955-475d-b9b2-d09ee49414f8",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5168b23b-eadd-454c-b6dd-3e7598476c66",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "f55afad4-9f72-46f9-b69b-ff46cb1abda0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fe139d7-9f86-46d5-8b0b-503efe215595",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1e06befb-6a64-4941-94af-85e86836212d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "27f2c19b-082a-4bec-a199-9e38b1175074",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b77bf676-62a5-4509-8171-c417aad6d5e5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "35f44f9c-ed8a-4f75-985b-a84d5e37ca4b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "98d03aed-3a03-4174-a6b5-53b6d7a00588"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7b9422fb-6dd0-491c-889f-ee72ef291a2d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "232ee1f6-35dc-4ec3-904e-35dfe5c5e24b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "afa3d5ae-b166-4161-bc5c-d59e1de5b8a2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0f2f944b-9e38-4b15-b01b-e3c6923d5775"
            }
          }
        ]
      },
      {
        "id": "5491b298-8ac7-496a-b864-b8eb71f27a0e",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "30e6c13d-e161-4072-87f8-402a7d4a674a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3918af2a-a184-4b02-ac2a-fb0ee26ada55",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d990ca7a-e95a-4293-8b5d-c5903972fb93",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f926a9b7-67fd-490e-ae30-7bc2ee88116e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b2e8439a-3304-4750-9a12-bc2bb8dea70b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41beeff8-dc38-4a17-beb3-15311e67b501",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "189db13b-40f1-441f-afd7-92852c100a79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d1e6f3f-6de6-4003-9956-3704266cf4f9",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31089eae-5cac-4977-a865-bcdd05789018",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "3d253dda-ea29-43bd-9883-614a08919d6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3892efd2-671a-49f8-89d4-7d91ddaee5f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4a84a255-e4ca-4ab8-b6f2-7df0d1f3bc86"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "01db24f5-3c6a-4d41-8070-12f0d015b9b5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f5d9b917-773c-41f3-b124-27a8b571afd3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "00ddbea0-4d84-412f-8eee-3f8e91efdad4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "78244933-bbbb-4005-a5bf-2e112a524b20"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "16a67a8d-0842-4f50-9e50-c49c303c3194",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "bd7ec933-d7eb-46ef-9ee1-85e9fd281eb3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "befc3b85-5ee5-4928-b49d-f6875127395b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "43378587-b01e-4705-aa12-5c0792e1c4b0"
            }
          }
        ]
      },
      {
        "id": "646dfe41-6b1c-43e9-bc51-f503397b4b79",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ef3fc403-5393-4c00-8808-504e3f3dcf93",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "14f5f10a-49ba-4a76-a8be-23336c79eb94",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "c5dc9c55-380a-4824-8037-89bcb3092670",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b694adda-411a-4e93-86d8-43222af487ad",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "90932901-7322-4ab9-9fb8-15d3a0ea305b",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1909,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 260,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 509,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 959,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 656.6730769230769,
      "responseMin": 21,
      "responseMax": 6155,
      "responseSd": 751.8227420269982,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1678840798617,
      "completed": 1678840979982
    },
    "executions": [
      {
        "id": "ac4a656b-0a22-4969-b865-1197bae1dad3",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 251,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "06f63d23-048d-4e9f-85af-b01af02478d5",
          "httpRequestId": "9d123e09-f347-40a2-bab4-49be2669bea1"
        },
        "item": {
          "id": "ac4a656b-0a22-4969-b865-1197bae1dad3",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "3fa4b329-6c84-49a6-8734-f1c406f8bfef",
          "status": "OK",
          "code": 200,
          "responseTime": 82,
          "responseSize": 0
        }
      },
      {
        "id": "be922372-ac92-4280-aa9c-84e8d6b5a8ca",
        "cursor": {
          "ref": "b94f7271-2579-4dd1-b307-bac5546fa03f",
          "length": 251,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "79b94e52-9b96-41ce-9d9a-74aafbbb1ed6"
        },
        "item": {
          "id": "be922372-ac92-4280-aa9c-84e8d6b5a8ca",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "44f44f5d-5f97-4163-9185-675d1560e7bd",
          "status": "OK",
          "code": 200,
          "responseTime": 21,
          "responseSize": 0
        }
      },
      {
        "id": "8e420911-56dd-4721-8ec0-e5c01624a6df",
        "cursor": {
          "ref": "5e7c0be1-a8df-442b-a7f5-bb5ceac8c1ac",
          "length": 251,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "55107c6e-2e6f-41e6-8934-eb453f15caf9"
        },
        "item": {
          "id": "8e420911-56dd-4721-8ec0-e5c01624a6df",
          "name": "did_json"
        },
        "response": {
          "id": "a310fcd2-34b9-494d-a0b7-1eb35c074f02",
          "status": "OK",
          "code": 200,
          "responseTime": 1612,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b02fd53-07e9-442c-8ee0-d99ecb83b355",
        "cursor": {
          "ref": "9fbc00b5-5881-4f01-96bc-68b80f68be1a",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "3c5c4714-8556-47df-af3e-a155aa8e818f"
        },
        "item": {
          "id": "0b02fd53-07e9-442c-8ee0-d99ecb83b355",
          "name": "did:invalid"
        },
        "response": {
          "id": "51440244-6868-4e6b-ac03-a827eee61af5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 731,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b02fd53-07e9-442c-8ee0-d99ecb83b355",
        "cursor": {
          "ref": "9fbc00b5-5881-4f01-96bc-68b80f68be1a",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "3c5c4714-8556-47df-af3e-a155aa8e818f"
        },
        "item": {
          "id": "0b02fd53-07e9-442c-8ee0-d99ecb83b355",
          "name": "did:invalid"
        },
        "response": {
          "id": "51440244-6868-4e6b-ac03-a827eee61af5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 731,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98398b2c-e2f6-4955-885b-3b99726ae4d5",
        "cursor": {
          "ref": "19ecfe39-cde8-4e0f-bec6-5563ef8f16af",
          "length": 251,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "f89fe8f7-2d1f-4e5e-a638-ca1cdd30185f"
        },
        "item": {
          "id": "98398b2c-e2f6-4955-885b-3b99726ae4d5",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "0c1efab7-0473-4cd3-a663-fdce924e69f9",
          "status": "Not Found",
          "code": 404,
          "responseTime": 986,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ccb6ee3-0536-4db0-8138-aa7d2edb66cb",
        "cursor": {
          "ref": "971c712c-0fe8-4554-a097-a302820db489",
          "length": 251,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "46baf6b3-452c-4c85-bec4-32051a7b2d92"
        },
        "item": {
          "id": "2ccb6ee3-0536-4db0-8138-aa7d2edb66cb",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "84b901e5-f35c-44a4-bedb-9c0c3688849f",
          "status": "Not Found",
          "code": 404,
          "responseTime": 582,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e320db4-d5f0-4b99-9d14-fc0b15802fcc",
        "cursor": {
          "ref": "5fad1599-4fc0-4350-aba2-c8c9f20e011e",
          "length": 251,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "eb802ed6-92a1-4f62-838c-9b750eccd671"
        },
        "item": {
          "id": "1e320db4-d5f0-4b99-9d14-fc0b15802fcc",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "da8933ae-539b-4cbb-a953-992ed82e1b99",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 69,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa283276-fe17-4107-b160-68ee86d893fa",
        "cursor": {
          "ref": "a6314f12-dab8-40db-b054-382d2a71962e",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "d540caab-c337-49a9-a90d-71a312ad6808"
        },
        "item": {
          "id": "aa283276-fe17-4107-b160-68ee86d893fa",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "808cfb50-b75d-4dcd-91ce-795d761c149a",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 637,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa283276-fe17-4107-b160-68ee86d893fa",
        "cursor": {
          "ref": "a6314f12-dab8-40db-b054-382d2a71962e",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "d540caab-c337-49a9-a90d-71a312ad6808"
        },
        "item": {
          "id": "aa283276-fe17-4107-b160-68ee86d893fa",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "808cfb50-b75d-4dcd-91ce-795d761c149a",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 637,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e222226e-2326-495a-963c-b69372525930",
        "cursor": {
          "ref": "9b29183f-a1c3-4b1a-be83-009250c55c4a",
          "length": 251,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "bd2f8f4f-6d60-4f7f-b54c-18631dca9ea4"
        },
        "item": {
          "id": "e222226e-2326-495a-963c-b69372525930",
          "name": "identifiers"
        },
        "response": {
          "id": "87b7b294-7529-4975-b32f-cdbe4554fdac",
          "status": "OK",
          "code": 200,
          "responseTime": 1733,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ef3118f-f4b4-4879-9d11-0e0f88fa77d9",
        "cursor": {
          "ref": "a9a15ad7-0a36-4f2c-84ce-41f2261b1383",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "e8fbdefe-e98d-4a25-835a-eb02d3225556"
        },
        "item": {
          "id": "0ef3118f-f4b4-4879-9d11-0e0f88fa77d9",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "6414f872-15d2-4000-a79d-34b087fd168f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 880,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ef3118f-f4b4-4879-9d11-0e0f88fa77d9",
        "cursor": {
          "ref": "a9a15ad7-0a36-4f2c-84ce-41f2261b1383",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "e8fbdefe-e98d-4a25-835a-eb02d3225556"
        },
        "item": {
          "id": "0ef3118f-f4b4-4879-9d11-0e0f88fa77d9",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "6414f872-15d2-4000-a79d-34b087fd168f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 880,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1b786c0-dc4a-4bf4-ba42-bbca81b398dc",
        "cursor": {
          "ref": "3eb037a9-2ec1-45fc-838c-4885c8a38abe",
          "length": 251,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "ca846bac-a516-4a56-8022-7b0699649b22"
        },
        "item": {
          "id": "e1b786c0-dc4a-4bf4-ba42-bbca81b398dc",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "2ec77e00-3bb0-4787-b033-6dddf8550e90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 842,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e33c0cbc-45b1-4085-822c-31458aaf6d2f",
        "cursor": {
          "ref": "2937ceeb-8353-4042-acc9-e14dfb7f44cc",
          "length": 251,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "a195f153-47c1-4117-9409-79b0efd836fe"
        },
        "item": {
          "id": "e33c0cbc-45b1-4085-822c-31458aaf6d2f",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "a00fbd48-6586-4a1d-b89f-9384298b14e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 641,
          "responseSize": 553
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22aa2e63-a16d-40d5-afe1-19fc3850db65",
        "cursor": {
          "ref": "03ee5710-bcd9-4c85-8f24-8d0df9ab0ad1",
          "length": 251,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "a0527cef-6341-4784-a5d7-af14ae785495"
        },
        "item": {
          "id": "22aa2e63-a16d-40d5-afe1-19fc3850db65",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "fb0c93d2-3b3c-4449-9bf1-23d3f5a798c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 616,
          "responseSize": 550
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5519ed6-e47a-469c-9d6b-d6c778c45642",
        "cursor": {
          "ref": "cef6ee08-a498-4bfd-8bf4-38b5b27ca9d4",
          "length": 251,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "467077f5-e465-4c98-8636-307b010b9264"
        },
        "item": {
          "id": "a5519ed6-e47a-469c-9d6b-d6c778c45642",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "41b63d68-b856-4c7b-9789-d0cb0a957a3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 621,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66e05d23-155f-4c74-940c-fbbbb699df7f",
        "cursor": {
          "ref": "bc294e8b-ceea-431c-bfa0-0cbea963bafe",
          "length": 251,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "bc8c4642-beb7-4660-bcae-f90bda76e7a3"
        },
        "item": {
          "id": "66e05d23-155f-4c74-940c-fbbbb699df7f",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "1129fa6b-c7af-43cd-8f4e-cd9ddaf1e46d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 624,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50d9f499-3e16-43c2-b210-9e31acbd169c",
        "cursor": {
          "ref": "ac767234-38af-4a4a-9e5e-f2b52afa943f",
          "length": 251,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "06b44aed-aa3e-4d6c-98ae-64d451135963"
        },
        "item": {
          "id": "50d9f499-3e16-43c2-b210-9e31acbd169c",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "b25f2637-5583-4237-969a-2046296b08b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 604,
          "responseSize": 588
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "493e6538-4c61-4b2b-be1f-e0b51d0fa6f1",
        "cursor": {
          "ref": "99f644b7-ecd8-46d9-bb17-5566a290736a",
          "length": 251,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "701db847-9524-42cf-8c76-8d568a8d3733"
        },
        "item": {
          "id": "493e6538-4c61-4b2b-be1f-e0b51d0fa6f1",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "02457529-fe06-4f21-b640-b55770c9fb81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 566,
          "responseSize": 637
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bee5096-7f20-4bd9-8790-d6a4cb3a5c34",
        "cursor": {
          "ref": "720a2213-c4ea-4aef-a531-22ea9b270377",
          "length": 251,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "da8b995a-2d01-4bbf-abf6-60f507b2c2af"
        },
        "item": {
          "id": "0bee5096-7f20-4bd9-8790-d6a4cb3a5c34",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "9e84b674-4974-44bb-96a0-12e0bb933b33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 566,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faf97332-8346-413e-a4f9-dc3029889987",
        "cursor": {
          "ref": "d162c033-1d63-44b4-a364-19030053dcfd",
          "length": 251,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "297d29c6-1e27-4eda-a190-b74dd934ccd0"
        },
        "item": {
          "id": "faf97332-8346-413e-a4f9-dc3029889987",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "6da1c821-4374-47f5-9037-b24f04164d88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 579,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e7b8e2d-d4cd-40c3-8eff-31889746c770",
        "cursor": {
          "ref": "99cf0720-b770-418a-b897-7d0cae873276",
          "length": 251,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "7179fdc2-b338-409b-b986-a4d862ad8a69"
        },
        "item": {
          "id": "7e7b8e2d-d4cd-40c3-8eff-31889746c770",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "db607f56-1fd4-495a-a64f-d1778454f123",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 570,
          "responseSize": 605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e79b7c5-96d3-40c4-aac3-c64f9c7f2bf4",
        "cursor": {
          "ref": "46ea7a01-6bd7-4006-b347-0f8a2258567e",
          "length": 251,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "fb8e2655-1ec5-4b91-8287-f57efc4429ca"
        },
        "item": {
          "id": "8e79b7c5-96d3-40c4-aac3-c64f9c7f2bf4",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "eef7ad4d-9c3f-4fab-8bc2-a26e3147cab7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 605,
          "responseSize": 646
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53ea4ab6-c459-4f32-b1ec-5197f794a0f5",
        "cursor": {
          "ref": "ce9849df-e96b-43d7-bba6-465392c0efb8",
          "length": 251,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "d5b15ed4-885c-4e51-ab11-7683bb5a4012"
        },
        "item": {
          "id": "53ea4ab6-c459-4f32-b1ec-5197f794a0f5",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "41dc7aa9-a622-4ad9-b4ae-78f1d73d480f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 571,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4221fab8-26e2-4039-8d04-256a1c29bd58",
        "cursor": {
          "ref": "00767448-bf5a-4674-a5c0-45fda58cee3d",
          "length": 251,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "4cf1b3eb-8f53-4fd3-b1c1-89b0f35cc02b"
        },
        "item": {
          "id": "4221fab8-26e2-4039-8d04-256a1c29bd58",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "ba065963-4cf6-45e5-9e7c-144fa78af001",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91b95bfe-42ee-4f77-9736-543b9ab069f9",
        "cursor": {
          "ref": "476808c4-a166-4038-9f3c-f1e7eb10153c",
          "length": 251,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "9951766b-3a49-48db-a3c7-cc4c903791a8"
        },
        "item": {
          "id": "91b95bfe-42ee-4f77-9736-543b9ab069f9",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "bbcc1c84-1781-4df9-920d-ffa4fe4a4e16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 611,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7985507a-6239-492c-8fa7-128f26961f0f",
        "cursor": {
          "ref": "e55e1f74-8313-4dba-9bbe-60b1e823dc78",
          "length": 251,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "e9d2948d-058a-41b7-8cce-28ebfea7e882"
        },
        "item": {
          "id": "7985507a-6239-492c-8fa7-128f26961f0f",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "0808c8a1-8629-44b3-970f-8d197f6fc254",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 569,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83c8d93d-733e-405b-bc26-dfd49c2d2453",
        "cursor": {
          "ref": "3af6f356-e9c7-462d-a403-921f1fd70c9b",
          "length": 251,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "01462893-f1ba-419a-89ef-36d2caeb1a41"
        },
        "item": {
          "id": "83c8d93d-733e-405b-bc26-dfd49c2d2453",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "003bfcf4-6d3c-4239-bce9-d920f52ac455",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 573,
          "responseSize": 666
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "641eb0f4-a103-4303-a169-edb1d1015484",
        "cursor": {
          "ref": "3ca40d93-1eb1-4447-8063-660ba2895e8f",
          "length": 251,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "1b2a9241-c667-4dcb-8dd2-054f90d2516a"
        },
        "item": {
          "id": "641eb0f4-a103-4303-a169-edb1d1015484",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "21aaba01-ca85-4ba6-8fc7-0f0a9c25ab99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 582,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dddbb430-5ca3-4392-9604-eaa7a1894e20",
        "cursor": {
          "ref": "08241351-6c82-4199-b6d0-8d0798d9c216",
          "length": 251,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "b71294c9-60b3-44ed-93e4-a4dd42d6341e"
        },
        "item": {
          "id": "dddbb430-5ca3-4392-9604-eaa7a1894e20",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "2610c1a7-90d1-4be5-bb1f-419b0c69e2cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 576,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a79799ae-28eb-4b69-8fc5-cf23da02df6a",
        "cursor": {
          "ref": "1100db62-9adc-4d72-a893-5f962212a54f",
          "length": 251,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "bfdbcaa2-819d-4d37-8900-5a3e410dfec9"
        },
        "item": {
          "id": "a79799ae-28eb-4b69-8fc5-cf23da02df6a",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "3129d3c5-7374-4244-9bab-2dce59c961d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 594,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e22b137e-b4a1-4ef7-933b-140be2aec736",
        "cursor": {
          "ref": "0fc3676f-5bee-41a1-9422-e2ebbf6d2dbf",
          "length": 251,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "fd45eda3-1ea2-46a0-8d2b-4a025253a6aa"
        },
        "item": {
          "id": "e22b137e-b4a1-4ef7-933b-140be2aec736",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "127869c6-e6ea-4a83-948d-2c31f6eb9b8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 572,
          "responseSize": 588
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6426357-57e5-4c1a-9e4f-8f70ce274870",
        "cursor": {
          "ref": "3011eeda-a66d-4176-9987-943aad244632",
          "length": 251,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "3fd552d7-3ccd-493a-bf34-ea0198e83216"
        },
        "item": {
          "id": "a6426357-57e5-4c1a-9e4f-8f70ce274870",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "87587d23-d673-4482-bd7e-bf7cfb65e8f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 583,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa6441cf-4c68-437d-a050-a0c001eaf18f",
        "cursor": {
          "ref": "203da176-8a71-4be5-b374-2815c8beba86",
          "length": 251,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "18e00372-3a50-4ef6-bc5f-5929da91cb2f"
        },
        "item": {
          "id": "aa6441cf-4c68-437d-a050-a0c001eaf18f",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "2108d518-0e60-4278-99bb-c8a9fbfe35b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 651,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2435bb6f-dc6e-40fa-bebf-b58c316ec6bf",
        "cursor": {
          "ref": "056229fd-604d-4d43-a6d2-4ad91a6262fa",
          "length": 251,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "c7ee63e1-390a-4fca-bc06-5fa025ce0a51"
        },
        "item": {
          "id": "2435bb6f-dc6e-40fa-bebf-b58c316ec6bf",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "4b40fa03-952e-4a8b-8aaf-3d4ad4f0559a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 581,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afe3521f-6d85-4660-969c-ae496d03685b",
        "cursor": {
          "ref": "a58a4b9f-cdc8-476a-a975-5cb4a169acfa",
          "length": 251,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "3e87a6f6-d7a6-4fd1-8a4d-fed60e0aaff3"
        },
        "item": {
          "id": "afe3521f-6d85-4660-969c-ae496d03685b",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "94179983-eaa9-42d7-8f7e-036b8e97cc8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 566,
          "responseSize": 634
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cb5c582-2820-4232-94a2-f8f3a49b7ed0",
        "cursor": {
          "ref": "033bc95d-22b0-45b6-8fe0-ce88f240f6f3",
          "length": 251,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "c3842f46-de6b-453e-886e-09bde6dc3c05"
        },
        "item": {
          "id": "0cb5c582-2820-4232-94a2-f8f3a49b7ed0",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "70e36272-38d5-4e88-9110-33920a40db4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 582,
          "responseSize": 624
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0008a36-9acd-49d2-be61-fa0941a66d00",
        "cursor": {
          "ref": "70c70d22-4d23-4188-9619-d90e1d9c6ae6",
          "length": 251,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "75cbe7d8-6d40-413c-bb30-036426192a76"
        },
        "item": {
          "id": "c0008a36-9acd-49d2-be61-fa0941a66d00",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "b8fbab38-0063-42fd-8479-3042570300b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 563,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6f155be-a158-4eb9-b93b-6f74c99f8acf",
        "cursor": {
          "ref": "3f509595-e4bf-4186-9d6a-422227a7f594",
          "length": 251,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "e24a7f7b-8f8d-4130-99ef-4d4414934ede"
        },
        "item": {
          "id": "a6f155be-a158-4eb9-b93b-6f74c99f8acf",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "b4d4e305-c8f0-49b3-8564-3239d6c6b7e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 574,
          "responseSize": 623
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cb4ec77-4237-48f9-a66c-49d5ef6621ae",
        "cursor": {
          "ref": "def5ee6d-c5bb-40a1-8609-b8a7a7ee85cc",
          "length": 251,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "2e1c5241-7bdc-4ceb-b5b6-0401e1acfcc2"
        },
        "item": {
          "id": "1cb4ec77-4237-48f9-a66c-49d5ef6621ae",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "b2903fd2-d66e-476e-8068-d93fdd8e68a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 582,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "234f784d-ed67-41b8-8104-2e0f1c6dc126",
        "cursor": {
          "ref": "c7c7959f-b935-4cd3-be29-69057c273a5d",
          "length": 251,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "a88cd517-65c7-461c-a226-b0f74f7cab8a"
        },
        "item": {
          "id": "234f784d-ed67-41b8-8104-2e0f1c6dc126",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "f05bd7d9-084b-4241-bfba-fdd67ef93f7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 583,
          "responseSize": 546
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e636d82c-b11a-4a07-bc78-10f64b00c5d4",
        "cursor": {
          "ref": "ca186709-9fd4-44d7-8671-3518b3f69ff6",
          "length": 251,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "3425059a-d39d-4bc5-a038-62124822e1ec"
        },
        "item": {
          "id": "e636d82c-b11a-4a07-bc78-10f64b00c5d4",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "4e5b4d8b-41a4-4fe4-9d71-aca6851accc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 560,
          "responseSize": 1046
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efa0549b-c5d6-4eaf-99df-ac3d742a6316",
        "cursor": {
          "ref": "0189c85b-be74-467a-95b5-5b794f3edc79",
          "length": 251,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "48e5cef3-f053-4018-9958-83e2667d7d98"
        },
        "item": {
          "id": "efa0549b-c5d6-4eaf-99df-ac3d742a6316",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "5ee0069c-8d2b-4747-aba3-4ce7ae8f189b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 561,
          "responseSize": 975
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98cf9b2a-d228-48c9-8afc-b1f870598ccc",
        "cursor": {
          "ref": "8b1222f0-653f-489d-9cf1-3a85ad6aa0b9",
          "length": 251,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "bf3325b3-38e2-404a-9f33-4d0bb3fd357c"
        },
        "item": {
          "id": "98cf9b2a-d228-48c9-8afc-b1f870598ccc",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "1afcdb40-2e90-4253-bde4-1f651e7da81d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 553,
          "responseSize": 972
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f1a58b1-be04-4977-b9c7-c83a0f361e6d",
        "cursor": {
          "ref": "428d3c34-3881-4088-a9c7-6bcc0f7cc947",
          "length": 251,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "4030125e-5d43-4478-bb5a-fb89d3405716"
        },
        "item": {
          "id": "6f1a58b1-be04-4977-b9c7-c83a0f361e6d",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "404ca853-e4e8-49ee-b65a-bc3fbc718abf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 563,
          "responseSize": 974
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72d3fe3e-7f16-4267-af34-c90221094992",
        "cursor": {
          "ref": "637b4a69-a218-4896-a287-e69ebdc523d3",
          "length": 251,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "067eaf7f-7f69-406e-8d12-f633f8c016bf"
        },
        "item": {
          "id": "72d3fe3e-7f16-4267-af34-c90221094992",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "7d2ee127-b275-4400-9000-6b3dce6627c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 574,
          "responseSize": 1377
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc1de9a9-38ba-4e2c-8799-1208116e7bbc",
        "cursor": {
          "ref": "1c7e1eb8-d562-492f-a0d7-e16ec1f1a287",
          "length": 251,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "66f65b8d-717d-48d3-b52f-02236713263b"
        },
        "item": {
          "id": "bc1de9a9-38ba-4e2c-8799-1208116e7bbc",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "08216f30-7a04-4cc6-aa7a-a50016bf853c",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 689,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "115ab545-edc6-4664-aa3f-5d04e28fb097",
        "cursor": {
          "ref": "1242aea0-8e9b-4d48-a794-4f12fa5cd327",
          "length": 251,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "cb250c82-e8aa-4eff-a423-456d76207d88"
        },
        "item": {
          "id": "115ab545-edc6-4664-aa3f-5d04e28fb097",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "bfbfd788-1115-40ed-8343-6665e6ef9365",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 545,
          "responseSize": 1005
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "877e0e73-952c-4140-be0a-4fc7f63aed0c",
        "cursor": {
          "ref": "68fb9062-e62c-4b50-b4f5-ea7a97e25554",
          "length": 251,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "148c0f3f-d306-4dc9-951b-95aa125502ab"
        },
        "item": {
          "id": "877e0e73-952c-4140-be0a-4fc7f63aed0c",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "29178f62-8678-4b1c-9336-3bbc8ee5f914",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 568,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b37e4062-9df2-4f99-b3d0-9fdd50fd9df3",
        "cursor": {
          "ref": "31a1bf44-cfdc-4cf1-b459-a7c3f400ebea",
          "length": 251,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "990b62aa-7ba9-4b0b-9b03-e7a1071ab9e8"
        },
        "item": {
          "id": "b37e4062-9df2-4f99-b3d0-9fdd50fd9df3",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "a9036aeb-3748-475c-a6ba-66616d1640ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 595,
          "responseSize": 1314
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd1873b3-32af-47c2-a537-44405cdacfe0",
        "cursor": {
          "ref": "0aa7d9ae-aaba-4d48-bfd8-615870e7491f",
          "length": 251,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "bf16b87c-ea4a-4f49-bd62-63ded8592aae"
        },
        "item": {
          "id": "cd1873b3-32af-47c2-a537-44405cdacfe0",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "fefd8be4-74a2-4bd0-b334-0473ce6953e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 600,
          "responseSize": 1311
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b4c621a-fbf6-4bf6-bbc0-d308eb8a171d",
        "cursor": {
          "ref": "feb18bf0-96f6-4713-a184-c3ef384cd625",
          "length": 251,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "86f2fcf9-7cbf-4727-9e62-229b225208c9"
        },
        "item": {
          "id": "0b4c621a-fbf6-4bf6-bbc0-d308eb8a171d",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "48dd61d2-af93-4ed6-bc46-4e7ee5d7dc18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 543,
          "responseSize": 1313
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb229102-e677-478c-bcbf-6fbea319b590",
        "cursor": {
          "ref": "06b792cc-7eec-4b8d-97b1-45e1cb9a9856",
          "length": 251,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "54e3957a-9d4e-4003-8162-b58ac577796d"
        },
        "item": {
          "id": "bb229102-e677-478c-bcbf-6fbea319b590",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "39c09271-123d-418b-af5f-f3826888ea82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 569,
          "responseSize": 1716
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28ad430e-f0d2-493c-800f-3c8fd90c997a",
        "cursor": {
          "ref": "fa93cb87-710d-44e7-837e-b122db2969b9",
          "length": 251,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "d78f2d78-53b3-4650-9f73-27985aea903f"
        },
        "item": {
          "id": "28ad430e-f0d2-493c-800f-3c8fd90c997a",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "772156ad-5c8b-4f7f-9f88-7bbc62744cd0",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 636,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7efe9efe-584b-4c23-9559-7ba5522133d0",
        "cursor": {
          "ref": "8ef51f08-d5cd-42a6-8f0f-700ebca67f8c",
          "length": 251,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "80461b22-4ab3-4dca-9e1b-acc8a5b87294"
        },
        "item": {
          "id": "7efe9efe-584b-4c23-9559-7ba5522133d0",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "35f7f89a-38a6-44c6-931e-82e96d4d15e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 577,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dcb13a2-10b1-4a7d-8eca-1f874a830f69",
        "cursor": {
          "ref": "7a6851d3-e838-42dc-8df8-e5e54efd9aa2",
          "length": 251,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "209c0b80-14fd-4ec1-9523-16aa57998b4e"
        },
        "item": {
          "id": "1dcb13a2-10b1-4a7d-8eca-1f874a830f69",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "ec9e894a-48c3-4eca-8ff6-484d20b61f0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b4435d0-b24b-4c44-8bff-496c4c91368c",
        "cursor": {
          "ref": "6580d2cd-a74f-40cd-bfa2-5b5fb12cc2a7",
          "length": 251,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "d52419bb-937e-4e73-a736-b72501a4c78c"
        },
        "item": {
          "id": "9b4435d0-b24b-4c44-8bff-496c4c91368c",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "eda2c413-d089-4db7-8b4f-d9b81d404e33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 503,
          "responseSize": 609
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef6f6f67-acb9-4fcb-a722-7698fbcca53c",
        "cursor": {
          "ref": "ce9ef595-5cd1-48e8-a032-5cc14f4d2ca5",
          "length": 251,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "94b8e9f7-799e-4825-97a4-6d0bf5464ffd"
        },
        "item": {
          "id": "ef6f6f67-acb9-4fcb-a722-7698fbcca53c",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "bffc1fa8-2789-4019-b712-50b5b1d4f56c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 563,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "128cb95e-85fc-4a06-ae30-e65be08a2ba0",
        "cursor": {
          "ref": "05364257-2bf7-4285-b327-fd09e0a73fd6",
          "length": 251,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "a70f5a72-1669-40cf-a9fc-66028cd66b92"
        },
        "item": {
          "id": "128cb95e-85fc-4a06-ae30-e65be08a2ba0",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "10ef2bc1-b20d-48f9-9da4-5c433bff8041",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 505,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d15962c2-c82f-4fe3-8d8a-b19b9c4fbff6",
        "cursor": {
          "ref": "a502e9b3-79f9-430b-bc10-e3c2422a6089",
          "length": 251,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "2e2130f7-18b3-464d-80d1-9e8c8b482a9c"
        },
        "item": {
          "id": "d15962c2-c82f-4fe3-8d8a-b19b9c4fbff6",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "4b90ad4e-28a5-4f1e-a239-f3a9dfce537a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 529,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "877a7197-ec54-4086-af17-c7c45149989d",
        "cursor": {
          "ref": "be663b7d-b277-49b4-a196-8c4b455e58d2",
          "length": 251,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "df804657-d8f4-42c6-b4e3-c311bfb5f90d"
        },
        "item": {
          "id": "877a7197-ec54-4086-af17-c7c45149989d",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "d3536eea-45ef-439e-bbd6-313a95020b51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 553,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4511348-ecdc-4e0f-980a-7d5b9c83fac4",
        "cursor": {
          "ref": "c0e0f2ed-a0cc-4b8f-bd83-114da825beb2",
          "length": 251,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "4d56cbfd-c0c9-46f1-9045-1341ed11f325"
        },
        "item": {
          "id": "f4511348-ecdc-4e0f-980a-7d5b9c83fac4",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "2ede807e-da27-4cdc-8d50-bdae9439af92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 509,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c37f1a0b-1d5e-4bfa-b9f5-a41257e2fbd8",
        "cursor": {
          "ref": "5e09e7a4-8000-4c06-9db2-f2ddcb49f418",
          "length": 251,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "3a837aa2-1e8f-4c14-bad8-260c5a2f17ba"
        },
        "item": {
          "id": "c37f1a0b-1d5e-4bfa-b9f5-a41257e2fbd8",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "5aa47627-dba7-4f7d-a818-3ca1b1e5d60a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 1100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a90b0aec-08ab-4059-b8a7-1d0d3451feab",
        "cursor": {
          "ref": "d461e0a0-f0bc-4353-a574-0c51655fd117",
          "length": 251,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "00d65509-16fc-4de1-925d-a2c689fe02ab"
        },
        "item": {
          "id": "a90b0aec-08ab-4059-b8a7-1d0d3451feab",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "30d8585f-0507-4c1b-a401-0d64934a5d92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 621,
          "responseSize": 909
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e3913f7-a72c-4a00-b924-e3ccb3b2519b",
        "cursor": {
          "ref": "6f974323-41ea-4232-b519-356737953f7d",
          "length": 251,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "bb30dcbb-dd4e-4888-95bf-40b24d915a11"
        },
        "item": {
          "id": "4e3913f7-a72c-4a00-b924-e3ccb3b2519b",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "6eda4145-e7d5-4a60-9289-b680b90daa30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97faffcb-f635-4d4b-8153-50ecb1f1974c",
        "cursor": {
          "ref": "26f6fc7e-802e-439e-96ab-1b3bd13f9319",
          "length": 251,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "a754a58e-4874-4a1f-9dc4-8e08337f2e57"
        },
        "item": {
          "id": "97faffcb-f635-4d4b-8153-50ecb1f1974c",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "34d21fc4-6432-4cdd-bb90-59465e3b55dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 572,
          "responseSize": 908
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c251fd2-c232-442e-8d01-fd0390762601",
        "cursor": {
          "ref": "7df3528c-9f88-44c2-8740-ed4f6204c28c",
          "length": 251,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "3e97e2c2-aee3-4052-9663-dea2ead8d52b"
        },
        "item": {
          "id": "1c251fd2-c232-442e-8d01-fd0390762601",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "4c1f3336-f83d-4d43-9a7b-f1dbda5038e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 576,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "946ec8ac-a2f1-476f-be20-cc40a3c1b9fc",
        "cursor": {
          "ref": "6d3c1815-a54c-42da-8dba-434c195e36a2",
          "length": 251,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "aa0aeb8e-9947-495a-a842-1e42b1c2c1fb"
        },
        "item": {
          "id": "946ec8ac-a2f1-476f-be20-cc40a3c1b9fc",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "4ec3bb4f-ea97-4e77-95d0-e37eb911a537",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 572,
          "responseSize": 1415
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d756d73-e412-4173-9e79-27ded4dea864",
        "cursor": {
          "ref": "96cb0e5a-aa4a-4f9a-a5fb-dce7bf3c1df4",
          "length": 251,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "139c78e4-f3e3-4892-9173-21c5b96881c3"
        },
        "item": {
          "id": "4d756d73-e412-4173-9e79-27ded4dea864",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "5b8215e6-37d6-4180-997e-be19088dc4db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 595,
          "responseSize": 1401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0acbe5b-bd6b-4562-be0f-7d9e4e402378",
        "cursor": {
          "ref": "858e65d7-c407-49ef-ac51-c57679130cbd",
          "length": 251,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "c351e2d6-4443-48c3-a389-53e0fef8da20"
        },
        "item": {
          "id": "e0acbe5b-bd6b-4562-be0f-7d9e4e402378",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "d80873bf-72d5-4fff-99e5-3fd95a54f56c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 576,
          "responseSize": 1398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6514d82b-070a-4c26-ab7f-c179f9f3321f",
        "cursor": {
          "ref": "4e93d663-7aa8-4591-b960-cbb8e6b147e4",
          "length": 251,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "6a3236fa-e723-4bdc-a8ce-b5e6b0229523"
        },
        "item": {
          "id": "6514d82b-070a-4c26-ab7f-c179f9f3321f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "4e5a6742-9260-4062-84fe-fabdf57a695a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 573,
          "responseSize": 1400
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7703440-d7f8-41cb-8220-94d1ce548f93",
        "cursor": {
          "ref": "a229f5cb-534c-428a-8b2a-5b5f542f9210",
          "length": 251,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "ec83743f-76a4-4ef9-b8ae-5fe9daeeacd0"
        },
        "item": {
          "id": "e7703440-d7f8-41cb-8220-94d1ce548f93",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "2e6aae6f-8be0-4922-8784-d4a9308e3fa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 601,
          "responseSize": 1398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "577499b5-8de9-479b-9ea2-5869c165852d",
        "cursor": {
          "ref": "7ac3d098-26f9-425f-a6c2-1d8fec872bb1",
          "length": 251,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "1386d8b0-6f8f-4419-be57-a942bdebb442"
        },
        "item": {
          "id": "577499b5-8de9-479b-9ea2-5869c165852d",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "80f0ff7b-d5fc-41ea-b57c-a02f39b76a18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 573,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0cfff0a-2660-47f1-a097-44e2808c8ba1",
        "cursor": {
          "ref": "cfa02a26-a084-4ee9-a822-0f7375f6c9b6",
          "length": 251,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "ec680323-609e-4ef1-8bd4-ff7c8ca1cacd"
        },
        "item": {
          "id": "c0cfff0a-2660-47f1-a097-44e2808c8ba1",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "2812bde8-06bc-4a28-a203-32a428c6185d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 562,
          "responseSize": 557
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01d829d0-be6c-49d4-b67f-10aaa577b668",
        "cursor": {
          "ref": "24815d35-858c-407d-9859-0e646d3026de",
          "length": 251,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "6636baf2-f2ce-4116-ba17-bbea5c3d61d6"
        },
        "item": {
          "id": "01d829d0-be6c-49d4-b67f-10aaa577b668",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "a7bbc7b3-44cb-4266-b9de-1511b4b6ea6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 589,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b32ffe5-b0dc-44ab-8d8c-d83e9256fede",
        "cursor": {
          "ref": "f0dea30c-cc76-441d-8234-936c97776ddb",
          "length": 251,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "fa17490f-a17b-4d04-8d86-c5845e6273e3"
        },
        "item": {
          "id": "6b32ffe5-b0dc-44ab-8d8c-d83e9256fede",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "6a1bee5b-dde8-4418-960c-1b52031672bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 580,
          "responseSize": 557
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0de1bdd-ef41-448e-9143-d8cb15877bf6",
        "cursor": {
          "ref": "010a1650-5ffd-454d-bd31-58c9f2413c19",
          "length": 251,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "9cbcfb36-15d6-4b21-ab09-b76a33b7c1df"
        },
        "item": {
          "id": "c0de1bdd-ef41-448e-9143-d8cb15877bf6",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "02a9a12b-5257-4915-86ad-1b78ca7bfd8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 569,
          "responseSize": 559
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef7916d7-e235-4629-92e7-cdd945ad07f6",
        "cursor": {
          "ref": "a7a75075-599c-4478-8562-4e2671e36e4e",
          "length": 251,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "5f05049c-4d6d-438e-a4b4-04ac7742dd9d"
        },
        "item": {
          "id": "ef7916d7-e235-4629-92e7-cdd945ad07f6",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "e7244921-6b9e-432f-98f9-b51008f9aa76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 563,
          "responseSize": 557
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03ab30e7-55da-4a98-8da9-cfdcfc143d33",
        "cursor": {
          "ref": "fe999a47-0056-4fc0-82a9-581d4024df2f",
          "length": 251,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "979ff772-17a9-4fad-b164-cd4e0082dfbd"
        },
        "item": {
          "id": "03ab30e7-55da-4a98-8da9-cfdcfc143d33",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "9f8683f5-c6fd-483a-b659-73307018b9b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 578,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2516aca-6452-4c96-9ac8-bc8495307b00",
        "cursor": {
          "ref": "235170da-db5e-4edc-be16-b579458b8449",
          "length": 251,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "30cc1b2d-093a-48d6-8092-52267601965e"
        },
        "item": {
          "id": "f2516aca-6452-4c96-9ac8-bc8495307b00",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "0d3efda0-3201-4430-b9bd-29ca1545851c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 565,
          "responseSize": 836
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0962ae0-3eb9-478b-b516-c6fa1ee18d39",
        "cursor": {
          "ref": "136b3442-8f75-4124-9056-bcb9efddf007",
          "length": 251,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "a1594d78-0624-4fdd-8974-40d06d87794b"
        },
        "item": {
          "id": "f0962ae0-3eb9-478b-b516-c6fa1ee18d39",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "7c2ed003-62b1-4c81-91d2-0e2ecdb53083",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 588,
          "responseSize": 817
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24c9fbb4-5617-4ca9-9246-a8d9cbb6c4f5",
        "cursor": {
          "ref": "f3281050-ecd6-4390-b6ea-e986ab5c8442",
          "length": 251,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "fc775e6e-33cc-4dc0-af0a-d86f08ccf10a"
        },
        "item": {
          "id": "24c9fbb4-5617-4ca9-9246-a8d9cbb6c4f5",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "87ec03ac-d830-4fc3-a75b-878903a41302",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 556,
          "responseSize": 814
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91bad096-8d78-45b8-9250-d35c5a4bd4c9",
        "cursor": {
          "ref": "c1144387-f8a1-44cd-93be-77b30e2a0fcb",
          "length": 251,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "f8baeb2b-882a-420c-b24b-0879e3fcd79d"
        },
        "item": {
          "id": "91bad096-8d78-45b8-9250-d35c5a4bd4c9",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "31aa50ba-feb0-4238-be51-0101784df57b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 562,
          "responseSize": 816
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73ebb5a0-6d59-477b-bc9d-f3b5e21cfd69",
        "cursor": {
          "ref": "11c74b85-9c98-4520-9e4c-a9d674350b10",
          "length": 251,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "7906876b-b1dd-4774-941b-5b257c0458d5"
        },
        "item": {
          "id": "73ebb5a0-6d59-477b-bc9d-f3b5e21cfd69",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "bb340588-8fac-4c11-b1bc-d31b2fa0ab32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 562,
          "responseSize": 814
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09ec8553-7b90-45f4-9f5a-78bd536d3e32",
        "cursor": {
          "ref": "797995cb-6d35-42d0-a3a4-321809cdf3a3",
          "length": 251,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "17ba61a6-833c-4343-afb9-54d323df502d"
        },
        "item": {
          "id": "09ec8553-7b90-45f4-9f5a-78bd536d3e32",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "9193d8fa-6140-44c8-a0fd-85ad16b9cb88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 570,
          "responseSize": 685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bd7ebaa-a6cc-4edc-b643-2aca1366eaf6",
        "cursor": {
          "ref": "07a97740-2842-44dc-914f-d049072d9d45",
          "length": 251,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "93e583ae-0661-4190-b78e-1c685e015b24"
        },
        "item": {
          "id": "6bd7ebaa-a6cc-4edc-b643-2aca1366eaf6",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "716fa4b5-75e3-4708-b7e2-a07ca2834741",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 584,
          "responseSize": 653
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b931cf7-c6fa-4daf-9b3f-eee5a24fb582",
        "cursor": {
          "ref": "b231fe6e-3bc2-4405-8465-72f995d5d27d",
          "length": 251,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "f2a76551-699f-432d-b3b2-f33711a41492"
        },
        "item": {
          "id": "7b931cf7-c6fa-4daf-9b3f-eee5a24fb582",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "1e09cfb7-0802-4f95-9529-b1b617c29f40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 587,
          "responseSize": 634
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "423b93fe-fa2d-4b22-a740-42abe0c9e2a0",
        "cursor": {
          "ref": "42e308fc-3928-427b-a147-a6042edaebcd",
          "length": 251,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "bb66f048-6c20-429b-ba72-7d8f531df9d8"
        },
        "item": {
          "id": "423b93fe-fa2d-4b22-a740-42abe0c9e2a0",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "dfbc6873-ff3f-4399-b477-00349d774568",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 603,
          "responseSize": 631
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaf0e877-0048-48b9-a332-9035d0d4ea51",
        "cursor": {
          "ref": "22832432-4f9e-4318-8c75-93a11652c016",
          "length": 251,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "be782b84-acec-4484-8717-1cc69a218ab8"
        },
        "item": {
          "id": "eaf0e877-0048-48b9-a332-9035d0d4ea51",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "fb0c2d0c-0fed-47ae-9389-6ec286084208",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 570,
          "responseSize": 633
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87fab5e1-71c8-40d8-85ee-65913b7fc982",
        "cursor": {
          "ref": "a773ea30-c63d-46ea-b8e9-5e2cf981f0b8",
          "length": 251,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "78394999-c486-4c66-9389-94f7c4fa2fce"
        },
        "item": {
          "id": "87fab5e1-71c8-40d8-85ee-65913b7fc982",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "f2caa5f7-e622-4c6a-bd01-5563544eea8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 596,
          "responseSize": 631
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d77acdbe-9de2-4cc2-8462-f883900f5482",
        "cursor": {
          "ref": "139f8bdd-5231-46aa-8df5-769014b75179",
          "length": 251,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "d68ef0ac-463c-4f06-af55-241101ce531d"
        },
        "item": {
          "id": "d77acdbe-9de2-4cc2-8462-f883900f5482",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "525deec4-3b61-43df-9a32-85dee48a1ab6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 581,
          "responseSize": 684
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bc205f8-9c16-4525-a386-1510891674c0",
        "cursor": {
          "ref": "d834e3ab-31a0-4013-a524-a5a315357c17",
          "length": 251,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "361ac4d0-9fff-4f7b-977f-d7dd2c6a0ee6"
        },
        "item": {
          "id": "3bc205f8-9c16-4525-a386-1510891674c0",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "b0b4f909-1475-4e7c-9093-679615b079ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 585,
          "responseSize": 679
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f224a615-ba27-4d39-99ca-bac89b8cf038",
        "cursor": {
          "ref": "48b5358c-9e61-4bfc-991b-402d495d34a1",
          "length": 251,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "c92ce591-5185-4d51-b026-13d74b19c58b"
        },
        "item": {
          "id": "f224a615-ba27-4d39-99ca-bac89b8cf038",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "c89c8c05-f372-4cd6-93e4-a6dc2a57ead8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 570,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9a5635b-afa4-4ddc-be8b-3381ac2b3b3f",
        "cursor": {
          "ref": "d4aeb836-f720-44ae-9378-dad1e778b4bb",
          "length": 251,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "106c0e97-f169-4cac-bd9c-d7855fee9bb4"
        },
        "item": {
          "id": "d9a5635b-afa4-4ddc-be8b-3381ac2b3b3f",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "c5c5d8f1-6fb3-4b74-8110-9b08053fcce8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 647,
          "responseSize": 653
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68475121-ec30-4de7-afc5-9c18a5b99571",
        "cursor": {
          "ref": "a9c1c7bf-7789-43b6-bf0d-e8cf308f67e9",
          "length": 251,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "971e683d-fe76-4201-a8e2-10e889beb5fc"
        },
        "item": {
          "id": "68475121-ec30-4de7-afc5-9c18a5b99571",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "cf78c097-462f-4be4-a010-cb3be8ebb033",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 563,
          "responseSize": 655
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb731583-891f-480b-b275-fbff5601f69c",
        "cursor": {
          "ref": "4f708762-9933-4e4c-973b-c3c08f614610",
          "length": 251,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "c06816d7-a645-4d4a-a5c2-e739462ba30f"
        },
        "item": {
          "id": "bb731583-891f-480b-b275-fbff5601f69c",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "09c98a9a-b195-41e7-9da9-2812b801770a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 571,
          "responseSize": 677
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66a4861d-cb3e-45d7-a2c6-cb49e3ad971d",
        "cursor": {
          "ref": "0e3c708e-92d1-4476-8c9a-6ba526b8eaae",
          "length": 251,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "9021724a-c00c-4a0b-a05c-2ca0efa35e4b"
        },
        "item": {
          "id": "66a4861d-cb3e-45d7-a2c6-cb49e3ad971d",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "45edb836-a312-40ea-a7b5-b466eb0a88ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 802,
          "responseSize": 690
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f483180-03f8-4600-9c89-5ce99636b4c5",
        "cursor": {
          "ref": "1872c0bf-6137-4e39-9a92-127bf81e8de0",
          "length": 251,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "05538bd6-aef5-4fb6-b06e-044405f2e10f"
        },
        "item": {
          "id": "5f483180-03f8-4600-9c89-5ce99636b4c5",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "6b21d8a1-075b-451f-be86-2a768af321ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 917,
          "responseSize": 953
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9c1b320-b9cd-4569-97cd-6f1cb6436a57",
        "cursor": {
          "ref": "19a7582b-683d-47cc-8bce-2e1f71ee6aa4",
          "length": 251,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "9d260eb0-3c2c-44d1-a525-3db0a271b64b"
        },
        "item": {
          "id": "c9c1b320-b9cd-4569-97cd-6f1cb6436a57",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "5f775e97-fb0e-42ee-9d89-5c78f24edd78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1590,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9db8f42-157d-4596-9102-dc415d674b93",
        "cursor": {
          "ref": "fa4ab50e-79eb-4fd3-a960-c47bf436efc5",
          "length": 251,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "acbd5dec-8454-4fb3-86a9-c00aa6654519"
        },
        "item": {
          "id": "d9db8f42-157d-4596-9102-dc415d674b93",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "511da72d-1cf5-4c39-8788-976baf88a0a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2228,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94d6f1c9-8502-43be-81e4-a6631329c9bc",
        "cursor": {
          "ref": "386ecb4a-fe29-4028-b4ed-07b30269589d",
          "length": 251,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "2d913def-8fef-4728-a0ef-101f1e04f1e5"
        },
        "item": {
          "id": "94d6f1c9-8502-43be-81e4-a6631329c9bc",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "2f2ded09-6112-40c6-a9d9-090839af0fca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2235,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "717413a9-cef6-457b-bebc-5e71e9402302",
        "cursor": {
          "ref": "9807c68c-fc5f-4889-9ea7-8f0284c0f5c3",
          "length": 251,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "74aeda51-22ec-4642-9664-7320766bfd8a"
        },
        "item": {
          "id": "717413a9-cef6-457b-bebc-5e71e9402302",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "644a7de9-b348-4835-afba-e4e11f37ab10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1828,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b05c4bb6-a674-4d95-8306-c5becedc4930",
        "cursor": {
          "ref": "c6c297e0-c3f5-4cb4-9c48-820dddca03d0",
          "length": 251,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "7943eea5-b487-47df-8e3c-af6969bc4692"
        },
        "item": {
          "id": "b05c4bb6-a674-4d95-8306-c5becedc4930",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "6b2502ea-f163-4e4c-a8ec-905e2a65f18d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1944,
          "responseSize": 753
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d237e2e-49ea-45cb-9db6-bb93c3b07c15",
        "cursor": {
          "ref": "2507f8b3-17cd-4789-a20d-f2f9402568a7",
          "length": 251,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "0de33c40-2990-4373-b654-6006b06bf45b"
        },
        "item": {
          "id": "1d237e2e-49ea-45cb-9db6-bb93c3b07c15",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "3bd15d5d-ea3b-45e3-a407-730486e6c043",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 66,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f232fa77-dff6-4774-abca-091d448defa5",
        "cursor": {
          "ref": "b04349a5-129d-429e-8975-004fb0deddc7",
          "length": 251,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "4fc7cbfc-1ee2-42ef-8a3c-205f21df2e0c"
        },
        "item": {
          "id": "f232fa77-dff6-4774-abca-091d448defa5",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "0b928329-07a9-4edc-bc9a-894c61444ea8",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 1485,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef5c9cf7-9b39-4e7f-af3e-ba509722a86b",
        "cursor": {
          "ref": "31708408-aee9-414c-9ddd-40944c24c9f1",
          "length": 251,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "7739e005-f796-4edd-96c7-6e0199960708"
        },
        "item": {
          "id": "ef5c9cf7-9b39-4e7f-af3e-ba509722a86b",
          "name": "credentials_issue"
        },
        "response": {
          "id": "8966564a-efac-4fa5-9ea8-cbaa4c8fa9aa",
          "status": "Created",
          "code": 201,
          "responseTime": 6155,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "c39498fe-2a2d-4235-bb9e-57c3e2a04de7",
        "cursor": {
          "ref": "0622fd59-c773-4c52-ad9e-31e1d3b48817",
          "length": 251,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "57b3e4d5-82fc-4413-9c12-86efd80cd757"
        },
        "item": {
          "id": "c39498fe-2a2d-4235-bb9e-57c3e2a04de7",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "10d90e06-64e8-4982-b966-c5c0b8fd4e08",
          "status": "Created",
          "code": 201,
          "responseTime": 5777,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d97e0e7-a55b-49bb-8672-0d83cbb643d6",
        "cursor": {
          "ref": "3525e95a-8848-4bfb-931d-571cd3030df2",
          "length": 251,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "753f0c3b-992c-4b43-9049-b16a1fd2280f"
        },
        "item": {
          "id": "5d97e0e7-a55b-49bb-8672-0d83cbb643d6",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "4904fefd-7002-44cb-88e8-ff54a193cff7",
          "status": "Created",
          "code": 201,
          "responseTime": 4770,
          "responseSize": 703
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bc8365e-bcc1-423c-a86b-20071378bea0",
        "cursor": {
          "ref": "e84db707-f35a-428c-beb0-2fa70b6699f3",
          "length": 251,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "3dd357a9-d373-4b83-9c5a-225bbce5f298"
        },
        "item": {
          "id": "1bc8365e-bcc1-423c-a86b-20071378bea0",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "ebc7a114-7d13-4604-926a-f8d4d6d13476",
          "status": "Created",
          "code": 201,
          "responseTime": 4308,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "fff40e1e-f905-4aab-9fa0-87da3f834c6f",
        "cursor": {
          "ref": "4ce0476f-6fe5-4153-bc96-39a2e2ea4b17",
          "length": 251,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "7d205042-a028-44a4-9661-bb9420f5943e"
        },
        "item": {
          "id": "fff40e1e-f905-4aab-9fa0-87da3f834c6f",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "ace18630-09eb-47a3-9a20-8aa6c2c56970",
          "status": "Created",
          "code": 201,
          "responseTime": 4151,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9c5b72e-e6e2-4306-8bcb-9e68a292e0d0",
        "cursor": {
          "ref": "2dda8884-1e03-4ca4-abe6-5c247aa749af",
          "length": 251,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "517098c6-f3d0-4562-9553-83d83eecdf41"
        },
        "item": {
          "id": "d9c5b72e-e6e2-4306-8bcb-9e68a292e0d0",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "900b9a12-7c5e-4a00-b0de-2ce0e67f40e3",
          "status": "Created",
          "code": 201,
          "responseTime": 5197,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0587f870-a47c-4197-847e-a6e6fbb046ae",
        "cursor": {
          "ref": "f65ceddc-e7dd-4a2d-99c2-e4669a96e240",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "d9bb90ce-90fb-4251-9c84-287dc089f14e"
        },
        "item": {
          "id": "0587f870-a47c-4197-847e-a6e6fbb046ae",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "bafe97e0-8d97-431d-8c85-ba1a2c26736f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 524,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0587f870-a47c-4197-847e-a6e6fbb046ae",
        "cursor": {
          "ref": "f65ceddc-e7dd-4a2d-99c2-e4669a96e240",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "d9bb90ce-90fb-4251-9c84-287dc089f14e"
        },
        "item": {
          "id": "0587f870-a47c-4197-847e-a6e6fbb046ae",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "bafe97e0-8d97-431d-8c85-ba1a2c26736f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 524,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fcb6b51-96a8-4b68-8061-787de526ae0a",
        "cursor": {
          "ref": "ce7bc28b-34f0-4b5f-a81b-9f5678406336",
          "length": 251,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "37747711-ae66-4b08-aa99-3e7d9b8a07f2"
        },
        "item": {
          "id": "6fcb6b51-96a8-4b68-8061-787de526ae0a",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "1f41ae6d-89b1-401e-8adb-c1eda29310ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 556,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0befb9a6-03e6-4fcb-b7a2-a4cec834a7fd",
        "cursor": {
          "ref": "f9b7aa3c-996e-4f92-b056-9ebd077c27ee",
          "length": 251,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "07aeee88-735c-438f-997e-8011c8b43cb0"
        },
        "item": {
          "id": "0befb9a6-03e6-4fcb-b7a2-a4cec834a7fd",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "74cbee22-38e3-4dcb-b27d-d7c6d02a3090",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57e2184e-677d-49ba-a59a-50fa07757673",
        "cursor": {
          "ref": "7ac765f0-0a03-4f8c-9d47-35acd091377f",
          "length": 251,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "031186bb-8f7f-4986-825e-8e6b1ca1268d"
        },
        "item": {
          "id": "57e2184e-677d-49ba-a59a-50fa07757673",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "bd4af280-cb82-4b0d-8264-2270b84b15ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 549,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00518db8-263c-42f9-93af-aab73d865b35",
        "cursor": {
          "ref": "02aea644-48d7-42a9-9853-58975431dd9a",
          "length": 251,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "50178051-8235-4a93-9e60-d6dc8c316966"
        },
        "item": {
          "id": "00518db8-263c-42f9-93af-aab73d865b35",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "eb33a46f-08ce-4d6a-bf14-08bc8276fe94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 514,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de983492-7e74-43a5-bad1-b3877c688690",
        "cursor": {
          "ref": "0d198006-c946-4f9c-95be-c0e94d62c932",
          "length": 251,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "9b55052a-b3f8-4ba8-9e38-b4824c2db114"
        },
        "item": {
          "id": "de983492-7e74-43a5-bad1-b3877c688690",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "30165f36-cc53-44bd-bce2-66042b64a4c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 519,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f03bbaf-63a9-471f-bfe3-42792dfc3344",
        "cursor": {
          "ref": "54c38419-cfc1-45da-bcd4-6b4cad43ce07",
          "length": 251,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "3995fec2-5800-4dc1-999f-cd9526c1b8e6"
        },
        "item": {
          "id": "0f03bbaf-63a9-471f-bfe3-42792dfc3344",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "9106b92b-8c32-41d1-939d-a6fbad10e18c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 536,
          "responseSize": 431
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aba59e96-dce1-4652-94c7-31113cdd732d",
        "cursor": {
          "ref": "3375c584-957c-4a38-8965-96f3f999f131",
          "length": 251,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "22fa75e3-989a-45dc-a477-45d3d3e8b5ac"
        },
        "item": {
          "id": "aba59e96-dce1-4652-94c7-31113cdd732d",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "009cbb72-ac1b-497d-bd31-09e29681610e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 542,
          "responseSize": 482
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04e661e7-bee5-48db-bf61-c8520e866987",
        "cursor": {
          "ref": "3e57908b-7d19-4096-95e3-281c2ad1f5b5",
          "length": 251,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "d679703c-14e8-43bf-9822-78b360ef2a49"
        },
        "item": {
          "id": "04e661e7-bee5-48db-bf61-c8520e866987",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "668d32b3-e053-470b-abda-b409f03bf0a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 479
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "345f5ba9-ac39-4003-a942-7589d2b6be0e",
        "cursor": {
          "ref": "4e707fe9-c8cc-4af5-9c6c-01981738744e",
          "length": 251,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "51f119ed-f84d-4575-8f51-69c0e2c5b7ee"
        },
        "item": {
          "id": "345f5ba9-ac39-4003-a942-7589d2b6be0e",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "62ace47e-8701-42f1-bc24-84f23a6152a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 520,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29bb638e-0032-4765-8bb2-04b8eaf83d5c",
        "cursor": {
          "ref": "3ba51053-802e-454d-940c-b6c33a3265a4",
          "length": 251,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "96b49032-05e3-4889-84d1-49843c3ad0ae"
        },
        "item": {
          "id": "29bb638e-0032-4765-8bb2-04b8eaf83d5c",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "41c2920a-4124-478f-9a56-141f1b54eb61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e80c19e-3190-4dfd-ab4a-14bfcf573889",
        "cursor": {
          "ref": "a3445556-33ba-457f-b61e-aaf7576456a4",
          "length": 251,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "cf1f9666-2f82-4b1f-ae0c-e925806011cc"
        },
        "item": {
          "id": "8e80c19e-3190-4dfd-ab4a-14bfcf573889",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "b40ff860-e4bf-45d1-a227-327bbefcba4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 516,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fd0814a-f927-4955-ae42-ca55083996c3",
        "cursor": {
          "ref": "e246059d-290e-4906-bfe8-f702a2825d66",
          "length": 251,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "29e6fed1-784a-4318-bc8e-911eb3833357"
        },
        "item": {
          "id": "4fd0814a-f927-4955-ae42-ca55083996c3",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "61533805-a564-4ca5-9928-6585791039e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 529,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80067845-04d6-4051-82f9-48eb849868f3",
        "cursor": {
          "ref": "5f726477-cb43-4241-93c2-a84ce24195a4",
          "length": 251,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "019497bf-de97-4215-987a-707bd4a511fd"
        },
        "item": {
          "id": "80067845-04d6-4051-82f9-48eb849868f3",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "63fb4e67-d206-45c6-a954-ecf7b9223a63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 622,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27aa995e-c0f4-49af-8fa2-43910676b70c",
        "cursor": {
          "ref": "15cb355a-2f56-49dd-9208-8e5509707ef4",
          "length": 251,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "b04d1479-142a-45a5-8d26-0cd8afd75f87"
        },
        "item": {
          "id": "27aa995e-c0f4-49af-8fa2-43910676b70c",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "1d9bce00-65c1-4e98-b83d-69b3c9c15187",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 709,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9033f408-7ef2-4b96-8e8d-6d7065ace915",
        "cursor": {
          "ref": "0989b2be-9e70-4401-9d3b-ecd331a3a924",
          "length": 251,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "3b4f0a82-bb78-4730-8908-ef77806358c5"
        },
        "item": {
          "id": "9033f408-7ef2-4b96-8e8d-6d7065ace915",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "a0087fab-e5b5-4953-9293-8576e11d021e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 521,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e142be84-b87e-48ae-b300-b8f2fd1f69b0",
        "cursor": {
          "ref": "07b094a3-adfa-4b74-864a-2dd2130076bb",
          "length": 251,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "719832cd-f414-4c46-bba5-dd2fa61866a9"
        },
        "item": {
          "id": "e142be84-b87e-48ae-b300-b8f2fd1f69b0",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "31575c13-d71a-45b8-add5-698dadb0e159",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 516,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33303d51-ddc0-4803-86f5-8aabcd37f643",
        "cursor": {
          "ref": "2050a36a-45c7-4f10-8334-23cf54ebb2e0",
          "length": 251,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "744290af-1eb4-447a-9f54-b6c6629c1081"
        },
        "item": {
          "id": "33303d51-ddc0-4803-86f5-8aabcd37f643",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "7b9edcd9-6e59-4435-880e-46f733f8aaaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 524,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d25807e-ffcf-4726-9c5c-ab7f032cdf1b",
        "cursor": {
          "ref": "3926efad-0db9-49d7-ba6c-90d826a384e8",
          "length": 251,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "2f5704fd-44d5-4e9f-8748-7d77d9b423c1"
        },
        "item": {
          "id": "7d25807e-ffcf-4726-9c5c-ab7f032cdf1b",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "2b4d9220-7964-49cd-a130-c5e2d002c4a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec9bfaee-914f-4bda-aada-e121967c0ada",
        "cursor": {
          "ref": "f3f7933d-fc7d-4b17-91e3-3b32d9882451",
          "length": 251,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "ea0564ef-debc-476d-83e1-302c87a9218f"
        },
        "item": {
          "id": "ec9bfaee-914f-4bda-aada-e121967c0ada",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "3c74ff58-222f-47f1-885c-0b0d799bfcb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 545,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f827c5f0-d489-4be3-b889-0e07ef617697",
        "cursor": {
          "ref": "8e925704-2436-4a7a-a578-4aeefee47b92",
          "length": 251,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "e395a666-3de2-4531-9391-2f90077be75f"
        },
        "item": {
          "id": "f827c5f0-d489-4be3-b889-0e07ef617697",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "118597fc-430c-48d1-a4d7-57e6684df91c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 519,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c75396ab-6516-4dcc-aad3-64e0c0e720e8",
        "cursor": {
          "ref": "212866b7-ca95-4746-a057-a5dade810c3b",
          "length": 251,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "c79fd064-7889-4596-823a-6e7e2fdd91b7"
        },
        "item": {
          "id": "c75396ab-6516-4dcc-aad3-64e0c0e720e8",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "291ccea4-f8ab-437b-b0f6-09fcca1955ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 566,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "341af2df-bd80-4d42-9e2a-90ced786cd37",
        "cursor": {
          "ref": "73a7322b-9b3c-4db8-9826-78286e5cd044",
          "length": 251,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "a6d58a88-a3fb-4bbb-abe2-10c76738223f"
        },
        "item": {
          "id": "341af2df-bd80-4d42-9e2a-90ced786cd37",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "f2464567-e57d-4257-9c13-6404a29af8e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 528,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7561abc9-6a07-43cd-9ecf-0018b38116c5",
        "cursor": {
          "ref": "1b9c27a7-ec6d-45d0-96ae-0a9fbf371f0f",
          "length": 251,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "cc295885-f0d5-48ea-ae35-258bcff82b2c"
        },
        "item": {
          "id": "7561abc9-6a07-43cd-9ecf-0018b38116c5",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "b5ec2db4-51fa-424e-92a7-25b811199aeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 533,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5b38e69-1b58-4e10-a35d-6a31ac7aca04",
        "cursor": {
          "ref": "bee6c052-9e47-4d66-a548-4192e2a7eac8",
          "length": 251,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "e86af9ec-3d4e-4c85-b588-b2550e4c2acb"
        },
        "item": {
          "id": "a5b38e69-1b58-4e10-a35d-6a31ac7aca04",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "76c506ff-cf83-4660-9429-92f393144c9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 559,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b7c92a5-a719-4146-977d-028ac62eba9c",
        "cursor": {
          "ref": "b04e82e2-b395-442d-916e-8d42a4846974",
          "length": 251,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "0fe9b6dd-cda4-496e-ac66-407efc5cb2a5"
        },
        "item": {
          "id": "3b7c92a5-a719-4146-977d-028ac62eba9c",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "8d36f2a6-1571-42c7-ac70-290e4cde232b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 547,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b969d243-80c4-4633-b43e-550939e9bc20",
        "cursor": {
          "ref": "381aea6f-0693-4b33-9dd0-353e93c4a86a",
          "length": 251,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "7ec36604-9f9a-4d0c-9405-a380d9ff5e0c"
        },
        "item": {
          "id": "b969d243-80c4-4633-b43e-550939e9bc20",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "14aaed80-8148-49cd-94af-273044d827a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 579,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5db3a8db-edeb-4acb-bd84-c5c16b1bee87",
        "cursor": {
          "ref": "ba366c78-553e-49ec-a600-16562763fb32",
          "length": 251,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "21e9eacf-4931-4409-9d59-dd7270447884"
        },
        "item": {
          "id": "5db3a8db-edeb-4acb-bd84-c5c16b1bee87",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "8d5e9909-0ba1-460c-a181-b072d5fca072",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1935c566-3caf-4208-a35a-d298841ec1d0",
        "cursor": {
          "ref": "552e1613-91a1-423e-8fa2-e9577014c741",
          "length": 251,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "14972328-3e7e-4502-a48e-44087b897fdf"
        },
        "item": {
          "id": "1935c566-3caf-4208-a35a-d298841ec1d0",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "09b2777e-f62d-417d-af4d-ec47bacb5fe2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 536,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "075a0417-6de4-4269-9bbe-a057cd5b6cef",
        "cursor": {
          "ref": "1a436505-15ef-4320-9666-08e8cd529033",
          "length": 251,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "dc31c023-2612-40ad-89f2-6b407cac4241"
        },
        "item": {
          "id": "075a0417-6de4-4269-9bbe-a057cd5b6cef",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "a0895906-a795-4947-a90b-f182f6969608",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 570,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edfd3c8a-183b-41e0-8e10-a18c07f55df0",
        "cursor": {
          "ref": "724ca67d-5f24-4687-b8f5-e46db6cafc73",
          "length": 251,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "de30c52b-7d4f-4eda-abc4-f9be6ea20ad7"
        },
        "item": {
          "id": "edfd3c8a-183b-41e0-8e10-a18c07f55df0",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "1251c4c7-5c2f-45cd-ad99-4a2a6c35e483",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae67c634-7444-4013-82db-0f2b215b7e08",
        "cursor": {
          "ref": "c31d59fb-3ab5-4987-a86b-6f531a3943a6",
          "length": 251,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "4f4d8d0d-83ef-4376-8d22-e6efaf5f912c"
        },
        "item": {
          "id": "ae67c634-7444-4013-82db-0f2b215b7e08",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "0ce40eb5-536b-4101-bb03-8bbae2787eef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 533,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "685f3c3a-09c9-4f6a-9b66-3a4ce73ab13d",
        "cursor": {
          "ref": "ffcdfe14-4eb6-490e-a8d7-7f823a040135",
          "length": 251,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "b3e31c45-2731-40e6-a385-f4f4920c85dd"
        },
        "item": {
          "id": "685f3c3a-09c9-4f6a-9b66-3a4ce73ab13d",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "a099cf5b-8513-45e8-a006-b804fac40634",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99d97953-cdb8-4333-b51d-d0969a8f8413",
        "cursor": {
          "ref": "c8f3ae02-64bb-4663-ba3b-380b3a2ce104",
          "length": 251,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "96c886dc-e3e7-48de-9739-e726c023efaf"
        },
        "item": {
          "id": "99d97953-cdb8-4333-b51d-d0969a8f8413",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "1aee969f-1bd1-4ac1-8d99-0eebe26f4137",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 563,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3aa44f7d-05ca-46a2-82df-2bde6d57b031",
        "cursor": {
          "ref": "c58bc32e-1bbe-46ba-91ff-588619456e07",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "63a55e87-5922-4cc9-a27e-063dd4b6f3f7"
        },
        "item": {
          "id": "3aa44f7d-05ca-46a2-82df-2bde6d57b031",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "5164b29e-59ec-4fb9-a1ea-eaf73a2ef83f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 426,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3aa44f7d-05ca-46a2-82df-2bde6d57b031",
        "cursor": {
          "ref": "c58bc32e-1bbe-46ba-91ff-588619456e07",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "63a55e87-5922-4cc9-a27e-063dd4b6f3f7"
        },
        "item": {
          "id": "3aa44f7d-05ca-46a2-82df-2bde6d57b031",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "5164b29e-59ec-4fb9-a1ea-eaf73a2ef83f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 426,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aae650b7-3ba2-4eff-9395-c31e3cd5379d",
        "cursor": {
          "ref": "c8c6a0dc-ba78-4974-bca3-20560763b342",
          "length": 251,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "2485124d-f618-490a-a8c8-c7e2a3b23dc1"
        },
        "item": {
          "id": "aae650b7-3ba2-4eff-9395-c31e3cd5379d",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "48f16ce4-5e8b-45c3-941a-9e4f48510203",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 687,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b37e3fc0-1557-4d0d-b148-770d37ba466b",
        "cursor": {
          "ref": "0e44f5e8-e7ec-409e-b574-ed8d14893827",
          "length": 251,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "49c72ee4-77f0-4d83-9108-28db9c0e15ea"
        },
        "item": {
          "id": "b37e3fc0-1557-4d0d-b148-770d37ba466b",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "694c7b6a-82b2-4f8f-a538-173d13b60565",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 740,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33b6f21e-47ef-466f-b44b-d23b762e59e1",
        "cursor": {
          "ref": "0f3ac1ce-e3f3-4bfe-9a3f-4421f330e246",
          "length": 251,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "e648dd0a-c786-4db0-86e1-58d6605c7c67"
        },
        "item": {
          "id": "33b6f21e-47ef-466f-b44b-d23b762e59e1",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "41540a31-2ea0-44a7-90ca-df8d4130de75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 748,
          "responseSize": 644
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43482115-4f79-45e7-b183-69b47ad51126",
        "cursor": {
          "ref": "792189b1-c35f-468d-8986-bad231f4b7cf",
          "length": 251,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "43ebcab9-a89e-4db4-a2b9-01d2f3666c92"
        },
        "item": {
          "id": "43482115-4f79-45e7-b183-69b47ad51126",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "ea29ecf0-16f5-4099-977e-1e9b90216b13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 730,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b26d4e57-e894-42c1-8ae3-add62ef05197",
        "cursor": {
          "ref": "1da57e6b-8632-4dd5-9665-82a01c53feb1",
          "length": 251,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "d087adda-36ad-472b-a8fd-c46347853ee3"
        },
        "item": {
          "id": "b26d4e57-e894-42c1-8ae3-add62ef05197",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "9b3204ed-42e4-4a09-8118-a5deb36e1627",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 603,
          "responseSize": 643
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef296060-71d8-411f-b43b-cf986146b09f",
        "cursor": {
          "ref": "342243f8-4c18-493b-88e6-db7846e37863",
          "length": 251,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "8755f5b6-1200-41c6-ada6-c5f0c593f069"
        },
        "item": {
          "id": "ef296060-71d8-411f-b43b-cf986146b09f",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "1479202f-06b9-4a6d-844c-b5182e04965e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 404,
          "responseSize": 1311
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27bdb16b-066e-430b-bfa2-e35998261cd7",
        "cursor": {
          "ref": "c78b95bb-6fc0-42c8-a239-beac5f3d2f96",
          "length": 251,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "cedbc94a-ebee-415a-825d-95742f90be4f"
        },
        "item": {
          "id": "27bdb16b-066e-430b-bfa2-e35998261cd7",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "c8c29a0a-7a44-4c99-a105-5ea2688cad44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 420,
          "responseSize": 1469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cea5248-fe23-41a9-a11b-867d86a9ce70",
        "cursor": {
          "ref": "d36e39f2-8704-40b9-b769-066e714ce30f",
          "length": 251,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "3a4bcd8a-48bf-4be0-aeb8-9266107b834f"
        },
        "item": {
          "id": "5cea5248-fe23-41a9-a11b-867d86a9ce70",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "4ea0e91a-37c6-40ea-a8eb-ba4ff9473869",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 392,
          "responseSize": 1468
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "083cb72c-d721-4c5d-8484-aa58d30795b5",
        "cursor": {
          "ref": "d944e0fa-54a0-494c-ba30-c6f08cdbe2f8",
          "length": 251,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "aadd8716-dd0a-4853-855d-f652d8c7955b"
        },
        "item": {
          "id": "083cb72c-d721-4c5d-8484-aa58d30795b5",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "d38c4f67-7d85-47df-99c5-633da59191a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 402,
          "responseSize": 1469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa5f7829-1513-48ba-8784-6abe2578bfab",
        "cursor": {
          "ref": "18d10ece-fefa-41bf-8cee-cd746da06ccb",
          "length": 251,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "23351165-f423-4e19-9c47-d11d36dd64b7"
        },
        "item": {
          "id": "aa5f7829-1513-48ba-8784-6abe2578bfab",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "8c188ea5-dd34-4098-8089-133f374e9774",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 393,
          "responseSize": 1367
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1eb1ee6-9138-45ca-b302-7814e0452655",
        "cursor": {
          "ref": "ec0cea3d-aebd-4506-b603-c8e646087609",
          "length": 251,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "59dfd832-d4c0-466c-a534-d0562f503038"
        },
        "item": {
          "id": "f1eb1ee6-9138-45ca-b302-7814e0452655",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "72347e30-4605-4141-a91d-7f4f7ec02493",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 414,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ee7d214-25c2-4df6-b61d-ab79a3ce3f46",
        "cursor": {
          "ref": "bcaac82c-5623-4d8f-9a11-1a65b60178b7",
          "length": 251,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "8d72c5d8-f1e5-47d8-93ac-c374d467196d"
        },
        "item": {
          "id": "2ee7d214-25c2-4df6-b61d-ab79a3ce3f46",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "88bbf449-1f07-4e1c-8477-dbec135d2dcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 409,
          "responseSize": 1532
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1472a570-4f9b-4c19-b34b-c06b5dbe4f79",
        "cursor": {
          "ref": "1d56df9f-4184-4ebd-a3eb-a7867685b758",
          "length": 251,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "4205a9f2-f22f-4ec8-8bac-ef6c78a30bdf"
        },
        "item": {
          "id": "1472a570-4f9b-4c19-b34b-c06b5dbe4f79",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "1c275300-7645-4850-b6d6-1d46db04d52a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 430,
          "responseSize": 1522
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dfcffec-01c3-4a1e-9d37-e8fb29cd77f3",
        "cursor": {
          "ref": "ee5f832d-d13c-4e4d-ad26-a12de97c7f1d",
          "length": 251,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "2750e01d-4e50-4779-8eca-056469414082"
        },
        "item": {
          "id": "8dfcffec-01c3-4a1e-9d37-e8fb29cd77f3",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "56d54284-1311-4681-9242-1821828ea756",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 415,
          "responseSize": 1521
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5badf6f0-edbb-435a-94eb-ab91eddf1211",
        "cursor": {
          "ref": "3b2ae85b-b5d1-4292-941a-bb82ab79db83",
          "length": 251,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "fe320c36-6c82-4a7a-8985-94c50dfb727a"
        },
        "item": {
          "id": "5badf6f0-edbb-435a-94eb-ab91eddf1211",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "d56c1d8c-c971-4309-bcaa-c8d764009893",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 413,
          "responseSize": 1522
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ab88154-f1e7-4e6d-b4c0-2c14b25e761a",
        "cursor": {
          "ref": "e8d71395-4bb6-45dd-a5c6-c6ca8fc136e0",
          "length": 251,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "734e04fb-be89-44cf-ac3b-f07cdaf4c063"
        },
        "item": {
          "id": "8ab88154-f1e7-4e6d-b4c0-2c14b25e761a",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "5507140b-3f42-410c-b910-0e36132ca627",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 400,
          "responseSize": 1420
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c5574f8-7b9b-47c7-bcc0-b7ef19ea29c3",
        "cursor": {
          "ref": "32ff96f6-cade-4e4e-abd4-43e975b6f201",
          "length": 251,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "12f1ccc5-6f12-4a7e-a38c-40c511115827"
        },
        "item": {
          "id": "2c5574f8-7b9b-47c7-bcc0-b7ef19ea29c3",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "149d9761-7875-42ef-9714-bb9129953c8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 412,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f2914fa-249c-4d9a-a791-4e00c3b0848c",
        "cursor": {
          "ref": "d5c2e3bc-c409-424b-92f4-853a8a71e63e",
          "length": 251,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "5f334dcb-f7a9-469b-b7ce-f1c43a99180b"
        },
        "item": {
          "id": "5f2914fa-249c-4d9a-a791-4e00c3b0848c",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "044e5c98-edad-46ba-8858-bc120ebdc550",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 434,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a62cd233-a71d-4327-bef9-4e46999bfb21",
        "cursor": {
          "ref": "0d998212-e85c-468b-8987-892764593416",
          "length": 251,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "8bf6bc8d-a58d-4d41-868c-7bb7275fdbc5"
        },
        "item": {
          "id": "a62cd233-a71d-4327-bef9-4e46999bfb21",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "aaa84961-fc0c-4cdf-ae27-b6fa17060007",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 448,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b68fa8a4-897e-4f7a-88c5-8f17ed562a8f",
        "cursor": {
          "ref": "5fa4eac7-8fa4-46cd-b978-647a2cb1271a",
          "length": 251,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "1c24fb6f-317c-4958-b2f1-f31b95ba9fe4"
        },
        "item": {
          "id": "b68fa8a4-897e-4f7a-88c5-8f17ed562a8f",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "1763464c-26e0-437e-a1a6-ed93330d5c42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 410,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae49b7a7-a03f-45ab-a88f-ba7f9d3f7957",
        "cursor": {
          "ref": "311441ec-fd1f-4043-9785-82e61a75b720",
          "length": 251,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "13fe5aa5-7721-4a89-9ab5-2c193e576189"
        },
        "item": {
          "id": "ae49b7a7-a03f-45ab-a88f-ba7f9d3f7957",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "d7f0e958-3e51-46d2-8539-e6e29662b177",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 403,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5be82ff-a3e9-4b0b-809c-1b654f820c4f",
        "cursor": {
          "ref": "226c0dcf-9336-46c5-826e-d00f605570e3",
          "length": 251,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "216dbe34-d180-4946-a50f-1ccbb45d83fb"
        },
        "item": {
          "id": "e5be82ff-a3e9-4b0b-809c-1b654f820c4f",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "6b270a36-0dda-45c0-bfc6-de5c3701217d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 398,
          "responseSize": 1360
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d60f6d6f-a4eb-4a5d-9ab1-ad0662ed1776",
        "cursor": {
          "ref": "62c74df7-fae7-49f3-a90b-83e342116a06",
          "length": 251,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "317e7d77-0f66-45ab-b286-c7c6198b8d20"
        },
        "item": {
          "id": "d60f6d6f-a4eb-4a5d-9ab1-ad0662ed1776",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "1372daf4-aa21-45d4-b906-fa8610aac457",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 407,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe73d15f-b18a-4966-b7e2-e4645b55e46b",
        "cursor": {
          "ref": "20134906-8c9a-4157-8d7b-40faf4112c2e",
          "length": 251,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "929a11ab-92ff-49b4-8cba-86386ca5c7aa"
        },
        "item": {
          "id": "fe73d15f-b18a-4966-b7e2-e4645b55e46b",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "648cadf0-1c46-425a-9128-2f4374943199",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 419,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c06796c-c8ae-4555-85e8-d45b12cd119d",
        "cursor": {
          "ref": "6cf9a5f4-fdc7-4127-92da-0d4c13a852b3",
          "length": 251,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "3818bcc0-b7a6-4468-a1d7-a795f419808e"
        },
        "item": {
          "id": "8c06796c-c8ae-4555-85e8-d45b12cd119d",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "a1277cc4-3341-4142-8ba0-83d23bae6c34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 407,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8de1cd16-9b08-4d55-8199-478eed7ff13f",
        "cursor": {
          "ref": "03057971-5afa-4d71-ad6a-7662f4f542be",
          "length": 251,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "4ddc4a4d-bb48-4ff1-bf9a-1e738c5741ab"
        },
        "item": {
          "id": "8de1cd16-9b08-4d55-8199-478eed7ff13f",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "a40168ba-57ac-4143-8020-ab0e431f0c77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 398,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28ea1dad-9bda-43b6-9da3-cf690e8c84f3",
        "cursor": {
          "ref": "38bc50c5-f25a-4196-8d51-f18baf474481",
          "length": 251,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "500d0925-ae4d-435d-81a8-b356b9934692"
        },
        "item": {
          "id": "28ea1dad-9bda-43b6-9da3-cf690e8c84f3",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "183708f5-0816-40dc-bd90-90bc73081144",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 406,
          "responseSize": 1372
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39d442c3-74a9-47d3-a4cb-32315d891698",
        "cursor": {
          "ref": "455bfcd6-af7d-4442-be78-23cc32790c2f",
          "length": 251,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "e8d8f955-0204-4f8e-b6f2-a99b2c58ccee"
        },
        "item": {
          "id": "39d442c3-74a9-47d3-a4cb-32315d891698",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "533f7f11-630b-4d82-a3cd-a432373cc684",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 400,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f76854eb-b237-45f1-8e79-a76160e7b232",
        "cursor": {
          "ref": "5a1915aa-261b-4125-a4ba-275b773b8200",
          "length": 251,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "0afe94c5-e623-475b-b101-65701d5fbc90"
        },
        "item": {
          "id": "f76854eb-b237-45f1-8e79-a76160e7b232",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "1d8bd299-2593-45e7-b79a-947c856901a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 434,
          "responseSize": 1364
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e105e0c-c54f-43dd-aaad-a6953491b640",
        "cursor": {
          "ref": "1301083a-2aeb-4b8d-8ee2-53d1b539ab8b",
          "length": 251,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "3bae2b77-5200-4c73-925c-c4a38e586692"
        },
        "item": {
          "id": "8e105e0c-c54f-43dd-aaad-a6953491b640",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "700e81e7-d175-4534-b983-54810590fd0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 763,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe5e9342-92b6-4676-9e49-bbed47687e6c",
        "cursor": {
          "ref": "bd3787db-9609-41f3-9c85-0d586213697e",
          "length": 251,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "8c96a2f8-a854-4a7e-87df-cab6ad9e4439"
        },
        "item": {
          "id": "fe5e9342-92b6-4676-9e49-bbed47687e6c",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "a3415bab-bcd8-4d21-83df-9c6b2e1ddbea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 630,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e863307-ba57-4c16-9c91-d3caa0b39220",
        "cursor": {
          "ref": "10a59341-2755-494b-8f6b-9efc84f92a89",
          "length": 251,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "8ee92d3f-8cf0-4d40-b6d3-f0e997d13c2e"
        },
        "item": {
          "id": "6e863307-ba57-4c16-9c91-d3caa0b39220",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "c5ba106e-bca7-42ad-b4e5-086e7bc2228c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 872,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e9bb5be-5b02-4de0-a576-d9dadc1b65a7",
        "cursor": {
          "ref": "beb10243-6b33-44f5-8955-843d7037a3ea",
          "length": 251,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "35c87878-54da-438f-8067-4c404d61cd81"
        },
        "item": {
          "id": "2e9bb5be-5b02-4de0-a576-d9dadc1b65a7",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "46cf8bb4-5fd8-476d-b483-289677f35dec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 947,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0176eb09-0342-44db-b97f-204307e7016a",
        "cursor": {
          "ref": "804cf660-0233-4264-b894-78aa16122f65",
          "length": 251,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "6fdd4377-b14a-4735-8301-55ad4bf6a91d"
        },
        "item": {
          "id": "0176eb09-0342-44db-b97f-204307e7016a",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "89465a23-fde9-4bce-bc31-c2c436650b90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1342,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13c56607-4ba9-4b44-bff4-a8e96dd1142d",
        "cursor": {
          "ref": "46d4173c-cb0b-461b-81d6-3a913e25059f",
          "length": 251,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "d12f809a-1688-48be-b98e-bffc05921646"
        },
        "item": {
          "id": "13c56607-4ba9-4b44-bff4-a8e96dd1142d",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "3d03e3e8-806c-4a34-b988-6cf03d754105",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1172,
          "responseSize": 1801
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adf60330-028f-48a5-9cad-c3bed9c62f26",
        "cursor": {
          "ref": "3f8c9090-6816-42b3-a36c-b245cd11a676",
          "length": 251,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "e9db385b-d3e8-4e03-8d79-7d7da711cb06"
        },
        "item": {
          "id": "adf60330-028f-48a5-9cad-c3bed9c62f26",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "a1664113-0aec-4b1e-8503-9a30a845b0b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 672,
          "responseSize": 1787
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93c07bfe-53eb-4378-ba90-5d022946cf1b",
        "cursor": {
          "ref": "0210e7f3-47b5-44d1-ba71-e5a61edd515f",
          "length": 251,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "e88b1392-6123-4e55-8982-0a30e3cf4aa3"
        },
        "item": {
          "id": "93c07bfe-53eb-4378-ba90-5d022946cf1b",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "47cf3174-fbf1-4a4a-a515-3d2354ba089f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 1785
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92939135-0e2a-4ce1-b061-75a7400dac80",
        "cursor": {
          "ref": "8fb0aa04-e1f0-457e-b1fc-13f7b8138ac7",
          "length": 251,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "f9923b3f-a300-4390-8d42-531588865059"
        },
        "item": {
          "id": "92939135-0e2a-4ce1-b061-75a7400dac80",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "339ea9bd-f6f8-46b1-a936-a6c6a74e6e2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 611,
          "responseSize": 1786
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c204e9b-68ff-4d90-ab60-8d9aa68f3691",
        "cursor": {
          "ref": "0489535e-1013-42d0-b287-af2f00babe71",
          "length": 251,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "2efecd01-eb1d-4d65-bd64-bd6f51f5b088"
        },
        "item": {
          "id": "7c204e9b-68ff-4d90-ab60-8d9aa68f3691",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "3f4f4776-9ec6-41ca-a49f-46380c4c0443",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 453,
          "responseSize": 1817
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c3dedbc-7dff-4a92-8b4e-38bfb82fa034",
        "cursor": {
          "ref": "2cd59ebc-49f5-42d0-a567-765ba62cd34b",
          "length": 251,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "f3e1f251-0d2a-4937-a921-e5cfb5ab2e90"
        },
        "item": {
          "id": "2c3dedbc-7dff-4a92-8b4e-38bfb82fa034",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "68b005f5-4f0e-4ebc-9186-6ba2aa1bb404",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 316,
          "responseSize": 2160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df220a5e-8377-46a7-a91a-9719f6f57b9d",
        "cursor": {
          "ref": "e560e059-a60e-43d4-98b4-48b65100024f",
          "length": 251,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "19b51af7-8548-47aa-8441-117a2fc8046e"
        },
        "item": {
          "id": "df220a5e-8377-46a7-a91a-9719f6f57b9d",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "bee32c91-a8e5-410a-aa2c-35f420a66147",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 326,
          "responseSize": 2146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b11f50bb-7afb-4632-bea9-a82599660985",
        "cursor": {
          "ref": "5224a20f-882b-4b1f-a887-868ecc8f6ddd",
          "length": 251,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "6c58a800-89cf-4162-84cd-34cf9ca4e514"
        },
        "item": {
          "id": "b11f50bb-7afb-4632-bea9-a82599660985",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "7f52e0a1-f294-480c-b292-fd60d61bb48f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 330,
          "responseSize": 2144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bc5b032-8ec5-40aa-b51c-37464d2b865d",
        "cursor": {
          "ref": "ded8bbf9-0b07-4ed8-ae5e-3e3ed954d1c3",
          "length": 251,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "189bdfdc-f459-4896-b19d-cb3187b4ee94"
        },
        "item": {
          "id": "0bc5b032-8ec5-40aa-b51c-37464d2b865d",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "41c6c4f7-4c85-4b39-b5fd-83db405df3bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 434,
          "responseSize": 2145
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bac4fbb2-3ab9-4f99-88fd-884536fc1d16",
        "cursor": {
          "ref": "5c371f52-1487-4a57-af8a-25291747f125",
          "length": 251,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "aa90f57a-e2b4-4979-b659-2523ce9b37a9"
        },
        "item": {
          "id": "bac4fbb2-3ab9-4f99-88fd-884536fc1d16",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "f99bb225-040b-4151-b982-75a37c8a1bc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 324,
          "responseSize": 2166
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "812c2f89-a453-40de-83c5-b77cc0bf1f28",
        "cursor": {
          "ref": "67e919e3-99a9-405b-b952-d1bf6a349f7d",
          "length": 251,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "680fff87-fed0-471d-a5f8-c2a00533cc6d"
        },
        "item": {
          "id": "812c2f89-a453-40de-83c5-b77cc0bf1f28",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "b6c36656-c8dc-4b38-9636-b60a4a41e803",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 319,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb7266fb-2228-4888-946c-ea81b8541e3d",
        "cursor": {
          "ref": "f30631d6-33e7-40d0-8fb4-e429c538c209",
          "length": 251,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "17652536-57db-45ac-a95f-5258c8c3b44d"
        },
        "item": {
          "id": "eb7266fb-2228-4888-946c-ea81b8541e3d",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "adf1e050-42a5-439b-84ec-e6e380741b98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 346,
          "responseSize": 1394
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdabf699-810a-4b95-93b1-0be5a81a8fa2",
        "cursor": {
          "ref": "dea27360-3272-4866-8a7c-7472985de178",
          "length": 251,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "e0e95866-1664-4cb0-acc8-559a0f6f7430"
        },
        "item": {
          "id": "cdabf699-810a-4b95-93b1-0be5a81a8fa2",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "4ab15a81-f4b9-4d2a-a332-e298492f5447",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 319,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d3ed39a-39a1-4d43-a534-73f1f07d4850",
        "cursor": {
          "ref": "df0dd129-86a7-4a33-b861-e0a52269f916",
          "length": 251,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "6b6a49d5-764c-4c3f-b6da-1d7bf9032d31"
        },
        "item": {
          "id": "0d3ed39a-39a1-4d43-a534-73f1f07d4850",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "677cef98-5aca-4bf2-b702-6603d9f5d0ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 317,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "757ebd1b-be9f-4eaa-96ba-a101167d982d",
        "cursor": {
          "ref": "f41c3907-74d9-47e6-93a3-0cab627034da",
          "length": 251,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "6b30df44-9b4f-464b-a837-35913539ff3f"
        },
        "item": {
          "id": "757ebd1b-be9f-4eaa-96ba-a101167d982d",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "c255f491-9a0a-4c8c-94ac-caadb6d99c5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 314,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4f2283e-76c0-41c3-9e2c-9501d86d0f4e",
        "cursor": {
          "ref": "7f6ae765-0d7a-490f-a536-f678522d6343",
          "length": 251,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "a119ff46-4bca-42a2-b764-eef7136a41eb"
        },
        "item": {
          "id": "c4f2283e-76c0-41c3-9e2c-9501d86d0f4e",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "267611a3-c44f-404f-badb-b66d43eb05cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 391,
          "responseSize": 1400
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8157b208-a555-4a05-9c3c-94dcab3a3dc4",
        "cursor": {
          "ref": "89762d7b-74fe-4c52-8eb6-86878cd1ab6a",
          "length": 251,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "1795cfe2-f27e-4180-a549-72da566c9a95"
        },
        "item": {
          "id": "8157b208-a555-4a05-9c3c-94dcab3a3dc4",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "a9b9c7f8-e349-4182-85c8-4d5966ad53f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 348,
          "responseSize": 1430
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25458b4a-d312-41cf-9db7-65fd84f1bcf1",
        "cursor": {
          "ref": "c21ce93b-d12a-4c36-8026-699fc4658516",
          "length": 251,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "5fc7330b-e67c-43d5-9d2f-4d978bafed99"
        },
        "item": {
          "id": "25458b4a-d312-41cf-9db7-65fd84f1bcf1",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "4322e055-1019-4606-b27e-8a433254aaf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 333,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a3a5f47-9830-4d2a-a958-e180db11ba84",
        "cursor": {
          "ref": "de65ad80-0efb-4508-8199-c3821e4f96a1",
          "length": 251,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "e476c525-f017-4ab0-a6c4-041b82af6585"
        },
        "item": {
          "id": "0a3a5f47-9830-4d2a-a958-e180db11ba84",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "5aff1565-e1d7-4210-afb5-7ce731690a0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 309,
          "responseSize": 1874
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52585c80-4268-42ee-8da8-97d7cdf7bbc0",
        "cursor": {
          "ref": "019c5d47-575a-4798-aea7-a93a52df7639",
          "length": 251,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "3b2224b9-d520-4b21-882a-bb20da599f57"
        },
        "item": {
          "id": "52585c80-4268-42ee-8da8-97d7cdf7bbc0",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "3d29d4f2-c183-478a-bb19-c4d756bd56ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 318,
          "responseSize": 1673
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0d20ef6-9795-4401-8ca7-4360bca29828",
        "cursor": {
          "ref": "7bc79307-e025-404f-ac84-3d3c89767b56",
          "length": 251,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "4631edd9-e19b-4a83-975d-485005f1d703"
        },
        "item": {
          "id": "d0d20ef6-9795-4401-8ca7-4360bca29828",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "d2561e8d-c0aa-45b7-8b5a-685155722593",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 318,
          "responseSize": 1671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f5cc446-a7be-4777-9a54-9675417f5b51",
        "cursor": {
          "ref": "215ce4a3-6724-4de8-8feb-5faa5e75eff3",
          "length": 251,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "68642abd-81e4-4c70-bba3-072456f1eb7b"
        },
        "item": {
          "id": "8f5cc446-a7be-4777-9a54-9675417f5b51",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "ab312928-e8ab-4a84-84bf-da150a387c78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 327,
          "responseSize": 1672
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "188f3c28-74ca-4735-a964-11196173b4e2",
        "cursor": {
          "ref": "421de952-8444-478c-844f-737ae8156090",
          "length": 251,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "656b48b6-1bd6-45c5-9e95-da15159cda08"
        },
        "item": {
          "id": "188f3c28-74ca-4735-a964-11196173b4e2",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "29e5d71c-d39c-4ad7-9978-01e53895484e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 337,
          "responseSize": 1685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a305de9-1b35-4fcc-bcd8-bc068de3adb7",
        "cursor": {
          "ref": "2ce81d4b-4ee3-47d8-8bf1-c5232b989026",
          "length": 251,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "e2a945c2-4b1c-4592-90ff-d6b535c09e98"
        },
        "item": {
          "id": "1a305de9-1b35-4fcc-bcd8-bc068de3adb7",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "91acfba8-b2e1-49e5-90e0-624ef16075a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 352,
          "responseSize": 2209
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebb2a7c4-5cd4-4814-acb1-066f58de838c",
        "cursor": {
          "ref": "c4f474bc-62ff-42c3-92fa-62f740518712",
          "length": 251,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "4d152390-8d3b-4042-b548-3680985b865a"
        },
        "item": {
          "id": "ebb2a7c4-5cd4-4814-acb1-066f58de838c",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "684cf5ce-9095-4986-a75b-555694125ec6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 341,
          "responseSize": 2195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "591aeb22-571a-4f67-9bed-a335640dcf80",
        "cursor": {
          "ref": "5f7201ca-d235-4655-9057-b257bdf007d6",
          "length": 251,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "077498aa-e66f-4812-a9ad-9e53fab3c46b"
        },
        "item": {
          "id": "591aeb22-571a-4f67-9bed-a335640dcf80",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "d3ab6e7b-4930-4d33-b43f-fad8a11b6a8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 333,
          "responseSize": 2193
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f01955d3-ef49-49d2-a209-65826cf09e63",
        "cursor": {
          "ref": "c1099633-7b93-457f-99da-5f9ed887c84e",
          "length": 251,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "c891c668-5997-4d36-984f-704757de238a"
        },
        "item": {
          "id": "f01955d3-ef49-49d2-a209-65826cf09e63",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "d7617247-eae7-4a51-aafd-6cce30ff8e7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 325,
          "responseSize": 2194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c5b6d6d-2e23-43b9-a2e8-37ed97859feb",
        "cursor": {
          "ref": "46e51fa1-e2da-4d73-b4de-910c5ffcf6de",
          "length": 251,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "54072881-d247-4e07-bc87-8909c3a3a256"
        },
        "item": {
          "id": "7c5b6d6d-2e23-43b9-a2e8-37ed97859feb",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "fa9fd5cd-7333-4144-88f3-5d57ae196ea0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 352,
          "responseSize": 2215
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc05cbe1-ad03-49fb-943a-051e1f2aa4df",
        "cursor": {
          "ref": "73e25092-8172-468b-8735-0868b943a2ad",
          "length": 251,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "5fa511a1-6287-4f9c-8ab0-aff2b98b999a"
        },
        "item": {
          "id": "bc05cbe1-ad03-49fb-943a-051e1f2aa4df",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "1a2841bb-5765-4ad4-897c-25d42018e612",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 330,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a3be52e-39a2-4476-8a80-391fb7ed8040",
        "cursor": {
          "ref": "dc3f0ed1-39ff-4d4a-bb46-fec0645382df",
          "length": 251,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "fdd0f1c4-2150-414b-9d08-fbc77a475d25"
        },
        "item": {
          "id": "4a3be52e-39a2-4476-8a80-391fb7ed8040",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "9c189756-cb1d-46ec-b2cf-1124f3e864f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 334,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bf50457-9ab1-417b-a216-09afc2975c68",
        "cursor": {
          "ref": "90db320c-c006-4b3e-a4a0-c97b308fed16",
          "length": 251,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "900e8105-cd57-4b94-a946-9211ae506357"
        },
        "item": {
          "id": "7bf50457-9ab1-417b-a216-09afc2975c68",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "eae0dd11-041b-4a01-9a9a-5b5eb3c1feff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 374,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f2ebb90-f757-48b6-92c2-d731ef4ef4a6",
        "cursor": {
          "ref": "ea47a38b-2678-4da6-a559-6fb7a9107b82",
          "length": 251,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "70e69d5a-b41f-4f47-a60c-d5bf6d8717da"
        },
        "item": {
          "id": "5f2ebb90-f757-48b6-92c2-d731ef4ef4a6",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "213cea1c-090a-4433-bd82-4427f95fdc66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 330,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb340361-9152-4181-84e1-8682310d25fc",
        "cursor": {
          "ref": "f0f30d17-952a-4e45-9bc4-85d0dc8d010f",
          "length": 251,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "ba3924d8-ffdb-4f92-aa9a-b093c7ef9f25"
        },
        "item": {
          "id": "bb340361-9152-4181-84e1-8682310d25fc",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "bd0f7cf5-5df5-434a-a620-d8b5927395cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 359,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1de9cd49-0c41-456f-a740-d851dffaf757",
        "cursor": {
          "ref": "09803e9f-e9ee-4fb2-b477-bbf88484afa0",
          "length": 251,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "ca2344af-6773-4e74-810b-84cd5ff3561f"
        },
        "item": {
          "id": "1de9cd49-0c41-456f-a740-d851dffaf757",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "344a56e2-df60-449e-aa88-7d148e94af19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 326,
          "responseSize": 966
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c342fb6-2c3f-4abc-9047-b63a000d0477",
        "cursor": {
          "ref": "2901d81e-b099-4f09-94e0-6892fac05445",
          "length": 251,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "1d449db7-af48-4467-b664-8bfcbaf03a5a"
        },
        "item": {
          "id": "6c342fb6-2c3f-4abc-9047-b63a000d0477",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "0909a61f-c6ed-48eb-80cc-8e11784ef1cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 327,
          "responseSize": 1307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d230ac20-9610-43fd-8309-e7f832949be3",
        "cursor": {
          "ref": "6188a8b0-18ff-4540-b962-860eaf0606fe",
          "length": 251,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "5190b994-47f3-49c7-a405-642354fd2bbb"
        },
        "item": {
          "id": "d230ac20-9610-43fd-8309-e7f832949be3",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "e4219f25-3351-4138-ac8a-f42083996dad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 328,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1273e454-930e-44b6-95db-dfd44df01e79",
        "cursor": {
          "ref": "164792e9-2bac-46a0-904b-6b47c904be72",
          "length": 251,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "411d80df-d6a6-474e-aaa6-ffba1d2002bd"
        },
        "item": {
          "id": "1273e454-930e-44b6-95db-dfd44df01e79",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "e0dae767-6636-4ea7-a06e-e23d9b925a65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 348,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9d4a835-fc0a-490d-9802-965a389ac1bb",
        "cursor": {
          "ref": "cfa396e4-13a7-4d93-8a85-e7f96865ce75",
          "length": 251,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "ed198aa9-617c-4c14-a1f3-8056791b6bb0"
        },
        "item": {
          "id": "e9d4a835-fc0a-490d-9802-965a389ac1bb",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "0bcefdc7-d7a9-41ca-b774-feb1ecb5aecf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 322,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c63af3c-667b-46e3-8dc2-192313710512",
        "cursor": {
          "ref": "637ba323-0f19-4934-af45-b6a7de22bfd6",
          "length": 251,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "1cdb2386-6c19-452f-bccf-a6b39ab79504"
        },
        "item": {
          "id": "3c63af3c-667b-46e3-8dc2-192313710512",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "a2fcb8c3-d5f0-4f79-bebb-c69134889701",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 324,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3cdf099-c3f9-4a4e-9fa1-f4fc657559af",
        "cursor": {
          "ref": "61bff1a2-19cb-4ef1-b70c-b4f1bbbe1dc4",
          "length": 251,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "6f218619-3bf7-4726-988f-c1eac5595249"
        },
        "item": {
          "id": "e3cdf099-c3f9-4a4e-9fa1-f4fc657559af",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "ce9bf42d-8653-4fbc-9381-7ec02bebc8d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 328,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e691fb32-3ab5-45b0-b72c-73fcc7a579fd",
        "cursor": {
          "ref": "29ae4b77-af73-47b1-b17f-0a35aea22dc8",
          "length": 251,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "841f6f70-af93-4f61-a885-35616d33c88b"
        },
        "item": {
          "id": "e691fb32-3ab5-45b0-b72c-73fcc7a579fd",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "c7b91dc1-2890-4bd1-8664-5efb84074dd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 346,
          "responseSize": 1344
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "837ea030-700a-46aa-b795-a9ed6edc6674",
        "cursor": {
          "ref": "71783cbb-c2b8-4d5e-a30c-6dcf6ce1777c",
          "length": 251,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "4f90071e-1ff4-4a1e-9786-b299c9a041c5"
        },
        "item": {
          "id": "837ea030-700a-46aa-b795-a9ed6edc6674",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "bb376998-0459-428b-a3bd-f0cf42be1c51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 321,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34151353-c598-4da4-ad9d-a2b1ebe7fce5",
        "cursor": {
          "ref": "ddd5625c-652d-4d95-be36-83c90fe0ff5b",
          "length": 251,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "4582adc6-d4e8-49ac-ad5a-02aee8f14c7b"
        },
        "item": {
          "id": "34151353-c598-4da4-ad9d-a2b1ebe7fce5",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "2a7e3e98-8f6f-4dab-a0d0-67b42429bf98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 369,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "115a9f84-395c-4a38-a514-f6c635a1106b",
        "cursor": {
          "ref": "f717a89b-5530-46ad-b739-495b9c6c0ced",
          "length": 251,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "13feb8cf-6190-4263-a8e1-b0a3af35b274"
        },
        "item": {
          "id": "115a9f84-395c-4a38-a514-f6c635a1106b",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "58a4247f-cb40-400e-848f-cd65376bf7f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 328,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c58decf-0ad2-4f34-b6ec-83373f419be6",
        "cursor": {
          "ref": "3b87a8e6-4df7-4217-a545-9207ceeee346",
          "length": 251,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "5d2bb804-01de-460f-9e97-b604486c9ddc"
        },
        "item": {
          "id": "2c58decf-0ad2-4f34-b6ec-83373f419be6",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "d764aa12-4c06-46ff-a33e-712415038e81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 328,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e52d815f-4515-4e71-ad28-8d8034c9c6e1",
        "cursor": {
          "ref": "549a5939-b975-4de1-9080-f9d9870eefda",
          "length": 251,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "2574b677-7d07-470a-a6dc-11166d740d34"
        },
        "item": {
          "id": "e52d815f-4515-4e71-ad28-8d8034c9c6e1",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "6da30747-72c0-4531-b4ee-6ebc976a7572",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 356,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3088e598-d550-42df-9b2a-207aacb247e6",
        "cursor": {
          "ref": "d71a8f7b-5d5d-4b70-a60d-d7a88bcbe034",
          "length": 251,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "ad2bb033-9f8b-4393-8c5c-c4202d91a69e"
        },
        "item": {
          "id": "3088e598-d550-42df-9b2a-207aacb247e6",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "104e395b-7340-42b0-83b0-6a87dfcfa440",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 636,
          "responseSize": 1298
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ba567c9-ed54-4123-ba36-1ceed58fffe6",
        "cursor": {
          "ref": "3be25d05-8f00-413a-b8fe-83f1145dad00",
          "length": 251,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "31ce208e-2615-4372-b4bb-24fb694626b6"
        },
        "item": {
          "id": "1ba567c9-ed54-4123-ba36-1ceed58fffe6",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "140a4c4c-8e9c-44be-acdb-40a5eca6db7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 522,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "924a5d8a-b34e-420e-89cf-d2feaf012c12",
        "cursor": {
          "ref": "1a8532e9-2a6c-41a8-a29f-595df0df1ce7",
          "length": 251,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "6f3e0dd3-f356-4f53-8c2f-33d6a22bcf2b"
        },
        "item": {
          "id": "924a5d8a-b34e-420e-89cf-d2feaf012c12",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "9ea375ed-945a-4cbe-9efa-defbcb22c855",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 702,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fb7581b-b757-422f-bbdc-4d9225b22706",
        "cursor": {
          "ref": "0d07c885-10ee-4c33-bb92-e24d1ea499f7",
          "length": 251,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "56428820-1f25-4cda-83ce-35c680c3ca73"
        },
        "item": {
          "id": "1fb7581b-b757-422f-bbdc-4d9225b22706",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "53c53ab6-a08d-46cf-96b2-c587be9dd792",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 706,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed1393bf-d2f6-42f5-8122-59da87a6de8e",
        "cursor": {
          "ref": "d958ed60-5679-491a-b3c7-6bac637085db",
          "length": 251,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "fd52f1f6-2920-4eaa-822b-905d86e957f3"
        },
        "item": {
          "id": "ed1393bf-d2f6-42f5-8122-59da87a6de8e",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "7ba0afd1-eeb3-4e27-90f9-35cae419691e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 481,
          "responseSize": 1304
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95b8d939-4d51-41f4-8bd2-e802e3d4e897",
        "cursor": {
          "ref": "2e267403-821c-43cd-89ac-2e89fc6ac2f4",
          "length": 251,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "7f933ac5-f9ff-44fc-aae3-fe7af51079be"
        },
        "item": {
          "id": "95b8d939-4d51-41f4-8bd2-e802e3d4e897",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "304266ee-0544-4b14-936c-0ef56b1a096b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 460,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d844b2f-730c-4cac-bc0d-af7ae0af79b0",
        "cursor": {
          "ref": "3bbdcf2f-a770-432a-b135-ec593a37006b",
          "length": 251,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "1187b423-9722-415b-97a4-824f39a2de30"
        },
        "item": {
          "id": "0d844b2f-730c-4cac-bc0d-af7ae0af79b0",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "6a3e9034-3977-4433-ad8c-301679a82557",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 505,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd510094-b374-4534-b9d3-2b7a679217c9",
        "cursor": {
          "ref": "c3bbc6a1-ad2a-4f05-a411-1b9a4f8d2cbe",
          "length": 251,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "0cff5503-3167-4ed0-82f7-144ac9557341"
        },
        "item": {
          "id": "dd510094-b374-4534-b9d3-2b7a679217c9",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "a07cea68-30a5-4e9e-8279-633d5ae53679",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 318,
          "responseSize": 1194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01f3ae10-23a6-4007-8bcf-2c5adffd8f95",
        "cursor": {
          "ref": "5fe6491e-412c-48d6-a78d-3240d2fc09ed",
          "length": 251,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "3418de37-28f1-4e3d-a948-895e41c5f154"
        },
        "item": {
          "id": "01f3ae10-23a6-4007-8bcf-2c5adffd8f95",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "a58b90d2-782a-4b88-9b19-71f49e938132",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 333,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e34388a2-fe25-4081-a1cc-a6934d49cda6",
        "cursor": {
          "ref": "264fe030-a26f-479f-9615-de887ee90756",
          "length": 251,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "c933c741-153f-4bad-ad44-d3782090e00a"
        },
        "item": {
          "id": "e34388a2-fe25-4081-a1cc-a6934d49cda6",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "1090f62c-006f-4c8b-be8e-e3ac37ab6869",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 345,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef8649b3-a52a-4282-9dd4-f8084dc06217",
        "cursor": {
          "ref": "fb0eb92c-9231-45b9-a354-85fb5b8e92cc",
          "length": 251,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "081a4a39-349f-4cdd-a990-08549ca3ebc4"
        },
        "item": {
          "id": "ef8649b3-a52a-4282-9dd4-f8084dc06217",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "d26a0534-8ab7-4ba6-b89a-7beb52953097",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 352,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05302508-959e-458f-b91e-f53ed5376126",
        "cursor": {
          "ref": "936ea99a-5560-43cb-bfeb-0cb16c914da5",
          "length": 251,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "708f1d0c-5f60-4c16-8039-6e76449525b2"
        },
        "item": {
          "id": "05302508-959e-458f-b91e-f53ed5376126",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "68e3c0fe-8f20-4a57-aae9-5ae37850197a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 367,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9d8567e-36df-4fc1-ba41-3f3263b30408",
        "cursor": {
          "ref": "075c5c69-a221-4e73-8179-e5f582501a81",
          "length": 251,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "7b586413-aaf3-445f-81fd-5bcfe5fe3438"
        },
        "item": {
          "id": "f9d8567e-36df-4fc1-ba41-3f3263b30408",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "2b1fbd63-34f3-4bb4-b860-0203c682b485",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 338,
          "responseSize": 1323
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0f3cf8c-8c8f-4a51-a11d-c0d22a3ea2ca",
        "cursor": {
          "ref": "5136fa52-f5b2-4fc5-b017-18ef6a4b5bb9",
          "length": 251,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "5a083993-dbe3-4498-a440-113a6c54ef5c"
        },
        "item": {
          "id": "a0f3cf8c-8c8f-4a51-a11d-c0d22a3ea2ca",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "3610bfda-4af1-4d13-9943-8239e853a0ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 333,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb0aa246-3cfe-4753-a0e9-53add0a31712",
        "cursor": {
          "ref": "da6b47db-5533-4913-b781-e974e13ec970",
          "length": 251,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "0948d154-09d0-4d03-9ccb-15de7f246bbd"
        },
        "item": {
          "id": "bb0aa246-3cfe-4753-a0e9-53add0a31712",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "143c6a34-3821-4e7b-9b47-eb621060ef2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 326,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66368202-24ad-47f8-aa3e-30edb8088887",
        "cursor": {
          "ref": "00e53f76-6dea-4855-a98d-ceb591d840e2",
          "length": 251,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "8c1dd3ec-1fa2-4d5a-b51d-f7c3fc6744d1"
        },
        "item": {
          "id": "66368202-24ad-47f8-aa3e-30edb8088887",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "86f6632f-f3a9-457b-8d4c-74f5d04e0c97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 375,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21f3d9df-df35-4af6-82cd-232f9f4353e1",
        "cursor": {
          "ref": "597155e8-8996-4dab-8f5e-ef039913b1db",
          "length": 251,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "34495c2f-a15b-4aff-9ca0-61bd83a8547b"
        },
        "item": {
          "id": "21f3d9df-df35-4af6-82cd-232f9f4353e1",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "a4e39225-ff24-4754-8da4-3f433a92b180",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 66,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b73316b6-82e5-4812-bd09-d748977bf77c",
        "cursor": {
          "ref": "0c3de478-fc80-4f8a-89ed-063e8fefdf34",
          "length": 251,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "e276142d-a6a5-418e-8235-7533989b7008"
        },
        "item": {
          "id": "b73316b6-82e5-4812-bd09-d748977bf77c",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "8d70a866-0227-42a2-b739-e2b6aceed059",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 326,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88fc4f1a-3cd7-4660-a4a7-d08df6cd8435",
        "cursor": {
          "ref": "bc7db82f-b181-4ead-b513-af3be2c48b03",
          "length": 251,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "37ba527c-c310-496f-b599-38f12f7c4c88"
        },
        "item": {
          "id": "88fc4f1a-3cd7-4660-a4a7-d08df6cd8435",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "51f4a732-7733-4475-86d4-c6696c4c6efe",
          "status": "OK",
          "code": 200,
          "responseTime": 408,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4d7eda5-e8a9-4f03-b76d-963ae81a159d",
        "cursor": {
          "ref": "9274c736-01fc-493a-81d4-04d89325a276",
          "length": 251,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "903c68db-0814-4fee-9139-5105f37fe9fc"
        },
        "item": {
          "id": "d4d7eda5-e8a9-4f03-b76d-963ae81a159d",
          "name": "credentials_verify"
        },
        "response": {
          "id": "63098b84-2532-4b93-8c18-bcf3a02e1304",
          "status": "OK",
          "code": 200,
          "responseTime": 1945,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "7de758c6-07e6-4841-9a00-ac7f070e2c24",
        "cursor": {
          "ref": "791ab99e-fa9b-42ab-b874-222361be4aa3",
          "length": 251,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "355a4e0e-9c18-4263-8d5c-bfc6b091832b"
        },
        "item": {
          "id": "7de758c6-07e6-4841-9a00-ac7f070e2c24",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "38836057-aa15-4333-9149-f85a55159b48",
          "status": "OK",
          "code": 200,
          "responseTime": 1752,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5cf5419-84dd-47f2-92bc-ac11535e04b7",
        "cursor": {
          "ref": "71307dc4-b328-45e5-ba42-1c021d535563",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "fba68319-2dc2-4ced-832c-887323120955"
        },
        "item": {
          "id": "d5cf5419-84dd-47f2-92bc-ac11535e04b7",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "2522da32-9fae-4c20-8f71-8ce14bd7ab4d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5cf5419-84dd-47f2-92bc-ac11535e04b7",
        "cursor": {
          "ref": "71307dc4-b328-45e5-ba42-1c021d535563",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "fba68319-2dc2-4ced-832c-887323120955"
        },
        "item": {
          "id": "d5cf5419-84dd-47f2-92bc-ac11535e04b7",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "2522da32-9fae-4c20-8f71-8ce14bd7ab4d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5cf5419-84dd-47f2-92bc-ac11535e04b7",
        "cursor": {
          "ref": "71307dc4-b328-45e5-ba42-1c021d535563",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "fba68319-2dc2-4ced-832c-887323120955"
        },
        "item": {
          "id": "d5cf5419-84dd-47f2-92bc-ac11535e04b7",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "2522da32-9fae-4c20-8f71-8ce14bd7ab4d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b8b0c2c-3f9b-463e-ba1b-fce903bdff57",
        "cursor": {
          "ref": "8f53e4fb-1147-4426-b2ba-a2a01334510f",
          "length": 251,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "d65136f1-3fb2-4e28-950a-7ecc321ed6f3"
        },
        "item": {
          "id": "4b8b0c2c-3f9b-463e-ba1b-fce903bdff57",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "c609015c-f4df-4cc3-8e52-c4368d8d6e86",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 312,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23f18a57-824a-4e2b-89ef-a075bc9e5536",
        "cursor": {
          "ref": "872be2a7-8c70-42c9-a67f-2f2d3d53162f",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "9fb44d71-753c-4de1-b437-083b6aba9ff4"
        },
        "item": {
          "id": "23f18a57-824a-4e2b-89ef-a075bc9e5536",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "2f337f65-9455-45bc-9d53-30ac9149fd11",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 73,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23f18a57-824a-4e2b-89ef-a075bc9e5536",
        "cursor": {
          "ref": "872be2a7-8c70-42c9-a67f-2f2d3d53162f",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "9fb44d71-753c-4de1-b437-083b6aba9ff4"
        },
        "item": {
          "id": "23f18a57-824a-4e2b-89ef-a075bc9e5536",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "2f337f65-9455-45bc-9d53-30ac9149fd11",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 73,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e285601-3955-475d-b9b2-d09ee49414f8",
        "cursor": {
          "ref": "612743cc-c852-44c6-a0d7-6e96f45740da",
          "length": 251,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "467556b4-423a-4a8b-a2f9-d272670ea3f1"
        },
        "item": {
          "id": "4e285601-3955-475d-b9b2-d09ee49414f8",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "c8e61874-fbda-402c-889d-899c51b5479f",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 528,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d990ca7a-e95a-4293-8b5d-c5903972fb93",
        "cursor": {
          "ref": "dd19e3d8-dba3-493e-915b-1f9ff3061c96",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "df36206b-cc93-4d6d-a26f-c74e9ef8baf3"
        },
        "item": {
          "id": "d990ca7a-e95a-4293-8b5d-c5903972fb93",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "87b91b5e-f466-4105-b796-cc0eff9d04fe",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d990ca7a-e95a-4293-8b5d-c5903972fb93",
        "cursor": {
          "ref": "dd19e3d8-dba3-493e-915b-1f9ff3061c96",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "df36206b-cc93-4d6d-a26f-c74e9ef8baf3"
        },
        "item": {
          "id": "d990ca7a-e95a-4293-8b5d-c5903972fb93",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "87b91b5e-f466-4105-b796-cc0eff9d04fe",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d1e6f3f-6de6-4003-9956-3704266cf4f9",
        "cursor": {
          "ref": "31347222-838a-49ca-8e25-310b327dcaad",
          "length": 251,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "e5cf4e5b-169a-42a1-b408-07ca14f1b199"
        },
        "item": {
          "id": "2d1e6f3f-6de6-4003-9956-3704266cf4f9",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "74ad7c25-831d-4fd7-b579-9d672908a312",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 538,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}