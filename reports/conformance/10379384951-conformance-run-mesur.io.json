{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "ae8caa43-8a03-407d-92e1-fa61f16ca6c5",
        "name": "Clear Cache",
        "item": [
          {
            "id": "4f8214cf-d5d8-4fa8-a182-c3f8a80064e8",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9c8c19ac-12c9-4ea8-a051-f5079247b395",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "9744eb6a-d456-4180-a396-d80cb3d20823"
                }
              }
            ]
          },
          {
            "id": "9a2b9c59-f453-4b2c-bcbc-154ca894f813",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "aeb299af-e01a-4c13-b8f2-c3789706d89c",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "c3019c60-f133-43ad-8ac5-62cdb561a306"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "a5a96dfc-88d4-4908-b88a-57b3efb91fc2",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "ca664565-081a-4a34-91ac-1220055fae89",
            "name": "Positive Testing",
            "item": [
              {
                "id": "83ca550a-4e0b-4fc0-a3de-278cb2fba505",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "32ce3c96-852f-4b4d-8c08-9cd8b6f8c72d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b17ab07b-d6f4-4518-90a9-ffed749e9e78"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9f5c4efc-72eb-4ee2-b245-83e56ecb387b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b9cd1ba0-1727-4e38-8f5c-e56a53dd8630"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "da94485d-021c-49f4-88be-d5389ba6fe38",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9dc18bf3-7905-404f-8c9b-843015071c32"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4d672fe4-b721-4d95-8761-d8e004322e6c",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "c45ece16-b768-47f4-b5ae-3e6abcaa7287"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "45e76941-41fb-48bf-b1d8-ecb12f9dde6f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "677b6935-ed11-4f15-aa7d-18bc01c73fdb"
            }
          }
        ]
      },
      {
        "id": "f2fa0347-4465-42d8-93a8-37cfed4d7150",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "535c50bc-1ff2-493d-9f8d-4a700fdd281c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "81b99f4e-9d4f-43bb-b267-dc275bae8f41",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "8c6ec57b-257e-4b96-b24d-fe5e89a4661b",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02ee1aec-2914-4db7-97ec-3abfb9b31324",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8e7fcda1-c16c-49e1-9f86-87f0d06b7f20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9744ec0-2743-42f2-9d2e-1b5f62e33f20",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef1fab77-ac49-4531-8af5-85d9019339f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "57a58070-0353-471a-bd7d-1d0acfb9b213"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98ce2127-dab2-491f-b5a9-5c344b1388e9",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "242859ee-808b-4f75-87a0-26947bdc5eb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "64f7bc99-cf43-4d00-980a-9435eada45d0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "31404b2a-3434-4381-a084-9b402e238c04",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "12fb84ca-3270-495c-aec7-ef2b17ed8044",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea555802-cb62-4a0b-8f7d-0ff185e474d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "643f170c-072e-4fd8-9a34-997f30721bbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43903b74-ce84-4cc6-86ee-431992c2e505",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d73fa4b-8727-4d0c-a187-38b846b4ea1b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "77d65db6-92fb-49c5-9d1d-51b836db3f97",
            "name": "Positive Testing",
            "item": [
              {
                "id": "82ff0a6d-c1b8-4576-b1b2-8f363fb1db47",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8d7c4370-89bd-432a-8a25-63cb33889932",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "452479ec-da82-4f83-a57d-1db68e1973bd"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "101ce335-9a8b-4017-826b-d56da3e2e7bd",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "fed5c941-e8ac-4640-b6b8-2066d03136f2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d52c9e3e-a651-455d-abc9-60a27de6fa6e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "48f590a4-2956-46ac-be9b-2587cd9b168f"
            }
          }
        ]
      },
      {
        "id": "8f8f8b05-0878-453d-b2ca-a0f650e5f996",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "5d670df5-c762-487c-9180-77e6bc07cffa",
            "name": "Negative Testing",
            "item": [
              {
                "id": "30c93457-080a-4a7e-853b-9ba350b0c551",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "b2a66e66-e459-4c37-94ea-81c258679cb7",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbc9f85d-ddd7-4887-813a-bb4ac565ae38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d70217b5-7613-414e-a461-053b886aea07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b69996f0-c717-44c3-ad43-aaebdc0a6f50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7ae8b258-cf9a-4b93-b827-afbde3ea43bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ad0dcaf-a6c6-4923-a250-76db5dfdc606",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c798473-22ff-4aac-bd06-d28bb394c737",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea0a175a-ea46-4d95-89f8-b8752c5ada14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bec2420f-5f9d-41ef-a493-7688e3486fc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f6b43f9d-d8b8-4cc2-ba36-53e53a2a1967"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19403cac-3cc1-4962-9dbe-ff1727344ea6",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c21f8dcf-2f61-4526-bd3a-204fc968fdf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21b1faf6-f0fe-4655-8ac2-bd4e469b6659"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30f6ceee-c423-4d46-9615-589738e2200a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "25293761-0e26-4a97-a3e9-59c0c5e2bfe7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0d9e19b-646e-4efb-8193-590d4e51a276",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bb9d04b-8e81-4c18-b4a2-165ea8a7ea51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8d2a4ab-2b55-43cf-851a-89b603e7faaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "568b1420-b7bb-4246-9a84-b13763921938",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "793d1b92-31a8-470f-95f6-084075fcbfe4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c2016a7-d9c6-4df9-b7b7-33620605f17b",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d3b248f-6eee-4644-a4d7-25feb01eda29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53cb73a7-f092-4d8a-8bd8-47ea9b6e125f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a3d6798-bd3c-42bf-9e99-ba7dfa373d52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a3433e8d-a28b-4021-adf9-ced093dbe53e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26445a10-14ba-439b-8622-412e161b2e05",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8096c1fe-48f0-4c45-8538-a5113740b6fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17b8beb2-8cea-42b6-af2b-e2b77ee85566"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "344b9eeb-848e-4d55-9db1-af9d5a050396",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "412f5f66-662a-4fb7-8a14-9571ea0e6e15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "889439b3-b52f-4ebd-a70f-cce43ba1262c",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73adb206-5992-41dc-9d6b-c278fcfdf54a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac674112-ca6f-455b-b373-8299306462e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3842b5c7-f276-4730-8d73-b17f379c238c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d19c8cb1-e5d0-4768-81e4-8a6924ca43a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bffcac0e-3adb-43b1-975d-55a121c941aa",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "762c746d-1998-49b3-9e41-0117409f7f2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42d299f9-8766-4fee-9642-e624369ed328"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ed8b109-7692-4449-b77e-c82f6b764c0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "17b6703f-9632-4c13-b296-baddc6255221"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d7c020a-578f-4801-8406-b769456df95c",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc6f27fd-cbe1-40b0-a041-cf9d061abbc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4630df29-d2fc-46f4-84d7-2bd4b0eae605"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30ea696a-e989-41c2-9636-c95cc261e394",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "da14541e-9bc2-4a9c-8378-d6c32f7c598f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7c8987e-ceff-4636-b90b-b82c5af5bc3e",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73c764c4-ff85-4d76-80bf-599a4ff678a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "979fc689-b8cc-4520-826b-8e53a0ac806d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f463e6e1-f89c-4c75-9dfd-68475e9ed013",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9f2846b1-5308-47f4-ad79-8ba1c12b827f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38021242-04ff-420c-a25a-b2f52ad92fa6",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58871440-83bd-45ba-8433-ceb191756122",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12c3d6a4-e8f7-4768-a9a0-d00507a936eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebf709ab-ef0b-4168-b3fc-05ca6babe81f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7de76aa9-1403-4697-9821-d8a3e9914236"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02e47aec-09f1-40f7-8ef2-2dd1b75438db",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b386a67-62de-4a2f-9204-d7a2cc57f2db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c86d4a8-3b63-4618-9fc6-afc55719cf42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69d3b05a-6aef-4eea-a97c-33961e3ec59a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c6b7fefa-0f9f-46b2-bfc9-a4e263db254c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60656a63-9ac0-40da-b5bd-c2f1219afab6",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afe7abce-c529-41d5-833b-75d3df53a46d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d512a73e-c7b1-4d57-9d81-566c3101b3bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6fb6a6e-f9a4-41aa-9895-6f5d4c008796",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c36d6c96-1b5b-4008-88ab-323151046048"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6eda23d6-c4a5-45a3-b914-4c3b8e1daf4e",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7834f9f-8154-46a7-a10e-63f8799b0929",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b696928f-34e1-4049-9ac5-23fe75881d42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ed18de1-651c-49c1-8e60-cd730a9e7b99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "42bd0ec8-d898-42b0-b996-e99da0fb8ca4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a930b756-29e0-484c-b897-b9cfb1884564",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0c2a2ab-0602-4081-934c-b00ce1de9251",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7cbe77c-47d7-4412-9dd5-ce7712e7fffb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f38cd969-0e32-48b9-b9d5-1d887d2ca716",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9eab3090-e40a-4a63-88d1-a79b0dbdbc8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09adc095-9839-44d5-a5be-fa652b7f5494",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92b6572d-967f-4faa-90fc-7f1855e25852",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3450a0c-8289-4364-83a7-ae21406edae6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "324497e5-5e36-42e1-8017-2085edd7596c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e1d4f99b-13a8-43de-9640-6ae8c865250d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26af0b29-5f20-4290-a3cb-b32f1941e006",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "527845a4-ac06-48ad-b9eb-067ea5eea70b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b330de9d-4abc-4dd4-b77a-c51af832ca6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f59f485-7962-41d3-b926-1e30870da177",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bd8c7411-23e0-4981-9740-1b4853c210f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4202cba-edd0-478e-9fc8-ad8bb0b6042a",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74877673-9b4b-414a-9bda-f17278c17295",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "852e0533-a6c0-4148-9a20-5b89c5bb7db6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e898958-df34-49cf-b29e-27bb63d3b8a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "b0773440-2670-46c3-bf42-eb791282e61c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef90df78-25b5-4e7c-b437-bed3d9d3a719",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a493fd9-3c95-485e-9cd7-27241c8dfc28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebe2ba3d-4d29-42b1-8620-e8e8cf366ce7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82978e70-dc07-4919-9f2d-0087fb26f91c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "028a8cd2-1ade-42d8-af81-0de4e5ee053c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ece33782-796c-49ae-a6b1-7c7366205780",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "073341de-a7ea-41e2-b841-72b7ecdd0a9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24844358-10ae-4611-888c-01059f21d6b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b472c38e-8dcc-4c68-b9c5-465290a75a72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "12a2f710-ea76-47e8-92d6-f9697696b6d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd4a6e9f-73e2-49ab-b9f3-cabe79dcbeb6",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dbd3893-3e06-49cd-bd48-386c00b49db1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ac8f578-3c7c-4458-b7c6-986f988e4d14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ca791e9-6137-463e-8ee5-6077fa80cdc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a484d338-7789-4582-b174-4bce135fb085"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da4b04da-8fc6-4ac4-92a4-407487867c82",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76d221c9-b1d4-4c02-87a0-d44563d1237a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b9a7e1f-7f53-47a1-95c0-4c3c2fff6b83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87d11750-61cb-4efe-9b85-e4ec9f04c6a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ae72dd0e-048b-4b0d-84ae-33ba2d7864fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da5cad2f-8b73-4b83-84af-495a73bbc5cd",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d15f3da5-ffc4-4c67-a087-b0cd45505775",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a63f08d-a46d-467b-9c20-ec278c932693"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cdcc995-1816-444d-81fd-672bec630806",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "43c98fe3-7285-469c-bb18-0a074bb79963"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94be4424-71ef-4227-bc21-7c80a1859d99",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "654bee4d-48f8-4e7e-b425-848da0592e57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68a97644-05f9-430e-ac54-dda1180a4ed4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5b69a6b-b38d-4e2d-8acd-fbd9292333fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "04418ea3-4521-42ea-9b3d-8169f1320ee5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72f5bba1-8226-421c-a3c4-5b5d62ac5b6e",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a09aecb-99c9-4b4c-b58b-05a9da01e9e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fa1cd19-ff74-474f-be0d-f65ca1aa18c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c21fe0fc-4300-41a2-8467-700249541a7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "10c98458-de0d-4746-bd1b-031dcf205e31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d822e6f9-ec76-4459-964e-1e8f8e7224e9",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a119174-b773-4f56-addb-e68244b15d04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40ec08bc-6c7f-4dff-b97e-91197dbd3148"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52f0f32a-7bbc-4344-a86e-166df2f61669",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f11606b7-7132-4e74-bbd8-bc3509b44f9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d538322-bc91-4370-889d-732ecda743a0",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c3b28c5-6367-4b64-9fc3-656921ef4096",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d24fd797-4751-4f10-b323-e9b4623268e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48e5458a-f7d2-4eb0-9c6c-167e6dff25a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2da29087-c2bd-4c43-93a6-b72491f016aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "002e874e-b38a-4021-9b13-7f1dfc6b0d77",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1e43448-371e-4e56-a4a2-feccca28adb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10a70945-a944-48d6-b03b-5b6b912dbbba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f4ce3f4-99b8-47fb-914d-6959291eac06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d6f3886-4240-4c81-9db1-00e3aa93c6c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75cdabf2-284d-4361-9b10-bde5f84076ac",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b4e580e-3e14-4cf1-a2eb-e112bfd233ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48d96e21-9d16-495f-9ff5-e97cdc5846aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ef6583e-e26b-4d67-95ff-aad168418f2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a7119693-fa32-41ea-97d8-17b0e25d79bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f577e195-eb9d-4f18-b048-8f61506f5109",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87085174-1902-4e87-a5cc-7328c90be88d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8929616-864f-4c67-bed4-c9947799911b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8558d357-bb5c-4057-b964-2772f159bff6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "517035d0-4a43-4804-9593-a5cdf4abed99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5c5322a-3af9-4f1c-969a-dd9e41f3a4f4",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32a7b777-056d-46e6-b688-d7a4191b2afa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffb63e1a-f899-4352-ab8c-4b2aa594ca07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a61d9e0-005a-4f69-a5e1-daace2116136",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "93eaa20d-4def-4a63-9046-2c9029d143b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "869b9dd2-5a3e-4dcd-9405-68b15d1f75d6",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5db73f1b-58e6-47c8-b193-5291d385bdd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93c4570d-d7b6-4a46-a39b-2c102acf25c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7571ef4-98e8-4ae6-adfc-2644afc5a2dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "52fcab9c-f169-4e73-a1cf-3031d75bda47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f88cf197-acc4-4e5e-afe8-3e82acf89c4a",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22dac5ca-c54e-4adc-b477-4066a6ffc8ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17d9fb8f-b28b-49a3-8862-074213469bee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ba80a09-9232-4b6f-a40f-e8f75b0daad9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9d576463-6ef7-4a81-8fe6-1eb0aef292e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1857d65-704d-41ff-9325-7091e1cf6069",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4f2a8cb-2e06-413d-8a06-dfad021930aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ecc7a17-5690-4b08-b179-35e3f0f6f3ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ba4f352-8da2-40bd-a5ff-f5a6a2df993a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9758a5ca-c0fb-4562-902e-e337ed5f5f9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f72d2664-e07a-4ab6-8b11-591be0e370c6",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd8129e5-3fb6-40e2-b59c-58bfc8012560",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0dfd11fe-81ef-4b55-8c5a-742d5f271a9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4fda7b6-4fdd-4393-9075-c83db5c137e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "b6698df9-3244-4202-8f5e-6c28b84285e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e43fd253-74d4-47e4-ad9d-971cefba6d66",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36516a63-b86a-4605-85b1-007913c22d30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3ad51ba8-56a7-4f81-963a-4513af492f54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1e1c719-9583-46ee-998a-de4af6c144d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "85a63daa-d992-4fa3-b805-97bd07cfc77d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9751382-4dc2-402a-ae55-f0271233bd5c",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de15f094-9559-4f79-855b-cb159ea8e87d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ee0fc86-0253-474a-bafc-229b13b0ee45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14f698b5-5169-44a0-a48a-33a60ac0a40c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8da90b9b-bddb-4741-8e87-1eedfdf1d577"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f15e500-8831-409b-b263-ede1b1a3cc50",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c7072c3-2544-459f-a114-c420289946e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7f8ce2c-b725-4afd-ac1a-ffafe427192c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebb499c3-5f13-4569-97f5-f10863ad22f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d163f742-e1db-4e24-b649-6af1a7f38650"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32bb8c93-bc0b-40d4-bd3c-ddd190acb9e3",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60999c17-aea2-43c0-886d-480dbfe5c62e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e8690c1-7665-4ca1-a401-b0d05dbd230c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ff2a870-7c7a-4777-8077-d69dce419318",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "39f5ccba-df58-4070-80df-d26012b010b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6525a6aa-2240-4364-9817-ddf71b9fa272",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d57a42b-8074-436e-85c0-fca833ced9ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3425a6af-3431-454e-8df4-4d655ffc4f7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca995e71-e204-49de-bad5-9023781d22c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e1dc9135-d6f7-4e17-a7b3-ce7c41b298a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c9afb1d-c95e-43b0-9dde-18576dcff671",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "496382b9-d787-42a6-a78f-4a8524ee6954",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0f3b458-c8dd-4188-871c-824fd5e220c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eab52b38-9c1d-4cad-ae65-cc7a57ee5c2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "e2f3ab36-8742-45f7-bc34-14a03921d91e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c803cd0-f31a-409a-98e5-53910c6e8064",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21481452-8d96-4631-9232-4fae7fa7073c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32f74918-3ac7-4af1-b38f-4f19ca5e3ac6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c45d0451-2653-4746-925b-34e6c3cfe9b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "e007a808-e907-49e0-95bc-7a5cfd322eb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "681d66b1-5f35-4cda-a81c-3bbd88084221",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0133321e-b8b3-484d-a58e-aa8d71aef502",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "991763e9-35e5-494f-84fe-21d750f65521"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a7df829-2146-4f59-bbc5-835cb6e0fb46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "43ab2e61-fed9-4cd4-8ca3-7ec691278e51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0f19721-64fd-4ef3-a841-ec367631609d",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0debb38d-b7bc-44c1-b8e5-e18d9f22f5e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ceb75fb-f9ab-4259-80b4-3429dd0ea8a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce577f71-032d-44c5-9920-30b46138833a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "858cd8bd-2451-46e3-87bf-768ba7f93bd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e7ff4be-7466-4866-9f5c-62c5d73ff184",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92c2f5e1-c20d-4f52-9756-0ac60daaa65f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68b91ee7-52b1-433a-959c-7f3a21a8f137"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cfa2ebc-a272-4c29-a54b-b3117e1efc35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc58f3ec-722c-47d6-b74e-8d7bce3785d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec35dac2-635c-4e55-8236-5a79769f5382",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd344c37-cf8e-4262-ba12-2179a38f1977",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a2132f6-825c-4768-b314-5da0374379ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5027ffb4-d759-4e03-bfb7-d76a43c7f911",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "612fd796-266f-4406-9ef8-b7f393f27e63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a535ecd9-8fc3-4bcf-9c42-0a6b88af88b3",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26d4157a-1f49-42ab-b197-75b4643d9da7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "760ec8f8-95f3-4e99-8aa8-e57e6aff79fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b987beda-62d8-4e9d-ba82-6a1986b3b5be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7cdf08f0-8286-434c-bedb-2d3da3e72c5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc72478c-a253-4e9c-9761-53ff6d0ee598",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94300896-36bd-4100-91cb-798eade29296",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93698221-8e3b-421f-b9e3-53da13d7b919"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "950a7b2d-61fb-482a-aa4d-32d6ed5a1fe4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0bb415b2-f989-40a4-a796-d7a0de7013b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b2614b7-2542-421b-9e6d-dc14c8deef6a",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75b41b66-743d-4e0c-a213-41747f757566",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ece547b-da4b-4f7b-8032-18bea453fcc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bb88fbd-b2d6-4863-8662-1cf23ce54d9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "21b1ca6c-431d-479d-8971-dc384b49977d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f401113e-5e5e-4756-bd10-1ae7245736da",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "387aa5dd-739e-49e7-b801-9b78ad4ea6c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85a5fb17-1a0a-4a53-aa06-7e3378c26a83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9e826e7-0836-410e-853d-40ef5df52cc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f1e4e090-2e86-4b1b-9e9e-43a5060e9782"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa630411-ae52-4852-80ee-9410629c479b",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bb187c4-90d6-49ff-9442-7408020a9328",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a38461c-fd8d-4794-9318-325343673590"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f308089-60ee-4d44-9ca1-266f77cd37c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "cb8660dd-95b7-4214-a3b6-a7bb1c84fbef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "299b70cc-cf22-4948-bcdd-b63732392952",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2df576d2-82af-4e4a-a721-8e9fb6cb8033",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ab8894a-2bb2-48a6-b7f5-0d08f3c12b39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27dc93e8-4061-4943-9531-2ccd89f7c485",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d808e677-a2c4-4db1-9d30-8ae402b5eb72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc0fe687-6c94-4d8b-ad6e-0688b31e5452",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "929cb52e-76f8-47be-99c9-c19986dc908c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29eeff73-f92d-4b7b-b5b6-b86c8d43998e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b604bbf0-6d5b-4709-becc-55f1da5fe2e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8e414706-0205-4579-b4e5-9bb170474fe4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc4323d1-9716-4b45-a2ff-419c5756eaf3",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78855363-4fd8-43ad-914b-4ffa298f1d1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a12a01d-eed7-4a9e-9025-f3755fd1f437"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba08fe26-cd54-449e-8f02-82b38aab4424",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4234fd5d-ed5e-4da2-a4f7-a19a97e502ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a04ba87-0943-4a16-a653-e65a70a577ec",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a8856a9-5082-46d8-81a2-38520d94fc97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22929c6f-c289-444e-a23f-64375d50c3c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57c3e77d-e1a0-4024-b886-6e404ec4338f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "beba4625-cd17-4f41-9808-c7aada9f8a98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f204563d-984b-4134-9418-dac7d1870fcb",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd682920-e4fe-4c5c-93ae-cc7d77de7dc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2457869-4499-4d67-bc8a-50307da77794"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5cc141c-4af3-4af7-9121-bb08f1153e31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "71d2772b-372c-441d-9962-6256165f13a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e47ef1d7-b9bf-4985-bc07-1d455441b194",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b84748aa-6f5b-4637-af16-b8782737105b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bcf684d-5643-4aac-a006-7e4f38cf7143"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e4431db-88a4-440d-a7bf-0dc75b2bda81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "6ed46b49-411c-4b2e-a3b5-44b29ffd2875"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bf0ca28-26f5-4063-825d-6f055097b312",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9527d904-c491-48ed-ab76-59c08941f623",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dae4f49a-5c44-4876-8e59-eef36c678558"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9ae4e6c-01d2-4e83-971b-8be37acef35a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "55355c0b-7648-4eb1-a94e-6cfdfe2011a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5be224a-fe4e-4b58-99e3-100083e33c10",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edcd543a-f2de-4055-810a-3699f33bd782",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa91657b-d994-406f-b3ef-506b5003d0de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e898f41a-a634-4598-8daf-bfd09e2e3e81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "8892a53b-223d-423e-b9be-d2e81654d9e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d84ae9d-a17b-4bf4-8e83-849ad4866b61",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74f07679-eacc-459d-89dd-768912138d69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8231b8d1-aa63-4908-9546-b071eff51546"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05add6c0-97d6-46b8-9a42-bf542cbbcd17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "3c722e7c-f8c1-4793-89df-3a03a5c90086"
                        }
                      }
                    ]
                  },
                  {
                    "id": "104ff0b6-ebfc-45b5-8be6-0204c95d22d1",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7aa7bc03-c2f3-45b0-a2ef-f08239d36b65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90f9ec99-05fc-4eae-94c1-66d4b83014fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72d807b0-2d0c-48e6-b029-ac15f5bd95a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "e240c3da-9c07-4bb2-82c9-734e43f952ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e3a0989-2430-4a9f-bc03-a975a8666e45",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "521740c2-b07a-430f-8514-e1601bd6ef74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ed57286-6a0a-4b60-b438-6b6aaee0986c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15470ded-54ca-4b5b-b2b2-a1b2e978d5ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "4aa053c0-98bf-47bc-a25c-312802536edc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e43c0eba-a139-4c6e-8610-d46e0b3cfce9",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a7e00a4-d5ea-47af-98b8-d788b0f554be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2b4885e-95c1-4f4b-b0ff-a1020b030d68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d415f914-dee2-4a04-bf84-ef2cbf715870",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "592d5d10-ec7c-4bb5-abb0-c67fa98c8229"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2026a4e0-6d6f-409d-9546-7640ec982f48",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b05f2815-2edb-4e32-93c0-327132598320",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e4db56a-1ebe-4e14-a740-e43acc757606"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e38985a-8ba5-4e5c-8028-8669f6782092",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f7a13e50-687f-4f90-b1e2-6c9c75fc9e9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fbdc563-75b1-4fd2-be38-2209159974ed",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a42036cb-40d8-4aa2-946d-1ca16f571ea1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "064f5e54-e29f-4749-8b7e-4130661a6794"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67865bd7-4428-49e9-bc3e-11d8bb414752",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "df0c3f77-8031-4670-aeb1-c5a0eb5536d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bf59b14-f0ad-4d52-bd4d-a9a6d3c7f31e",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ece3abec-d80b-4f3d-9ef9-16b61b72cc79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68ad2b5d-6f80-4ca9-94c5-6004068bd91c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d3309f7-4bf4-4659-80c4-271fd0020402",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1c69b812-783d-4e92-87ac-7ff9e376abb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "369bf463-1613-44f4-9773-a5fd6040625b",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "213d02a0-886b-4fad-8e4a-85c29371048b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2d40c6b-e048-4193-a6b7-1c858e6cdae5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dffbdb0-44a1-4e42-96ee-a7f7be5e474c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "91b396f6-2e29-4499-acdc-f7c7cf604dc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e303ca7a-7dec-423b-bb77-3952cc8415bf",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ac44d26-c802-41ad-a442-a620fbcab6b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb987560-1b37-4506-a3c3-30829e002bd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68575c7c-a582-42de-af19-cf34df188da4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "6cc1a1cc-4fa0-47ec-8bfb-1250c0d2a79e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc744c15-7aeb-4b93-ab60-1f0b0e1757d3",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab4015ca-33a2-4a77-96d2-3517180dd7ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c1b970a-e94b-49b9-861e-9492b363bbd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9cff000-f4d3-46e3-a80c-e9bd76576a25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "15d68d3d-1286-4b41-b7c2-220d2f538675"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25a7bdc0-ab6e-414d-a336-7d196261932a",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "309c9b30-3447-49ca-9bed-befc5284ac31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e60e6f7-07a8-4539-888a-d2dd21758296"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05d9d55c-16c7-4926-b9d6-45fa3a00f6bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fe793b38-ad32-4b13-b22f-8a9167c38a04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37749006-727a-4eb1-a803-13cad977862c",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c35f4138-6d0a-409a-8e35-b9b22d90cd93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bb813b0-f929-45c1-b8e9-4975889ce97b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afc7466a-674b-4b34-b75e-b526bf63721d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a487e312-5319-4e10-bdde-b3aa6fec0634"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aeaf6d18-0057-4b1f-a7e9-4981e9b3dbdc",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f5c0b3d-904d-4c5a-9dcd-7ecde0d71caf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdd90bc0-78f5-4146-846e-a578724c4c64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee89f465-bd20-4ec9-bc21-35bf9d65aeb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d7823f93-9bb8-4047-a42f-623c8950bff8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46ae8137-33f0-41da-90d0-81797c3c5db7",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88744d55-d070-49b7-a4b4-ebfc564f8e88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4450acb-b84c-4f5c-a105-e43f0454a752"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3489eee6-ff16-45ab-9828-4e1f363645a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9ca35b7f-02c0-4a46-a8dd-ba37833f61a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df622b87-c14e-4e48-93af-e704a6d43330",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd23fa4e-e32e-4ebd-8e25-020e37ec0780",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "155ff86b-da24-4b84-a77c-bee36d6994b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac783253-a6f8-4e14-bb6d-468998121f2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "eec2b090-13c7-4fe4-be02-d96321da1a21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f518263-49a3-4bec-92d9-16cd28ffbbf3",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9ada06f-7b4d-49c8-bb88-1dec22c79364",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2c7ef69-704e-4f7d-9d76-b320b190abd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f58f898-40bd-43fd-b005-5f7bd065a330",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "97aabebf-b7b6-4fae-aa7c-8410f26b8ead"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01fc8bc8-5353-4197-9781-ddf8978d4225",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c36a1960-fc9b-4b8e-87e7-9d10e3346966",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0ad9484-14b9-4f53-b7c3-31521f3ab143"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46e5b51d-c915-40d6-9d6d-c8b88efc0db2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f6f23b44-ccea-42e8-9e6b-14dc86e4e717"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2a768b6-0c00-4580-a0b5-5ed74778bdf1",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58aff71b-b71d-4b6a-856b-7ed81880b7ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fb3f36e-52ca-4a87-afdc-48436b7f07f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95ab62d0-6bd1-4bcc-9b91-64dc2f47ffc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "20582510-3658-469f-bef2-01d847597671"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2801283f-9f3d-4bd4-bf22-4cb3789354da",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bea27f85-e602-4c60-9f6d-2251aad47cde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2eb5f8f5-fddb-4be1-9a1f-2ddcce82ef85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2b24fae-c178-4740-bdaa-cd3cd0b44b8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "93d060e4-ef22-48f1-9b47-6c5596b8b2fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2beb6c2a-b3ec-4b78-b233-92dd8552279e",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "874cc774-52f2-4825-9a2c-af0576f1d0ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29535060-b41c-46a7-b5bd-d56f1ecef0cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8631d73-e6aa-4960-bb3d-8789269a7697",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fc933862-1019-4257-afa3-4622f2092cf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66aa7be8-2ebd-4101-8137-c552f1f937c6",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78200f7c-4dff-4fa0-b317-f5a9703abc42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3b1e9bd-87ff-4728-85c1-41e81d6047c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18cb7682-a7db-47bf-a3c6-0ca2a2c75d68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "db2df4a2-5088-4575-9c13-b3c59a6e2c32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "572b3cbd-f612-4196-9b9f-49783ba1e43d",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0403cfd-e2f5-47eb-a88c-89cf5691efa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71ea016f-20f6-49f2-8462-bd9943ed6e2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "430d45ab-a829-4772-a6ca-e595127e1d18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "dfeda72a-ddea-497b-abd9-e4e1ea587a9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71b95081-9a54-4e59-b63a-72cbcf69033e",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce28d8df-48c6-4505-b71b-527ae53a4d17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87abb484-4c99-4aa8-abf9-c3c5480252dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0f905f8-eaea-41d0-b459-88db6d1a9fae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d62a7e3a-3d26-409c-8797-559c3fb9c23b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3d0be37-f4d5-4586-aada-4ba0267a0c63",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b44d252-03d9-45f4-b232-bd755cbfcbd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55610571-690c-4099-83d0-8860f8990444"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf6578c4-a586-4cd3-8506-c405d8d6e386",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6ce79f29-29ef-47b5-b4a4-20d385905990"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5833a1b-afb9-4437-bbaa-4c5a9117c6ad",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f258779-bbe2-4399-84cc-2774bf86a541",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5bfdc2a-c607-4d8c-a62d-3c2260291edb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48798b7d-6495-4fc7-bca4-6190ee2208d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fe4b0be5-a5cf-42cd-8b65-732c7199d450"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11a28d45-081d-4d72-abe2-10e9edaaa933",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58246119-85c1-4c30-a0e7-2da94f590d04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70823f39-9dd5-450e-b100-b60aa829d360"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eeded42a-a9ab-407c-9875-cb83b3e4120e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5fcede01-48f9-4a27-84b5-b70ff67965ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2296582d-5c18-4569-8ffc-915a16a617cb",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9d0862a-c44a-42fc-9751-b1592428aa80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87ed02bb-33cf-412f-972e-21457ab15044"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35476c4d-7cc3-488f-8593-4f1546dac399",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e0e32e34-2a98-42f3-8228-b127be11968b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "690e7c54-ae1b-4674-bfa1-d5828dc57234",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "772ced0d-346e-477b-99d3-cb36bec31b61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4712396-9cbc-4f28-a084-f9a7acc878d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4055914-f500-4ef9-acda-8f7d2e49ef35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d5afc652-48b6-42c4-b12e-422979a379fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2cf5261-d8a8-46d9-95dd-d6072e972ce3",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b12dc9e-d972-4331-81e6-8c2c2d271098",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e59e377c-1dda-46e2-9ed9-b5d673388b34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "288340c1-49a0-4d05-a978-161fb967bef6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "dbe1d717-2022-4b24-9ca8-71c497085132"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b786ec6-9567-413c-945a-e036f88c3bdc",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5e4ce0b-cdb0-4a6a-867c-8d5f2b781384",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be232e52-86ba-436c-8049-b43a91110c82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30f8119f-cc60-4e7c-8a72-000cc123002f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "d8788823-bc8b-4110-b952-534ff184498b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba864fce-6091-450c-a4b7-2077db109492",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6e4250e-6735-4fb8-a345-669157617fb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "761e361b-167e-445d-ba3e-1c77cbb2b058"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25d704a6-3330-4111-9a86-e023ecfdc942",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "591ddc6b-63ec-4ffb-a7c8-198db7e33b3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "776f0269-0205-4363-afa1-d9a508f1e4ef",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87ea8084-a0cd-4f4b-80c3-42c15fb22204",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f2dab71-10e6-4171-a839-845d88d079ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebae43dd-233a-49f0-8122-40e31e59005a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "b45416ac-3083-46b0-afcd-9cfd225d06dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26b4e0cc-a168-4b9a-97f1-1c6ef6874bfd",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f977e36a-291f-4c68-aaab-4930d757b55f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "5ac1dfc2-1570-4002-8423-35918349bb1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0161e32d-18e3-4c0c-b8b2-e85d59718059",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "5e2d862c-013a-4c06-94b5-6b507b056098"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "94c5aeef-0ffe-48bb-9cc8-7cd01c8fb27f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "75ac3167-7539-48f1-8491-a383eb233e8c",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a3409fa-5afe-41d9-a5e6-1c9663db52b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "35cb03a6-e424-4a78-8cb5-af2142a33bd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b81ac264-11e0-4c36-8c43-0bd75a236f18",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9dd06fde-de7a-4423-b2b7-4a2065123bd0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e9f2b97d-00e3-4083-8ae1-57d19f693376",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "697b7ef1-7fa6-49a9-a70c-e11e31e250ef"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "49dd2ce2-5d3e-4463-a6e8-e9a5eefb3c10",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "62b925b6-287a-46a4-b5c3-16511f030a7c"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4ef16189-da50-443a-bdb0-565cda2592e0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0763a821-2cfb-4b70-8f84-fc182da45419"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "bd6dd08e-2730-4ea3-a0a8-5043cc6cc5cb",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2e1d0b8d-a7ad-4650-8631-06e32d17acf3"
                }
              }
            ]
          },
          {
            "id": "436c72f0-95ec-4290-9731-b85ca9b23c88",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e1eb89ff-e317-416c-91e4-c05337dbc9d6",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "eaf9a2ba-9067-402b-8c67-1002b84b0fa9",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72ef70b6-02ab-4ddf-8aa6-f0bbe8a462fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "94f8d78f-33a8-40c4-9b68-d0333ad1a9bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69c40500-0392-4bf4-9490-b112e422140c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42bc5618-97e9-43d6-8e0d-cbc83fccfa79"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1e96bb04-d496-4fe2-a16e-b08112415663",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7ab106e6-0735-42c6-b2ba-1d06b2e87342",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "164a0365-e233-4448-baf2-37a0bd232b88"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0de0b13f-ca61-4215-b931-f228c707ca1c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "8ca00486-36b2-4789-a97a-23a6ac2dcbbf"
                    }
                  }
                ]
              },
              {
                "id": "54b2bcf0-ebd1-4ec9-83f5-eacdaadf581a",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "685090b5-2b84-459e-8006-349ce75481f8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "96c88e0a-37b2-4fda-b699-3691848b0da7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2633f477-2926-4c68-80c0-1882917fed7f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "46842b8f-597c-42f9-980e-9be01a3f9646"
                    }
                  }
                ]
              },
              {
                "id": "f05219ea-86fa-41fe-856c-1c5b6b2c5ba8",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fcc5a0b6-b592-41d0-b387-24071c73e82a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d4ff6cc4-dc19-4cf6-8edb-bb5b4121c5a3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2e0711af-1d9f-43c5-9976-030fae4b7514",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b7dd6c3c-05d5-44cc-96c1-0466827f828d"
                    }
                  }
                ]
              },
              {
                "id": "7d1e57fb-2aea-4ba0-8458-252739dd2634",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ffbbc447-57db-412c-a96f-07ced8342634",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "90144590-22b1-4e00-b2bb-4b11b2da21ff"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6ce43295-5276-4ba8-8104-09f903775fb6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "bb828c90-5a98-451c-af75-618d74dda0d8"
                    }
                  }
                ]
              },
              {
                "id": "4f5de1a6-6caa-4293-a022-dda0a9c64720",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ecaf0177-099b-4864-ab0d-7dd435e695e9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bb4846a8-71d0-4dc8-826e-0e02df5727e5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "84952c0c-3826-4c92-a6f1-3870747eea32",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "fcd5037e-cd30-444c-85b2-8a78e986de4b"
                    }
                  }
                ]
              },
              {
                "id": "7416206e-6cd7-4adf-9669-13ca7b931b6a",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b0177c96-9b82-4fe1-96f2-e9a8b0934672",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "eb55b48f-ecb9-4b10-8f83-b04cc960f2b9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "663ec980-d517-40d3-80fa-fcee498b594e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "212e740c-19ae-448d-8798-0409622e30a7"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e8954a04-90fb-4b26-8aff-4e6445b22c8d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4e2dc1ad-8194-4495-903f-4802f4205e6f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "8606f0bf-24d1-47e6-8747-d7e73b0ed461",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "33275b3d-cc56-4cc0-a284-e7e0adb17012"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8409147e-ff32-44d8-bd71-f24d22449326",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "191d1765-4ae4-4f7a-88ab-692f276554c5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "21c7c87e-11bc-4ab2-b529-7c16e7b120db",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2d76589b-0d59-49a7-bcdd-c79c622505ae"
            }
          }
        ]
      },
      {
        "id": "bd671ccf-72bd-4f9a-9fb7-077b5d077676",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "27db0356-7d67-4bbd-aa98-82b030296511",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e18fd64f-2290-4693-8551-c85a36adcfe6",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ebcef6a3-2c60-426c-a8e3-a3abbb6c7ec3",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6de1aa45-175e-47c0-a7a9-dcbaaec6a7da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2963f669-3398-4e2f-9f12-7de20d7133c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbd0874f-3c38-472d-8d65-a4479fa624d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "2a1033b0-de8c-47ac-904a-5fc1d6419222"
                        }
                      }
                    ]
                  },
                  {
                    "id": "036f88e3-6e2c-4574-aef2-62f880b36963",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e368ac06-808f-4e8a-af07-f4085f34efe8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa82e3a9-c425-4840-9266-4c1bf7b35233"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "902eb7c6-afbd-434c-a2a3-408043fbcd69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b1b26d4c-35ee-4dc4-a01d-50c7be67b0a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab823abc-f5fd-4c63-bb4d-3ab5be0bb8e5",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eac76d1a-fb05-48a0-b433-a17356ba6002",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c48ab44-4f43-46e1-98c0-4893dba43161"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "feebd7d5-1f19-41ab-b6de-1f4fb0fac26a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a39005c9-72cd-454d-a802-853a88a7e4f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "387a7a7b-4cc4-4ac9-8da2-769c9b604544",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b36a6230-89ca-4c9e-9209-4f2cf6731246",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fac022c3-73ae-436b-8764-750180dcc54f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f5bbed7-4ad3-4834-ac31-a915efb76a8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "359c2dd4-069c-4678-8d2e-d196e2d16025"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f33b8b00-b4b9-4845-a77a-4b67969dd281",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76d99d46-cf6e-48a3-8a15-b892e0e84e62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b37e371-71d9-4592-8459-50454c24eb46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bc699ec-742c-4e86-bcb8-4073ec39d47d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "10112e06-fa85-43d0-94c0-7fdd5696c2e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3d18775-e43e-44c8-8f99-707b6ce0f79a",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f620ce9-fcaa-4e0e-824f-c993fafeaefd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91c3cbd1-0c32-40e3-aa33-95cfb0e38d48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5b57401-bd3a-4e9e-ba83-f334cda03419",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c7b59773-33e9-47c7-a85e-2602bf3c3cd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3cc3319-1b41-4bfe-9e7c-6586c0cde0c5",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6db1ab94-9d4a-43d6-99ad-d8a93e1120eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bc13129-5389-4b02-9008-4da0ece46439"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bfa1af2-f804-4317-a7ab-a92867f91b22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "9b5f76c6-9507-46ef-a44d-bc60c26164bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6eb925fd-f1a0-453d-a5dc-522b3fab78a6",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "848e815d-93e0-4c35-a982-2a332193d513",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bd61d46-172e-4928-833b-3a6b49aef191"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9e1ed23-be29-474c-953f-957f8d7d64d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8cb98d29-2412-491f-8ea5-f966e2b15130"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6156150-da39-40ad-bc2d-99f4f04f3ea8",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56c29cbe-1324-4449-9ad2-31899b065ca0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fb43f39-4f39-42e7-83e6-0945b8d8836c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a05c3f04-fbb2-4e9c-86d8-9e5161979d34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6217762a-b292-4fc9-9840-ddf07a62a9ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5bb4ac3-f166-4b32-b1e9-37e638f601ac",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5912fd6-11e8-451c-a8b3-2c66509b0a8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5167f14b-6ce2-4528-bbae-23635feaca79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dff85d2-0e03-45cd-b7ef-8a492a1291c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dc55960e-ddcf-42e9-8d21-a3e524474fb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cda90f7f-cb8d-412b-9e2e-b68b172b2d22",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e300e3d-8e62-4015-a72b-963a8eced912",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71a82389-e8b6-4c3b-939d-4d895d77347c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c2bc925-66d9-470a-bae3-0d3383abc50e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "5533fa0c-b140-4e33-9b2c-255236c18658"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be0d9851-a7b4-450b-a6ff-766a5f50d25b",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ab52adf-f220-47a1-841a-898b79eacb01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd98d4d9-01d2-4ea5-bb0f-c5f9dffdbf3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18f6db31-74d2-4fc5-b85a-944b48da3557",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0fcc46a8-d438-46df-b5a4-6b8454c77506"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b9ae192-f304-42e3-b6d1-d12e72703b80",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3016ae0-5a13-4308-9887-b16a8945e436",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc62889a-1304-45e3-adbe-b326d91d9560"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56679dad-88a2-415f-b5c1-ec0d412fe2a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8359e390-a051-46a8-82c6-42cc977b34ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2087fd97-8950-4970-9405-f77ed5e57ca4",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb7bc24e-c653-43fc-ac1f-1b3e27e26735",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bea8065-2197-47ce-83af-c778af659e27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb0d9f80-b24a-4ca1-b143-e184dd1ff4c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "eb394573-6844-4957-81c2-f900e9b715b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a6279b8-7704-4ca3-b418-aa755cf52a4d",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9604660-4d0b-4ebd-a676-7889b7a229a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dee76e8a-fb2c-445d-a55b-1960647057c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "953e746d-0479-4fa9-9c07-610992022f83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "85d372ad-f983-4a6c-88bb-90e00ca96aeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d79f93d2-f039-45c0-9be9-a2ef8da0d931",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a52a66f-09ee-4b2d-94e4-27222943f164",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d43cbe9-7462-4347-885f-00a70655229a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f68b4c9e-9a0e-4230-be84-fe7c6c76269e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc88b256-0b55-4272-ab48-f77da4d29cc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "019a7e1c-e40e-46e5-bf1e-fb212233fe44",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbde9b1c-d570-47b0-bcd0-a6df89abb587",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c75d889-4284-4d70-aac2-0b89078f317f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d85e1c64-8752-40fd-ace6-3cd7e1afdb3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "324108c7-3845-46d7-a20a-33e4c8c407e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb9d58e5-0c01-4f04-b72e-5ff74cc0776b",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "284f6dac-54a1-4278-b804-70b12918d516",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6268daf-6024-4909-9b81-f6652b62a872"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22c65291-3596-4c74-a04e-4a18a293acb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "fbebb33e-14ff-44cb-93b7-55e3bd53ea55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5817fdc2-81d8-4f5b-8bbb-8e8b39c30c6d",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2fa3150-ab05-4bb0-9df9-59cfe86a13bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "703809d3-acdd-44a6-8c87-1738657b53ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1d9d0d9-cfed-46dd-8b2d-fc7707f1b7de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8483cd8a-8ff2-406f-aacb-d701d56989ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78a360f7-6d8a-40bf-b6fb-0dab58ed8f7f",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41ecbb15-0369-4e4a-97f4-247dc1d59c67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bac06f0f-a2aa-45fc-b955-7b572b0e64cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "050197c3-33d6-4513-85ab-694b04da378a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cf00966e-a594-488a-83af-b4bff61634f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7c0783f-5526-4d42-9511-83bc66ad35b0",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f966bc2-d33a-4dd8-8085-f59367cd22a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdb510f2-a382-4ea7-a694-1b0c6c0b626e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0a61987-c4c7-4e09-a1c9-50f6fd9bcbfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d832ed6e-ac13-4246-99ae-92ed8289959c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63b8f137-8829-4407-a0fa-59232d1b6fb7",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf56d018-09d2-40fd-95a7-f8e37a9d7fe7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27a27cb7-e831-41c7-9aae-2113d679004d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99e3a6aa-7bb2-407b-a8ed-54af3656382d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ce8b835-94da-497a-8cc1-5da7e0111840"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed66cf2b-4885-4914-b0a7-57b117491ce2",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b94054f-68b5-4079-81b7-461c20292ab3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7365d370-6875-4a91-a4f2-57ddc639a474"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ea33c52-2a4c-4bf4-8edb-0afde5710926",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d43536c-399d-4224-8572-ef7235fe5eb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f2f74a5-eee6-4627-9407-a41a99b26ea8",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1122a30f-614e-4838-83f7-8dcb02cb4a52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7713052a-d141-49d9-b250-ff200d3cbe31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a742edb1-5ac2-42d4-a3df-158a4c926588",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e2b7a10d-b284-42a0-b981-28ae479aee9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85147e73-5b8c-42e3-8104-7ceacae8aa99",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "668ac37b-aac7-454f-ad23-ec5f4714ad73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02de134c-398c-41f1-9d34-66671c4cdde8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30f53631-8a15-4cb0-9ba3-b925d7066b78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "767fda79-66a1-4b13-9b58-08f406ce0ffc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f577ce8c-37d6-4ce5-8f82-44dec50db215",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "279d470d-e3cc-473f-9222-65aa8560c0dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a28d0be7-cea8-4def-b09b-4e94c1e1d87c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5c2c1fb-dafd-4db5-8295-bfea9202617f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd9e5b21-b49e-439c-9f59-df0519de05fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3f9edb5-20d1-41d9-bb56-63a15bb60f3c",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03f8552d-85c4-4abb-a9d6-077862481c37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "703bafd7-55d8-4a7d-9fd3-20d82ae814a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16771665-2a8f-44c3-959e-7e414537883c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "664fdf0b-0462-4b91-80a6-d03ca37f0c40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b9a322b-56d1-4420-ba9a-ff78c667f433",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36545db9-ee97-4b8a-b2cc-74ad377d44d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70f607df-e435-4ae0-900c-e72d76b41f07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18353423-d093-4ab2-acaa-a98a63044900",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0cd079ba-ffa5-4633-bec5-b110e7703d7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7536ff5-d2cc-42d1-b98f-02b51fffb42a",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3ec43ab-3cb4-4278-bba5-1f7cba431786",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2aeda38f-04e8-41a8-a11d-853817e153ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d0a3a00-4a61-4728-8a2e-8a5c36304e7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "edd28e4e-b3bd-4de1-9872-c13d856f15ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24145519-3c6b-4496-876f-7ea137b97760",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a5fbb55-0074-4587-87d2-1ee38439114b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c92e1770-e096-4150-b4f0-49ea2a607560"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56a6b0e8-23c8-4143-a3fa-6ce78c85cfeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6318adcf-10bb-486e-b3bd-da4cb021c4ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da1134cc-9fda-4952-a3ef-a3df4eeb760d",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d765863-8a48-4dda-8a4a-c15b1de6f07c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05aa74a3-1397-436b-a411-4db985cf2722"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd41dac1-a7e3-4808-ac7a-90be65b4df8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e0ffc47-03b0-4b16-a859-b5fecef16ea6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "795512cb-9b18-40fd-86f6-b965804860b5",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c87dc359-5038-451e-9847-d9f6bfc96cd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a810323-ee67-49f7-bde1-7dba2992d89b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b378318-6419-46e1-86b1-a8803f714bce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "11a7de9c-e515-4d97-bfb5-7cb8f74fdcfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "951462e3-5fd1-40db-987a-c24df11b0f2b",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31066925-0005-4c37-a0a5-4e476ca78b26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7417541a-1b38-4077-9760-a616d30e6c89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77689870-c2c6-492b-8370-4610069ee233",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c4a1c3c-22ee-49bd-ac9f-52dc3cf55540"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a49c50d9-afbd-47ba-8018-e87316b2def1",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "481268da-a9a7-4854-990c-1cc83d762b12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82466701-309e-485c-9c29-076f094896ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "473826ca-6d8a-4dda-944f-be08528293b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "24cc48e5-9064-41fb-8560-8f08ebc556be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45cb0c5b-c183-4adc-835d-7224dfcc7ac0",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02110b8e-a28f-435a-9f7a-af915beb55ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de62bd01-0a80-4a99-8f05-c2670a0df102"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bbf7584-2399-4138-bcaa-ed0d8725635f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ac1b512-3206-4233-a636-e6d5bf32bf0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9870eeb0-c020-43c1-99ad-f92cee2b18b1",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47283cd2-bf5b-49b5-a787-23eb0af52a63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41ef1080-53f8-4051-9bbd-f5a68359b761"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71b56a2c-0c3b-47e3-a0fb-f32170cf4405",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba419820-04fb-4ac7-81e1-a9eeb0828d6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "776ef6b1-0dff-4d7e-a32d-509028fe8223",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfb3ad63-2b77-42b3-a906-8b27cf83a45c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d4ba243-cecc-4a66-9f06-04a86dae9279"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f7d7b5a-0eaf-40bf-9ee3-8bff5039ac5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "322fe92f-ce8c-4623-879c-601e2a7988ef"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "104a9b90-fce6-418e-aa16-772a80b3ec39",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a1feff31-a9f4-4b4f-9a98-c288910bb586",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0271297a-efc5-4256-9a9c-e1d4e6f3036d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "609d0284-b4e5-43ae-a830-b91339a15a2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7edaaced-cd8a-4d26-9387-76e05d6e950f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b24dfed1-ec94-424f-a736-403982e868d8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2cfd8025-6f89-438e-891b-c63ec2495ed7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8730d008-c0f0-4158-8463-302b9afface0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0305dcac-9e1f-42be-bcd5-ca9cd09159e8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ad6de957-5e52-4aea-b19b-3be98639e495"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5d80d730-8f4e-4d0f-afd4-a5fd1e6a8395",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "a08b63ce-7cac-4ce5-a29b-90a4fc6fac51"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "533483c6-fea8-4de5-ad01-6a7d69ef0bc2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9a679657-3848-425d-a86e-cf0af5650553"
            }
          }
        ]
      },
      {
        "id": "2e1f79f2-c1e9-418d-9976-df8f470b6755",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "37b37bce-de0b-461e-a3df-d50ca56dcd9c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8b33f73e-1d7b-4c49-a316-78f31c4a595d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ace600ad-7847-4b9b-8017-a938ad09face",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69014ea7-7db0-4ede-a9c0-73d4b9bfc68a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03733fe4-5082-4164-ae5d-e5bbb405557c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28c09be4-9933-4822-9dde-15b264d54c77",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "358028f8-2168-4b4c-a2f3-d74d700749fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "445c9038-5703-4726-86df-775f08fad297"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92011b33-2fd3-4a15-aea6-550c836f5e9d",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6bf87fa-f5fd-458a-b223-39bb8366d1c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d206f05-9cc8-4537-a732-8ac96b1f3059"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6137b1d-8d5a-40d6-8e1c-a8b728bf644f",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ae4a5ad-a07b-4712-9c0f-31e83e0a0028",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "742807d7-a94d-47c5-b4c9-ee076597bb0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7adb375f-0ee2-4613-8479-e40966e6b223",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c6e7c52-0114-4d54-8fc1-eba411fc48f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cf4a80f-7e7a-4111-90c8-0cb619393b72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efa6fad3-ed79-4142-a0cc-a4e5c47c2a56",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c718eb57-2fa6-451b-83d1-b4fb89b57ae3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "229008e3-8f0c-4b20-b30a-55f043c1c5a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46e93bff-0972-4f58-b984-d47562677c83",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5f63cf6-0df6-4d40-8ab6-5f48309706c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a3632f0-431c-4c49-9f8d-e44febdce44f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d176113-217e-4c2e-b03a-fb228a45564f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca895809-9e98-4ade-81ff-9fad873384da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c496034e-0791-495c-b3b3-2f154af59551",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67621bfe-bae5-4985-8f0e-1c9d963e2cc7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a3bb8f4e-5025-47e4-8793-ad63186e711c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd4972c6-7bdb-4c0f-b02d-23809956e222",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0e759d6-bbac-4bf4-9d5e-6ce6dccc3ce9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc47f59a-65de-4f9f-a467-42674f34a073",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20b1560f-5392-4afc-a14b-50314c12f5e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0b66a1b0-c7c5-42ca-b5ff-c0e21d8dfa73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "673a0fba-ede1-4ae2-ba12-0bbaf35e8af2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "468eab80-988f-40fc-a94a-e9bf9916fdf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0f18391-cb24-4504-8cd5-7f493a7c6ee2",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f251030-e3cb-463b-a7b6-efa17a2c6a77",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e7f045c5-96c3-4965-90a3-b42282de1802"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08922e83-fa24-4d00-b5e1-6378966bb65e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6189778-f396-433d-a57c-ea37d33bdd72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d39314d-12c9-471d-8756-c929d715dbaf",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56289396-43ab-4a92-aecc-e7d1ff21feee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5850dc02-5b28-4ba4-99a2-ce09213479cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c3a4039-2edb-43b0-8e6a-ddc77c817af1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbdadadf-5b41-470b-8c68-2b3eae1138f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1690da0-1287-4d53-9bd1-1d5c91013553",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c6f3305-5a9a-4e21-8800-d461134f20e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8a6e04d-ef80-47ef-ba54-18bb2b231f05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47eca631-d282-4a2a-92cf-34213202f1dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f73e7db-5c54-404b-9149-d4a90bc3c47b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff87c76a-6e0e-4f87-a8a5-b6525fff8d58",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81a7a3ff-7c54-4a3e-a87d-03783af7deda",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1df94e71-42a3-4d2e-bf9a-590949268e26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cfb47c7-eb6d-4c63-aaed-8e53456c481b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "180017b6-8e0c-40d3-aaae-6cebd41dfe45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a153ebd-5f3f-44fe-87a0-f94a912c7498",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b95d497-eb87-4680-a91f-ff85edd261d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "159b0045-8ad3-4e00-a379-c3d7e7579e06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a647217c-4b66-4884-ba45-60a5aaa15079",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b74ac87-0532-4493-9312-acca0d4d5c17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e4fd133-b9be-4e38-b2c5-fefac7d595e2",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "471fe135-33aa-41a8-9b47-b906471e2196",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e2b8b7c9-3090-4038-be0b-debd6c814fb8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d68357a-ef24-4ddc-b285-f55e8abc7bc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72797056-000e-428f-a734-88e34d0fb99e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f4e8538-728a-4d90-bf40-693013b56dbe",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb85e2e6-bb25-478a-a0a8-8548d06a97e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a3acd21-3e9b-4d5e-adb3-2f0599fe1ae4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d575fef-3df5-4ecb-8ff2-9f9c3306f4ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c10c85f-eb75-4736-958e-3c735d07f60d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0a34183-0f16-40fc-ab09-6f370334378f",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f05ad49-c18e-4f8b-8dc2-4d82f4fdb154",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e1eaefe-5119-44f1-a383-cae2e66f45d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9de4e464-3fbc-4acc-9a67-f9cbbef41e42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36d4ebe4-b789-44af-a42e-04956f7e5f7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5deff973-eac4-4d23-914d-10f127413a64",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d2b1f51-eca2-4040-8162-c03ba0900262",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90fb21b2-249f-44d6-9d38-d82528bae42f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "903218d3-1e0d-4f62-ae9c-b4b0357e641b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0cf146a-56a6-4c48-aaf4-cc1f61cc9e7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a99ee753-3590-4f12-ae0d-d1426d473e9f",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cddd5c1-704e-423c-83ee-40b0aaea8f00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c9b6fbe-05cb-4b49-af00-8a6fe48a17a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b76a664-1803-42fd-9673-7afe37cde144",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3fba077-ed06-4415-8345-44f0ccd5c276"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c624733-d79c-4a7d-a5ec-eb435d77809c",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f2dd21f-a97b-4f3b-b8a8-6db6eff19c8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84ae296d-d6fc-4311-b30e-cf44b3c25a26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81d004b3-fd62-4bdb-b865-c9236ac46d82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36349cf6-80e2-4341-a60f-a2ec9a9b135f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdf8739f-6714-46d1-8e11-845dbd6a6f06",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cc86ea7-6828-47bb-a5e1-0d2f81660aa4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73c47000-c329-4a47-ba01-a36f1b116e20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e5389fa-1e87-44ef-ab9d-d14dad7b2c2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91f2d5d5-2140-439d-86da-4085f5faef7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74b5e2a6-6419-443c-8299-dc20722d14c2",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "097a7f6b-b08e-4528-8b6d-e176e0bfa78c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a4185cc-23e6-41d6-9082-3675e3c1177b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8eedc2f-a2bc-4948-92d8-bf346efe0795",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "340b8e02-1eb7-42b1-a191-2a0a012f16ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7691cc11-28d9-4031-bfda-243a2150b1a3",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c422095c-4acf-4aa4-b815-88b3fe5fcc7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a66bb54-fbf0-457a-a7d1-662caa072916"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b365f3fb-b61f-44a3-aafa-e92bb023a90b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "223c5450-1160-4d85-99f2-dcc21a9f6e2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77aabfe5-bce1-4ef4-9a95-49e73b5dee92",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf6b808b-8ba2-4d97-a206-d237dce5defb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8e22438-4767-4b5f-8f2f-da205b0e6355"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5444096-ef5c-43d7-9e13-ea87d3efec52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b5530a6-eb02-4e6a-976a-524c7223b5a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3d2a287-3064-468d-8efe-c20be7897cdb",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5734949-2d16-46df-9865-f5d3c4d23faf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b66878d-f2e7-4b85-8024-767a88d905bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c9eb0de-5c8c-47c8-888e-6c0de0573501",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19e6833d-2baa-4af9-b843-a967cde363ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18d6fb30-6675-491f-ba13-e1c63f17b5d1",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e0eba45-7a89-4c67-b696-61af5f8645ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "78dda2eb-eb5b-41d9-9047-5b49fd22bd57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2114d796-d568-4802-ac34-2823c685f947",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fca45410-278c-42f7-ae0a-c5309864926b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57a79e27-eb23-40fa-93c0-26d7425829fa",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95eb953c-2ff2-40e2-8685-3646f1108714",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c86fbeaa-6531-4f9d-86b3-0c3af0ffa434"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ebf840d-d767-4fea-b3ea-3fb4af711538",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9c5d572-043a-46bf-9fa6-1c56bc488ace"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfe8e812-9db6-4c10-b3c6-80d0896ac5dd",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca3a0c1e-a990-4bae-9d49-7b754dd743a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08b7479a-2580-4b8b-88b6-f8034e533823"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc80a1cb-346c-4663-ac4c-e730a11a0724",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f444df1d-437c-4a95-a277-e24b90eb2c9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51f5cff6-579d-4baf-b53a-5a0bd07884c1",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "147ea6fa-ba0e-4cf1-a764-32396b2cc12c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "21a8edf5-1fc1-49e1-ab5b-6d444072d409"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6e0c873-3238-4b3e-a368-95f934f49fd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3824de3-b00d-4d58-800b-ea11ae68fe8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0f06356-afbd-4ca5-abc2-32ba678236fe",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53fae6a1-2b2c-4f1d-902e-3147e9568dce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d12723fa-1eb7-4b9f-b038-e8daba782ea2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ac5a9ba-6845-4776-b6f5-40998deb8a4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c00b3ee9-5699-4c83-b634-620e9828293a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a4e77b0-3a08-432a-86f8-be014e346fe4",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97e6dd2d-07d2-4dfd-939f-fa9d06e5d00e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "36b8742a-d0e3-4a96-a76d-4d4acc81dea9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6658a26d-fd96-4b5c-bd44-0bd7bc8f62fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0291c2c-e299-42ec-bd01-199c56805aee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95b35015-baad-4c7a-863b-afedd5d868e1",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61314a50-3f83-4bd7-bc16-31e809c7d358",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "935a0919-4299-4730-a0c2-08a3de7e3b82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5f9ecfc-fd09-41a1-aca6-8a160a2f0416",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77e31e35-672b-4aaa-8dfa-680d0bbdee9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7a99d57-82e6-445c-9c8d-7721f1683616",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d163b7aa-d1f9-4673-a433-62bb6685668f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "358da4a6-58a6-4a02-8a30-112c0a89fdff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98821d1e-fd08-4341-b22b-58fe429997d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b271bd6b-ba70-4bd5-87c6-1af6a21c3740"
                        }
                      }
                    ]
                  },
                  {
                    "id": "866a40c1-dad4-47d2-94b2-176ec37f32ae",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19ec873b-0259-4f17-b3aa-43105c53be66",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e124374-ea10-4155-9f61-57fd02799f75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ae22baa-b76a-443a-8682-8df0ccab9b72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5126b209-a054-477c-bab3-4ef303ffc77d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "427256b5-68aa-4ac5-b6c7-6b567327b5dc",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dee3aca-fb27-4407-b08e-5b414e1eb425",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1e1de4f-abd1-4e82-8f59-c1b120f918dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bdc2f2e-7604-4495-9630-59802cebda5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "941b0d8b-db57-4ea7-a724-c50bfe403687"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2af3bd9c-3167-485f-bf58-c3ee04c423d3",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17306d87-d7aa-4903-9d2f-891598ba85aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4fb34a7-3c0a-44e5-979c-9d5bd8296a5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5333b018-ede6-4512-a3f5-c13677e92224",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27b5a282-6034-4348-875a-6a86ba242a65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83c46096-3007-4397-9974-3801dd95082d",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4b59713-3dd7-401d-bb29-e21d530d2371",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "764ba912-3820-4df9-be6e-f0dddc88c29f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "294db7b1-d777-46d7-aec8-2b039cd97b96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c617b8fd-2313-4c18-9070-f4dacb14bea0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49c52e02-c632-45b8-98c8-d46f1cff7d35",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1117339e-330b-46cd-89c4-c05a3fc3439c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe47c873-fcd4-4143-8c7d-303c99e579f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7910bf99-2339-4738-8080-2bbcc1edf043",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb2e29fc-5931-48ce-87a2-dd27580da26b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2511c688-d97c-4a32-9e6d-848542e0b4df",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5eaa7153-4986-49be-b924-9ba40bbbb25d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd3d67ef-cbc4-40b8-bd47-e6b6c36f2a97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1de87dc1-fcff-4076-b986-9e0b96313bef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7057108-f752-4886-b83d-c70aa370bca1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26725b64-2aeb-4570-956a-76f017580be4",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b49b465-5aef-4507-8899-00e8c729a585",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0d44ec4-beda-4bb5-abc5-c0a603edc9bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f76a41af-bff2-4a21-a31a-aeb1050cb577",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb105bc1-d1d2-4c0b-a018-228e90a03e7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03c78515-13e2-449b-b96b-b8831c1b9cc6",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "145279a6-b1e6-4b22-9b61-26c9a3965fd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25ad70e7-e9fe-4aec-9ec2-d55cab8fe5d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56daba4c-47e5-4ac3-a012-3a4cbfb2c494",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41658bac-d2f7-49f0-9437-5f8fc8fc4987"
                        }
                      }
                    ]
                  },
                  {
                    "id": "647388a5-e56c-4b1d-a579-ae93f2089464",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7532458c-e6a2-44b7-a68f-107d0bb19f72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3aa20cb3-5b93-4000-a4fb-129ce2ae6cbd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "546af681-adb1-4e53-ba3a-fea946c1cb16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e42c6810-75e2-49d4-a392-0136ca1f4aa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e779ab8-6430-4714-bdc8-9bb4048ed8fc",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "513c34e1-3ecf-4977-8a11-23441f52f334",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b691612-35c5-432b-9dff-4b914f883761"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "310fe978-a4f8-4877-85da-884de1db0d46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b6d6517-1a8b-49ce-8579-c2419813ebb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6176f45-a45f-47e0-9ffe-de5cb5f27d1d",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57e5ee7c-0f7d-4ca2-923e-7f034b298b67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "035faa9e-5ea2-4c8e-8799-1888b4a0b8fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "304e84bc-b0c4-4b1f-ae63-7f310ce022df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "963903ab-712c-487f-8583-f2da1950b674"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e2985a9-1839-4e13-a736-a7b925d88765",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd938fee-7f8e-4869-9b51-344691f4323f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1a6f509-0d29-41dc-a944-87793602d6c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "016d2437-716e-4426-b379-88df8ff232c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ecc5b41-24d7-48e6-87a4-1a27339821d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e6b99d3-236d-4601-a5ec-e9f198c02a36",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb3d1833-da3c-4109-a008-5534b8773dac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15bca639-6a6b-418e-a2fb-8c08879206ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "999419cf-3969-4620-99d8-d091c9a5b92d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdc3a5eb-f980-471a-ac6d-3ee6f6d5ad12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ba2f269-3668-4c36-a18f-10266b295c1b",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0915565-77fc-4ddd-a459-18e19006995c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf068b73-2e88-4422-a8b6-a71070176103"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb5b312c-808f-48a2-92ba-5721e89f186f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cf52fba-934f-4cf5-a0dc-a9ffebbf6cd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64913a9e-2036-4f8b-ae72-238cc0c1edc4",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3a96849-908b-473d-90d0-334842470734",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cad19079-e982-4e24-ba34-d43f6346f000"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b2920ea-e9c9-4551-923f-e79744f464a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a84f0423-2296-4a1a-a4b1-b1190afab54e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f656f4ef-e059-419c-aa4a-e5a0f69e1361",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cb2e6da-0c39-43f1-9466-d52e1d23fffb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "712a15aa-a3d2-4e36-9118-d9fafc08a2d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45b1d9c9-e348-41d9-be4d-4f6ab76e89a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb0f9cd3-604d-43bd-a884-f15900f97221"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fb37a94-c5d7-4a36-a6c6-d4ea723fc56f",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5154b6f1-4806-45dc-a233-05f2dd95c276",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcd42429-af92-4ebf-94f0-6c2a3e172623"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e62b2468-4dac-486a-a6f1-509d46d285e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37b56182-d28d-4d9a-a83b-8eb45dee010c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9b24c9c-c63c-44fe-8acd-9c836f66f314",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "737c857d-f450-4c9c-ae4d-2bf24bf6354a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4bddaf8-1c40-4cb9-a50c-5cecafaa322f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf0cf1e5-204d-45c3-ac2f-49b3bb6240ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e3d9af0-11a0-4d35-b461-72ff1f356b9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddf82fe7-2f2f-4178-9f98-6cfa53245ec4",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c890aadf-d160-477e-a88f-5b16dba0f225",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa0163f5-d33b-4d2e-987a-59e0adb3e422"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fe665e1-028c-4b59-a46a-141ff0324639",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e96b4da2-c84f-457c-8422-652466648eae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "353ffee8-9e23-4615-a2b1-821483ddb5c5",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57d4fc2e-0c97-413c-afc5-efa82bcf24f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b65d11dc-2aee-4351-a988-10e0b6e77f02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80284817-9875-4051-a487-628b145444a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da96bfa8-b025-44f0-839b-fcba448befad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8feeabcb-faaa-47e5-b798-760c6c07cf80",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "772023b7-d2ef-4bcc-82a5-a7bb497e4bd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10a394f3-4acc-4b66-8335-4200cda9458f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af42a5ae-d44d-476f-87a8-88976dd93bc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f55c3c91-4528-4b4d-ba7c-f4ced116c78b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "983a8656-aa8a-48ac-a94d-2c6ea4ee68b9",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "181c1792-da14-40ef-9816-c031e92805db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f43ab179-96c5-4f2e-a8c1-67c1ac7ccc3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "035d76bb-01e4-44e7-a3b9-e036f5f5d562",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99fe8bfe-ce3f-43b2-9e39-fafa5211df25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "216b50b0-132f-49da-a711-45b959f37f2e",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbc46215-07f4-41b9-bb7f-c20ac7a5a80d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f3b6bab-1893-4ec6-a101-006577d20722"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5626493b-286a-4211-b44f-f84f5a8f0c53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "573ba52d-20b8-4037-bb6e-8e8bc6abcc3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc1c02b4-c04b-4d3b-8339-160bfe439c89",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8541b53d-ea08-48b5-a007-d9a914e0b95e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "551befa2-178b-42f2-a568-072ccef9f336"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a78b5d76-1a76-451b-8f6f-a393b1d4d4b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1722996c-83c3-4d78-8f7c-1d274a74387e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13bed516-9b1a-445a-ad75-5247c5d117b8",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "833c9839-11e2-469a-aed7-31947eb1c352",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5182e8d-1570-4fde-8e01-44595a424bc1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fbd16f2-e2e8-4b9b-be61-f36614badecb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95b3c85c-265f-4ad2-92b6-db25290c96f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dea1cfc1-1e78-4ebd-89a2-d9e0522e5d40",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a1996a5-2297-4495-b297-0f7e73daf8bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15c28d25-ad0e-4939-b728-d55a9d216343"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "623b6c6a-7567-452e-8440-a4ccf7eac3f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4136a236-f68f-43a9-abf8-b77fdf92c41f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b21491e-6b3a-4c48-ba47-c9db07539a43",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcf195c7-3944-4746-af52-53ab3c52c33d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f05b2a1-7cc4-43ba-80d4-9232b5cdaf3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "012f4853-e775-45fd-95d8-df534c1fc98b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c08984a-c771-4d94-b123-caf7fb5129ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f61a796-cf68-4c93-8b3e-b438a8053bd4",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53123235-f256-4b92-a002-31baf93fabeb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70bce7a0-15a6-4381-aed6-f60c05e260b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "507b6212-78b1-4a63-b927-6243462e1b40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dad94983-eeea-4cc9-8c31-ed05b574ae72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a4004d7-5a9e-4e61-930d-319936bdcb62",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcf5a540-0c9e-474d-a0c4-8f3746b6da07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cf14a3b-39d4-4fd6-b485-bead1413a198"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e508ecad-1459-482c-9ec7-470b40c0390c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67b2de09-12da-4402-b79a-92904a4c5dc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bfe0ad4-7cd3-4668-bfc3-bae89c8b8b7c",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "874e490a-aba7-4448-91a4-d4bced2444c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c7b33b2-4ad8-4b64-9cca-d12975b019d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51603aca-7fed-45f1-841d-63cbd8a40ce3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93a90a94-e529-4e3b-bc16-10409a04dfca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6dd74ca-d193-479b-a535-88fa508742e2",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb449991-b3b9-4a7f-b19a-a5c6f5afa978",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "64f963de-baf6-4394-aad4-8a61f76bccd0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43fc8bcd-35b0-4aa4-beac-0fbcd13df99e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a03c1cca-db5b-48e5-9692-68e226eea825"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88d8e971-ce22-4a55-9836-92b5742cd4c2",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2918bc4c-5600-42b3-8b6e-a854c66a79a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "18a46de1-09a8-414c-841e-5acd99853654"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05a91237-1ecb-4eb5-8849-72ef08d3e551",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02b16790-c331-4426-886b-75a059063d78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f384aece-f54e-43f7-a756-76af1334d8ab",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17f37e61-b6f2-4db3-bfa0-5ca291fcad95",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e89beb37-9658-4e03-92db-41c1db8ffe52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53f8d294-f3c9-4ab4-a843-7d835922f02a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e739831-0c25-4544-81a4-931fcffcfc20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a20b30db-0c0c-4eb2-a0b5-137663abc270",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d0407a8-47f1-4102-999b-8317e71b177c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b0750ac-2251-4d08-9ca4-e6ac2832d2dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dcd1c08-4078-4479-a65d-03cc5b7d1388",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f02fb5e8-75c0-4fc9-9f25-ad734760e72f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3495ed0-3dba-44a3-a03a-81e9a05dfa9a",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8d47244-2315-4dc1-bb2f-9db8804d9097",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5a1b25e1-e208-47b0-9fb1-8ecdac1f63f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "037adade-ef19-42d1-bcf4-26fc6bc52e17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c127053c-af50-4687-beb5-bdf696eecad5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43fb43c5-17ef-4c45-bf05-5aede5c7ba2d",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cbb2367-45d6-4801-bf28-32d7622249d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "853a55f1-1745-42af-8567-e583dd25354d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2ad6c7a-7154-4c96-b33c-3335576b6e08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f8ee8aa-de9b-4a43-abd7-229cb56551c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bda52f6-b775-4129-a68a-c6268f23aea9",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bda56e48-158b-4715-b097-8b772171c545",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a9ea0b5-8dd3-4d03-9f42-007ede08f479"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "556ece6f-7784-4fc0-bf71-a2ef5af39ce2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f91a99d-bedd-4844-a7d7-a91cb65ccf1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75dbffd8-ac66-4359-864b-2f8542feadb5",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e071b347-77b9-4517-9be4-c327a46b2bce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b8833bb-cb56-47e8-9046-524d657b24a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9679a1b3-8391-4966-a63f-f1af87fca6f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26eacfb7-6584-41b6-b40e-c07f74c595e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6919fbb4-9692-4c03-b7a2-6db4cc37cb73",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c65e0c4-563f-4c7a-9a67-1156d917dc6f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "49ae7c4f-b34f-433b-9cb1-b48ccdf25e27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8028a4b-6383-4fee-9e27-2d5d9a790790",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c04dc069-13ae-4599-b26c-a0e9346486f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "273d9e63-66c7-4471-b386-206063c39fa4",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b347744d-9962-40a8-a059-645ff8c0ff4a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ced7048-32bc-48ed-a285-1bf90c17c9ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a72a8ee-1e13-4437-a3dd-4d49c4a1ce22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b43ee151-8e8f-4ca6-bf13-78f4232992d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d21a80b-84f1-486c-8cc6-7d32d8a75543",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9370ec9-46ff-4737-8390-9126a6fd84b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a22782d6-2fde-4a0d-a80c-42d0349fa03f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18f06ed5-ba96-4154-8f9c-87c0106a1650",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74defa3d-ef56-4cc1-b34c-46a987ac470d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1922ce1e-4d94-46fa-93c1-c09d64cb443a",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85fabc13-87fd-4b06-9af4-5152657be116",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c0a4b272-edb5-4651-b779-6391ecbcd867"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "232f3f0c-fb6a-4580-a072-bccb977be2e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56890743-7bd3-4fe4-b922-fa2b9612fd55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1956dba3-7e29-4f37-964b-59850230a907",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ca1bf16-5cd1-4dad-a89b-a292fdcbdd9b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fbe94f57-daac-42ef-b1ff-e9846982929d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d87d7fa-a3c9-421c-8ebd-bfdd229baca4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56df89c5-151e-47a4-9b0f-22be6a75662f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c26a7ed7-8a9c-4790-8821-142a594a6640",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77818477-3be0-4976-ab12-727ef75ba9ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fa638af7-b950-46e7-b3d0-185fee5d0c2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d8d2cf4-3740-4928-aa6a-9ceab0053449",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c3a1f77-4694-4ac5-ad05-902d767e5ebd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7091e081-4ccb-417c-b136-2104d58fa255",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b5f902a-ac2e-4c84-9a43-8e94c3435922",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "41d7a424-4c2d-43ee-82ff-1646440a9835"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55abaabd-c598-4d82-968d-a58e9666ea29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a213bf6f-945b-4bca-a0c1-a6f5b5411a34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d2f9756-fadf-496a-9e41-5004e3896a14",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cdabf04-c365-4bb8-8eeb-d8e12c5c4ace",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6ac8e446-d2eb-4bfd-815c-8108c66f16f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8d73af3-22a2-4a57-b3fd-b89e5adb1495",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60ed065f-8a81-4969-a2ab-d23f2b1067e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29621fc5-ba81-4777-b7ed-28c1ddedf6cb",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b5b2c90-55d5-4383-b3cb-ca9104d3d1c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4609e06e-d19c-4828-a298-7c65aa6c134c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6881c256-1f9d-4975-a3b6-6867826b347e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "271aee25-d960-4c3b-9d03-e924e3c274ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d769c5c9-f12d-4730-a446-df07332e51e4",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "905848e6-2f9b-496f-811b-ea63c229658e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "23bc8d26-d37e-4448-bd13-edf182a9c899"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d935a54-a1be-40f3-95f2-3774aa2f1285",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e366ac1-7f78-4f40-8eaf-db087e4ca3d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db3b9592-583c-4ab1-809d-d1708ba8ac8c",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80e928be-6e69-4d1d-a888-05dbb7726c20",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8994d528-27c3-4d05-b640-d04d263e22ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17eb978c-b800-4c27-b374-5b7e3d62c84f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc3b738a-bbad-4341-80cb-bddda7c13841"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff27ef4d-e91b-4e47-9a5f-519ff92922f1",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da9ca183-30a3-442f-aa47-91878e540c07",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e6801d6c-fdc1-46fd-89b2-ccf618ee8ee4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5722c9a8-d14a-428e-935b-c572403ae3b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4da1b819-f4a9-455b-a049-b5d2ed0bf5a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2174782-298c-433c-89ad-054548ecb2d2",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58485d2c-0dc9-48a0-bc3d-9bdfa710b604",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "925def69-4d88-4745-af9f-4584aed6e219"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77207cf9-ba43-4747-96f7-5e1bf2281776",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3d2d40e-6441-401a-b226-b1a318155ed0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ced74449-09d1-4bfd-b77e-23afb1d709c3",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d9d63f5-a3c3-4ec8-9257-06068457f635",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae96cdc0-561c-4a87-8220-f90412522d93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb1c9836-6333-4dd3-be6c-4523e814f158",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b7da287-be88-461f-9892-96ae9c011bff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b196c5f-b64e-417b-85bd-ecc86b53047c",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8854f867-636d-47e5-a1d1-74bd5d952640",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c73391dd-495d-4675-adf4-07aafdd98bfa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e790f6d8-b210-478a-b646-0f65dd65b693",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f43e3d5-4312-42ca-ba27-95fb862687aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "943367e7-321d-4e45-a5aa-4d8c03024f46",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88752678-fe53-4268-86ee-9f2137bf46d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b21f492a-9205-4d6d-87ae-35687e128daf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9f3f547-1487-4a5c-a202-617adffcc644",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66f0d716-4e38-4cac-a917-1ceea2566a2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60d4dd15-3f42-4d0c-bfdb-6f54df16767b",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af87d03a-6a46-4155-a47c-ff6daa582697",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a8f8aa3c-26a3-4879-8717-56c351406394"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04adb092-5674-44cc-ad37-89562202138a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7684ca06-8704-4162-885a-555601cca825"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef910e55-36be-446d-9709-7bc1fc42bd92",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73eca808-e981-478b-8e8e-f0559f004fbb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a809f454-99b5-4ba6-930a-7e0fd9b0fe75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3105801f-f62c-463e-b2ea-fdbcde1769e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b0ea64a-ddec-4201-b206-dd48af26aae5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d577115d-16c6-4f89-85fc-5ea13cfa2b60",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a470360f-097b-40b0-82c8-4719e486c480",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b40edae0-b74a-49aa-be38-487e4456ec2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c985526e-fe07-4897-b7d2-9fd4ebac873b",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e8bff06-8ca7-45e9-9e23-8cd244369a5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ba735f9-2033-4e55-a656-7d68da00ac77",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e341c878-353d-43f5-ad24-0c6721a8ffae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bbc6e99a-9662-4d0f-8900-e813e16349df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b65289e2-ebe0-4049-ad95-d94d2f3f12d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5705211-acc3-456d-9593-79d34cd5d46c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a32a35d2-1786-435f-9eab-7312f9cc4c5b",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58da8849-f4ee-4b1f-8149-0ac99089bd23",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "39c3df9d-d455-4dab-8721-c6456790d8b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1007e4a9-0fef-4cfb-9edb-76b5e83822e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c83594e3-2f6a-4e7a-9464-b0dc413a2f62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2439e2e-651b-491f-8c53-96d9037f1fe0",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22c9c56b-eb56-40b5-b669-3d13d0e348cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1629dbe-d23a-4fb5-aa13-ab6cf1fd6c46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d27fcea-0d29-4236-8e97-9188c7606f40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fb5500c-9114-4087-a78b-466f45fe9899"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7e53cd9-bae0-4aff-8d8e-af78d7ab53ef",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e22f273e-912c-4a58-8320-bee505e26726",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "92ed0e3a-88dd-4ece-95e7-4fb2466412b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db864255-19d6-41ac-86bb-4bb64ba126e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6dfdb29-b1f4-4ef5-b54b-ace42107d7da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c73ed005-215b-4dc0-b101-7e6637ffca62",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd9c053e-1727-460f-81ee-5c30c57c486c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "95727527-db37-40f7-ace5-7c3d07f1e30d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ff0bf50-4a81-4235-8a6b-2a4dd0e8f739",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e3d0dbe-cd16-4c51-95c7-a32def4c56ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f37d8922-b715-44bb-ab17-d72757d17e1d",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2e962cc-b90e-4444-88ce-7842b4ad9f6f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "13bc1c4e-d7fe-44ba-8106-d9147c42364b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afcba679-fb95-4d06-ad05-bac1ab992d23",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74cb5980-062c-4664-ade9-259680097ef5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6137e12a-6761-4b8e-9ed5-4af7db09ae58",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff348ba7-2296-4656-ae5f-5f7c3e78394a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b3388cf0-4930-4990-8e2c-3205e3172d67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29e5301f-0fa3-4e61-b35b-dc255eef0984",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "760558c4-c831-4f00-aa50-4624f8fa0204"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7edb20e6-ce73-468d-918b-8a0058ceeaae",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "52f470e7-6956-4274-8d65-e538873d3044"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "25f6f093-547b-4428-a744-7865e0923a47",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0abf3eb6-beb7-4ff6-a3ef-db0d1f830943"
                    }
                  }
                ]
              },
              {
                "id": "54d92029-a8bb-4b73-bb69-ee84c87edaa7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6d3d18a6-e38d-4a60-81b0-372d12393207",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba8c6c9a-00d4-43a3-9e05-98aff73167f5",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "4055d1e7-52c9-481d-8462-ed49d19bae87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd343e8b-f169-41bc-a4da-800f46d38618",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ab7101ce-2246-4c8f-9442-bb753ed6958b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dc9a1bdd-f3e2-4a43-8441-fcbc26ddd17f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2ca807bc-ecac-4e86-8e0e-a0b14579c53d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6f03f37d-bb5d-4f86-a029-06ec5de403b7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "72748a34-9c95-4aa6-8ad4-73b95e14ff21"
                    }
                  }
                ]
              },
              {
                "id": "823869ab-a808-4a5f-838a-ad37ab8365d7",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "a10476b7-20ee-49dc-a660-bed3a37651f4",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdcb3a12-9c1c-4811-bab9-39916f6189b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "a426f294-081f-49e0-a92d-037c75385ffd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dc6a0cf-52c7-44ea-b911-9d1623c55e35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6a041d3-635f-4261-b5e6-e6869cdd0f09"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "e46b1af6-214b-410b-8701-ea39cd7725f3",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b5ead84c-7c0b-42a4-938c-1058fd868e59",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "230c5d7a-db03-41db-b8d8-6d249c334bd0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "c0ad4570-4282-42c6-8639-cb36b5bc151d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5a90a34a-7cf3-4770-b121-8344924bed7c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3b39798a-b753-4189-889d-0f8876ed3b58"
                    }
                  }
                ]
              },
              {
                "id": "f4c80884-5364-4684-8dde-2ee36a63b291",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d8956ffe-3a8e-4d91-8265-9b3e0578069b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "8ec6a05a-807b-4d81-a372-13dda8f78fdd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "14f17673-1ed7-4602-8982-e9dbde42df71",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9233f3d0-be5f-4e31-82fd-1220a47ad7cd"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "12ae328b-b713-4dd8-859f-39112f6882f6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "88c80a10-0673-4f5f-89c9-1ffc878780de"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1dc71396-4743-43ef-ba0a-ec68b406ef4e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f91ba587-e916-4f04-85d9-44e9b70d47c0"
            }
          }
        ]
      },
      {
        "id": "5a6eacb5-18fb-4e14-838f-a97c62cfc8d7",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "de5f26f3-2cc5-4502-9041-7323a9746c42",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f06b39b8-1bcb-416b-b91f-412a3dc640df",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "66fc3cfb-a04e-47d7-81c3-b1d629d321f0",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67843e45-a2d7-42d0-8cc4-ca496279136e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "dea07705-db1d-492c-b330-ff5289e5122e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6640ecb6-c6d8-4266-8e84-eaf13b81419d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "debc9f94-6c5d-4531-a477-872e15927087"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cad1794b-9466-4638-aefd-fdc2ac5a787a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "feb69b70-2b31-4ded-9c18-bbfbdb59cd07"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "52d48ca4-7f7f-4ffb-b5a6-7b76bc6c0fdb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c715b73a-6a29-465e-8faf-3f73315f1fa1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1fc29d10-4423-4b4c-838b-1ca4f47b82c4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "874174e7-995a-4c53-8b0e-4aa60fb943d4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "10ab345e-f6d6-4bf3-8431-da5ab7c25b04",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d2f52176-362d-4481-b6a0-e71b17d78f54"
            }
          }
        ]
      },
      {
        "id": "c1555c75-5e6c-4bb2-95fd-352134272e2d",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "a28c6f70-be9a-4f36-a6fd-ef236686c4f3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "15ef91ac-f938-450f-b7a7-dc7de46a7079",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7b02d53e-f878-4817-9b7b-87ae6d4f1293",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57ef44b3-0676-4f40-a927-7db3c51b2622",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fc41559a-ac99-49a5-b4d4-75932e909143"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90c0058a-dddc-4d31-9259-8cd4a74743c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ead59307-bf64-4320-9076-ab663a8d0007"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bc81d65f-92a2-4f73-b7e3-b0274899904d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "88893664-4234-499c-b100-9b6ee3e5cd0b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a71c8905-07e3-44a5-96ad-d5fe77eaf912",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a189d11f-7d80-4b80-8a0f-d10a8305de68"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9f82eefd-e926-4dd0-a9d8-49f6f064e2d7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "5c373455-23db-4c0d-b7bb-b21bb6710f1f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f27bed2f-b0eb-489f-a30c-2784eaa413cf",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3734f34d-97d7-41e6-ac9b-945a6faa7b76"
            }
          }
        ]
      },
      {
        "id": "40e1c20c-e3ba-4f82-a81c-bef1b005778d",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "4371e68a-8a8b-4cdc-a196-3b1449d2a022",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7f83063c-0e11-44d5-95d4-c215c8151bee",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5cec9098-118f-4006-b697-9d7455e7b138",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05722d3e-10f4-4b75-a46f-650d2ea3ff36",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "18f76de4-10b7-4374-af53-5f231615ef86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "026289ea-d17d-4cc1-abc3-7a9c03d05b42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "377b862a-be7b-44b3-b6c3-eb3931145aa3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3df3708a-8b33-4582-8ca5-49b3e0cb7c9d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d45ba709-93c4-4d48-b3aa-13b00f6db706"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5ce6520e-3d6b-42f3-82d5-d42a73604d4f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ffb86019-71a8-4ad9-9888-acf06e3e4622"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2bc16e65-f72f-4daa-8a86-14dc3245147a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c9f69b32-9d1e-4d1b-a699-7ef21502eb8c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9f3db650-e5bb-4768-ac4a-22f25e37bfff",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1a15c3c2-0cf5-48dd-8ef9-9e7a47577665"
            }
          }
        ]
      },
      {
        "id": "7838d10f-c96f-43f5-a9a8-80735be93f76",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6bfff297-6b61-4ae6-9165-9a6cf3b840f8",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7998cc4c-e6c8-450f-94cc-dae06ed3500c",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "86836ce0-b2bd-4104-965d-24b1e9489042",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fd10a3ea-3152-4f3d-a037-9fcb8d029d9a",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c9c9746b-ab19-4e5e-ac2e-b280516b9121",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 37
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 66.33333333333333,
      "responseMin": 10,
      "responseMax": 319,
      "responseSd": 18.951483587274367,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1723596054710,
      "completed": 1723596079498
    },
    "executions": [
      {
        "id": "4f8214cf-d5d8-4fa8-a182-c3f8a80064e8",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "77eddee5-a8e4-45c4-8476-7ff6ec9925d6",
          "httpRequestId": "f652e864-4013-48b0-9762-c645f7f9afeb"
        },
        "item": {
          "id": "4f8214cf-d5d8-4fa8-a182-c3f8a80064e8",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "91eda2a6-cb60-4dcc-8374-c3c3f352ebc7",
          "status": "OK",
          "code": 200,
          "responseTime": 48,
          "responseSize": 0
        }
      },
      {
        "id": "9a2b9c59-f453-4b2c-bcbc-154ca894f813",
        "cursor": {
          "ref": "df47b1bf-35e5-4c37-b0c7-fa12ca214e53",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "53418b6d-99f7-44f5-a166-c2211093f476"
        },
        "item": {
          "id": "9a2b9c59-f453-4b2c-bcbc-154ca894f813",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "0b574a33-c2ed-433c-9270-10d69c0a324e",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "83ca550a-4e0b-4fc0-a3de-278cb2fba505",
        "cursor": {
          "ref": "9c764d46-0daa-4ce9-b610-c0b11002b1c6",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "b0408d99-3bb2-4ff3-b96c-4a69ab2a85f5"
        },
        "item": {
          "id": "83ca550a-4e0b-4fc0-a3de-278cb2fba505",
          "name": "did_json"
        },
        "response": {
          "id": "ae9985b3-6eec-41be-b68c-8fefdf98b8e6",
          "status": "OK",
          "code": 200,
          "responseTime": 319,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c6ec57b-257e-4b96-b24d-fe5e89a4661b",
        "cursor": {
          "ref": "8ed4d740-605b-4d2e-8367-9a808a9f885f",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "da2099d4-26f3-49cf-8d6f-266206ecb719"
        },
        "item": {
          "id": "8c6ec57b-257e-4b96-b24d-fe5e89a4661b",
          "name": "did:invalid"
        },
        "response": {
          "id": "98e7ddc5-3dde-439d-9d5d-a7219d34312c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c6ec57b-257e-4b96-b24d-fe5e89a4661b",
        "cursor": {
          "ref": "8ed4d740-605b-4d2e-8367-9a808a9f885f",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "da2099d4-26f3-49cf-8d6f-266206ecb719"
        },
        "item": {
          "id": "8c6ec57b-257e-4b96-b24d-fe5e89a4661b",
          "name": "did:invalid"
        },
        "response": {
          "id": "98e7ddc5-3dde-439d-9d5d-a7219d34312c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9744ec0-2743-42f2-9d2e-1b5f62e33f20",
        "cursor": {
          "ref": "7f02ff14-995d-474f-b509-c16d600c1a40",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "8463866b-f242-4e52-8fb4-957526a498f6"
        },
        "item": {
          "id": "c9744ec0-2743-42f2-9d2e-1b5f62e33f20",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "f94ffe8f-ff70-4fae-add6-e180654323d7",
          "status": "Not Found",
          "code": 404,
          "responseTime": 112,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98ce2127-dab2-491f-b5a9-5c344b1388e9",
        "cursor": {
          "ref": "cc2bb225-4e10-4383-a99e-2096516b27e3",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "71e556d6-4a94-4582-b2b2-c6bac8f92801"
        },
        "item": {
          "id": "98ce2127-dab2-491f-b5a9-5c344b1388e9",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "633914ed-807e-4f12-923d-47edd9b98348",
          "status": "Not Found",
          "code": 404,
          "responseTime": 65,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12fb84ca-3270-495c-aec7-ef2b17ed8044",
        "cursor": {
          "ref": "694d2e0b-1e20-4687-88e4-c40686d6d43f",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "6a5b24be-77e2-4625-bff8-0a4350d9d90c"
        },
        "item": {
          "id": "12fb84ca-3270-495c-aec7-ef2b17ed8044",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "40f3d9d5-1269-4d44-811c-1e27fc9c9868",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82ff0a6d-c1b8-4576-b1b2-8f363fb1db47",
        "cursor": {
          "ref": "3908901d-f5a2-48b5-b75e-5067486d1434",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "66e14217-dab6-4cd8-bfdf-c4af8aa6228e"
        },
        "item": {
          "id": "82ff0a6d-c1b8-4576-b1b2-8f363fb1db47",
          "name": "identifiers"
        },
        "response": {
          "id": "ffd232df-590c-462b-9412-1f1f7b1a438b",
          "status": "OK",
          "code": 200,
          "responseTime": 111,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2a66e66-e459-4c37-94ea-81c258679cb7",
        "cursor": {
          "ref": "ab24eb0d-b097-4d02-868d-0221c134dfa0",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "48262044-9837-4020-8ddd-be42e69f0bea"
        },
        "item": {
          "id": "b2a66e66-e459-4c37-94ea-81c258679cb7",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "8beb44e2-a237-42fb-a37a-77e68aac94f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ad0dcaf-a6c6-4923-a250-76db5dfdc606",
        "cursor": {
          "ref": "33211663-90cc-4e58-9918-46f5c77e809c",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "01e03889-ec68-4b26-a705-63c5e064fb30"
        },
        "item": {
          "id": "9ad0dcaf-a6c6-4923-a250-76db5dfdc606",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "6c112dd8-2e82-4cb2-b937-c544c885606b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19403cac-3cc1-4962-9dbe-ff1727344ea6",
        "cursor": {
          "ref": "fcfc9143-71f3-46dc-afaa-466d44e780f6",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "77200b43-89e9-4e89-a415-e351ea065baa"
        },
        "item": {
          "id": "19403cac-3cc1-4962-9dbe-ff1727344ea6",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "7f7c6fa8-16d3-4af5-aba4-7eef7f2ed52c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0d9e19b-646e-4efb-8193-590d4e51a276",
        "cursor": {
          "ref": "ccc74670-9918-405c-9561-6bd3534519e7",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "0d19ad73-1cdb-444d-950a-9c04d4972ef9"
        },
        "item": {
          "id": "d0d9e19b-646e-4efb-8193-590d4e51a276",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "fb3ba1f5-8168-42f4-acb8-7e383ad44f38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c2016a7-d9c6-4df9-b7b7-33620605f17b",
        "cursor": {
          "ref": "62676634-67f1-4307-8007-c97f49f27b6d",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "67308aab-5827-4e76-b2d6-7d5aa11014c8"
        },
        "item": {
          "id": "5c2016a7-d9c6-4df9-b7b7-33620605f17b",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "7885ba7e-699d-46a7-aad6-fdde64d3bdc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26445a10-14ba-439b-8622-412e161b2e05",
        "cursor": {
          "ref": "efa4c90b-1c38-494d-a78c-55d6cfd325af",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "7116df0c-e634-4753-8a82-4cc0b4d3f90b"
        },
        "item": {
          "id": "26445a10-14ba-439b-8622-412e161b2e05",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "f65adfbc-4c35-4d07-a95a-41c3c141c8bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "889439b3-b52f-4ebd-a70f-cce43ba1262c",
        "cursor": {
          "ref": "11b672fd-5dda-4c1a-abe7-1a5431a4cb3d",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "a6cf1243-1925-488e-a9da-022d4d914706"
        },
        "item": {
          "id": "889439b3-b52f-4ebd-a70f-cce43ba1262c",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "23c96072-9152-4901-9821-5a72a9f8937e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bffcac0e-3adb-43b1-975d-55a121c941aa",
        "cursor": {
          "ref": "b1744655-c8bd-4136-939c-1dfd12ce6629",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "dfa3f0fd-4f88-43f0-a72a-4638d2c513dd"
        },
        "item": {
          "id": "bffcac0e-3adb-43b1-975d-55a121c941aa",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "1d0b8bfd-384b-4f9b-8229-c053c15adaff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d7c020a-578f-4801-8406-b769456df95c",
        "cursor": {
          "ref": "2fc8dc3f-b7c8-418e-ba97-beb8127fd993",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "1b5a55be-993d-418a-a2a3-0612c2e0b15b"
        },
        "item": {
          "id": "0d7c020a-578f-4801-8406-b769456df95c",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "ff17b8d0-fef6-44f3-b6b5-a6193a0f84a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7c8987e-ceff-4636-b90b-b82c5af5bc3e",
        "cursor": {
          "ref": "cc9aa53e-20d4-4dbe-a637-3935cdeab4f2",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "52cfd2dc-d9db-4736-827b-cd2e69896a11"
        },
        "item": {
          "id": "f7c8987e-ceff-4636-b90b-b82c5af5bc3e",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "a5b2f252-9fc1-4c04-92e6-8d4e3a56d5ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38021242-04ff-420c-a25a-b2f52ad92fa6",
        "cursor": {
          "ref": "69a0ca3d-cec5-41c0-be65-459611ecf3c7",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "7772b123-1a58-4ef3-a908-0e6f3a6d4732"
        },
        "item": {
          "id": "38021242-04ff-420c-a25a-b2f52ad92fa6",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "65d8ec59-3f18-461a-8b3d-192a2cc31292",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02e47aec-09f1-40f7-8ef2-2dd1b75438db",
        "cursor": {
          "ref": "af328917-5223-452a-a081-0d089c4d34b3",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "d6941973-e87f-4e50-af6e-14860fed7200"
        },
        "item": {
          "id": "02e47aec-09f1-40f7-8ef2-2dd1b75438db",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "9762bed9-be24-4a44-bf0b-8b00ecab6ccd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60656a63-9ac0-40da-b5bd-c2f1219afab6",
        "cursor": {
          "ref": "bfea4485-b973-4a9d-a812-d89aebc87cc0",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "9003ef45-ecd7-4fd9-abd9-18f404a210d0"
        },
        "item": {
          "id": "60656a63-9ac0-40da-b5bd-c2f1219afab6",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "085df3b9-fa34-4d0e-810c-8784a947791c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6eda23d6-c4a5-45a3-b914-4c3b8e1daf4e",
        "cursor": {
          "ref": "cf1515b3-8d99-45aa-9e01-f6522a116209",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "976a1dd8-000e-40b6-bdec-86bba33c4a13"
        },
        "item": {
          "id": "6eda23d6-c4a5-45a3-b914-4c3b8e1daf4e",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "64f455bb-c163-4ba0-9a27-64c4e508fcbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a930b756-29e0-484c-b897-b9cfb1884564",
        "cursor": {
          "ref": "d0470abb-2134-41fb-89de-539b69eb5eab",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "9186b715-1dc2-45ac-b112-9e1578bad9c2"
        },
        "item": {
          "id": "a930b756-29e0-484c-b897-b9cfb1884564",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "f33c4152-703d-4d02-a5f4-a9483371869c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09adc095-9839-44d5-a5be-fa652b7f5494",
        "cursor": {
          "ref": "f7378d03-3264-43a3-8f0b-3f64e0ce0be7",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "32a1273d-babc-4198-a950-084cd48dd9ea"
        },
        "item": {
          "id": "09adc095-9839-44d5-a5be-fa652b7f5494",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "98f32911-1e8f-401c-b005-f737a1d0da1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26af0b29-5f20-4290-a3cb-b32f1941e006",
        "cursor": {
          "ref": "9e224fab-eb4d-431f-9faf-1f1720b6f8eb",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "4b0d0df4-2c5d-482b-a24f-c308e52bbfbe"
        },
        "item": {
          "id": "26af0b29-5f20-4290-a3cb-b32f1941e006",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "fb92bed9-73c8-4e61-ac8f-8ed12e828d27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4202cba-edd0-478e-9fc8-ad8bb0b6042a",
        "cursor": {
          "ref": "a09ed349-3133-495a-989e-35c844363198",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "3deb80ff-a219-4575-a1cb-333ec0c82b49"
        },
        "item": {
          "id": "d4202cba-edd0-478e-9fc8-ad8bb0b6042a",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "91e8ecd3-d6dd-49b8-9610-8f6496c87ec0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef90df78-25b5-4e7c-b437-bed3d9d3a719",
        "cursor": {
          "ref": "4c1193bb-f0fd-4ccf-a911-9e8ad822eb2f",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "14393b2f-e00c-42f6-a066-97af38ab6932"
        },
        "item": {
          "id": "ef90df78-25b5-4e7c-b437-bed3d9d3a719",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "64d1a86c-840d-4c58-ab69-e8867e17fe60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ece33782-796c-49ae-a6b1-7c7366205780",
        "cursor": {
          "ref": "0c45e201-7be2-46e8-85ed-fb12772f507a",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "0212ca65-fe85-47c6-a371-560bcd86c8fd"
        },
        "item": {
          "id": "ece33782-796c-49ae-a6b1-7c7366205780",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "8e4e98c7-5d5e-471b-b9f5-4b31a59dfe76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd4a6e9f-73e2-49ab-b9f3-cabe79dcbeb6",
        "cursor": {
          "ref": "70b415fb-7a7c-48cc-afc3-ad1c66418395",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "ea3082d0-a25d-47d7-8873-dc9a258cefec"
        },
        "item": {
          "id": "fd4a6e9f-73e2-49ab-b9f3-cabe79dcbeb6",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "5322fca1-7f5d-4604-9ecf-a0fc2d4853e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da4b04da-8fc6-4ac4-92a4-407487867c82",
        "cursor": {
          "ref": "7e328463-2d45-4b43-8a46-04354f23304d",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "558ba6f1-73f6-4418-bb6a-01a12d36310a"
        },
        "item": {
          "id": "da4b04da-8fc6-4ac4-92a4-407487867c82",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "dcd7cdc5-7991-45b6-ba2e-599b3efdfea8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da5cad2f-8b73-4b83-84af-495a73bbc5cd",
        "cursor": {
          "ref": "e42611ff-c3ad-4914-94bc-dd49228812a0",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "6c9bf5f9-c961-4df0-88e5-a870a74367bf"
        },
        "item": {
          "id": "da5cad2f-8b73-4b83-84af-495a73bbc5cd",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "a79a8769-e2e6-4647-a5bf-bc6954d9b46d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94be4424-71ef-4227-bc21-7c80a1859d99",
        "cursor": {
          "ref": "fbc3a274-42b4-4892-905d-3dce77fbdb9d",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "00b5e8ac-3a1a-4ae0-a713-7d6a46eea709"
        },
        "item": {
          "id": "94be4424-71ef-4227-bc21-7c80a1859d99",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "c21f6a2f-cf8c-48ee-bb84-95304023be46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72f5bba1-8226-421c-a3c4-5b5d62ac5b6e",
        "cursor": {
          "ref": "682c15af-c7cd-442d-8372-806f75a04eaa",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "9c4716af-592a-44fc-97ab-43ade6923770"
        },
        "item": {
          "id": "72f5bba1-8226-421c-a3c4-5b5d62ac5b6e",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "68936aa3-04ec-4792-ac1e-e44cfc00c559",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d822e6f9-ec76-4459-964e-1e8f8e7224e9",
        "cursor": {
          "ref": "86339d2d-baa1-4bd6-b7f1-562ee739bfc5",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "b484fa94-5fbe-478e-8fcb-b7a4fea2736b"
        },
        "item": {
          "id": "d822e6f9-ec76-4459-964e-1e8f8e7224e9",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "c06c2ecb-9138-46c6-be61-6c17d8730ea7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d538322-bc91-4370-889d-732ecda743a0",
        "cursor": {
          "ref": "2bedde00-8f29-4fae-9596-24afa998fe9a",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "edd4cdd0-3caa-47d7-a44f-78f70f7a1bfe"
        },
        "item": {
          "id": "7d538322-bc91-4370-889d-732ecda743a0",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "5969d236-406c-4f4a-997b-0fcf5c83ff29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "002e874e-b38a-4021-9b13-7f1dfc6b0d77",
        "cursor": {
          "ref": "62769c81-9531-4166-b659-f434bd43fd61",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "42399130-f7b0-45d0-9a32-35a0bbb6d580"
        },
        "item": {
          "id": "002e874e-b38a-4021-9b13-7f1dfc6b0d77",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "47e43b46-506d-462a-ab70-8f85741c9573",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75cdabf2-284d-4361-9b10-bde5f84076ac",
        "cursor": {
          "ref": "271e3a10-918e-48b3-9814-630e56532cea",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "39c9598a-7df9-4a41-9367-a9f7e021ccbf"
        },
        "item": {
          "id": "75cdabf2-284d-4361-9b10-bde5f84076ac",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "9d3d9a86-d6d6-4800-b79b-864e176b269b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f577e195-eb9d-4f18-b048-8f61506f5109",
        "cursor": {
          "ref": "3f1f8157-d63e-40f8-8669-357790d9305c",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "d7b3521f-0552-4838-bff2-e32b97ee2a25"
        },
        "item": {
          "id": "f577e195-eb9d-4f18-b048-8f61506f5109",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "2fa682f6-fe40-4682-8324-9606a1d9a04a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5c5322a-3af9-4f1c-969a-dd9e41f3a4f4",
        "cursor": {
          "ref": "7d180bb0-9b4a-40a2-8eaa-7edd14fb0d26",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "7b90772e-eac0-4691-b8a0-8c2f62f9c0ef"
        },
        "item": {
          "id": "f5c5322a-3af9-4f1c-969a-dd9e41f3a4f4",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "7700f8b3-764f-4ebe-b9d9-b799b8d521c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "869b9dd2-5a3e-4dcd-9405-68b15d1f75d6",
        "cursor": {
          "ref": "6adda298-20c3-4a8f-b7c8-7ccd8b83df2b",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "77cb2cd4-7d64-4946-b2ce-c94543cab343"
        },
        "item": {
          "id": "869b9dd2-5a3e-4dcd-9405-68b15d1f75d6",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "f9933884-9dd3-4b16-9a0a-6add14732b33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f88cf197-acc4-4e5e-afe8-3e82acf89c4a",
        "cursor": {
          "ref": "fe0d245a-07dc-4407-aeb6-3b8d250da3d7",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "9eca98a0-6c50-4bb0-9d15-319bd603f476"
        },
        "item": {
          "id": "f88cf197-acc4-4e5e-afe8-3e82acf89c4a",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "61e04335-474d-4dfb-b09c-3b2c7fafe767",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1857d65-704d-41ff-9325-7091e1cf6069",
        "cursor": {
          "ref": "05531d84-46a0-46dc-80df-7d48681e6ba8",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "74ffce62-ad1a-493d-a898-ec0e948448d2"
        },
        "item": {
          "id": "e1857d65-704d-41ff-9325-7091e1cf6069",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "ba5d5715-25fc-4ea8-93fe-894766f057cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f72d2664-e07a-4ab6-8b11-591be0e370c6",
        "cursor": {
          "ref": "ffb39212-dbda-4be9-bb19-e3383eb336c0",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "3ea81dd5-216c-4f4e-90f9-4baa10330c4b"
        },
        "item": {
          "id": "f72d2664-e07a-4ab6-8b11-591be0e370c6",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "27f84116-4781-456c-955c-33646897c77c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e43fd253-74d4-47e4-ad9d-971cefba6d66",
        "cursor": {
          "ref": "dd6d94bd-9867-40be-9929-b9c47a6e4ae5",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "2a81df92-c176-4faf-8997-4d0db0bc5646"
        },
        "item": {
          "id": "e43fd253-74d4-47e4-ad9d-971cefba6d66",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "604d9df9-e785-4b11-98c8-11483839e85b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9751382-4dc2-402a-ae55-f0271233bd5c",
        "cursor": {
          "ref": "4f9dcc28-6305-46de-acf6-ce6f567e820d",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "25612be9-f3d8-43f6-8cb7-be98a83357ab"
        },
        "item": {
          "id": "d9751382-4dc2-402a-ae55-f0271233bd5c",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "184921f8-eab6-4c21-a7a2-e7b4fb87f80f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f15e500-8831-409b-b263-ede1b1a3cc50",
        "cursor": {
          "ref": "d7cea3ac-79e1-46c7-855d-02f7fbac8a77",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "4172269b-33ed-4435-8388-e1a5a34b5b20"
        },
        "item": {
          "id": "2f15e500-8831-409b-b263-ede1b1a3cc50",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "a5409543-3aa3-4e43-8639-2a492bcb857d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32bb8c93-bc0b-40d4-bd3c-ddd190acb9e3",
        "cursor": {
          "ref": "42563a57-e9c8-401c-b76c-1e7bf4942847",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "b9cc696b-097e-4f2d-b9bc-6153186e87b4"
        },
        "item": {
          "id": "32bb8c93-bc0b-40d4-bd3c-ddd190acb9e3",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "c0b0d8ca-7e40-40fa-8610-504f3ca03fee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6525a6aa-2240-4364-9817-ddf71b9fa272",
        "cursor": {
          "ref": "4e223629-3640-4304-a51d-6e40e164c795",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "07c80b63-29be-4527-b923-98fd27df4294"
        },
        "item": {
          "id": "6525a6aa-2240-4364-9817-ddf71b9fa272",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "e9281425-427d-4e98-abef-632e7db21599",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c9afb1d-c95e-43b0-9dde-18576dcff671",
        "cursor": {
          "ref": "e2a71089-b51d-4a81-971d-ec0c535c086b",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "5aa42020-cc36-4e85-85cc-8a868e7ee0e9"
        },
        "item": {
          "id": "0c9afb1d-c95e-43b0-9dde-18576dcff671",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "2b20c274-7676-416a-a157-14a1d7dc9fad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c803cd0-f31a-409a-98e5-53910c6e8064",
        "cursor": {
          "ref": "725f70e4-fb29-4e07-9c5d-cbfefb368c2b",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "34425ef8-9adb-4470-bfc2-478ba7bb8960"
        },
        "item": {
          "id": "5c803cd0-f31a-409a-98e5-53910c6e8064",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "1d2f05d5-dfd0-487f-9ac8-159696e67cfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "681d66b1-5f35-4cda-a81c-3bbd88084221",
        "cursor": {
          "ref": "c5be7d15-0d07-4af9-908d-ceceb54adc25",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "ae034158-a0ef-4661-b0d5-313d96174d00"
        },
        "item": {
          "id": "681d66b1-5f35-4cda-a81c-3bbd88084221",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "f20fb0d4-0956-49d6-b933-7b2100b60c92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0f19721-64fd-4ef3-a841-ec367631609d",
        "cursor": {
          "ref": "1235b2f6-c64b-4356-b221-ead83bbe3c22",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "758322de-57f9-4408-84dd-664bfbeea39d"
        },
        "item": {
          "id": "f0f19721-64fd-4ef3-a841-ec367631609d",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "353067c6-0a8d-49df-8715-3a2edb9da494",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e7ff4be-7466-4866-9f5c-62c5d73ff184",
        "cursor": {
          "ref": "feac1898-4350-4900-b747-b2b797685868",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "5145eeba-298a-48fb-8348-9d78cbdb347d"
        },
        "item": {
          "id": "8e7ff4be-7466-4866-9f5c-62c5d73ff184",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "c17d8c06-5305-4afd-a3e9-dcfeae3e56de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec35dac2-635c-4e55-8236-5a79769f5382",
        "cursor": {
          "ref": "ec8a73e7-a5ae-42d4-a8b8-460d39941794",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "b54175b9-8d7a-48fa-af4c-6c291e1f4c79"
        },
        "item": {
          "id": "ec35dac2-635c-4e55-8236-5a79769f5382",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "a0ca3393-7793-40e8-9c40-89691cae10f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a535ecd9-8fc3-4bcf-9c42-0a6b88af88b3",
        "cursor": {
          "ref": "6a1f2afb-c0fd-4247-b26e-2d0137ea7c44",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "1a0fde80-90f1-4ea6-b963-f9a1a172a525"
        },
        "item": {
          "id": "a535ecd9-8fc3-4bcf-9c42-0a6b88af88b3",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "d372017a-672d-43ca-b517-c3672a5b9d01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc72478c-a253-4e9c-9761-53ff6d0ee598",
        "cursor": {
          "ref": "79c6ac96-dd04-4487-bfb5-f6f6d363b5b3",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "bf76056a-8e68-4087-b91d-9e9f23d5518a"
        },
        "item": {
          "id": "cc72478c-a253-4e9c-9761-53ff6d0ee598",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "8a0b202f-52c3-46da-9938-44bda6a8731d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b2614b7-2542-421b-9e6d-dc14c8deef6a",
        "cursor": {
          "ref": "d89071f7-b53b-46b4-ab29-4d3024a56a13",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "80847dca-31c3-4c82-945f-49a1e695433e"
        },
        "item": {
          "id": "5b2614b7-2542-421b-9e6d-dc14c8deef6a",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "ce8b5999-cbbb-41dd-b6f1-3d2da5cd9a8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f401113e-5e5e-4756-bd10-1ae7245736da",
        "cursor": {
          "ref": "72850725-3794-442d-a8e6-f8db3eaf3d99",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "7f6b8364-9b1d-4a90-94bc-5c52932304e2"
        },
        "item": {
          "id": "f401113e-5e5e-4756-bd10-1ae7245736da",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "34985e4b-b7b5-406b-9d2e-fd4fdbb8baa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa630411-ae52-4852-80ee-9410629c479b",
        "cursor": {
          "ref": "ece76a3f-d328-4788-9b39-dbad34a80afe",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "346fd8fe-4ea0-442a-8590-75deb1c284b0"
        },
        "item": {
          "id": "aa630411-ae52-4852-80ee-9410629c479b",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "8eb50a55-5b1c-4a6f-ba2b-8f62ff1f061d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "299b70cc-cf22-4948-bcdd-b63732392952",
        "cursor": {
          "ref": "4cb1f2fb-0215-424f-b1cc-025d086152e7",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "f0e6e01e-00e8-409e-b125-67bf15df3780"
        },
        "item": {
          "id": "299b70cc-cf22-4948-bcdd-b63732392952",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "6d776e73-4006-4c0e-a868-fc8e340f22bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc0fe687-6c94-4d8b-ad6e-0688b31e5452",
        "cursor": {
          "ref": "c6924945-5364-4142-a1da-fc912833bd5e",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "16fd974d-7e0e-480b-8095-1db957358470"
        },
        "item": {
          "id": "fc0fe687-6c94-4d8b-ad6e-0688b31e5452",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "63b45708-e62e-47fa-a996-df0527939d4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc4323d1-9716-4b45-a2ff-419c5756eaf3",
        "cursor": {
          "ref": "7421ea09-2db9-4763-98cf-b0f59b4fb744",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "63be533e-4a1a-4378-b7bc-15f557b73a5c"
        },
        "item": {
          "id": "bc4323d1-9716-4b45-a2ff-419c5756eaf3",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "2a3b1744-bcc6-4f24-b9ce-04abd91e15b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a04ba87-0943-4a16-a653-e65a70a577ec",
        "cursor": {
          "ref": "26738be5-a1a7-4710-9f81-ed413e6a865f",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "3b975476-de40-4536-b6bf-34aebb6786dc"
        },
        "item": {
          "id": "5a04ba87-0943-4a16-a653-e65a70a577ec",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "a8c2a3b4-737b-4549-9bf6-567a3dc9e000",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f204563d-984b-4134-9418-dac7d1870fcb",
        "cursor": {
          "ref": "0f528bd4-d4ca-4478-936d-1dbb7ec16c97",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "d77de555-b501-47e6-bb60-b1fa03d56c20"
        },
        "item": {
          "id": "f204563d-984b-4134-9418-dac7d1870fcb",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "aab1ad26-a1d8-4c08-90b3-da04ca50a64c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e47ef1d7-b9bf-4985-bc07-1d455441b194",
        "cursor": {
          "ref": "056f59ea-efd4-499a-a9ed-1c6a720fad8a",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "24537e38-1628-4c80-9bb6-6e05038e1360"
        },
        "item": {
          "id": "e47ef1d7-b9bf-4985-bc07-1d455441b194",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "d83b0940-aa96-4ddd-9496-7ddf1409ffb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bf0ca28-26f5-4063-825d-6f055097b312",
        "cursor": {
          "ref": "1d37b968-4192-4d3c-9952-dce7b5cfcb56",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "cca34c18-e775-44f8-8f79-7d449555aa77"
        },
        "item": {
          "id": "9bf0ca28-26f5-4063-825d-6f055097b312",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "530980e4-f6e5-41f7-90fd-8e6e147a772e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5be224a-fe4e-4b58-99e3-100083e33c10",
        "cursor": {
          "ref": "b8e85269-c6ec-4161-97df-9a2dfc772611",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "184d63f2-664d-44b7-aa07-4ba363473e38"
        },
        "item": {
          "id": "f5be224a-fe4e-4b58-99e3-100083e33c10",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "c7a8276c-3614-4a77-99b0-8db85a0c9339",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d84ae9d-a17b-4bf4-8e83-849ad4866b61",
        "cursor": {
          "ref": "acdb2015-d2e6-42b1-8fd8-8653c5293ed7",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "b2ae712f-c38a-49af-b66b-0d639e93d1ba"
        },
        "item": {
          "id": "4d84ae9d-a17b-4bf4-8e83-849ad4866b61",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "0b784da5-93f7-4ba2-b3d5-fc8c4db2edca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "104ff0b6-ebfc-45b5-8be6-0204c95d22d1",
        "cursor": {
          "ref": "892f896a-7157-40ed-a5c8-d198f226b65f",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "bfb54210-c33f-41fc-88cd-9fb12b027b64"
        },
        "item": {
          "id": "104ff0b6-ebfc-45b5-8be6-0204c95d22d1",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "0bb50dc0-ecbd-416d-9448-bd44586452f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e3a0989-2430-4a9f-bc03-a975a8666e45",
        "cursor": {
          "ref": "777d690a-2ad5-42a5-ad09-93f0740e18c9",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "956417e5-3ca3-4351-aade-21e602e65a7d"
        },
        "item": {
          "id": "2e3a0989-2430-4a9f-bc03-a975a8666e45",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "7264b9b6-37a1-42c9-bea7-3d2bd32746eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e43c0eba-a139-4c6e-8610-d46e0b3cfce9",
        "cursor": {
          "ref": "dec09ef5-65c9-4f08-8b2d-58c92e0b3a43",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "fa16b545-3ea6-44a7-9459-ae8a71265014"
        },
        "item": {
          "id": "e43c0eba-a139-4c6e-8610-d46e0b3cfce9",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "61ffc947-c35b-4fcb-aa62-7d46532ec1d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2026a4e0-6d6f-409d-9546-7640ec982f48",
        "cursor": {
          "ref": "08f5af4b-6664-4f53-8fdc-9df514430c8a",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "97106978-6cba-443c-a286-1626198e874a"
        },
        "item": {
          "id": "2026a4e0-6d6f-409d-9546-7640ec982f48",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "d89f592e-cfad-444b-98fa-eff3c58a86d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fbdc563-75b1-4fd2-be38-2209159974ed",
        "cursor": {
          "ref": "2a56177f-5383-49ac-809a-a57b2e612fb7",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "9bcf9d62-79bc-4ae7-a879-92d65c173002"
        },
        "item": {
          "id": "0fbdc563-75b1-4fd2-be38-2209159974ed",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "7a2baccd-5b0a-40f5-afc6-95d64ea1095e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bf59b14-f0ad-4d52-bd4d-a9a6d3c7f31e",
        "cursor": {
          "ref": "7d468f5f-1bb6-411a-aa27-d314308df4d4",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "5f552362-9556-421e-b62b-4c6ad281b83e"
        },
        "item": {
          "id": "6bf59b14-f0ad-4d52-bd4d-a9a6d3c7f31e",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "d2b10f37-a504-46e6-bb4a-3968eb8e30ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "369bf463-1613-44f4-9773-a5fd6040625b",
        "cursor": {
          "ref": "975008c2-201d-45cb-887c-a6e6f6bfe8d5",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "841c1fdb-260b-4067-9f64-e056d3459382"
        },
        "item": {
          "id": "369bf463-1613-44f4-9773-a5fd6040625b",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "95808da6-482e-4192-8ea9-f6c2c9bf0bc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e303ca7a-7dec-423b-bb77-3952cc8415bf",
        "cursor": {
          "ref": "679463ff-bddb-49ed-a136-e0898218bc81",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "841c3c67-c2d1-4e14-8d8c-64c0adce3ecf"
        },
        "item": {
          "id": "e303ca7a-7dec-423b-bb77-3952cc8415bf",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "abca35b6-12b1-4804-857c-eb31fa55f6ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc744c15-7aeb-4b93-ab60-1f0b0e1757d3",
        "cursor": {
          "ref": "69a65b09-5cf8-489d-872e-a7098df04438",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "e9302dc9-ca3a-479b-bcd8-5cab1ebefa6a"
        },
        "item": {
          "id": "bc744c15-7aeb-4b93-ab60-1f0b0e1757d3",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "56e89518-d990-450b-8c4c-fd512dda5bad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25a7bdc0-ab6e-414d-a336-7d196261932a",
        "cursor": {
          "ref": "e67c7f55-7ea9-4e9b-8959-853a2e22b0f0",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "778ca031-4f03-46d8-8998-cf6f95d92230"
        },
        "item": {
          "id": "25a7bdc0-ab6e-414d-a336-7d196261932a",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "55a7205c-9a13-4894-82de-691c7b9c91df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37749006-727a-4eb1-a803-13cad977862c",
        "cursor": {
          "ref": "d93b31a5-8041-4181-9e20-dd40e4245ab5",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "eeed45ea-7f25-4b3d-8e1c-a642004eb361"
        },
        "item": {
          "id": "37749006-727a-4eb1-a803-13cad977862c",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "a81c3f33-1947-40f7-a125-e2a42510ec7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aeaf6d18-0057-4b1f-a7e9-4981e9b3dbdc",
        "cursor": {
          "ref": "d5796bee-3f1c-4960-bc7e-97d1c1572b90",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "9e60be40-f1a2-486c-9c71-4b9a79bc030b"
        },
        "item": {
          "id": "aeaf6d18-0057-4b1f-a7e9-4981e9b3dbdc",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "36455cee-b272-43db-9580-cc84e3236c95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46ae8137-33f0-41da-90d0-81797c3c5db7",
        "cursor": {
          "ref": "0be98b21-0eb6-4ef1-b06b-e055f7e2f96f",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "9e60623e-d412-49f9-b4f8-517f4e38a400"
        },
        "item": {
          "id": "46ae8137-33f0-41da-90d0-81797c3c5db7",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "0e2e2f7f-d6ed-457e-a132-30e000f80e83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df622b87-c14e-4e48-93af-e704a6d43330",
        "cursor": {
          "ref": "25e488b9-1af9-4d80-82ed-7da901672997",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "d9823fea-9ee0-4013-a7a9-920c0749b748"
        },
        "item": {
          "id": "df622b87-c14e-4e48-93af-e704a6d43330",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "a0b78ae8-4ef0-44d2-9d90-7c99538a2a14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f518263-49a3-4bec-92d9-16cd28ffbbf3",
        "cursor": {
          "ref": "327917f4-1b88-4639-8aeb-8c16a8336318",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "046e9265-b2ac-4262-ab4a-2b8956d1e8c1"
        },
        "item": {
          "id": "4f518263-49a3-4bec-92d9-16cd28ffbbf3",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "6c8151ff-226c-4898-80cc-28e9a7ebcde8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01fc8bc8-5353-4197-9781-ddf8978d4225",
        "cursor": {
          "ref": "7a842af2-51c5-40b4-b2d4-780f68c9163b",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "0b93072a-459e-4ef7-b8c4-407d109e216b"
        },
        "item": {
          "id": "01fc8bc8-5353-4197-9781-ddf8978d4225",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "188d55f9-ebe5-4525-900b-4779ae7158ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2a768b6-0c00-4580-a0b5-5ed74778bdf1",
        "cursor": {
          "ref": "c0bb18d7-6ce0-4076-92ba-b52cac1eab76",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "9705b6bf-84ec-4905-8862-1625d0fef27f"
        },
        "item": {
          "id": "a2a768b6-0c00-4580-a0b5-5ed74778bdf1",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "d4241243-f85c-4250-ae3c-343ca235b9c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2801283f-9f3d-4bd4-bf22-4cb3789354da",
        "cursor": {
          "ref": "4da985a5-74f5-4dd8-891f-f453f78cf94f",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "55567d2d-e154-4612-a91c-90c8dc2adaaf"
        },
        "item": {
          "id": "2801283f-9f3d-4bd4-bf22-4cb3789354da",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "163821ea-85ab-49d7-a433-21c651e1b378",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2beb6c2a-b3ec-4b78-b233-92dd8552279e",
        "cursor": {
          "ref": "37a9c378-c4fc-4141-9eb5-34a3e0ae2e61",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "ddd0db3b-6a3f-433e-ae4c-d8da2458d383"
        },
        "item": {
          "id": "2beb6c2a-b3ec-4b78-b233-92dd8552279e",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "bded7166-b4b7-4771-a20c-e1ab31eafe6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66aa7be8-2ebd-4101-8137-c552f1f937c6",
        "cursor": {
          "ref": "0be89610-8890-4476-99d4-3eda156a83e5",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "acef06d6-289c-40af-99ef-8b64eca4acad"
        },
        "item": {
          "id": "66aa7be8-2ebd-4101-8137-c552f1f937c6",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "1e831a5f-1f7a-4cba-97b0-2a948c5a09f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "572b3cbd-f612-4196-9b9f-49783ba1e43d",
        "cursor": {
          "ref": "ccc40422-c730-4732-be96-eabcf9d0b81b",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "a1781c25-a5d1-4269-9c9e-f81b831d62ed"
        },
        "item": {
          "id": "572b3cbd-f612-4196-9b9f-49783ba1e43d",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "9e931545-eed1-436c-853c-173efbb2ce4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71b95081-9a54-4e59-b63a-72cbcf69033e",
        "cursor": {
          "ref": "7a951e62-21c3-4f9e-8d02-f5312e238825",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "98eac60e-5baf-4d62-965c-ea4cb292ec0b"
        },
        "item": {
          "id": "71b95081-9a54-4e59-b63a-72cbcf69033e",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "9744f8d8-6d20-4d1d-9181-c1cdcd77178f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3d0be37-f4d5-4586-aada-4ba0267a0c63",
        "cursor": {
          "ref": "c79dafba-ff63-4af2-81e7-49131d79874d",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "a4a201b2-5f85-4463-a48a-f75cecaaa2d1"
        },
        "item": {
          "id": "e3d0be37-f4d5-4586-aada-4ba0267a0c63",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "df41a455-37e1-4531-9748-25714e4f697c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5833a1b-afb9-4437-bbaa-4c5a9117c6ad",
        "cursor": {
          "ref": "3eb38a11-2547-4920-a60c-121a03db356d",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "a89ff21a-18da-40fc-ae4a-67ba48be8ad9"
        },
        "item": {
          "id": "b5833a1b-afb9-4437-bbaa-4c5a9117c6ad",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "b6826abf-c632-4233-9cb2-3f7d91adb511",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11a28d45-081d-4d72-abe2-10e9edaaa933",
        "cursor": {
          "ref": "601eda11-0c7c-4205-85ab-e2fe9eab48cc",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "162914ff-d47b-4d8d-8930-d18404ab2001"
        },
        "item": {
          "id": "11a28d45-081d-4d72-abe2-10e9edaaa933",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "f1813adc-06ce-40ee-8be7-e9f02a50cc47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2296582d-5c18-4569-8ffc-915a16a617cb",
        "cursor": {
          "ref": "b4e3df62-4271-403a-ae9e-5e849e5bf9a4",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "57d9106c-928b-4897-a13a-576403890464"
        },
        "item": {
          "id": "2296582d-5c18-4569-8ffc-915a16a617cb",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "71e8806b-9816-455c-b79f-007b18078052",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "690e7c54-ae1b-4674-bfa1-d5828dc57234",
        "cursor": {
          "ref": "bca87273-f908-48df-b253-3e6e94c11a35",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "e9676dce-b4cc-4cc5-92bd-6491e3023ae5"
        },
        "item": {
          "id": "690e7c54-ae1b-4674-bfa1-d5828dc57234",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "2c7b2a03-c159-4d97-bbc7-f60c4ab57782",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2cf5261-d8a8-46d9-95dd-d6072e972ce3",
        "cursor": {
          "ref": "31bac39e-047b-4a30-b77c-cbccbc790621",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "0ae02da7-44c5-4ff6-9467-80a132095467"
        },
        "item": {
          "id": "b2cf5261-d8a8-46d9-95dd-d6072e972ce3",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "61c21814-89d8-496a-b918-004bf3507ed8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b786ec6-9567-413c-945a-e036f88c3bdc",
        "cursor": {
          "ref": "fa8abdaf-a3e6-41bd-b21e-6afa45911c8d",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "53973c03-e0c3-4e56-89e6-0c7125d92ef1"
        },
        "item": {
          "id": "2b786ec6-9567-413c-945a-e036f88c3bdc",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "865099b5-114e-4ca5-9717-69bea59bcc0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba864fce-6091-450c-a4b7-2077db109492",
        "cursor": {
          "ref": "996b7b8b-620b-4c37-8345-debee925b719",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "84898d4e-6461-4a28-8847-8269f03da2d0"
        },
        "item": {
          "id": "ba864fce-6091-450c-a4b7-2077db109492",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "080504a7-5da0-4336-babe-4ca73c0528c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "776f0269-0205-4363-afa1-d9a508f1e4ef",
        "cursor": {
          "ref": "a9313905-f804-4e9e-ac0b-5fd4859aed57",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "fe51cd7a-9e86-4df8-919b-f4a08b42783c"
        },
        "item": {
          "id": "776f0269-0205-4363-afa1-d9a508f1e4ef",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "044a11f3-5ffe-44be-bd0a-b3f34a5d9565",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26b4e0cc-a168-4b9a-97f1-1c6ef6874bfd",
        "cursor": {
          "ref": "0a09be7b-2246-4144-a14c-98f9ab4e2503",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "6026a8c1-303d-4b3c-9103-579ccacb0a6e"
        },
        "item": {
          "id": "26b4e0cc-a168-4b9a-97f1-1c6ef6874bfd",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "580ff34f-046d-4fbf-8089-50f6dcc71365",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75ac3167-7539-48f1-8491-a383eb233e8c",
        "cursor": {
          "ref": "2aac57c1-5885-4f1c-aea9-c582c477b402",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "787fbcdf-228b-45ab-ab84-7af109f1fa87"
        },
        "item": {
          "id": "75ac3167-7539-48f1-8491-a383eb233e8c",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "6fd17d36-ca5d-4358-be83-550e41be0459",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:101)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaf9a2ba-9067-402b-8c67-1002b84b0fa9",
        "cursor": {
          "ref": "e42d2c91-05ea-470b-b86c-f1559f089605",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "eb625052-9009-4f5e-814b-31d25a9db048"
        },
        "item": {
          "id": "eaf9a2ba-9067-402b-8c67-1002b84b0fa9",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "a75db81f-bca8-4495-b86e-0ccf0842590c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "1e96bb04-d496-4fe2-a16e-b08112415663",
        "cursor": {
          "ref": "fcb1c173-e53a-4cd3-8609-329867d442d4",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "68bc9ec2-48a1-4aa9-b75d-fa2e76920174"
        },
        "item": {
          "id": "1e96bb04-d496-4fe2-a16e-b08112415663",
          "name": "credentials_issue"
        },
        "response": {
          "id": "4f062b15-5ede-417e-82d2-94afcb770702",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "54b2bcf0-ebd1-4ec9-83f5-eacdaadf581a",
        "cursor": {
          "ref": "4eab7337-4c4c-40f8-b5e9-1660cff6b2da",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "4e4f74ff-eac7-45c9-a240-6dab5a6a7a52"
        },
        "item": {
          "id": "54b2bcf0-ebd1-4ec9-83f5-eacdaadf581a",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "2958b97c-0996-4795-8b7f-36d331b35174",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "f05219ea-86fa-41fe-856c-1c5b6b2c5ba8",
        "cursor": {
          "ref": "511dc73a-3eb9-4b2c-b46b-7c213beda808",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "cbb5b8e0-4290-4e2f-8604-bcb552ecd319"
        },
        "item": {
          "id": "f05219ea-86fa-41fe-856c-1c5b6b2c5ba8",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "55e3149a-38e7-4023-970f-ff4b0d9bac56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "7d1e57fb-2aea-4ba0-8458-252739dd2634",
        "cursor": {
          "ref": "40af223c-6d31-4d0e-89f5-05ffb94dac4d",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "51b368ad-4c14-4465-a1b4-7d50b6591ce8"
        },
        "item": {
          "id": "7d1e57fb-2aea-4ba0-8458-252739dd2634",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "d87fe3d5-6fd0-4fb4-8b7a-69f23da7fc41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "4f5de1a6-6caa-4293-a022-dda0a9c64720",
        "cursor": {
          "ref": "6754737d-76d3-49f9-8475-ae70c6d19f09",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "035db99d-c196-4854-bc2f-fb4db07ae214"
        },
        "item": {
          "id": "4f5de1a6-6caa-4293-a022-dda0a9c64720",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "923ce4ff-4cee-4d9e-a873-c5e9a9f49efc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "7416206e-6cd7-4adf-9669-13ca7b931b6a",
        "cursor": {
          "ref": "657fe66c-41bd-422d-b66e-739463274c90",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "df7299a9-eb70-4b24-b126-28da73151198"
        },
        "item": {
          "id": "7416206e-6cd7-4adf-9669-13ca7b931b6a",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "d925212d-6d0c-476a-8025-3d3956e4d46a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "ebcef6a3-2c60-426c-a8e3-a3abbb6c7ec3",
        "cursor": {
          "ref": "f08017ad-f8b2-4948-ab11-66b4d04a3272",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "426146b8-d411-431b-8f30-5a329bf8e599"
        },
        "item": {
          "id": "ebcef6a3-2c60-426c-a8e3-a3abbb6c7ec3",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "e7a4b6dd-c21f-4400-859a-a9edfa8ebe74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "036f88e3-6e2c-4574-aef2-62f880b36963",
        "cursor": {
          "ref": "61f1c322-5b4f-403f-b558-987469b4cb35",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "b992efa2-1b2d-4704-a0ca-3225edb7235d"
        },
        "item": {
          "id": "036f88e3-6e2c-4574-aef2-62f880b36963",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "0fa1e10f-4ed2-49a8-9cf4-4d97d524e054",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab823abc-f5fd-4c63-bb4d-3ab5be0bb8e5",
        "cursor": {
          "ref": "d3cad4b9-8ada-4b69-8d01-a8510db2dbba",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "95953c39-a0f5-4f43-87a5-e099dea45ad1"
        },
        "item": {
          "id": "ab823abc-f5fd-4c63-bb4d-3ab5be0bb8e5",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "d753119e-a4be-4ef1-b5bf-ac9c98f9cca2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "387a7a7b-4cc4-4ac9-8da2-769c9b604544",
        "cursor": {
          "ref": "016c2bbe-3ca2-4993-b4ed-3fc2be6a4589",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "5573c058-db67-447e-94ad-da1b690ffbe0"
        },
        "item": {
          "id": "387a7a7b-4cc4-4ac9-8da2-769c9b604544",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "eb461e97-2125-4a88-ab0b-9215eac023c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f33b8b00-b4b9-4845-a77a-4b67969dd281",
        "cursor": {
          "ref": "cc672e9a-8f4b-40cf-9e1b-074af53324d8",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "7afdcb22-a8c7-4566-bdd1-68b1a331364e"
        },
        "item": {
          "id": "f33b8b00-b4b9-4845-a77a-4b67969dd281",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "c9c9c246-ab9f-4f5e-ac0b-d1ef02f30a4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3d18775-e43e-44c8-8f99-707b6ce0f79a",
        "cursor": {
          "ref": "e6056475-83ee-43bf-8f1c-ee0eec25fa05",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "c9585d01-1f71-4b10-bf51-8a60f3723163"
        },
        "item": {
          "id": "e3d18775-e43e-44c8-8f99-707b6ce0f79a",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "89643260-39bc-4978-bac3-8f2232303a6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3cc3319-1b41-4bfe-9e7c-6586c0cde0c5",
        "cursor": {
          "ref": "e1a5f820-96af-4b2c-bf87-dceba9b874eb",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "df4d622b-d590-442a-8b29-ab31318b39ce"
        },
        "item": {
          "id": "a3cc3319-1b41-4bfe-9e7c-6586c0cde0c5",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "561cdb1b-7e63-4943-b42b-bc731c9a75f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6eb925fd-f1a0-453d-a5dc-522b3fab78a6",
        "cursor": {
          "ref": "992a94e6-1e7c-4ab3-9449-e94857c05783",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "7e51703e-382b-4825-b3b7-356705536042"
        },
        "item": {
          "id": "6eb925fd-f1a0-453d-a5dc-522b3fab78a6",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "c74f0bd7-8ce3-4f6f-a22e-e9c861c7b910",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6156150-da39-40ad-bc2d-99f4f04f3ea8",
        "cursor": {
          "ref": "3570cca6-8c75-40b6-b316-acbe56c53b3a",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "1cfad2cc-178b-4b1a-82b8-ae68e857bf5d"
        },
        "item": {
          "id": "a6156150-da39-40ad-bc2d-99f4f04f3ea8",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "f4529559-1dc9-4383-85b9-479ce0421106",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5bb4ac3-f166-4b32-b1e9-37e638f601ac",
        "cursor": {
          "ref": "710e7811-296d-4ff6-91ac-0feac3868a24",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "3c47fbf8-a8f3-47ea-ad87-71c430ec9dd2"
        },
        "item": {
          "id": "e5bb4ac3-f166-4b32-b1e9-37e638f601ac",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "2f09ff55-3128-4cdb-a5f7-06762feae973",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cda90f7f-cb8d-412b-9e2e-b68b172b2d22",
        "cursor": {
          "ref": "7d714299-9008-47af-9a10-0e6ef4558da3",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "7c03e1e7-d3ec-4d8d-bfdb-7d11cd54a95a"
        },
        "item": {
          "id": "cda90f7f-cb8d-412b-9e2e-b68b172b2d22",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "d5a1d42c-7c8c-4e92-890a-1e5c75302afc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be0d9851-a7b4-450b-a6ff-766a5f50d25b",
        "cursor": {
          "ref": "8cdce16b-9589-42aa-9115-ee43b5c7a6c5",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "34d5f532-00ca-425e-9b6b-f76dceadaae3"
        },
        "item": {
          "id": "be0d9851-a7b4-450b-a6ff-766a5f50d25b",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "bde39f7d-ef42-4bf9-84b8-5fd092ab1a86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b9ae192-f304-42e3-b6d1-d12e72703b80",
        "cursor": {
          "ref": "f06279c0-604a-4712-98a2-20bfaf0ac0c2",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "11ff4dea-2c76-4c1a-a890-b15944c01383"
        },
        "item": {
          "id": "1b9ae192-f304-42e3-b6d1-d12e72703b80",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "cb64c600-228c-4915-bd96-e9d1a580ec70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2087fd97-8950-4970-9405-f77ed5e57ca4",
        "cursor": {
          "ref": "294b1b33-bf58-46db-8c65-40e60211409b",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "f6e41c58-e52e-44e3-aeb4-38dda43bb8b3"
        },
        "item": {
          "id": "2087fd97-8950-4970-9405-f77ed5e57ca4",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "7ebd68d3-6f5f-46eb-9253-22b4a8333e86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a6279b8-7704-4ca3-b418-aa755cf52a4d",
        "cursor": {
          "ref": "f5120c64-8a73-471b-b2a9-4a3029145def",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "094988bc-a3f8-4eaa-a6ca-7e1f362beba7"
        },
        "item": {
          "id": "1a6279b8-7704-4ca3-b418-aa755cf52a4d",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "265e17ff-6fff-4f02-be9d-51ee6a0c5aa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d79f93d2-f039-45c0-9be9-a2ef8da0d931",
        "cursor": {
          "ref": "5a889b29-c0a7-44aa-9655-d1114a56a528",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "43acfb77-eaa1-452b-9305-11833591367d"
        },
        "item": {
          "id": "d79f93d2-f039-45c0-9be9-a2ef8da0d931",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "4269f2ce-925c-4bf6-8db7-40f75c691226",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "019a7e1c-e40e-46e5-bf1e-fb212233fe44",
        "cursor": {
          "ref": "aad31cf2-6898-42d3-a62c-76bf3a425abe",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "df52973e-e377-4949-bc86-6bb9767ab1e2"
        },
        "item": {
          "id": "019a7e1c-e40e-46e5-bf1e-fb212233fe44",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "6eb02965-2817-4df3-9570-c7b21b0947db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb9d58e5-0c01-4f04-b72e-5ff74cc0776b",
        "cursor": {
          "ref": "a9aca5f5-5731-48f3-9ac4-2bd4bfebda4e",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "ca8a431c-985e-40f6-852f-57d4ea43a395"
        },
        "item": {
          "id": "bb9d58e5-0c01-4f04-b72e-5ff74cc0776b",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "f99c1121-81f2-4d39-8b3a-fd538ae82ada",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5817fdc2-81d8-4f5b-8bbb-8e8b39c30c6d",
        "cursor": {
          "ref": "cefc1c21-3041-4558-a4dc-3d29f1d5cab8",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "0b3cd2d2-2a9e-4e44-aea4-7a87ea709f0a"
        },
        "item": {
          "id": "5817fdc2-81d8-4f5b-8bbb-8e8b39c30c6d",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "900016e4-5018-4c6c-8406-757c94ddcd33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78a360f7-6d8a-40bf-b6fb-0dab58ed8f7f",
        "cursor": {
          "ref": "45958162-2047-4ecf-af81-3efd2c791453",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "65ca8de6-3743-40ba-9c93-5aade61919cc"
        },
        "item": {
          "id": "78a360f7-6d8a-40bf-b6fb-0dab58ed8f7f",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "99cf69ef-bb3f-436c-b1c4-9a0adf5a26f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7c0783f-5526-4d42-9511-83bc66ad35b0",
        "cursor": {
          "ref": "aa0c50d3-9ae8-4f63-9248-2eddcf0e0d25",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "9e32e613-0d83-490c-9a6c-76280bbadede"
        },
        "item": {
          "id": "c7c0783f-5526-4d42-9511-83bc66ad35b0",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "8f05f7d5-34c2-49bc-819a-1837394454ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63b8f137-8829-4407-a0fa-59232d1b6fb7",
        "cursor": {
          "ref": "43551947-3306-4ed0-800b-8103f170dd1f",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "bc5478d6-ae2f-4996-a854-c4ff59123e94"
        },
        "item": {
          "id": "63b8f137-8829-4407-a0fa-59232d1b6fb7",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "d0e9e827-9780-4613-b971-6a8492e50fff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed66cf2b-4885-4914-b0a7-57b117491ce2",
        "cursor": {
          "ref": "eea842df-5fa8-4e40-b495-2a2ebe086243",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "4e40d5ed-2102-40c6-bdda-46694ad610aa"
        },
        "item": {
          "id": "ed66cf2b-4885-4914-b0a7-57b117491ce2",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "a1f0276c-0048-44da-b1be-4e3115a8f929",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f2f74a5-eee6-4627-9407-a41a99b26ea8",
        "cursor": {
          "ref": "aa5ece5a-ec56-4df5-a5e0-698cb1e0bb16",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "0aa780a8-25ca-4392-bb54-d098eee6b3d9"
        },
        "item": {
          "id": "0f2f74a5-eee6-4627-9407-a41a99b26ea8",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "ed702f60-1741-4fc0-8727-fe9d051cca39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85147e73-5b8c-42e3-8104-7ceacae8aa99",
        "cursor": {
          "ref": "2ab97b43-1103-4d88-bba0-a38b529c188a",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "7352da34-0cbb-4429-9b36-7be50881d7f4"
        },
        "item": {
          "id": "85147e73-5b8c-42e3-8104-7ceacae8aa99",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "95e0fa60-a175-4b2d-8f90-c10544fb3b8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f577ce8c-37d6-4ce5-8f82-44dec50db215",
        "cursor": {
          "ref": "cd4daab7-49a8-418f-a0db-fe9409a30493",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "6f2f2529-6bb1-4821-9f05-0b215cf45f2f"
        },
        "item": {
          "id": "f577ce8c-37d6-4ce5-8f82-44dec50db215",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "19f39b2d-347c-4963-a948-f7661adcc7de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3f9edb5-20d1-41d9-bb56-63a15bb60f3c",
        "cursor": {
          "ref": "e4d25983-cef8-42a8-bba9-afc515aa74f9",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "631cd84f-c675-44aa-b67a-ed493e3200e4"
        },
        "item": {
          "id": "d3f9edb5-20d1-41d9-bb56-63a15bb60f3c",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "c06091e7-2c7e-4f9e-aa7a-be80613b9d7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b9a322b-56d1-4420-ba9a-ff78c667f433",
        "cursor": {
          "ref": "917b4d76-3329-4c21-a537-54e83c7cb347",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "9f4a5ec0-cc5e-411d-8177-c7ef716bf956"
        },
        "item": {
          "id": "0b9a322b-56d1-4420-ba9a-ff78c667f433",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "4d68c603-e4f5-4dc1-bc38-af02dbc0b563",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7536ff5-d2cc-42d1-b98f-02b51fffb42a",
        "cursor": {
          "ref": "842380c5-6c0e-4ef0-8e29-0bd09337ef69",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "cee2ee0a-7a64-41fd-9f1e-8072d4e18456"
        },
        "item": {
          "id": "e7536ff5-d2cc-42d1-b98f-02b51fffb42a",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "f5742ae5-216b-4bc7-bdba-a6b1a28213e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24145519-3c6b-4496-876f-7ea137b97760",
        "cursor": {
          "ref": "0b44c84c-7866-4cec-842c-ca599887b3a3",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "8045c288-dd00-4502-8e08-9aa805fe53cd"
        },
        "item": {
          "id": "24145519-3c6b-4496-876f-7ea137b97760",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "bb327a93-14c6-4995-9023-57e831c1b82d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da1134cc-9fda-4952-a3ef-a3df4eeb760d",
        "cursor": {
          "ref": "42ba8088-3d07-4f76-9e49-8467bfbf064a",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "b02b9865-ea97-49f1-a2cc-d71bc0f4adbe"
        },
        "item": {
          "id": "da1134cc-9fda-4952-a3ef-a3df4eeb760d",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "e8289c3d-1088-419a-b7a3-aff519c7c3ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "795512cb-9b18-40fd-86f6-b965804860b5",
        "cursor": {
          "ref": "4426e9e1-ac7c-40e8-822d-a1714c613f7a",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "73f98862-8b96-46f7-9767-28c4e4d8ab05"
        },
        "item": {
          "id": "795512cb-9b18-40fd-86f6-b965804860b5",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "d2a36ebe-baab-4a52-bb9a-3f5dcd1bda78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "951462e3-5fd1-40db-987a-c24df11b0f2b",
        "cursor": {
          "ref": "35925c6d-eae6-41b0-8b5a-86c16ade00b6",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "7248e97f-3f63-4dfa-86f0-bb653b4c9295"
        },
        "item": {
          "id": "951462e3-5fd1-40db-987a-c24df11b0f2b",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "2e1ae022-6cfb-43d5-9e97-2eb7aac115af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a49c50d9-afbd-47ba-8018-e87316b2def1",
        "cursor": {
          "ref": "4ef2a6f3-6fad-4f18-ad00-c99f9238c6e8",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "5a2ae6be-8cd8-4f64-8b90-895ef5505da3"
        },
        "item": {
          "id": "a49c50d9-afbd-47ba-8018-e87316b2def1",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "e5f92003-a1da-4605-864a-058efebe8863",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45cb0c5b-c183-4adc-835d-7224dfcc7ac0",
        "cursor": {
          "ref": "e0ecd459-d9ae-47b3-8bf8-da8deef8a688",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "c53633b4-00cc-4d14-8f2c-cd25e337d045"
        },
        "item": {
          "id": "45cb0c5b-c183-4adc-835d-7224dfcc7ac0",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "2c29ede8-d5b1-4499-a1d3-a150e623357d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9870eeb0-c020-43c1-99ad-f92cee2b18b1",
        "cursor": {
          "ref": "b8ae036d-f4d9-4c75-9122-ccd8d40c6125",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "8cd81ff4-1292-4e50-94b7-9f06b6764f98"
        },
        "item": {
          "id": "9870eeb0-c020-43c1-99ad-f92cee2b18b1",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "1e96f0e8-0018-4336-be93-fa636f5df8de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "776ef6b1-0dff-4d7e-a32d-509028fe8223",
        "cursor": {
          "ref": "986ea8bc-a947-440b-909b-b0d2b0bf5e27",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "6e52ef24-313d-4a29-9c3c-af667b175b52"
        },
        "item": {
          "id": "776ef6b1-0dff-4d7e-a32d-509028fe8223",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "c02830c5-0759-4d41-a2c3-169e22276089",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1feff31-a9f4-4b4f-9a98-c288910bb586",
        "cursor": {
          "ref": "5cd7a83f-275a-403d-a497-a6863dafdc63",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "66a9ec9d-a8bb-4c2b-bb0d-bbb859a50699"
        },
        "item": {
          "id": "a1feff31-a9f4-4b4f-9a98-c288910bb586",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "5a1f5b53-e70c-46a4-ae87-31cfb915ed70",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ace600ad-7847-4b9b-8017-a938ad09face",
        "cursor": {
          "ref": "d3d8f5ee-cb50-4166-ac2d-9b2662b9afc2",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "e23ee329-f7db-449c-8f63-22114224b0b8"
        },
        "item": {
          "id": "ace600ad-7847-4b9b-8017-a938ad09face",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "de2eb897-90bc-4876-8336-0cbe37df21da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28c09be4-9933-4822-9dde-15b264d54c77",
        "cursor": {
          "ref": "06dc17d7-698b-4ba2-9da0-85d678ea7ea5",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "e06ba134-9aa2-4b64-bf75-8faa8811fd90"
        },
        "item": {
          "id": "28c09be4-9933-4822-9dde-15b264d54c77",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "df1934e6-56d1-41be-8e14-a2bb368a9362",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92011b33-2fd3-4a15-aea6-550c836f5e9d",
        "cursor": {
          "ref": "3347fd32-d834-428b-872a-27332ca6cbff",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "cc876043-b99a-495b-a8ec-b5ccb1ad658e"
        },
        "item": {
          "id": "92011b33-2fd3-4a15-aea6-550c836f5e9d",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "6440196a-bfe0-4870-b11a-cfa21832188e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6137b1d-8d5a-40d6-8e1c-a8b728bf644f",
        "cursor": {
          "ref": "413b3454-421a-4101-bbbb-3bf6c6b502de",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "310843de-5995-419c-b371-4eb4f4147050"
        },
        "item": {
          "id": "a6137b1d-8d5a-40d6-8e1c-a8b728bf644f",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "a73f06a8-b9b8-4f1d-92c4-59025f0d3f87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7adb375f-0ee2-4613-8479-e40966e6b223",
        "cursor": {
          "ref": "d4d534fb-3403-4020-ae8d-8ffbf078f30f",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "c7a7281e-0628-4e29-ad94-84d7544d4553"
        },
        "item": {
          "id": "7adb375f-0ee2-4613-8479-e40966e6b223",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "64ec5d5f-5df3-4ee1-8761-fe9549409f12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efa6fad3-ed79-4142-a0cc-a4e5c47c2a56",
        "cursor": {
          "ref": "2668670d-9102-4163-936c-0ef843dac307",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "fb17b93e-a496-4a72-9feb-6e6a8bdc8189"
        },
        "item": {
          "id": "efa6fad3-ed79-4142-a0cc-a4e5c47c2a56",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "50d2fe96-1d8d-43c5-98be-d45d5405c6a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46e93bff-0972-4f58-b984-d47562677c83",
        "cursor": {
          "ref": "2e082acf-a5c6-404e-ab54-c5a6fcb54521",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "b51d2261-2b69-4c51-87e9-32fceb4cbca7"
        },
        "item": {
          "id": "46e93bff-0972-4f58-b984-d47562677c83",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "392040a2-2d85-4a72-a6df-94059682a398",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c496034e-0791-495c-b3b3-2f154af59551",
        "cursor": {
          "ref": "8ca67953-02b9-487b-aa7b-69ca944e2cf3",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "5ccbb717-f0a2-44d5-bf8d-60c26a28547e"
        },
        "item": {
          "id": "c496034e-0791-495c-b3b3-2f154af59551",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "54cdba7a-a594-4512-9840-a10443ad0f91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc47f59a-65de-4f9f-a467-42674f34a073",
        "cursor": {
          "ref": "f61c7adf-e3d6-4f1b-b5a6-976523841f06",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "9ee70068-d8e4-45c1-8cc6-39427f1b45cb"
        },
        "item": {
          "id": "bc47f59a-65de-4f9f-a467-42674f34a073",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "3f636858-52c5-4d53-a13c-e59299d9a011",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0f18391-cb24-4504-8cd5-7f493a7c6ee2",
        "cursor": {
          "ref": "37ca182d-f4b4-4c5c-af80-ad0978e19766",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "cd85cf8e-5beb-4404-8381-443d1dd4f56a"
        },
        "item": {
          "id": "f0f18391-cb24-4504-8cd5-7f493a7c6ee2",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "809f7e4e-7cec-413c-bf39-bef994cd760c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d39314d-12c9-471d-8756-c929d715dbaf",
        "cursor": {
          "ref": "5647f51a-bc7f-45b0-8f85-6a704381d589",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "135f6ce7-8759-4074-8959-2f3cc2375c44"
        },
        "item": {
          "id": "1d39314d-12c9-471d-8756-c929d715dbaf",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "eaa8b04d-046b-4c75-8d35-32a87fcfec78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1690da0-1287-4d53-9bd1-1d5c91013553",
        "cursor": {
          "ref": "c041915e-a5fa-4490-9578-8ae94a5eba31",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "80f42277-3b36-4b25-95d3-12322777f253"
        },
        "item": {
          "id": "a1690da0-1287-4d53-9bd1-1d5c91013553",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "24a19e69-11fc-428f-b462-4722a4bad036",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff87c76a-6e0e-4f87-a8a5-b6525fff8d58",
        "cursor": {
          "ref": "18614f29-f0f1-4a84-a2a4-115a221a7725",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "8f223e87-171d-4695-a685-35bf73069e8d"
        },
        "item": {
          "id": "ff87c76a-6e0e-4f87-a8a5-b6525fff8d58",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "00f1ae2d-3814-453a-a25d-bbde00928985",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a153ebd-5f3f-44fe-87a0-f94a912c7498",
        "cursor": {
          "ref": "71f34936-0df5-4f25-ae52-f9e8175e0862",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "4e343b94-54f2-404a-ba33-b2924d626a9b"
        },
        "item": {
          "id": "0a153ebd-5f3f-44fe-87a0-f94a912c7498",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "1f4db849-a48d-43d0-80a3-29367538abac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e4fd133-b9be-4e38-b2c5-fefac7d595e2",
        "cursor": {
          "ref": "78c20dd0-b384-478d-8273-22c2bfa1525f",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "5f7dd05b-ee23-4a3d-9de3-f3a12e491515"
        },
        "item": {
          "id": "1e4fd133-b9be-4e38-b2c5-fefac7d595e2",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "287e1819-966e-467e-901d-bfcf3d8d0ff9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f4e8538-728a-4d90-bf40-693013b56dbe",
        "cursor": {
          "ref": "fca97172-0839-4574-808d-cdd9d2f676ae",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "0fd52b50-02f7-479b-8a63-d54fc051f050"
        },
        "item": {
          "id": "0f4e8538-728a-4d90-bf40-693013b56dbe",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "f6a39988-63f1-42d4-924a-62e07f6e6321",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0a34183-0f16-40fc-ab09-6f370334378f",
        "cursor": {
          "ref": "cbc7c2cc-f5cf-42b0-9f0f-970af09552f2",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "36f09b01-d607-44c5-b4ce-33b1199daa16"
        },
        "item": {
          "id": "a0a34183-0f16-40fc-ab09-6f370334378f",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "1591d814-584c-47f2-a05b-c4370f0d9aae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5deff973-eac4-4d23-914d-10f127413a64",
        "cursor": {
          "ref": "c8b9e1e7-78b5-4daa-810e-408d2cb0dc11",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "40a792a1-f814-4bb0-8e15-2271a0a76d2e"
        },
        "item": {
          "id": "5deff973-eac4-4d23-914d-10f127413a64",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "4c7d02d5-08a5-4ed0-a230-da9b26a8ae77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a99ee753-3590-4f12-ae0d-d1426d473e9f",
        "cursor": {
          "ref": "6b904850-0085-4874-8f5a-d7f9b97e3ce7",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "22d4b029-b03d-46fc-8d34-8597d25c7606"
        },
        "item": {
          "id": "a99ee753-3590-4f12-ae0d-d1426d473e9f",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "ee809692-7cde-4c75-ba25-533baf6c7e92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c624733-d79c-4a7d-a5ec-eb435d77809c",
        "cursor": {
          "ref": "000c5ce0-22a1-44de-822b-7d2cf5ad5783",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "98ac448f-1b97-40a1-b51e-72a2e78513e9"
        },
        "item": {
          "id": "4c624733-d79c-4a7d-a5ec-eb435d77809c",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "1e236535-099c-4be6-b170-ad7b7833aa92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdf8739f-6714-46d1-8e11-845dbd6a6f06",
        "cursor": {
          "ref": "a68b1590-d3ee-464e-9f21-9ba1ed1c35b2",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "c090bb00-fb68-47a3-941e-c76570d5464c"
        },
        "item": {
          "id": "cdf8739f-6714-46d1-8e11-845dbd6a6f06",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "64437b32-39f4-4a9b-8083-081be1ac5183",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74b5e2a6-6419-443c-8299-dc20722d14c2",
        "cursor": {
          "ref": "56e0a6c7-6232-4e7b-9b63-d6a3d449044e",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "21763546-4222-48d6-811b-37cd0aec8f90"
        },
        "item": {
          "id": "74b5e2a6-6419-443c-8299-dc20722d14c2",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "837c2ea2-8e39-46a9-8c52-6ac24e4323b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7691cc11-28d9-4031-bfda-243a2150b1a3",
        "cursor": {
          "ref": "45646c1f-8d2c-4478-9b8a-8a4eae2201a4",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "58bb9bfb-0a57-4b17-8ae9-ba02bba764a6"
        },
        "item": {
          "id": "7691cc11-28d9-4031-bfda-243a2150b1a3",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "5f0274ed-db73-4e65-a271-e9d3b8fd9bb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77aabfe5-bce1-4ef4-9a95-49e73b5dee92",
        "cursor": {
          "ref": "19ec9a82-877a-4746-8bcf-5e95a92a5b73",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "64c60b38-2fac-4eba-9e0d-f2e752f86707"
        },
        "item": {
          "id": "77aabfe5-bce1-4ef4-9a95-49e73b5dee92",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "dee62f92-b10b-4bea-aab7-c9c850ec4a4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3d2a287-3064-468d-8efe-c20be7897cdb",
        "cursor": {
          "ref": "c557e9c8-1eb6-43df-89ec-aac2d780e44d",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "9622fd77-15b7-49c4-ae38-c2a5048b54cf"
        },
        "item": {
          "id": "c3d2a287-3064-468d-8efe-c20be7897cdb",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "9b65c474-dde9-49ae-8acb-c85298e403da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18d6fb30-6675-491f-ba13-e1c63f17b5d1",
        "cursor": {
          "ref": "c3ce4fa9-01d5-4da2-b0d5-7dc9530d5e11",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "fe4f75b7-6d4b-468e-8c97-bd1cdca33b08"
        },
        "item": {
          "id": "18d6fb30-6675-491f-ba13-e1c63f17b5d1",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "aa357e37-9e6f-4d1e-a084-6356aa74c272",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57a79e27-eb23-40fa-93c0-26d7425829fa",
        "cursor": {
          "ref": "bcaf1648-d58b-4074-8e13-eabf819ad5ab",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "e896f995-7fb2-4022-bbe6-851fd4f962df"
        },
        "item": {
          "id": "57a79e27-eb23-40fa-93c0-26d7425829fa",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "15c2ffe1-d4bf-47f4-91fd-13a63802ce07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfe8e812-9db6-4c10-b3c6-80d0896ac5dd",
        "cursor": {
          "ref": "57a55aff-55b0-48fb-b990-6c2ddf80bceb",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "43f8fd64-8cae-424a-b67f-57232c240411"
        },
        "item": {
          "id": "cfe8e812-9db6-4c10-b3c6-80d0896ac5dd",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "52847133-61d3-4085-92c8-bf5073e7b201",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51f5cff6-579d-4baf-b53a-5a0bd07884c1",
        "cursor": {
          "ref": "42c43cbf-aae3-40fc-8bb5-3b2039e63b34",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "13a2e36b-de71-491b-ab0f-311de58422f4"
        },
        "item": {
          "id": "51f5cff6-579d-4baf-b53a-5a0bd07884c1",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "aba43aed-8f4f-4c14-938b-95f22c584ca0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0f06356-afbd-4ca5-abc2-32ba678236fe",
        "cursor": {
          "ref": "14be33c5-51f2-4548-9932-48133cf0f8e9",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "149f0c54-167d-4b4a-aae4-289b734521c9"
        },
        "item": {
          "id": "d0f06356-afbd-4ca5-abc2-32ba678236fe",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "9e1c8e8b-6664-4725-a470-865d7f7239d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a4e77b0-3a08-432a-86f8-be014e346fe4",
        "cursor": {
          "ref": "a4a3ec0b-a1ba-4f80-ad6d-78fc8b67ffe6",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "f7848efa-8f9b-4db2-a2ec-e5b5861090b0"
        },
        "item": {
          "id": "3a4e77b0-3a08-432a-86f8-be014e346fe4",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "64e63625-1122-46b2-945b-b1a9ee29c157",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95b35015-baad-4c7a-863b-afedd5d868e1",
        "cursor": {
          "ref": "cbbf02f6-4a4b-44db-ada2-a0e44f5d86bd",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "c567080e-5c9a-4447-8bfc-37d471e91786"
        },
        "item": {
          "id": "95b35015-baad-4c7a-863b-afedd5d868e1",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "0041552f-01d4-404d-88fd-5928a902aa31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7a99d57-82e6-445c-9c8d-7721f1683616",
        "cursor": {
          "ref": "fb5d180b-6c2a-47fd-a38b-7466430cb9de",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "333d29e2-3b7b-451a-b9e2-b2b7d5ea4bd5"
        },
        "item": {
          "id": "e7a99d57-82e6-445c-9c8d-7721f1683616",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "6bcf503f-22b9-453c-a4c8-2bf97625dcc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "866a40c1-dad4-47d2-94b2-176ec37f32ae",
        "cursor": {
          "ref": "bded87dc-8a35-45d2-82d3-6fe5d7a04157",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "f36ec098-a70d-491a-9151-52cb249a9bcc"
        },
        "item": {
          "id": "866a40c1-dad4-47d2-94b2-176ec37f32ae",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "128ad3af-0e62-4225-a29a-ce9a477a55f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "427256b5-68aa-4ac5-b6c7-6b567327b5dc",
        "cursor": {
          "ref": "68d7b3fc-d5b8-4027-b0b9-f13e64b8c7e3",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "49bc5db3-4616-4243-a039-75bdabed75db"
        },
        "item": {
          "id": "427256b5-68aa-4ac5-b6c7-6b567327b5dc",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "25b61da3-c9e5-41ce-b95a-d24ce68eaed7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2af3bd9c-3167-485f-bf58-c3ee04c423d3",
        "cursor": {
          "ref": "e54edd0d-ad5b-45af-8323-d9eced643b5f",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "4f8ae4ab-0fbb-4b51-9d53-41bb7300ce00"
        },
        "item": {
          "id": "2af3bd9c-3167-485f-bf58-c3ee04c423d3",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "1710f689-db8a-4b5d-94c2-0205ec7ca6c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83c46096-3007-4397-9974-3801dd95082d",
        "cursor": {
          "ref": "e5b80dfa-90fd-4626-b744-e0aa44b570f6",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "60730e12-f74f-42af-908e-6448733381f4"
        },
        "item": {
          "id": "83c46096-3007-4397-9974-3801dd95082d",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "6d21cbd0-2554-44e8-a777-a17385b498ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49c52e02-c632-45b8-98c8-d46f1cff7d35",
        "cursor": {
          "ref": "2274f1cf-72ed-4fb5-a04e-111bc949d601",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "debf5a9b-c368-4070-b8ad-fc2f84ec0a7d"
        },
        "item": {
          "id": "49c52e02-c632-45b8-98c8-d46f1cff7d35",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "e0799c76-1c72-437d-8015-708b559c9ad6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2511c688-d97c-4a32-9e6d-848542e0b4df",
        "cursor": {
          "ref": "fc3ef576-ad45-46ae-9d36-6e6d5e2f5a65",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "36796944-92a8-4c0d-abdf-cc10a55ccd4d"
        },
        "item": {
          "id": "2511c688-d97c-4a32-9e6d-848542e0b4df",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "5d720ee6-6564-405c-8ab1-db49e3a2a4e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26725b64-2aeb-4570-956a-76f017580be4",
        "cursor": {
          "ref": "c55b2356-8534-46d0-90b4-acef49b6fa6b",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "c0e20e27-efd6-4298-9cbd-3b14c23444d4"
        },
        "item": {
          "id": "26725b64-2aeb-4570-956a-76f017580be4",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "28f5b67b-38b0-47dd-81c9-7e48cae3be68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03c78515-13e2-449b-b96b-b8831c1b9cc6",
        "cursor": {
          "ref": "712b23d2-42cc-4744-af96-7382bee68f82",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "8cfd2578-9343-4457-a39e-c5b1dc36fe51"
        },
        "item": {
          "id": "03c78515-13e2-449b-b96b-b8831c1b9cc6",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "d883b41a-6ed1-4748-be19-1d5e7c9b77f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "647388a5-e56c-4b1d-a579-ae93f2089464",
        "cursor": {
          "ref": "1b522055-f388-4c81-b3ca-70a1a8b7765f",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "148f696f-59a2-4ba1-9f63-df053630929d"
        },
        "item": {
          "id": "647388a5-e56c-4b1d-a579-ae93f2089464",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "929d1379-2cce-4aaa-8161-46487e417f8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e779ab8-6430-4714-bdc8-9bb4048ed8fc",
        "cursor": {
          "ref": "eedc2db8-0500-4fb7-b20f-13b60343e716",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "398d738f-462a-42fd-8312-2892c3f3b0b6"
        },
        "item": {
          "id": "8e779ab8-6430-4714-bdc8-9bb4048ed8fc",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "63731227-3fc5-408c-9c88-6d885b646617",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6176f45-a45f-47e0-9ffe-de5cb5f27d1d",
        "cursor": {
          "ref": "6d579c26-ace5-4503-8d49-044855231af4",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "17d9d2a2-067f-4cde-bd48-9976b31b37fc"
        },
        "item": {
          "id": "d6176f45-a45f-47e0-9ffe-de5cb5f27d1d",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "b7dbf3d0-1638-4c50-b83c-b1a5f2f3cb7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e2985a9-1839-4e13-a736-a7b925d88765",
        "cursor": {
          "ref": "cca9aa45-1a08-4830-8448-91c4616f9f3b",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "0e893a5c-cd96-421c-a683-9a55620b7f21"
        },
        "item": {
          "id": "2e2985a9-1839-4e13-a736-a7b925d88765",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "bee6b504-0eec-41df-a209-a30959266544",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e6b99d3-236d-4601-a5ec-e9f198c02a36",
        "cursor": {
          "ref": "d8c9ddb4-4e63-4061-9646-210e7638ff9e",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "e53a9413-9e9f-428c-8ca5-6dfef2bfe400"
        },
        "item": {
          "id": "3e6b99d3-236d-4601-a5ec-e9f198c02a36",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "cf59ecd8-b158-4060-9089-413d38dc4b8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ba2f269-3668-4c36-a18f-10266b295c1b",
        "cursor": {
          "ref": "81aec30c-079c-480e-ab4c-60d828b397ce",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "01360eaf-505d-4280-af17-4e426a3d28a9"
        },
        "item": {
          "id": "4ba2f269-3668-4c36-a18f-10266b295c1b",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "19ee212e-85b7-416a-af55-a9157a1831c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64913a9e-2036-4f8b-ae72-238cc0c1edc4",
        "cursor": {
          "ref": "42005abb-b5ba-439f-a8cc-d736659e692e",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "9b4b6f30-eecd-4a58-9852-1c708289f8e9"
        },
        "item": {
          "id": "64913a9e-2036-4f8b-ae72-238cc0c1edc4",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "8558a6ed-47bc-48c3-93b5-9195735765a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f656f4ef-e059-419c-aa4a-e5a0f69e1361",
        "cursor": {
          "ref": "adb1567e-3b1c-4016-bbae-657890ff7223",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "2918aaf8-d140-420a-8223-25333c32870b"
        },
        "item": {
          "id": "f656f4ef-e059-419c-aa4a-e5a0f69e1361",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "b9b1d9ff-7f0d-41f2-be80-35246c9b26bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fb37a94-c5d7-4a36-a6c6-d4ea723fc56f",
        "cursor": {
          "ref": "f659caad-59c7-4460-b430-43c8c91fa1a2",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "cf3d6fcc-78d3-4c5b-b6f9-a94b7cc73e3d"
        },
        "item": {
          "id": "2fb37a94-c5d7-4a36-a6c6-d4ea723fc56f",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "baf9c21f-b22c-46ff-9750-6b091bd04537",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9b24c9c-c63c-44fe-8acd-9c836f66f314",
        "cursor": {
          "ref": "78fa4c5b-7a0d-4c9d-9de0-5d02b992a144",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "9a465944-dd9e-42aa-81b0-e0084919cc46"
        },
        "item": {
          "id": "d9b24c9c-c63c-44fe-8acd-9c836f66f314",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "bdb473bf-6870-4b73-8635-abde1ab26447",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddf82fe7-2f2f-4178-9f98-6cfa53245ec4",
        "cursor": {
          "ref": "7dab97e8-688f-43a6-864c-51c492d41643",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "e300883c-7e21-4aaa-8fb2-370f49c66313"
        },
        "item": {
          "id": "ddf82fe7-2f2f-4178-9f98-6cfa53245ec4",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "38c4c47f-002c-4f91-b9f3-8282423c1f32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "353ffee8-9e23-4615-a2b1-821483ddb5c5",
        "cursor": {
          "ref": "3ed70c1e-2620-4765-b2bc-3650a6cff86b",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "07f1fcbb-f08f-419b-af29-76377ef603b2"
        },
        "item": {
          "id": "353ffee8-9e23-4615-a2b1-821483ddb5c5",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "164044db-37e9-407c-ad98-c952cc8f9e33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8feeabcb-faaa-47e5-b798-760c6c07cf80",
        "cursor": {
          "ref": "85a98d31-2242-4deb-a585-2e4374b7bfbd",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "9e513138-00cd-43b3-94a0-32b0b022ae9a"
        },
        "item": {
          "id": "8feeabcb-faaa-47e5-b798-760c6c07cf80",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "533dbaec-4f24-4d98-a5bc-f4ad96ff5481",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "983a8656-aa8a-48ac-a94d-2c6ea4ee68b9",
        "cursor": {
          "ref": "0fdd165f-3cee-42d6-8b15-2d6c6c7baf7d",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "5c56912d-08e6-4225-8e27-8496bcd649a1"
        },
        "item": {
          "id": "983a8656-aa8a-48ac-a94d-2c6ea4ee68b9",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "6c6309a3-02da-4136-8586-29a6d50f2112",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "216b50b0-132f-49da-a711-45b959f37f2e",
        "cursor": {
          "ref": "09f3cb7f-12ac-4445-9040-25e0d50b50f6",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "07133047-a356-4854-a601-f725356f5986"
        },
        "item": {
          "id": "216b50b0-132f-49da-a711-45b959f37f2e",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "cbd3d27e-ef2e-4d01-85a9-15fa3b7ff3a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc1c02b4-c04b-4d3b-8339-160bfe439c89",
        "cursor": {
          "ref": "1ef21e85-50fd-45dc-98f1-9595c45f2808",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "d5504968-5088-4307-bf5e-1ddbd4920fc7"
        },
        "item": {
          "id": "bc1c02b4-c04b-4d3b-8339-160bfe439c89",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "74df71c2-c590-4249-aad4-31bef2ddd6b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13bed516-9b1a-445a-ad75-5247c5d117b8",
        "cursor": {
          "ref": "58abcc02-74c0-4ec3-947c-3e9f3ea97abe",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "2a61007a-b839-41f8-aaa0-5189349359bb"
        },
        "item": {
          "id": "13bed516-9b1a-445a-ad75-5247c5d117b8",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "6e6a06bd-69c7-4105-acbb-c7624634a5aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dea1cfc1-1e78-4ebd-89a2-d9e0522e5d40",
        "cursor": {
          "ref": "abda2506-2c3a-42a4-b520-c2c892f0d7ac",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "521c25f2-b81f-4094-8e70-ad6d2d036cc4"
        },
        "item": {
          "id": "dea1cfc1-1e78-4ebd-89a2-d9e0522e5d40",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "dedefbf7-4098-4ce5-994c-438bec9f5108",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b21491e-6b3a-4c48-ba47-c9db07539a43",
        "cursor": {
          "ref": "3c723305-24e3-4012-a492-aa2ae33feaf3",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "125edfff-29ab-4e2b-b269-93eff1781d35"
        },
        "item": {
          "id": "5b21491e-6b3a-4c48-ba47-c9db07539a43",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "8f5be1df-4ab1-4900-85aa-10b6eea386e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f61a796-cf68-4c93-8b3e-b438a8053bd4",
        "cursor": {
          "ref": "c5cfc16a-9a61-4aca-9020-184b48c8636c",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "187d2510-e2db-48bb-b252-92ae3d845d85"
        },
        "item": {
          "id": "4f61a796-cf68-4c93-8b3e-b438a8053bd4",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "414341eb-8802-4fe3-959d-0d232506c618",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a4004d7-5a9e-4e61-930d-319936bdcb62",
        "cursor": {
          "ref": "f4012aca-6ab2-402b-bd85-b7536cdfb80c",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "994db5a8-fe72-4335-9bb3-a0fc8132e95d"
        },
        "item": {
          "id": "3a4004d7-5a9e-4e61-930d-319936bdcb62",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "03ee6a91-2dea-4623-b907-11364f9d79a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bfe0ad4-7cd3-4668-bfc3-bae89c8b8b7c",
        "cursor": {
          "ref": "2c396675-366f-4680-a268-d5489a45cfdb",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "c7516ce5-7fe8-4d9e-8e39-a69fd9aecc68"
        },
        "item": {
          "id": "5bfe0ad4-7cd3-4668-bfc3-bae89c8b8b7c",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "7ee7d11d-8d4f-4d56-8b31-f0944a73b489",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6dd74ca-d193-479b-a535-88fa508742e2",
        "cursor": {
          "ref": "0b3b6416-e764-4e6e-a135-c5674649523d",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "ffc23725-16a2-4c8f-b947-49f7f6f74ead"
        },
        "item": {
          "id": "c6dd74ca-d193-479b-a535-88fa508742e2",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "ac229a7c-8ed3-47c4-9b46-23e0948a40d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88d8e971-ce22-4a55-9836-92b5742cd4c2",
        "cursor": {
          "ref": "6e3faac2-669c-4abd-8bb6-dc41748db9fe",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "22b19996-1fab-49c1-abec-2c5871fc7385"
        },
        "item": {
          "id": "88d8e971-ce22-4a55-9836-92b5742cd4c2",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "693cce80-fb88-47bb-a05c-b03b36f4c2cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f384aece-f54e-43f7-a756-76af1334d8ab",
        "cursor": {
          "ref": "4524b890-0cf2-4a42-ba64-c083cc964fc5",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "4dab2668-1e8e-448e-9200-50f4a01acc7b"
        },
        "item": {
          "id": "f384aece-f54e-43f7-a756-76af1334d8ab",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "bb16be00-92c0-4406-971d-e7ae21bd12f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a20b30db-0c0c-4eb2-a0b5-137663abc270",
        "cursor": {
          "ref": "43b499ee-dac2-43dc-89b7-421b69860ec7",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "44c0b43a-375c-4ee1-98df-c7e79dbeac4a"
        },
        "item": {
          "id": "a20b30db-0c0c-4eb2-a0b5-137663abc270",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "bfce3980-576a-43ab-a7db-c5975bcc7750",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3495ed0-3dba-44a3-a03a-81e9a05dfa9a",
        "cursor": {
          "ref": "32cbb1ef-709b-4d28-9406-3124c7c0a8ae",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "9379f7b0-b61c-4051-84db-231eeec1d1b7"
        },
        "item": {
          "id": "b3495ed0-3dba-44a3-a03a-81e9a05dfa9a",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "25bc4271-82bf-4d0c-afb9-1d42adedf755",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43fb43c5-17ef-4c45-bf05-5aede5c7ba2d",
        "cursor": {
          "ref": "d47aefb7-9511-4602-8109-369687cd2daf",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "0045d4ec-8fe7-4796-9dcb-d405c8320ffe"
        },
        "item": {
          "id": "43fb43c5-17ef-4c45-bf05-5aede5c7ba2d",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "bc6ec23e-115c-4aa2-b6c0-7f1920767265",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bda52f6-b775-4129-a68a-c6268f23aea9",
        "cursor": {
          "ref": "eb20c82c-7ab7-4966-9fae-60136313de45",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "8cc862da-6a5b-4136-94d2-fed615036d83"
        },
        "item": {
          "id": "0bda52f6-b775-4129-a68a-c6268f23aea9",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "9e01c271-ebcc-44f9-a668-b8fb79a8eb03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75dbffd8-ac66-4359-864b-2f8542feadb5",
        "cursor": {
          "ref": "2d729d2d-6a75-468b-9b47-d7a7e6b274b6",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "ca0a0176-5c2d-4148-98f9-bf3765b221ce"
        },
        "item": {
          "id": "75dbffd8-ac66-4359-864b-2f8542feadb5",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "14aba6e5-b136-4af4-8eb1-c3e1676dc4b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6919fbb4-9692-4c03-b7a2-6db4cc37cb73",
        "cursor": {
          "ref": "ddc8558e-ffab-4fa8-a09b-8d7958422357",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "52c9af4a-b235-4c39-b2e9-ec241c47c395"
        },
        "item": {
          "id": "6919fbb4-9692-4c03-b7a2-6db4cc37cb73",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "4f4c739e-939c-4a09-9a6f-82117a911a2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "273d9e63-66c7-4471-b386-206063c39fa4",
        "cursor": {
          "ref": "9b67f56d-ab8f-464e-ab41-e10f1d7bbb99",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "93816f84-93b2-427d-b39c-8bb35a2c2fb5"
        },
        "item": {
          "id": "273d9e63-66c7-4471-b386-206063c39fa4",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "18bb8f77-c6d5-4c3d-bc25-e99f6184213f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d21a80b-84f1-486c-8cc6-7d32d8a75543",
        "cursor": {
          "ref": "aa28dfb9-1661-423e-b82b-1390bfc47f48",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "b0844f7b-0ab4-4f80-8e47-99ea28039456"
        },
        "item": {
          "id": "5d21a80b-84f1-486c-8cc6-7d32d8a75543",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "cf3b21e2-036d-43b8-9e77-b7df3715ac5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1922ce1e-4d94-46fa-93c1-c09d64cb443a",
        "cursor": {
          "ref": "59d16f3f-6873-4780-88e7-66693cfed4be",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "b7bbae0f-86bd-4167-b6c1-9956771a49f9"
        },
        "item": {
          "id": "1922ce1e-4d94-46fa-93c1-c09d64cb443a",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "85ef71e0-8f9c-47ff-903e-0b2bdb8fab3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1956dba3-7e29-4f37-964b-59850230a907",
        "cursor": {
          "ref": "772e93aa-4514-4aa4-b729-dc48a6a160ba",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "e43af6d4-1b6c-4d2e-a58f-3ca82bb756e7"
        },
        "item": {
          "id": "1956dba3-7e29-4f37-964b-59850230a907",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "57075dcd-66e3-4d57-8be2-741229a70e1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c26a7ed7-8a9c-4790-8821-142a594a6640",
        "cursor": {
          "ref": "ff3eed62-b32e-40df-9a3e-113431a2b1b4",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "fdf77292-ec35-4bf4-bd03-c4e19c1acbc7"
        },
        "item": {
          "id": "c26a7ed7-8a9c-4790-8821-142a594a6640",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "5f5c378a-2f43-40b9-8827-5740ccc95cf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7091e081-4ccb-417c-b136-2104d58fa255",
        "cursor": {
          "ref": "f1ea1ec3-0fdc-46f4-9c18-f8006329b8c0",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "c7cd697c-edf7-45fe-99e6-639499e9da57"
        },
        "item": {
          "id": "7091e081-4ccb-417c-b136-2104d58fa255",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "fd5088dd-dd32-4d5f-9b8f-9657b763e100",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d2f9756-fadf-496a-9e41-5004e3896a14",
        "cursor": {
          "ref": "35872802-275c-47bb-a732-35f992440491",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "67062a21-fa72-4a89-ac32-275db2cef2c0"
        },
        "item": {
          "id": "4d2f9756-fadf-496a-9e41-5004e3896a14",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "099a4b4f-f999-40e1-8333-8661b704a84d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29621fc5-ba81-4777-b7ed-28c1ddedf6cb",
        "cursor": {
          "ref": "51ed217e-721f-4d26-a192-0f3506f15b57",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "eecf0abb-5276-4327-96ab-81f3828b59a4"
        },
        "item": {
          "id": "29621fc5-ba81-4777-b7ed-28c1ddedf6cb",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "437c1480-da44-4fb8-82a7-727e03fa8c7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d769c5c9-f12d-4730-a446-df07332e51e4",
        "cursor": {
          "ref": "aad1993b-d64c-4eeb-b248-c1aba655fa44",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "c583b30f-6635-412d-9f5c-6fc2e3b335c7"
        },
        "item": {
          "id": "d769c5c9-f12d-4730-a446-df07332e51e4",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "94791e10-b262-40f1-9ac5-bab481be7971",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db3b9592-583c-4ab1-809d-d1708ba8ac8c",
        "cursor": {
          "ref": "9c4e3189-4eac-4035-9153-47e06903d176",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "ef13277a-8668-4ece-8148-1da8e50e7578"
        },
        "item": {
          "id": "db3b9592-583c-4ab1-809d-d1708ba8ac8c",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "8b1dfb7d-72e7-4658-b489-98a0139dd62f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff27ef4d-e91b-4e47-9a5f-519ff92922f1",
        "cursor": {
          "ref": "3c84cae8-92c5-4645-9eb5-17cded75a5c6",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "2bb8de21-2fd4-47f0-9a41-1dc6bbc7b3cf"
        },
        "item": {
          "id": "ff27ef4d-e91b-4e47-9a5f-519ff92922f1",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "2cfd80f3-1004-4678-8c21-9b9956e3d4a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2174782-298c-433c-89ad-054548ecb2d2",
        "cursor": {
          "ref": "eb473337-0a19-45fa-8253-0101140078b3",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "0e3ab792-0fcb-453e-b047-7a85d8203b88"
        },
        "item": {
          "id": "d2174782-298c-433c-89ad-054548ecb2d2",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "92f5aff0-14f5-477a-821a-8aa9f1fd8e61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ced74449-09d1-4bfd-b77e-23afb1d709c3",
        "cursor": {
          "ref": "ccd6cc6a-6b37-48db-8cbf-bddd9875156b",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "79878a35-7309-4f7e-9524-780fe4d8ee3f"
        },
        "item": {
          "id": "ced74449-09d1-4bfd-b77e-23afb1d709c3",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "714d361d-14f0-4316-8016-d1be38478240",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b196c5f-b64e-417b-85bd-ecc86b53047c",
        "cursor": {
          "ref": "9406c0a9-4f50-4edf-be34-2ac8ec327538",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "480978ea-200a-4cfe-b7e3-543781768ae2"
        },
        "item": {
          "id": "4b196c5f-b64e-417b-85bd-ecc86b53047c",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "d6f14637-461b-42e3-938c-8a35a6adef88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "943367e7-321d-4e45-a5aa-4d8c03024f46",
        "cursor": {
          "ref": "d08d68b3-7be9-4724-8e6f-3cccbe4ae323",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "bd824f34-a765-43b2-8174-45c7d4dc56f8"
        },
        "item": {
          "id": "943367e7-321d-4e45-a5aa-4d8c03024f46",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "e49f2828-e9f8-4b81-a05e-43d0b73d03bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60d4dd15-3f42-4d0c-bfdb-6f54df16767b",
        "cursor": {
          "ref": "0edee37a-ae4c-44e4-a1ea-79a5eed6dfda",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "3ee148a2-396a-4807-897f-8c76ee2a145c"
        },
        "item": {
          "id": "60d4dd15-3f42-4d0c-bfdb-6f54df16767b",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "6b924057-de55-49c4-9d00-021d053c2c50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef910e55-36be-446d-9709-7bc1fc42bd92",
        "cursor": {
          "ref": "38533a2d-8dc0-4281-920d-625f615e67cb",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "09f9b381-47c0-492c-bcda-a17dca30a3a4"
        },
        "item": {
          "id": "ef910e55-36be-446d-9709-7bc1fc42bd92",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "d8ed5225-873f-4ff1-ad6d-14ef536ac907",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d577115d-16c6-4f89-85fc-5ea13cfa2b60",
        "cursor": {
          "ref": "3dfe4e78-9da4-4b2b-aa43-f5db59d22184",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "c2f65790-70a3-4e06-bc4c-247911738b93"
        },
        "item": {
          "id": "d577115d-16c6-4f89-85fc-5ea13cfa2b60",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "8522300e-8b0c-4a5b-8394-a8dd178372b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ba735f9-2033-4e55-a656-7d68da00ac77",
        "cursor": {
          "ref": "5a833f37-2064-4786-8622-36c7132cfbba",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "30ab819c-df6d-4335-810a-dd1449cc0c3f"
        },
        "item": {
          "id": "9ba735f9-2033-4e55-a656-7d68da00ac77",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "6fe0036f-716e-4cb1-a77e-332d78e1cd55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a32a35d2-1786-435f-9eab-7312f9cc4c5b",
        "cursor": {
          "ref": "9646bf44-88fd-4ec3-9a10-63c1a977f302",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "d7e1cc1e-037b-43ab-b602-a7d248161872"
        },
        "item": {
          "id": "a32a35d2-1786-435f-9eab-7312f9cc4c5b",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "847bcb82-5ec3-47f3-8cd4-71d1990658fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2439e2e-651b-491f-8c53-96d9037f1fe0",
        "cursor": {
          "ref": "0ff22fa0-c67b-4945-829d-c65b8e60355c",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "f09b792b-4dca-4cc5-b3f2-7e9edb4f9944"
        },
        "item": {
          "id": "f2439e2e-651b-491f-8c53-96d9037f1fe0",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "7440e3df-8d03-4abc-b875-4fcd92a9cde3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7e53cd9-bae0-4aff-8d8e-af78d7ab53ef",
        "cursor": {
          "ref": "9a82dedc-60ee-40ef-a172-169a8cccc7e8",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "234c1c29-12a2-4aec-8d0f-852cecbbc9f6"
        },
        "item": {
          "id": "f7e53cd9-bae0-4aff-8d8e-af78d7ab53ef",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "38b9e6a3-9fe9-48bb-8b60-c551b34b414d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c73ed005-215b-4dc0-b101-7e6637ffca62",
        "cursor": {
          "ref": "bd1d5b1c-993b-4885-aba6-618b235d7997",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "935686fd-f428-4743-895d-7cb5ec37458e"
        },
        "item": {
          "id": "c73ed005-215b-4dc0-b101-7e6637ffca62",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "0b25d0ad-6f6d-4743-ad68-bf24dc3c72d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f37d8922-b715-44bb-ab17-d72757d17e1d",
        "cursor": {
          "ref": "de75fa97-0b05-427e-9987-ef01e21b1d70",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "69e262c0-c524-4900-bcbc-1233918b38d7"
        },
        "item": {
          "id": "f37d8922-b715-44bb-ab17-d72757d17e1d",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "0c892e1e-0656-470e-8b17-91dc8b35c827",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6137e12a-6761-4b8e-9ed5-4af7db09ae58",
        "cursor": {
          "ref": "a26ed45c-993b-4285-b4f0-f74c67bf5b63",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "1814ad4a-40fa-4c5d-a50f-c394bd5cccf1"
        },
        "item": {
          "id": "6137e12a-6761-4b8e-9ed5-4af7db09ae58",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "629753e1-a483-45b8-aca5-c5af06edd350",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d3d18a6-e38d-4a60-81b0-372d12393207",
        "cursor": {
          "ref": "75097211-3e43-44f8-89c9-2c2f8ce3ab4e",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "f83109e2-c175-49c5-b20a-fffe7656d5ae"
        },
        "item": {
          "id": "6d3d18a6-e38d-4a60-81b0-372d12393207",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "4e1d95ae-2aa6-4b8b-a331-3b1d2c6bbab2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:244)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a10476b7-20ee-49dc-a660-bed3a37651f4",
        "cursor": {
          "ref": "f206b189-ceed-4538-b09b-0964c656b121",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "5b7472b8-2cb8-4a66-9118-867825b6b2c8"
        },
        "item": {
          "id": "a10476b7-20ee-49dc-a660-bed3a37651f4",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "35f1c739-8311-45d6-942d-0551ae9fc32c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:245)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:245)"
            }
          },
          {
            "assertion": "response verified is false",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is false",
              "message": "expected undefined to be false",
              "stack": "AssertionError: expected undefined to be false\n   at Object.eval sandbox-script.js:3:245)"
            }
          }
        ]
      },
      {
        "id": "b5ead84c-7c0b-42a4-938c-1058fd868e59",
        "cursor": {
          "ref": "2eccd222-3f36-4966-a8dd-25c7790dd866",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "84d3628f-7c13-4853-83bc-f622e1d80b8e"
        },
        "item": {
          "id": "b5ead84c-7c0b-42a4-938c-1058fd868e59",
          "name": "credentials_verify"
        },
        "response": {
          "id": "e08dad4e-60b3-408f-979c-5d99aa28813d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:246)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:246)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:246)"
            }
          }
        ]
      },
      {
        "id": "f4c80884-5364-4684-8dde-2ee36a63b291",
        "cursor": {
          "ref": "2f86724d-3346-4a64-834b-1acb364ae19b",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "6fbb7b17-96b0-4102-b8b3-5dda2ba8ba14"
        },
        "item": {
          "id": "f4c80884-5364-4684-8dde-2ee36a63b291",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "d4e68315-e3a0-4c85-9ea0-e83c537f86e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:247)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:247)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:247)"
            }
          }
        ]
      },
      {
        "id": "66fc3cfb-a04e-47d7-81c3-b1d629d321f0",
        "cursor": {
          "ref": "f4d271d8-db1d-4153-be14-9f1c5049b647",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "737a87d1-584b-4076-8fb9-89045a0693b9"
        },
        "item": {
          "id": "66fc3cfb-a04e-47d7-81c3-b1d629d321f0",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "14b5ac17-9cb3-42fd-853f-aa8c48f0b0c5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66fc3cfb-a04e-47d7-81c3-b1d629d321f0",
        "cursor": {
          "ref": "f4d271d8-db1d-4153-be14-9f1c5049b647",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "737a87d1-584b-4076-8fb9-89045a0693b9"
        },
        "item": {
          "id": "66fc3cfb-a04e-47d7-81c3-b1d629d321f0",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "14b5ac17-9cb3-42fd-853f-aa8c48f0b0c5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b02d53e-f878-4817-9b7b-87ae6d4f1293",
        "cursor": {
          "ref": "d1df4bbb-7484-4f2a-94e1-193516072072",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "00e12d0a-3427-45ff-8995-dd6cd6375b07"
        },
        "item": {
          "id": "7b02d53e-f878-4817-9b7b-87ae6d4f1293",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "a4249d12-b180-424f-b758-e0b0e8d45792",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:249)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cec9098-118f-4006-b697-9d7455e7b138",
        "cursor": {
          "ref": "4b333397-d648-4f09-87b1-c056588fc592",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "2c6e7912-ed2d-4bbe-aa37-1ab93082d4f5"
        },
        "item": {
          "id": "5cec9098-118f-4006-b697-9d7455e7b138",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "1678ebca-b25d-4698-8333-678a4a0a69e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:250)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}