{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "c07e8d64-a183-400b-b42b-021054b66ab4",
        "name": "Clear Cache",
        "item": [
          {
            "id": "3316d464-a0e9-4de8-aba8-ef7e069a5eeb",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1b256a28-8249-4771-adbc-70d955e249e6",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "8a2132cb-bbc2-4204-b60a-bc5e4ec8caa3"
                }
              }
            ]
          },
          {
            "id": "1bf5ad26-54e2-4bc2-83b8-cc80686296ca",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e5ef3c4e-6fb0-4358-9ffb-a6dcf2428338",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "d7acae67-6117-462d-9cce-bec6623cd7af"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "33b4c511-6b6f-47d9-bdc0-71dc7b723a45",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "87b0588c-2e1c-4bef-a90d-80b1f18175dd",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a7b624ff-1eb2-4a08-8716-119ded3be448",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2233bbcb-7615-49e6-91cd-36c29a0bf61b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d17f7ead-7f0b-4d85-bfeb-a01a2eb70365"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "eb18d280-f0e6-41ab-ba5f-5feac9338696",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b99aae87-f2d2-4335-8968-f57536cb2493"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "f78fd467-870c-4bfa-9653-742e8d7f103b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "99596dba-1579-4258-8c7e-de2b91df8e92"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cef0fcbb-2e17-4182-8c81-d1a23c0f1c5c",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "19194d04-3062-47c9-9572-bd6761b8c2de"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a8cc758d-ceab-42a6-932f-515052653f41",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e9582e7f-fd05-49f9-aa9b-5ec35a05d7bd"
            }
          }
        ]
      },
      {
        "id": "d1701122-d5b8-4dee-9e90-bf64d159e148",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "6a2fcdb5-9cab-4e35-9e59-04576f0a1c6b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a7aff448-8551-438b-aabd-2850ee6d1e99",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c94bfd0b-4334-45d8-bb00-ee13526a37b7",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01aeb333-cf9f-48c5-8067-b36902a01ede",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4c5db511-f0cc-4b74-a695-eb9ff49fdd9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb83629f-186b-4a0e-bb2d-1871db09e506",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebaf276e-1adb-4f1d-9d12-7637b548572b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ec9ab949-cee8-4178-b7a5-12f27a17d01f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b4abb38-384e-4680-9ab7-eb34f686e51e",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4efed7fc-8997-4499-b756-27b51d7d1ac7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e9c0040e-b096-4357-8a10-de2a48660f11"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "994c0cb1-c698-477e-b7ad-4dfad40629b3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "cfbf8d28-d1be-47d0-8b35-733586967069",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ea0d2f2-a236-49d3-b1b9-44c6d7999e74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d964cc25-a038-4e0a-b2fa-55151c7bc02e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf6258e5-38fa-4746-b679-afdd9a900b19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cf5ad23-8dd5-436f-bd01-0ab3478acb41"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "b3dc7c6d-7a6c-4292-9ec3-5977d67be924",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a200345b-cd0e-40e0-9617-f27708bf7f0e",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "88ea9b76-6b75-4026-a80f-651857a2812b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "272be777-d1d3-4a78-a684-16f78d9eff5f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3f43f9e1-7a55-4c25-8fa6-8cc9e1d7c08d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "d6d94205-d1f7-46ed-9ebd-b812ec346dc3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "89dd5752-f520-4752-afa5-e690f13d7dbd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0847a266-301c-4855-81fa-cf8ae1ee77bc"
            }
          }
        ]
      },
      {
        "id": "7afc69f3-767a-4a4f-8d57-bf3e0525cc38",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "db265d91-6667-4dca-aa9f-62533ac14a18",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4389b699-6859-415e-8068-92440e7eb978",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "6450d343-6975-4389-83ea-b03cc5eb0fe0",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b03d92f2-b89d-40ce-ac76-e46dcb2b5e67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bd2c1d9-f318-4ad7-b3c5-58bff95c4c90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b10fb79d-c38d-4922-b7f6-becd6137f82c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fdf52b77-cc28-4c1a-b9e8-2cc55d11f577"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7131729c-56cd-4491-8ba6-434f5d427826",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef442c95-d735-4e60-aa77-37ff7e263085",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "116efb51-9bc0-42ab-84cb-01e1e1530148"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc94e4e8-d87d-4334-8ac3-093237a15773",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "70b14798-f10e-4e44-9023-059c51c15681"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff6e4827-6451-49e1-9fd9-ea69e5b646d3",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bf4a523-6fee-4dc4-aa75-3746e485b76a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "965bad4e-dab3-417f-a516-ba586e625126"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e45e1d71-6977-47b3-875d-c4edc50d88b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aa5d24fd-119f-46c8-97be-d2eae5c99da4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0560931c-295d-41a7-9d45-91e7bec08ce1",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b5e0f94-a39a-4925-b30e-1078694bb48c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7b7163e-5b83-4bd8-b978-59c5b13156f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e500a27-449d-453d-bd0d-8556152aaa22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c5fa9c37-a502-42b7-9ec4-6bb16346ed2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8262127a-1370-4976-ae3c-6a6c5e6d4fbc",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66cdeb0e-7183-445c-9154-0aee88ea9b9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb04d90c-6dcc-4adc-a40c-74cf1254c2ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f9e3f71-8154-457c-b236-a5b19cf218d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "33d893e8-3344-41c3-9732-967b5e3b6214"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07a74e3b-9fc8-4c00-88f2-f5536eeb3540",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fa72a66-7f67-4552-a46f-c4822f2c30e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "492030be-1293-4355-be37-c239b9adb4c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45b2c0c4-8e65-48c3-9ad1-135539360367",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6e637629-9b30-4280-9b03-a6681d1a7222"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34bb413d-cc8d-4cda-b4ff-0e29cb2fb8a7",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60599ab0-706d-4762-be46-4c500972acef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3fee6d0-6463-407a-9fbb-19a991f69ca1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a27e4aba-5d68-4891-8bbe-142f47c80613",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2f03402f-015e-4523-b70e-a09f8427f561"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dc8836f-9a69-42a7-a29b-88ad1cbdd440",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e95cc2cf-3b6f-49b2-b121-2315fd355752",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92e68b2d-9dc5-455b-95de-d1d15da92656"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef5ac7ec-883c-4163-b940-818a70c2b164",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f398e63c-3b39-4296-a10e-62acf4ac1947"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d4aa12c-cf18-443e-9296-e16d0abac755",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69b2d242-e70e-487b-961b-dcd2c26810fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81e5173e-8030-4381-b219-ce6e781b6120"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b90eb74-0b22-4260-b3d3-31280f24238a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a1db602f-364a-465e-8fe8-d1d5fabef542"
                        }
                      }
                    ]
                  },
                  {
                    "id": "184c2b39-d59a-47ed-bfb2-e31c9e69bdc9",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bee3b639-ab20-4a13-b446-6a2bc36ac8d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fad0e3f2-064a-4069-a958-1c78957495e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce2c854f-e3eb-4474-8074-f42b829f58ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "11c8b0e6-9692-49bc-9bb6-7d707e4f8371"
                        }
                      }
                    ]
                  },
                  {
                    "id": "847bdcbf-a5a3-4470-9534-b8929330c62c",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdeefed5-9b30-4889-a54f-755f4219a1e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68e10c51-87bf-46b6-9c7c-3a0b1021badf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01cf3c21-20e6-4987-9da9-89b02c1e89d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3b5082ad-ebc9-452d-b0d7-d4f8b5d8fe7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb38506a-52fe-41b1-8ad7-dd3769d7d530",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32cd0e7a-f8d1-43c1-a740-4c881a403b4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11e5ee1a-4970-499a-b3b0-c904a702ee33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6801b789-70c9-4a4f-8bb4-e13497a9f7ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a129e106-0ea9-4df2-86fd-92bd9e301274"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5095e04e-e0c5-4c7c-87bd-1827daea7363",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58cb8422-3e8e-423f-867b-e6b5286ca2cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b1c1fb1-4b6c-4668-8822-50f952907c4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02820009-aabd-49da-84c0-4bc553b60d09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "16b78fa9-b17b-4e21-92b1-4d6020734164"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09d76fc4-77fb-4b58-9fd1-e478a78f927d",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e7b771b-0512-4a46-afec-8ea15d157b5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa063da8-4f70-4918-8d00-8c35fdf9a25f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91424e2b-c947-4d7e-9b84-9926f27c3da5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "26439b73-0f5c-48bc-aedd-eb3342ab993b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b43eb19-adf4-402b-84f7-9c414359da15",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61cf4a0f-aa05-4063-937e-ca46ab792bcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0aa0ff47-fc8c-4749-a7a0-b85d7a05a7a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d2002fa-b860-448f-9650-4da76d84c38e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "71da1097-3ea0-4ea9-9c26-d9db860eedf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "338366bd-8339-4a51-ae55-a8e99214a6cc",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26bc2c60-12ce-4428-8586-573a52bd9338",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50a7a64b-ebe2-4e7e-82e9-e69361ad6c79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "344df04b-59b4-45d6-a313-b062b86b0f06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9d97a257-8751-4f0a-a561-6d81b8258529"
                        }
                      }
                    ]
                  },
                  {
                    "id": "994e489e-72dc-45cd-b6b9-f9ba43b63060",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "498af579-85af-43f1-a99d-e60ccb5b1f1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d532765-4059-4d22-bb8d-0b587c6f35ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f0fb51b-eaae-4792-a615-060d807cac8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "13383c43-ddbf-4449-b54e-be042c27d67e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44f991ee-6fe4-424c-883c-8011fc7b71ba",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a7b738c-8c6e-458b-b4d6-9a5c5510c600",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de002497-fdde-4551-a9af-72cd0f83de6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7354f903-014b-4365-bdab-aed600105078",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "5a754674-0162-446a-bb9e-401ef32c9ddd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec431ff3-a221-4ad0-b962-e2a8f3c46f5b",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac399302-5086-4af0-b560-69339ab41a4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17f7f359-fc9f-44bc-9a6e-ef5e2af203f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "646cb931-ddd9-4819-9db5-76af9d293b66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c5e2dfe9-342a-4156-8bbb-a69eb6cd8fcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a5d0688-8ab4-4368-8557-222c26f2880b",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fa59785-0527-4e17-86cb-ab9d221bf6e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93f0cdca-ea21-4409-9da2-82037d6e9ec0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89d84ea1-2e45-40d3-a4ef-b0b575a942aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d67a0afb-6c47-4af5-85d5-273c600913e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f56fcd6-1a9d-48c8-90bb-db0145de0407",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30bb7158-298e-4056-b66e-f39414faa8ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d11094e-5b13-4e96-8230-1389c2ad3b08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f913c29-5eae-494e-97a6-a473700cb21c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9c189dea-653f-42f2-af9f-8eea6594e025"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fdacfc4-c43d-4101-b53f-9af28c5714cb",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b69645ee-96e2-4224-b4f9-350bd2f9d2a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3de10d90-c08c-4952-8726-bcecfd087264"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "844cd6a4-e788-470a-8073-feddd214d23b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "591cb8d8-f2a6-4374-aef6-e18d19fb8c26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8056172-885a-4782-b984-1618fadca4b6",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb205792-ff92-4395-a88c-23ac10b74c4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6b8a5a8-2c07-4ad7-9bf4-d5ff49623816"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2256038d-d7a8-4240-9378-8e60d6abdda7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "482d1a2c-ff92-4c01-a7d5-d60988dc6ac4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21e4ad42-9a63-4d51-8421-a7dd904dd610",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9d47cfd-4168-4886-8da8-cd4e3270ff86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af7c51de-2078-4505-a66d-27a8f208d77b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5af70115-6f9c-4731-9cd4-92507f498b98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "92eb489a-79ff-44af-acc2-d2b8eb22e2de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73ffe9e1-2ec5-4f5a-b015-fac133f2c9ce",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef41a7ab-3fbc-4a91-aa4c-91f313db8d69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc204368-7d2a-4080-aa5d-a10f23e4f78e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4620ce85-8dd3-490f-b64e-20969d82f75f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ceea401d-4368-411f-a686-2d561a59812b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39da22ab-2b90-4eeb-ba2b-c6d1c82a7418",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24408a8f-bec0-4318-a7e0-3cf7a228e8cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d459b47-5004-48ff-9b3a-361f52fae717"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "479bf2e9-45d0-4257-98a6-76d2b3d4553b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "561211d2-1d6d-434d-a3d9-1cab78083b5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eef7a4ca-f728-4e92-8eeb-d3ce04aef0d9",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbfd08c8-037f-4173-b089-8152add093e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d893f324-f012-4c29-bed8-8b1e170b73f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86bae8b8-2a1d-4e95-9fea-88e51927f64f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b4805f3d-e122-484a-b8df-65975b25c5d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29caafe8-de29-4a90-8a18-0a8683ac0bc7",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b83070f-0664-4840-9588-0d3299b77672",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dae712fb-2d5c-48bd-ae49-72782a127352"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2baac4e9-1d15-46a0-b343-cb81f82ede2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "166cb03a-5d57-4f1d-914e-673433ffb3d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17a1d695-e1f6-43a5-82b3-a9e1d6c87aa8",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21b8ac05-29f7-4519-9354-45e9e41fc0fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfa68c20-fccc-43d9-9f3f-bf255dcb2525"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4848307f-31f9-4dd8-ae47-030e584be4b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "48f9dcad-1d55-4846-969c-12929f48256c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cf717e9-c9e6-4c89-a3e8-4734c376de8f",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e342ad65-913a-44a5-b2cb-79af493fd6ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae4dc673-cb56-4bf0-b0f0-f517e3d062cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "258bc351-bdcb-43da-848f-b6994c25fa45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "a54932fb-2adc-4a2b-80c5-bc52a0f4d052"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eabf49f0-6a4c-4fb1-94c8-0dcf59fa5659",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "296457cc-5e07-4588-a568-b1d1d26349f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ae14983-ca75-4a27-949d-0bff02eb126b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33b9e4dc-00be-4edd-8265-317fb956db0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "25b70bd6-d93e-40c8-8eee-65ec6741d7df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6abd0f9a-c39d-4db6-a54f-ab865177efb0",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b4270f3-a60e-4462-b35f-760155c88c15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdbe5f2d-c3e6-402c-9c20-f00f9b507b49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8896503f-4469-43e0-a52a-3449d88223c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c3dd36d9-98b6-46a6-8410-bd6645acbcea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e8ef756-da31-483a-be15-0810ed70a870",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f5c690f-d4d6-4004-88df-6b319fc3a141",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ae15c13-9009-4bfb-8dd3-6acca0cf92a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a128e1c-51e1-417e-87c1-ca3158b1304f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7b84e8db-5d8d-4ace-8394-141946e533be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a1b23bf-6377-4180-8b43-4f226b82dfe9",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "330bd4a7-db45-4e05-a5e1-bc1a87c5d5a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "922bb600-e460-4845-be1f-46305bac977a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a01bf2d5-a50f-444f-a823-792e4d894c4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cb609811-8295-4175-94d4-3dcfdaa7bdf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0822d2a9-2fa8-4e2e-9611-1048a4f97c64",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e925979-add1-4445-a414-9bf3380964c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "244393b4-258e-4173-8109-374d36be8ffc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd5e1649-c0f3-42db-a4aa-025a5bc792a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "201b782c-4c9c-4d36-b57a-613088a7c642"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50cc31f9-0a51-45a3-b158-71d035382574",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50ab6f1f-e1eb-46d0-98e6-bef99b06ea77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1834beb9-2933-49c2-a1f6-2b902efbd0ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae9a5a03-8a20-49e9-9d5a-826b00d9da87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d0679f47-39d8-4b94-ba8e-00164da7fb0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e130031-7219-4b6c-b130-b30d021f9019",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bb4f93b-68cb-4d49-8069-cdd6fd9398e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ab890a5-c13d-44ae-8294-6ca002272ed3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbbe217a-eea0-4768-a802-b831385ba707",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "adf3e604-4785-4dfa-bb78-7f53b0edf4f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf7bf006-6e8a-4a73-9a16-c4bd1eaeab3d",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54a19701-1fc2-42e5-83d2-5266a62d2601",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49b60de0-745f-450c-a9fe-31b96be812f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92e6dda8-b095-4f67-84cf-f3e51551c58a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "6ff8e16b-3f82-4a32-b1fb-a9bac9174010"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1fb4b28-7dd3-4069-aef4-bcd9058274ef",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24c87fd6-76b2-42fd-b3de-2939b856c369",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8be7f7e6-94c1-4486-bba7-da0571da3ba9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81a2dc09-777b-4a95-a174-86f077637940",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "20f3e9eb-e628-4f9c-abaa-2e80e3bfa33f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa815df9-38b8-4575-9423-aadbeb2fc28f",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e937e08-ccdc-413b-8722-15326a250c3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36d82772-efbd-413f-8734-d603a5bf1a5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a08769e-ce07-4fe5-9c1e-9719077e4bd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b737c805-6a70-4ae3-9f9b-d61a4d373a17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2819456e-4201-458c-8a6f-3f7a0f91d1cb",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0806cb59-167d-4983-9af4-3fcf8103d220",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d615fe9-3cc7-41ee-adc3-f86dcefb566f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3105710c-b89b-4dfa-ad10-fb446d4d2b83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "35bc96d7-cb72-43f9-b157-9fb9f2d43d66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaf2686c-ab67-4021-a408-a58b1838ffcb",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4872bbad-19e4-44fd-a89d-95efb92e4d3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ee8e0d1-9461-4b7b-aa06-a6f8429aa443"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19e3119d-ecb9-4e1b-989b-bfd1e8843ebe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "afc73a92-0452-44e3-b9c4-c6402655120a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abf19704-0c0d-4b9e-b164-ea93cd0a8aa1",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb152a79-5c0c-47ca-9f43-c0331caf2f80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "688b77c8-2083-4520-8ad1-7db139050ce9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1eac7aa8-4395-4177-b288-fcf31080bc44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "0422a75a-7b10-4e29-bf1e-0f0ef5ed8679"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5d82859-9969-4fcc-aa97-cb161ca80aae",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92e31df3-064c-46d1-824b-dd7d257e33be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34f55139-3cd5-4bca-88e2-a72a536817fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb4a8b91-e6dd-4f8c-92ea-93159e3648ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "0f1d7ac6-e8b9-4cd4-ad36-97cc93973d05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "460ab278-2317-4c53-bd90-cce1b72ae799",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db2b35db-24b8-44bc-bb0e-b0f6d10c7b5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4de2fc4-61d8-4101-898f-b5dd8b6dcb5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "645ba2c0-3b72-433b-8120-8523c3c3e7ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "155eb246-a45d-4cd9-a266-22f6cecab706"
                        }
                      }
                    ]
                  },
                  {
                    "id": "139a41ba-2cd3-45e1-9df0-7314bc14bd96",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec7e6ffe-1c20-462b-befe-ad4f33aadacd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4f563b4-abe8-4c4e-8a1b-32269d82dcec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b98efedb-5302-4327-818a-631c57aa335c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2ed012ba-eaeb-4381-8c87-b400580056b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "065d0a0d-e504-43af-b1d1-0194ddd125f3",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d644527-c389-4376-b207-5f12cc74d0a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42386972-a9cc-4fcd-b3c5-60fda953297c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52e49e20-cec6-46bf-8f4a-4d4463991165",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "27ae1369-85e5-4cd9-9b29-98d0629b8f4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d44d2c42-9533-4fc4-82a8-086531c1da96",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9183accf-095f-4631-b1bb-7141145af874",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bb0d742-0f35-405d-9a8d-947efe4df4d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2150d918-5d22-48a7-9ae6-015323462d26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9012466b-5a1c-4bd8-89af-9f6300aff88c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "568112a3-213b-42e9-bc78-c8787098c064",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef3d56bb-eea8-427a-90f9-417f16584782",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5ed5ead-6282-48e2-8b66-f38e3ccf5ed3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29a0f1fe-893b-40bc-b019-53ad4882f539",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c1ab0851-f1c2-4d66-8c2f-bafc3e1a8425"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f06094b5-cb55-4ed9-8b02-d6d15f458cba",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45f34a9c-61be-421b-967d-4856a0641170",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93f01ee4-a0a2-4356-9c1a-157d39131ebc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaaa542a-b730-42a8-9fd5-6e9f45e498d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8a613470-1d69-4864-8913-e66f94b1146b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ad2fd9b-d13e-4fb5-9665-2afafc6ed1cb",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b874beb-ecd0-4257-b688-a88a4842b42e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b646287-8923-4288-80d5-7e7c5aedff47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc3d25ba-6d13-4cd9-a9fe-07baf92b6de5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "62dfee09-4472-41e3-ba50-fcc5f4792b4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "033e30eb-5e3a-4b5e-a8fd-b2aaabe30a19",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f77287e-4053-4929-9d98-aa43ec5ef5ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "146b002d-9f34-4969-becf-9a1f80485322"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7912a85b-cc46-4574-a111-a868bf078361",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4bbe3a76-5f7f-4846-9631-0e2178878a89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be9bdc5a-01ef-4b82-b45a-c602b6692a84",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0743e02-6fce-4a91-838d-7827da0a065f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b908d31-9c71-43e3-83c2-81552980c280"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3d679ec-cdfb-4ccd-bb4f-dd0652c3079e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "da822e60-279a-4496-be20-e6f986ba770e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61e6a667-d4a9-44ca-9079-0445fa10b827",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55384f72-477b-444d-9163-c378196a6ac3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77df3626-16c9-46ab-9d73-c16f313dee5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57b32920-80c0-4b88-a0cc-1a376be38f8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "eebd98be-b40c-4894-b1fb-ae724604a214"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50584975-b2c9-4e15-abe2-efa4edb99fed",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9160628f-1cbb-4ea3-8603-02bf551cf706",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94f66602-3672-44a5-b207-19972c0a4274"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "996cc8a4-be20-407c-b87c-e857de5b3d46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1c27d80e-bf71-46f0-84ee-06900810b8ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44c7f380-59c1-49fe-a219-e2761d589e3a",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a079b964-4544-4506-9c4e-58970f122cb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "196aeba4-fc20-42de-9b9a-578e8935575e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa0bd128-bcd4-41bf-a3dd-443fd7cff1a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "a0d4a711-547a-4449-b5ad-dc829eabf537"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adb1bc98-f48c-438e-a050-fed5c7c5f380",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f68911cc-9045-423c-bfa3-49974c2b7ac0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17ef2da9-e585-4173-a982-5ae0eef3a06b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d35ae47-a289-4c67-b68c-4756718a5391",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "4727d890-eb69-47f0-99b0-ec1b2683b047"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7bf9b79-0f44-4f0c-8cde-838fbed923bb",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35a95589-f386-402c-b6b2-79d0b88621a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9652acd0-2731-47eb-ad13-58835b8375de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "feace686-c75c-4c53-83e4-9847cd10a23f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ba839e51-4520-405d-988e-b00deb87ae62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a65bc1dc-de65-40b9-9df2-8c13eca77408",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56008f89-bbae-4f37-a5a7-8d35b51e4952",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86543e09-738f-480a-a550-42ac6cfba23b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac133388-e126-4601-9e4f-8aae08897938",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "bddb454e-f9d2-465c-a7be-53bdde883441"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d633884a-578f-4f8e-a7eb-44b59fd67da2",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9737db22-a321-4017-b2e0-c246b0ab440a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd9c6b65-4004-452e-b057-40e45d003fcc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e1f6417-aff8-4710-a15f-0e136e4dca8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "31d4297f-047c-4f80-81b9-effd36d21e5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18739247-d248-487d-b2a0-5e2c32819d62",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7c8120d-a132-42a3-b9e0-2336c47e4df5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79158cda-136a-43df-b271-bd1c8a3c2079"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7671c71-8e0b-426c-8d26-ecfa8ffbc250",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "7558ef04-bc83-4018-8534-8ab40ac0d089"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b636524d-c549-489a-bfb0-613f39e64cfd",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9841175b-42b3-4f0b-ad49-f8d26992ea32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fab4eb1-c527-4ede-bbfe-2f060557212c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d544144b-056e-44c7-b177-f2351244ae33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "fbb739f5-a08f-44b6-92f9-5391acc948a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0236036c-c978-4733-9d7d-9903ed0d39f9",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17cdbc4a-6c00-4dc2-9b71-a1d8df6d2f54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f13ff5ac-b26f-47e5-a3aa-50b9410d834c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "371a8412-65aa-4374-8460-503d57d650ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ae7cc33-6bfb-407f-a9ac-1873936844b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8772e02-a91d-4a91-a40a-478c6a21fd9f",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e278dfa9-1c06-4b22-abd9-51459133362f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c21e878e-07d3-4cb3-be26-90c9b7cca03b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cc815c1-e276-47d4-819f-6126e4071c04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "561684af-f6d0-4785-bfa0-087ff53cf0b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c2938a4-f659-4068-a206-df46c93a96ca",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e15bf78-c38b-4c92-9b79-b60f3968124d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "692ad459-f004-45a0-b211-dd8b3b81cd60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "918b56c7-f169-474c-be75-a06c5ee927f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "26fd25bb-af82-447a-a972-44a2eb8a5c42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1434c490-a050-4437-a79a-34d28fe22d2a",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b138c766-9fcf-4179-923f-607ab211bdb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff92098a-89b9-499a-b767-dc065e6e3afe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4c972d9-b098-4c54-8c2e-df0a39df941e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8e707d25-d8d4-4d8a-a826-3d9a8bab0c7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7de7d78-e882-464f-a9fa-503b71a705bd",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b36e1d52-b5a9-4841-aa05-97d3fa09b72e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f396c753-f566-42b3-83b2-a8a6ea45084b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45ad350f-6bd0-463b-929f-5645cb26c2e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0b63227f-29c4-476f-a5d7-067fde727ab6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb635281-1a6d-4b6c-b294-1ba6c37da767",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae64f7d4-fa15-4599-9e31-40d323ce13d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a1f3ad1-9080-4ca5-bc11-06b4be3f1a4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7568df3-83a7-4ac5-937c-2e86dad45a08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "8b7c0e67-ef07-40b3-a732-3fa89917860e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a98754f-94e9-480b-89a0-8d6492833701",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55712272-9338-48d3-a765-4ae353fcf98d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d901729d-52ca-4f5f-9c5e-d1d3873ec01e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e5d465d-a066-47fa-898f-e3c58f0e3d73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff2bb5de-065a-40cf-806a-e5b2319e981b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd009859-737f-41ba-871c-27070424d94c",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3d0ad00-3c67-4e18-b237-0b361f61e3e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a787355-27bc-4499-b873-dc4cb3905865"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a790aa6a-2647-4d75-849c-fdd4bc70aa6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "25d9d792-8c82-408f-ae36-94d96a505e66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19cc572f-a35f-47dd-a587-071502c0088e",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5a207c7-0fe5-4fe1-b115-0d9ebdaaf103",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd04acc9-47a3-46af-a432-cef0d7f9fdc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42d4d55d-ee26-4716-8a61-2605ff5de468",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b701a792-0694-44a7-8f4d-c1e8a57c316d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc5779fc-4d51-496d-8ab1-751d85ba2f52",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22cf6327-ddf6-446e-a1e5-e5f57cc3a4be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "035bec1d-62a1-40c3-b007-8ea6aea4ac5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02e89277-8c21-42dd-859b-dc174245ad38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5f43711b-af35-4a18-9662-fb997bbfd23e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "624518c5-7f6f-4c88-b0e9-1ec104caa63e",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36dccff0-e156-4df3-bc84-c7da706129e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b814872-4045-4937-b8d9-e8041f4c49b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52256723-fb18-47dd-b774-873be6bc42d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3c710f07-c713-48e1-99cb-075ceab1a68c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a617cd43-0be6-4dfd-809f-4037ed0f7b9c",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "043cd629-efc3-4326-8789-dd8785b1bc1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e9e37dd-dfeb-4544-94d3-a5108ed49347"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "806e63b0-d368-42e9-98ee-034e992230a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0a97e2ce-fe3c-4ac8-b91a-0fd92b8c22ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2edb72a-f049-49ad-b8be-8b8e5732ea98",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "caf2bc2d-820f-4b62-b4c6-da6e7287f774",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa423796-dfd0-4b62-8a48-0234ad7f6a47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "153e0e66-513b-400e-8cf3-4afa82d3f223",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d9d6124c-dea5-4157-8d08-23523029c58d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d22cee6-6d1b-47c9-905e-accac8bd3a32",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ac35227-36a3-482e-a131-12f0e9b2f80f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed1dfe66-7224-4f06-a5a3-fcd6ee5c4be7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54a201d6-c960-460c-bbbe-d01940aa3037",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ca5061e4-aaee-419c-94f0-db85dfc07503"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4c2c8ce-e593-4163-935d-b1bdaf004e18",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1f5152b-0c88-43f6-b497-c2c9bac4393f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5d38b58-cba3-480c-a884-024ca6f25fb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5faf0be-f700-4370-b7f9-d832359b7c67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bb7a2f9b-e3b6-46fa-a65a-99f4c981829f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd537851-94e1-4478-95e2-3e82e94bbe62",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cab89ad2-83a6-4c79-ad32-ed3e28e940eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b83cfb90-e207-4eb5-b236-7d62417692e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62b79260-adbd-4ab6-b0ff-d551e910b94f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d3679646-5593-4bc6-8778-461c575cb537"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8083f86-cf91-4bee-91a8-00c982087706",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb366cb2-0ff7-4e6c-b5b4-c1f622c34abc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9575aeb-3b9c-4fe5-a2f1-313c11c32685"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3d62ad7-e87e-4c03-9732-999c8a0b53dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "47d60612-940c-4bcb-9def-05ffc9b6ed26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d464208-a02b-4a59-83e1-9662e39a71cc",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98048258-5621-447a-8b47-d98fb3b3ee07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aeca1666-e34e-44e9-949e-ef7ac5dc5557"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "149eaa18-8222-4314-bd33-301a6c013897",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5f345171-4d63-4c78-b246-245437fa7840"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92766e34-8c81-4c47-93c2-3888a9db304d",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a50d5a1e-fd81-406d-b791-0bdd93a3e9ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c540ef4-26e9-49da-a2fc-ab0ec58c97d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25eaf34e-04ab-4dac-803c-de070edd00b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "636094c0-afca-47c6-95b3-76b7c262f1a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5086cc17-ad22-42c7-a130-eeb093285b1b",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10fa56b7-6c59-4a33-99dd-c4a988495dca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b8b3232-80d3-4493-8c88-74592265404b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fb42737-0b94-45d7-9ef1-f93e34f8620c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5d067f7d-95f6-474c-b16e-c38b2b828cb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d532a843-1a6b-4eea-8afa-46c2799faea9",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abe75cce-caa7-4f1e-90e4-7f37038b0e2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3445fc0d-efa5-4b84-a13c-d2b7f68f0206"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ef46d39-a55d-4bf7-99c5-bd9422ac7750",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bbd4b5e4-3fd6-4817-b5c6-89e1678caae3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6e94b94-8181-4c71-8fc8-640542ce1cd7",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cba8ab0-93cb-4f84-876d-122cb6c65d33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d341cfaa-aaac-4682-a2cb-d45004855f18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6231ff6-3e36-415f-8c00-fcd6c6107c0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f107c082-7db9-41b2-85ae-98a890b679dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32703b5d-7fa5-4188-8241-ed7700cccb80",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "612e0f2a-66af-4047-997c-ae3d06a4c0bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a69e13cf-e68c-493b-b8e3-e6909f3fc3e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c97efd28-d0f1-405d-a83a-d6d5e88afe17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d53facaf-ab26-4f83-8084-d2625a6ab784"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c325ba80-727b-49ba-a6fb-0b9ae08dfb4b",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a604a857-7d71-41a3-af58-7dec0881951f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bf6e867-2462-4543-808b-be3c840189f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54cae1a0-8ceb-4129-9c93-8302c4dac650",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fcf77c1d-ac33-442f-97b6-67f600735721"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b363338-0462-41a3-bb99-4c0bc38efac4",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61c989e1-4c97-43b8-83df-bd7c0ef2dbce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5aeb8198-7384-4af6-b724-46743d0147a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "371f4363-d2fd-44f7-9cd3-9d86fa5b94e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "8a76dd81-e95d-4e55-9139-d1cc183d5ac8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4af03965-a471-410a-a613-91a6d2f4d854",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11681b2c-ddb3-4e5d-9710-e34a6aec4d55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a02073b-292d-44c4-ab05-31545607f0db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59d9a26c-1a46-43ea-b2cc-913677647e96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "2492bb37-f476-460d-b35c-3f49f964e738"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12d24b67-dab7-4ea8-a492-1c0a4dd57702",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64d56092-9063-402c-8832-ee696bb39733",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b94349e-498e-46fc-bde4-1164b1ed3ad2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afc3cc03-34d2-430c-a1bf-d5571fb946a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "774821b7-d73c-407d-834f-2edbb5c11eda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a6ade96-fd40-4496-9984-a11cecef2673",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "494c4a06-4b37-4ae9-99c6-cb9e651737aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea1deae4-0167-41c7-af39-1b38affe965e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d9ab255-fde1-4341-9eb7-135ae7786025",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "a3a45588-9119-4437-bc46-62dbbab23058"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d3d71c4-e45d-47bb-a69a-352e9b9f1e75",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea9e7d0d-4100-4dce-8fe5-25d6655156d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c45bee3-3f4a-4345-ad5c-4c2fda0f95dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e2f0158-de41-4595-970c-bfb5dd78b553",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "32d28d7d-8322-4a95-a0af-310774c74cdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fba61cd9-605a-4be0-9f4a-51bb2c31cf75",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "debde39e-2b24-4cc6-9bc0-4f87b9ae4368",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "d8cdd0de-e976-45b6-a62b-f4d584a59753"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d83bcd2-2369-4856-8a08-ebad4eebad06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "392ac9af-3320-4a18-8f30-c46e707edb3c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "aa0f14e6-e163-4d9d-89c1-5f4336f1d20c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "573abde0-9b38-4239-9f93-1ec3b11a5f36",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c96a467c-a787-40e7-88a2-6da90a5bbb13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9eb47edc-8a73-4a88-a9e7-85bb7446f103"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da6daa1c-4060-4d55-969a-5ddceee73ed7",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e3d2642d-1827-4981-9dfd-b91f7c141e07"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ec4f5465-443f-4871-b4f4-30b68175b472",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "035203f6-f691-4964-a5c3-903520dc5b9d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0fc48838-308d-4041-a553-1f149474c94f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e2a8e30a-b6c9-4279-ab7a-e4fa442ee812"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f78c4ae6-024d-4943-a7b7-b552316edf0a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "53ccf4ca-4674-4652-b01d-282d3033ed1b"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b3bd9e78-8ae0-4fc7-b845-4549f4a334c8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0f24dcd3-f53d-49eb-8090-f0e3a8c7472c"
                }
              }
            ]
          },
          {
            "id": "e1cfa27e-8c89-4576-8545-fdf70b3d7ce2",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f0ff5dfe-7e7b-4d2e-8910-9cd42e01a973",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "f00b8730-c805-4e5c-af63-2dca038f71a3",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11d4269f-52bb-4d79-8450-e73b9b231e71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "20e619ff-72bb-42fb-8f00-6f0cf770fa13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad90611f-27d2-46b1-9d58-c56539f4a185",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf62e2a1-04ec-4bb6-96f8-51158b902ccc"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "2ad4982e-92a2-457a-bc0e-6dfebc184810",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ca325fef-1b9e-4015-b948-a67df8fc4e86",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "71b8baab-fb03-4a0f-a96d-d8993c064743"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ba9909aa-1665-4311-a89a-1e4109b91009",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f822d36c-a929-471c-afef-8e3b1516e99d"
                    }
                  }
                ]
              },
              {
                "id": "91aeb864-f395-4a8a-b99a-5de37ef188ab",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "da260c60-19b2-4526-9cc9-8dd3e9f92c81",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e1f7e821-45a1-4950-961e-79794b11d6ee"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f97a5fb6-46d2-448e-81c6-a1fe09f19a2c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ceba649b-5712-424c-84e3-e848dc3c2cc2"
                    }
                  }
                ]
              },
              {
                "id": "41d791dc-abfd-40eb-8dff-29135264f04b",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6422b0f7-3941-4ef6-a8e5-1e352ffc8d37",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "86e4f4b5-1801-4474-82b5-c662f50d1b24"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b9ede5c4-6e45-448d-8859-e41050a63f7b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "4f1be6e6-339e-44ee-9c26-e0554b60d35d"
                    }
                  }
                ]
              },
              {
                "id": "e2a87d80-f1b3-4a9e-b551-b529f8f09975",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "722f2701-922d-4644-898a-ebd3246e98b8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "39101a0b-d82f-489c-81d4-7a4a255a2138"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7974f066-4dcf-4f6d-86c2-f5e9f76a861c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "d6b8e4c1-4b5c-490c-a91a-062867deae8e"
                    }
                  }
                ]
              },
              {
                "id": "e88f4c89-5c2c-46c4-add3-9c787a68af6c",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "71cf605d-4919-4a79-9dae-b8e9ed29a861",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f92416db-1d3c-40f3-90cc-2c2923b5d6ee"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2e268428-4ce3-46c2-b9b6-cf1e664d142f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "131b7f82-302b-422b-a1b1-61e67234a8fa"
                    }
                  }
                ]
              },
              {
                "id": "17430cf1-bdbc-49ce-9238-77c2428dfc40",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cb0c7480-4383-4e2e-9490-365104e7747e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "236d13fc-56bb-44e2-896c-a6c12b004f56"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c8b2a978-8654-4799-abcb-5cd59145017e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b219c9e5-aab4-46e1-aef4-d04b90b30145"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "254b3a5d-b5c7-4ae1-8247-efeb3bf0f9ef",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4378d7dd-21bf-4427-93b6-49ff7dbf8721"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e53b1289-f6e9-4b4b-9e13-d7ccd6980d08",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "79dd1102-b08e-4a01-9d6b-003189fc856e"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a0ce9aa4-4c0b-431c-ba7a-3c0be47f6cda",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "026d10de-6059-4610-89fd-a7cf6c6fbb1a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5b113dac-ec2e-4739-aea1-45080728b089",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8fb29142-f2d0-4f58-89c1-1c48ab6be719"
            }
          }
        ]
      },
      {
        "id": "a394f779-ff3d-42b2-8bea-92bc62abb4ae",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "ab925421-b7b0-4767-8488-365684ca4f7a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "35c8c609-2b3a-4ac0-bc57-d35129139a62",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "29433845-c01e-432b-9c0c-f41000e7b8b1",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99c6183e-18ea-446e-93a6-870395354822",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45ab9d37-ae0c-47af-9a4f-f3035db28e22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79c1856b-c253-46c4-b1bd-88bfd8da10c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "9cbcb9fb-55ac-4974-9873-89134e0d2c8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ad07b87-171e-4a3b-ae51-747d9f7eec60",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37804b3b-4279-4001-9c8c-3430abc3bff5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a225475-e187-4c88-b40f-1d4745451495"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b3d46c0-dfc0-4538-a5d9-dd3d1ed643a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4488e48e-7e5a-4a5a-8923-9bb9e97c851e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efcd8dea-d08e-4506-8076-8f8cb49f386b",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f25e6be-08ab-47de-a861-aa3f42dad582",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18fc0bee-9a33-425b-aa4e-aba0a12bcd8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e3d8f14-19cc-4d16-a7ff-15302869469d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "63eb197f-141e-4670-97ee-d0d8bfc4e6cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68057ccc-8b22-4f8e-a768-7f45c21e1ff1",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0c7c0f2-8c5e-4ce0-aab6-1bd4e7e32ef6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fb06cbc-d5e6-4e9a-8503-6fbb159474e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97c2ba0e-c185-40d8-ad96-83312f41d705",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4a228b76-6974-4295-8f51-c8f24e2071de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5765d241-e4e6-4fd1-b126-275ab7760441",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ae95f4d-b0d1-4f69-944d-d5b591d7bd09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ca5bd21-b79f-4132-9825-3cf202c4d94d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "813a5b54-411f-4530-995e-c06177c7f0d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "03e911ed-4213-4544-95d8-deb6c41d7e21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6116972-be21-420e-8256-a06bd2b751a9",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83984d97-a5ae-45ab-be5c-ead74d5a1118",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ff1d425-9584-449b-bb1b-4288dd42f646"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "650ae5b6-21bd-44e7-94d3-3ea45aba668d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "03c9a5ef-5529-43f3-9364-474609167234"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78969432-53e0-427a-8652-231cc8b7319d",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5333b0ae-c32b-4e4b-9778-d69beac568e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b3f36ec-88a5-4331-a40a-8d2ad7b660af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "259facd9-eb27-4872-a430-ca601bbc10da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "8d33473a-45c1-4f64-8b4d-bd7e5037eac4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef17ca2b-9040-496a-9ff0-0e6b3d8e8957",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34ad41c1-0e62-42f6-bd4f-b536a309a148",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1719559b-69c1-416d-8b3e-a81dd81c85b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbff1ef9-36d8-4a5e-a67e-78f274d18681",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ca80fd36-8a28-43eb-ac90-b28eee13fabe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d79529d-fa95-49c5-a725-1afcbedda1d4",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8fcd3f0-5f9c-40a5-994b-2d59f23ab3ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e86e8f9-8491-4e2f-84a4-9ff61e11b20f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8adf97e7-c3da-44d1-ac31-c998e63bc5ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "81ba2268-68fd-403b-81e2-572100b18346"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56568994-1a79-45cc-8dad-2f3373b9a463",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fea61497-4a67-458c-a376-af5e12832d64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ff782ab-6882-4042-81cb-9eab1824df9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a7c9d13-158f-4036-9a38-400d3322981b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a75029d2-7de8-4165-b306-15c991689dfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b2410e3-3e30-4cf8-b6dd-013e6cb9771c",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce81aef0-7b06-4b68-9a20-0152a95e1858",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fb8dc8a-b07c-40e6-8d66-f26f218a1dbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6156c6c5-9933-4005-ab7d-fb4febf16502",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "17ec8f90-a3c5-4176-bb85-093570209e83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "224572f0-5f6c-4495-910c-9fd41c2dcf41",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f4c8e82-5056-4ae2-a63a-2fc9664c367b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29a376e4-433e-4de5-9ebd-e6e0828aaf59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "298685cf-1b09-4858-8b02-450300aaa052",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "17d68b4c-ceab-4f35-8fc8-7f2dec203f31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45adadf9-ac1d-413d-a632-5fc5f9c37f0c",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea42f8a6-6006-4218-b001-90e61f96fab8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a69fb687-eab2-4f0e-bd23-9ddd89af8ac6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcf9e77c-80a4-45c6-b727-40b0caf8a043",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "977e04fb-f538-44db-be3d-c0077a74ca9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3410850f-005d-4ebe-88e2-99d73b9f3bf1",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c8044f7-8f38-44c5-90d8-be905641e6ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b839f63f-16d6-4838-9849-a5e3b1c09fcd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3e15453-bbff-400b-835d-8ce5bfc8ec9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "e8570b7d-6fe9-474b-a133-182e31abd587"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e07b75ce-6292-4493-8911-295bc21e67e6",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45a6aa7a-9d0d-4dbb-8ed3-807e37db7aaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9af97f11-295f-43bb-94f5-3344b1824c3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1da80098-1688-4724-b0f9-f948a2075703",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "84f6132b-c090-4c0c-9ebc-fee872adf749"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e534a8d-69d3-46c9-a75e-497d71703eb9",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1835c0d8-f1d5-468b-98ef-232005421d25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb9246d8-c7e7-4418-a03b-af5cd2a00502"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00d04636-5296-456d-af42-354a0511d008",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "36c83238-ef2a-48e8-887c-c111533faf03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd286f41-0c98-4ba0-8a63-4f578fb12a66",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9b74ce5-57da-4349-bdff-ed7f8f95898f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bc888d7-394d-40bb-80ce-6975b560e724"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b4846f6-2263-4ac7-bb5a-201285958f07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "4a52e218-1313-40fb-b31d-fe400d60eda7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3484c8e1-2048-43f2-9928-38bb1315fec7",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "016ed146-3d0b-4060-9186-704c90ec6188",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccb56eaa-c0a0-478d-a012-7abfb4375877"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3f7cf33-0d5b-4e36-9853-95d7b590655b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "87f0e0fb-9c73-4fe9-a650-a61c8e493806"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47fc5961-b9db-4e02-9bfe-5abd7d372583",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d075ff25-5480-4247-84bb-1b63a7d69f5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43bedde8-09e5-4571-b147-09b7e60ff4fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70cb850c-ece7-4316-9c40-940e448a00da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "170820c9-665f-48d3-a3d7-1b3cbe017599"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b39112a1-cbc5-4382-9ec4-aa26a5e4978b",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bfa2674-11f5-4781-99a6-8b8d715abfa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57fdcc7b-c498-4158-a5ae-df1af75615e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21a43906-221e-4701-902b-c893418e46c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "be830f3f-490c-4f13-a2ff-246a208923e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be440163-7253-47a3-9c75-2fe7b9482e52",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "697136a2-f86c-462e-a6e9-c6492c810110",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f20f50fb-0db9-428b-a212-532968321259"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "827e0934-89ac-4f0e-8016-a83ffe6ca651",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d542ba53-0acc-41b0-bbd9-da744ce8712f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "971fc742-e9ce-4df8-8aa5-401b7f589259",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f31066f9-c962-4de9-b0f3-1dee8eaa868a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b5ff171-e2d7-4e3f-8bbf-619134e9fe8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4110200-9ec2-4cf6-8d0b-e35327cf8b1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "35a30be1-3b38-4f04-bfd9-a5fa46d692ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a65b5824-31c1-4a43-a158-cb175b3dc705",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af427bca-caaa-443e-a94f-e839f3f9323b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "741a30d6-7ad4-45b8-8e32-9ee2a33f9422"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b8ce677-30a1-4a15-b320-5a7f83c121f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c15b36c7-36f6-4106-bd07-669bef66e8a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4fbfe9c-6bbc-4fe6-8a85-b80a1a841960",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16c12ad5-648c-4987-acc4-6d96fee10353",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a0def76-91c6-4a69-9894-378b0fbc64c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12315982-3fab-427f-b72a-056386011460",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b1be14f-ee47-43c1-945b-51a728b0f450"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b0c437a-42eb-4ffe-ac45-95f6d67ce827",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c0b8a1c-30a2-4825-ab69-bd0a2097d5b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25c99110-c091-4740-8187-ec6593fd88d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be16ba83-c6c1-46ec-a4ee-97947a192850",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b94c2d50-93c4-4c79-a39a-f8b501cdb623"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbbe63e0-e761-4dfd-8cec-3b39fbb88163",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de61eca2-9782-40af-ab06-9b7651932d1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7242bc1b-c0e4-41bf-bb92-7f6a7ac864ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fedb8d3-561d-43cc-a245-b7efb6cc2b95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b15b160c-1cb5-4288-a4ba-ef28285af22f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "309ffa09-90b6-40a6-8e83-bdffebe0c54a",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64c499ac-0599-45bb-a276-d4a452e7af7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b4d8893-35fd-48e8-8c73-56bf2400114d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51c1b6e5-b550-49bb-b762-30a4c93e2a8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "341d8e70-55c4-450f-a735-d07247c5d553"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c3bd459-8761-464c-8584-7b8acf56b113",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bf84b38-5266-4c95-8449-4041584e3ba3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67964501-0ddc-43dd-9079-589f84003f34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b88b960b-c106-47d1-9877-84c438087a69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "33fbcf75-ce0c-446f-beab-687576a62de3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "964ad42a-0ba2-46f0-9914-b10ac8545c15",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4d9c21f-0fa1-408c-a7d6-c2258794a53b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "792a3831-7b67-4a47-9db1-4ce48ffa7968"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "832c7f0c-1f40-43c7-a2ff-98a191f0a665",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c77c6f31-5bc6-4e70-8558-c0a7763bb783"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d49d55e2-ff7a-4777-934e-536db48a12f3",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e556d971-1fce-4d32-baa0-4ee4e2073b22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af3b0841-03f7-49df-b8c7-6fc93558fe3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd839b71-3231-4916-9c77-cab8dd50dd8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9cc475cf-42ec-448d-b2fd-59ca3e764972"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41f9848c-7a7a-496d-9c88-a39c4062fa38",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45caa0df-7ab5-4ed2-b50e-54c5cea6ca60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5846d4f8-b0ac-46e2-a2fa-d3b8aa460fe1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97316d19-891e-4f78-a104-5ae4cc344d26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "34e69d85-6fbb-4bd9-ba26-20508135bc3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a866bf60-da6f-43f1-94e7-926a6409e113",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "110ec3aa-0df2-4a19-bf8d-ace28ea0889b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88d97e83-2ced-458a-ba7d-fed5efc90368"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a5c6d1d-fed3-423f-b382-62d74c1b6839",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b7e8a59-e749-4394-b34e-79d12100c7fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed935793-911f-4563-bc0a-7b02517df8db",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "573f70d1-38d6-4f28-8d25-1aa80fc1bf15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "039bffbd-2056-4633-8a41-4ce2d21e06cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49437fa3-e445-4a49-9715-0bc4c893cd04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "05000c1f-43e2-46b6-a71f-4ede2f012f2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "145e0c2c-54e5-4fe2-bce9-985aea42cbb2",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7f17af4-fdf5-4e96-abdf-564eecb2f0ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8a8685d-6f7c-4926-89c1-73ca80cb8989"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34f7b9b4-a841-46e7-aa07-c28e5f945d34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "055af2e4-9461-4294-8ac0-084eab0857bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03219523-aa85-4749-bd5c-2984d70a7ae3",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2371295c-9511-49db-96d6-7e8423556542",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4802e4d-b366-4b18-8bb7-951f5aa61c4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a52de9f4-6d34-4ad0-9b40-d22a525bda37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4e358fa6-058f-4cd7-8d71-58db3f3378f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d00166b-3469-4c4a-9af6-4b0b67fabccb",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0c74248-213f-4de7-af3e-074d67ed7c19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6992677-abdf-452e-9699-603071de203f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e08eb66a-cdc9-434d-9d93-2711b52316c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4bd60ff1-4506-4fda-b837-33fb1671bd8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a354647e-6794-4bf0-9fa7-5ffbd130868f",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2e1641f-4253-41e1-9eb2-dd9d029b373a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "893c35a9-3f2c-48d8-b1c0-499013adc849"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ce81928-d24b-4eb9-8515-13d631189d91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ff8f917-4c3b-4f8f-84e5-65ee85bb49c5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e3c0f8fc-daf6-488a-9eb1-6b007bec868a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "035e0a98-51d3-4cd0-bac0-039dbbd5d0dd",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "223249a7-4bab-4e61-81c1-88feaee60550",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "ec5b1214-5852-40c6-985b-72b20cfde490"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76cc1e59-6fd1-497c-ba20-654cca78aa00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5078027c-499d-429e-83e7-eceaac1fe1e9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ccc69fa3-bab3-47f6-8b46-c448a8b6c2b1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5149e61f-26da-464c-8490-b3ec839b8dfd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f4e45c18-3a4c-4a66-9e07-9e6c19d41af5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c55c341f-282c-4582-8360-58525bd71a51"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fce10150-b52e-4df0-9310-58a19248e06d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e052cd19-b6ae-4e14-a29b-5a42c44184ec"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "297d4003-d827-4008-84e8-e8a1f381c251",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "77f4f66a-e7be-4061-a738-43b50d4d73f9"
            }
          }
        ]
      },
      {
        "id": "1173951a-ac5d-4d18-9b9c-75ac9388fc2b",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "6e9d3d17-0a96-48be-9cd1-6646abd1c292",
            "name": "Negative Testing",
            "item": [
              {
                "id": "60e16ad9-7124-4847-b092-3acb8b283e91",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b7117d39-807d-494b-af77-243f7946a01f",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af3f8b75-7067-424b-bc7f-03ad49c9b271",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3f5cf9c-f666-4a1b-b8bd-e5bf3ef503c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16dd5514-3e7d-41c9-a0c0-1ea142b76094",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df615d91-2928-40b0-a597-12d447cb272e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40657acf-ebd0-4b49-9253-dc0d218296eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16eea5ce-2aab-4629-883b-8634730d1bb5",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2fbb529-f7c5-4ac7-bca7-82d90577976f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df5ab86e-74dd-48fc-9f1f-afc1df6bcadb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baa79c62-6eb7-4c17-9a2d-2ce010508481",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e33017d-ea78-49ee-9704-e7c2bc85a742",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5a9a790-66cb-494a-a65c-c6fc7e03254c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e3f955d-2146-42ce-9ee2-e68822ce8e7a",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f2e8aa2-37c1-4812-8970-629eb8f33523",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae1bbd63-634c-43a7-afc7-805abfd157d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de9c1045-3416-4ed4-894e-618648e226f1",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "989aaa38-200f-4dff-973a-22e83e0f89f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "451c1746-2637-4a86-9870-8b273869403b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b81406c-e74c-4f2e-9ec3-92ca1362308a",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e724ed07-b8b1-4b03-a584-9ef577966ead",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d878e970-35ee-439e-9c01-41cf9023f45d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5a2cec3-de11-4455-8d26-bc80c471ee3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "272b2a93-14df-4593-b842-0fc78d6a6f97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c295abdc-e1ff-49d9-ad83-48c04636da53",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "add10516-7111-4492-bbb5-0c6eb1e798ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75680fd6-9009-4fae-8213-c6711492d014"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cedccf1-767b-4bd3-922d-34f75cd0b1b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b03c54b2-8a69-477d-9d10-398bec6f1105"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1764a71e-3b96-4ab5-b141-368d6fc72fcf",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e1afa11-ba11-45ea-8254-b375636d2aa6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cbe784f3-7e82-459d-beda-07c656dfbaea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44d7c1ce-a523-496b-a312-c5638cebc47c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81c4f0af-edba-4b68-ace3-d642389d24b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "727661eb-bba4-489f-8ad3-a51dfcc0b546",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40f8a2d2-a296-4502-805b-06806e998f8f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "27c40a7c-6faf-4ae8-ae79-5960b734fa75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60747570-ef06-4550-94eb-e06f51c2deee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2c1d90e-cfaa-4401-817f-8101f340b283"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f990e076-9a4f-453b-bf0b-46a5acea9c0d",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67b00dd1-4587-406f-a65b-726b5612b28f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0afa0c66-b7bd-4486-96f9-3816dd4dbd3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd78c06c-59ba-4fd7-ba0d-7013d3d97d02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcfaee1d-8dd9-445d-9546-f6d4be86a77c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea226ba5-d1ab-4cb4-a4ab-a01d6da969c3",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f757eef-0a5e-4448-8992-d105da756dea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d05ff8ba-fc90-46d6-bbe4-8a6442f215bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "621562fd-3e51-4f20-b0e7-912aea441962",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5e72f0f-1804-4aa8-b9b7-23e54e0f9a05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1db117a0-839a-4f99-aea8-0f83906d97fe",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2a39f9f-1e3b-4187-9525-fb3c9947ea4d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "02920ead-e007-4451-b377-bbc86a60f7e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea6c9778-2d11-4bee-9820-f142a2d2689e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "025328fe-3361-40fa-b573-3536d6cc73d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c68057fb-989d-4461-963b-ae02b157178f",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3df2550a-36dc-4ffe-8009-415969f36d4e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a24a2347-2630-4eb3-bd49-60903fa2675e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b2d9ef4-b972-419f-9f0b-f61362dd856b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2dad33a3-f28e-4181-b600-338bea3bec08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d805407d-868e-4819-a87c-8fdcae0ced57",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb62bd89-0366-4687-a28d-dbbe7a531498",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "977464ee-8df0-4aa5-a544-89c05dc5a9ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d9f85e1-797f-4311-83e3-9151786744d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c19c0377-faae-4597-93f9-2135840b8ea1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad2ee346-debb-4aa7-88c4-c26ef463564b",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a1c041e-2bc7-471f-bf6f-5ecddf0ab942",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fcbb142f-1d45-4793-9d1a-97256fa4b5d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f913a279-3a69-45ff-8db4-4c75d2e7ac0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce608717-de19-47ad-b356-b70deab96527"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1de943c-35f6-4953-afb5-59cfe7712330",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7f0727b-eb6a-4657-8fe2-21c7b91ef95e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f25dbb4-159a-4e22-9d81-ef4457073442"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55750adb-3247-47f5-b41a-5148564b2c91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33b1232b-3665-4264-8e38-9d42081c35d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f306c61-9331-4acc-afa1-62e0a20c309e",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c14beeb8-d976-4dfa-aff7-62889c9a4407",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6dc4ae1d-d6ff-456c-8768-b8f4aaf2f1bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0755adad-53eb-4542-87b4-a4316ba1264d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f1c12e2-ae75-4a3c-a37a-a3e33dffbd55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47540018-02a4-4a3a-b56e-fe2ac5afc58a",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e212c403-5f62-4de0-8275-336b604e36e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd43641a-2c2a-4b0e-809a-d38c5dce8154"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0641c03-33cc-4328-a332-a5844092035c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12332077-d2f0-47ea-87b1-1429bf276af8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96eba16a-3e38-4fab-ac4e-323e8f66d3c4",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e46a09d4-30cc-43c1-a72a-e2c29c3ea2b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9253f5e3-4d7f-403e-a750-55c74b73c3e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f59f549f-8d9a-4b3a-9af8-831e2d5bc8d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e1999dc-2473-4405-923e-ec4a08c4d058"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1640d643-28d3-4ccd-a510-c7fc107fa95b",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fe3b01f-0732-4921-a05c-00196fa4d18c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6da138e-7dab-48eb-86ac-dd069c9edd9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "868ba9cf-80ca-42e1-ba53-8ec88418ddfb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "946aadb3-cae3-4e2b-8220-af3c36746bc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "345e2fc9-f0ba-4eb1-b410-faa476d250a4",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27c2f53e-9494-446b-b970-a3d23ba27e9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5a41452-ceea-420c-8e82-8f0d6515e25a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c14d9874-7e85-482c-8335-18963d8fc072",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d90db6cd-b4af-4317-a3eb-a002451ab6df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "107049c7-5804-4596-9cb8-9a753afbc191",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e06221a4-147a-4ac4-8638-39c987f01125",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15fa817f-5299-4f7c-95ad-fe5cb64352e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f78f056-6f0c-4e85-9348-9507295ca093",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "febfb061-cbef-4a6f-aff8-149430c430c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "995767b2-e81e-4a75-829d-44c3275129eb",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb03897a-354b-4b30-8ec8-477dc40ffa4b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "40e3b44b-7aa2-48d0-8171-69e7a1d8d775"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf7227ae-f889-4b5b-9284-57efe917c3bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3b89c47-7de2-4467-939c-1578957b1a3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a29bb03-f483-4031-82a7-e31ed9cc3daa",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06567c65-a384-450d-b8ce-98860b19d092",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be0af801-1f1f-41fd-89c4-5e0fae549e45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fcb7fc4-677f-431a-8ed6-5a1ad3048b8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a2c91b2-9dca-46b9-8f29-bce0dc815336"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17a6f2fb-7c6d-4f4a-80e7-c3401cbe7a44",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67b7beef-fdbf-456f-923c-81ec89530cc3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b4ec3398-d5bc-4fe5-b849-eca39e5c0317"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c4fd3a5-bd91-4700-955e-fb10526380cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3072d49-ab27-4b1a-ba95-1825478b0b36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d05b61c-6ddb-4c57-8318-e0f5c050bc57",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "890b00a2-c205-4c39-80b0-39dc2fc0e9f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "80b0570c-c13e-4ece-8d0c-f9feb6c0e2a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cb90c28-74c2-4b04-9f98-8e246ab3a409",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "658b61b7-95b3-4e70-81fa-741256fae240"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82da96e1-35ae-4bd4-95de-5275c7281939",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8656ce0b-278c-42dd-8fdc-1c18d79e0f55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "129a9277-9e3a-4554-bb8e-75feb59292ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d93e1da-e14e-4215-be27-4f3e209849ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01f9b71b-d707-40d2-9e0d-3f3e67f4af3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98f7bb63-b36e-4cf0-a0f7-33412eb3cc71",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e66540d-2bc7-4cc4-854f-8abbb53a6812",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7af69a40-72a3-4846-bd3a-b273d8f3550e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fbe4526-eb26-4aa5-a88d-e0c454b46bb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3c7d241-0133-47ec-818e-7db67e90d14e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afe18947-212c-4f2a-900e-9cc5e041ee6b",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b25b430-fa08-423d-9955-5d7707e19b3a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0cfaf78a-c578-4d05-9ade-8ffad7bc1ec8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87f416bd-d44b-4a50-b454-512ad4888780",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be41b258-cdb2-4f19-b114-0055b003dca6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f7f9848-206f-4ae3-a756-0669d284620e",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "001f405f-0813-466f-91cc-efdc7e4e46c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8be3de2c-85f4-467b-b7a8-8a7a4c43aa37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca3d8b8e-2396-4826-97a9-f7821cd7c6c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "201302bd-aef6-472f-aa39-b3807a3445f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7c3d6f5-1f22-4c62-ba00-9aa1c001d6ba",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "414b12c3-d920-4848-a8ea-b7255f11ff07",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a878e787-f9c8-4542-93ac-8992935a4af1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4528ff94-0dda-41f9-b8ea-f45cd5fb42ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a527b7b6-c958-4e88-92da-d4e4985aea43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b907f352-27b4-47e3-a951-33933965ca45",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ebad80c-1fb0-46d0-94de-c5db0c86c0dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4bc80c02-f113-4878-a1c0-6ec90e8fdfbe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c784cc3e-522c-4f01-88da-be8d7bb432c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c78bb4e2-cf6e-4749-b0a3-e038f0fec5a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52d64573-89fe-4074-81a4-bd40f9998dcb",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e70ea9c8-7e0d-4cdd-9554-546c07ec78f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "85eedef3-d61d-4ea0-8f03-d9b201489569"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49aaa022-8996-4f38-9a04-079a1b3a0da7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4ea8a9d-5c5a-4afe-9255-7dc9d4b466f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f3c463a-5b57-42f4-b3a4-2e45c88fe0b6",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e6d5526-66ea-4eba-ac7a-5161e4e45fc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4edf20a-b607-479f-8b56-5cda5567bf0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "483a3eb5-8326-4d4b-9f90-538783ef7398",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e345de54-eb5d-4fe3-8315-1217ceca5cec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffd437ba-1667-450d-9eb1-19f2d51de288",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7871882c-ce63-4fbf-81f3-703ea5166f35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25821e68-93f3-4e58-9cb0-d4a136da00e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5eb7357-8d12-4ed2-b495-0f9837a25858",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7368e95c-ee5f-499d-9ff2-697c1767ff33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ec14d23-e686-4501-a16e-e3b03fe44861",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97f867d7-0a9f-453c-98bd-5ba6c823ed35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f83ffc8-c4d7-4cf9-a242-0927bf3c3bd6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7ff7ceb-f810-4235-8a11-431cad238ac3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46158ea5-7301-4c5d-8846-ea356d2a5dc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa174137-7a45-48e7-8b14-4983d5fdb5ae",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce4f6fe1-22b2-4764-8590-648cb6ffcad4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b1b3a13-09cd-42c4-8811-74a2b781fa7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0a09e28-3015-49c5-afe2-3e505e22a965",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f37c1eb-2fb7-4177-83ac-c4b12b7dc790"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3293bb78-11ce-4d89-a1a6-3978da00f70e",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b108edf0-f8f4-4d64-b155-8b6c40012a83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46b045aa-af92-48ac-b835-52727ddea50c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ba4373e-ffc1-46b7-8c9a-e74003451404",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8454aee-9db5-4c31-9c5f-5265623b739a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08b32e01-b9dd-4574-8f71-a5ef6fcd21a5",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d989049-49a2-4230-a8b4-6568ea94eee8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c48e01c-df5f-4203-9e3c-17dacb8402b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39fa15cd-0bc5-433f-a51c-26433f62b2f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93377727-12c6-44f4-bb18-664a374f7466"
                        }
                      }
                    ]
                  },
                  {
                    "id": "206925ad-6098-4f21-96c0-49db523b5b72",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a32f9001-d129-4512-955d-8d4fb6812a90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89077ddd-7bc6-445f-8734-5081ec706473"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcd5ff2e-1d23-4dbe-966a-b99ba4959917",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "456e8431-fdd5-4b1f-b4f3-bfdbb9e820f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db558381-ddc4-4721-92d9-089708d93a57",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "368cffcc-b6bb-45bc-af7e-08d3976211ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "666256b8-e15a-402e-9b3e-621e12cdf421"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9760ed48-1963-44b9-9194-aeae5833328f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f20fa4c-204a-40ef-8c5c-a0f61a3b739a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "478f8d00-9f87-4d61-aee0-21d6fccae2e8",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cc13582-039f-485d-bb23-098c9b645289",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8346731-a332-4d8f-a864-8ce2598e9efd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6695d46f-4ee3-46ef-98ed-63e502d565c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "570cbb96-74ea-40b5-a287-c6e86212e5ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec777a09-0c44-40ed-a000-bd6b51fbb782",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49ea4dd0-def9-4942-a75e-d1e22a2b1f57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d479d979-7fc8-48bb-b952-03c4a3815fbc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f3f36f4-4b3e-46e4-9879-e7de9fdb351a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7669e801-b604-4176-a367-a977e46acc3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd4af6f7-9bd7-4b29-b655-1b845e90a494",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2156c52a-cfb1-4771-ba93-926a16af8053",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abeb3c3b-7a20-4362-b7a6-8c39e91d2678"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb5c8e7b-4a72-433f-88e7-29ff82c8bc26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43d37811-6f89-4b46-8df2-f8cc107a6000"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a0f879b-b090-4f63-8ba3-969bd5036138",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6220d9b1-2f87-4b80-85d8-5041f5100f80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ad5f21a-35e0-44af-b1c2-db15d4e6f336"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47c01f04-3ba4-4076-8eb0-d4673a5c72fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d27ed5b4-cda2-4071-af95-a03f39611d29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9a42f72-19af-4592-bf47-470b7a715c83",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03d4db7c-fb12-46f1-ade0-4afbd8070a58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f030305f-1ac7-41a5-b752-6c7ed8d6900e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d790b60d-71b7-435e-af70-ff85a6e7c02c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "941d6faf-f194-47f2-b83d-77cfc042287d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db15cbdb-1749-4bab-a924-aadf8788b35a",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de498472-384b-4d77-bd98-af0bfc36c0e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27c05243-bc44-4673-b3b6-68a9ec9996aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35671c49-572d-4d11-a6fa-081be4849d3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fb95732-c48b-4ffa-90f6-e504e4454b9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6706fbe3-9462-4290-b2ae-82fe3b5bc476",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9b9ea3a-525c-48b5-955d-a933da61b628",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d72d926-3873-43d4-8e9b-876502b7b458"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d66ae3da-893a-46de-9332-0120e1f12258",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f140e3a-c376-45af-8e8b-2f69b7024e60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4f8637c-36b2-489c-bc0f-74bde8472534",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a241c5c-7534-4303-baaa-0131884d2684",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "566e53af-10db-4147-8b1b-d1774edc7af1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f9ca71e-3ac9-4502-ae89-040bc2827a2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99cf3cad-78ae-4f43-a77e-9c096fd5a58a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da04eb57-4b56-4236-b1df-3e28fd49392c",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1a2435b-35de-46a6-8ed2-5fd7342f9dda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c1a8ba2-eeb0-4a22-9cfc-21f31f8f3094"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbdb11b5-8952-4873-9374-9259c2982b25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3592dcb8-2cc5-485e-89b6-180fcde2d8eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46178097-6759-44f9-9363-ca61e85e78ad",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "252bf3dc-73af-4a12-85e8-8e99e69918d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6988d6b-9392-4201-977e-3a047c2f1948"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d7c62d4-9170-43de-b9d6-5f6d1ae2fa46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aeb1c84a-e087-40b8-b991-0917f3144a18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b20a4d2-1fed-46bc-97bf-8f4975fdd013",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c1e7838-2e2c-4444-a26e-f2f80f823694",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16239e2e-0b77-4ef2-933a-9807c2554393"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1282c96a-9fbf-4dd9-bd52-f2616d0b3b71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ceb420e8-fdb8-452d-ac3a-89ded87573a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2badfffa-d59f-4d1f-ab5a-3dc5176e9c1c",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c1a596d-4fd1-46e9-b072-bda26e2dae52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "931d84b2-df10-4a90-b1db-464919e3e440"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae39f154-ee8e-4a7b-ba6c-04a96eb920eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e66915db-d389-46d2-bd3c-dad683635b4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9961be5-4f7f-4aa7-9416-097599eaea26",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3870e5c9-45b3-4dec-b09d-252aecd0d052",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be4fe1c9-88aa-48a3-8391-f1ff289fef9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6438960-728c-4d67-91c9-03897a5c0342",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4e07778-b273-4b76-a47a-77d07567fbb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45815db1-41b9-43e5-af7f-dbc2ea095398",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "133b13f0-3709-4064-9df5-52cd967d3780",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13248a1c-04bb-4f88-9793-92479d96f498"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1f5b61e-6ea7-433c-b597-5aa0e2ad62bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c73a479d-d931-49fe-a33f-6a58498a1567"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7542e11-9d90-40d3-a830-46027508fc56",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3f55148-73ac-46fc-ad55-ebf2f4695eeb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "075f4268-5d72-45e8-9cf9-c3bca4f84b55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e92d895-14db-41df-aa98-536bf2f74db7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "439fecdf-6398-4cc2-aea8-dd742b8dd810"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7692f818-61bc-436f-b35e-c77974345e60",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6c2683d-21b6-4cb4-88c1-6291f4f298c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4eb69a7a-f621-4990-86b2-31c64ab346e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3bae847-84a5-4e94-a986-133d8bc42d71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fccbdca-0267-4836-a1d8-e5c6c4223090"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df53aeda-1de3-454e-ab90-7f7ec868b042",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b81bf15e-b5e2-482b-8a58-5de062ea8e30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e6fbc66-4c54-461c-b923-92ca11203302"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8fd2c81-c47e-41c6-8fda-d45cec187360",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0049ef58-4d3b-4255-895e-18da1ebe38e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "291147b2-9d32-4f00-b443-ccbea6b41ace",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25a85ae4-df1d-47a0-8809-d910bd1f6737",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72e24388-e149-4840-aee0-8771a92159e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "045b3f05-d90e-4183-ba9b-a8c57d21536e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09a2ae47-2276-45ca-a430-63d0180ef907"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b10f7747-5d43-4ed0-9acb-4447dbd754b5",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7163e6b-bd2f-47b3-88b0-980b3f746dfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc07801c-646b-4695-ad7c-bbe5c4a240c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14101c9f-15a4-40e1-b697-4d5c3b8f0ab9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ff6b426-4bf1-4e03-9293-5b372209307d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84d449e8-d018-4c60-b8ae-bb204879d7f8",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b8e91cf-a702-40a0-9f45-6dc727292aaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e54d3e98-9c8d-4560-baeb-7814cab88ecd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dcc8001-9dfc-4f2d-8215-03696462a0bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61826793-722a-4d61-877f-1e574c73aee6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eeb0f8e3-ffb2-411c-a6b8-6a065e84c971",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "114b3a40-18c8-4c41-a545-0a367a330a96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad6a9f57-7098-4145-89ed-9d2a5a5dfbdd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0812d40d-6474-4078-8f20-b9c5e93f9e58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2402e6b5-f6ac-4433-a8c8-ddc47155ff8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3378b001-81ac-4878-86f6-1d60ed71b45a",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7a94236-3861-479d-8130-cd1e9e891ded",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "24ce86d8-aec5-4ae4-9baf-0abf994cf289"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a9ec89f-3245-4310-af01-b5c76f7c8f75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd6b5cad-8950-4810-91bb-7dc98ac95844"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa041d89-9206-411c-96b1-08dad7efd9ba",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d24fdfb-61b4-4299-9396-0c58136c2e2a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf8c5228-8bbc-4fb1-a68d-f670b824c0d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6fbcb79-671e-4145-bc95-a45e2883f9dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51efe7db-3437-4051-bf7c-df68c19514a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6383923-0503-426e-9bd8-23dfb2a47f64",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6375f48c-ab54-4ebc-aad3-f3b02b7f5c9b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "989be7fc-a381-444b-8290-e3578d3eada5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b4d1251-046c-4706-82fa-5708aac7a419",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0380d59d-844a-45f4-baca-556b23c2a3ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0b6e44a-9790-4183-b076-1420f5f4a39b",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1369d4c-9ffa-4dda-a527-adfb9bff0e5e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b07238b0-c59a-4f3b-a808-4e83fb0eb323"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e77aeaf-33c8-42cb-9db1-84a52108f565",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f4f2bd5-c5f1-42fc-a865-dc18bbd2d9bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23b08777-639c-4e14-a3d9-b962e2a34e14",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da83297d-eb88-43f1-86ac-21d8e7b832af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f803d7e2-da37-469a-8c01-519aed6b2c65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c140df63-52a1-4237-a6db-f4ad139338f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d658bf95-29d6-4212-ba9e-ac0016a32dbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "585ee6c5-a021-49e1-8b99-7db3403ff3ae",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f73c117-26f7-4017-bba8-3217e6a9b5a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "953d216c-bdcc-4333-9ead-d6d208608a2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38004402-8faa-40d7-a584-b943e5fc0303",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de8b000f-7da7-4c41-b01a-ef75556472d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea94b0b5-c002-4f88-ae2d-e0976feee9e7",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc89cfa8-eeda-4ada-90b9-8a7d18e48304",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "76ab1101-427d-4b13-bb7e-030bc238d77d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e08b6df-b1f9-43eb-8656-b8cb33aa9bc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "620bd7e2-a6af-4241-8bd4-0a0985e75338"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a96eb47c-a8a9-48c6-ab32-8ae265024643",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7a360b9-bba6-495c-82ed-e10fd6f75068",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f61e3c1-6ba0-4838-8262-5d5ab94eecfa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cf7fe6d-c2a7-4c65-9601-0ec3b3797cee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "730f5398-844e-42d0-8da9-bb44ac8c4cef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ab3dce6-d7e7-498b-928f-68a45ca79659",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61c7a17c-6fda-49a5-ac97-0ed6871ae319",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c17202c0-3e11-42ab-bb2c-30c07f44b20b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "114699cb-1f4a-40a6-9162-3beb7e9ed7c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b067dd34-ea4f-49ba-b67d-8519908aa5d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42f27687-76cc-4476-a0e9-28efe470c814",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b9b9332-06b4-47dc-89f8-ddcbdaa9df25",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9132c717-1adb-4731-b2af-c829568e2bf3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e594581-77e5-4ac4-bc51-cadf1c29044a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89b8fd51-c77a-43cc-98b5-adb3b80d57c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a961f65d-d4dd-49db-97b1-d8deeba59d69",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d15b4322-8058-4a98-894d-a213e8984120",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5e75ac3-b964-482c-bdf7-f09f957ce8b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d00dfd1-79d8-4de9-9c3a-34e892c7468a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64536fda-08a1-4f53-9ca1-8ded47eb8488"
                        }
                      }
                    ]
                  },
                  {
                    "id": "647307dc-64e0-4bcd-8b8d-b1d5c5430071",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf518303-b8df-40b0-be35-b00a035b3f3b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "89c41115-b217-46df-8394-50c4a23fe1f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d400dc6c-46e2-493c-9039-e1fc1d3fb6e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e6bfd0e-4bd7-4f02-b619-30c01102e392"
                        }
                      }
                    ]
                  },
                  {
                    "id": "627996b3-3aac-43bf-8dfd-8a87a3f6e734",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08e2f60f-dc09-4469-80c1-8d1854ffce1e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e62d115-0ef8-46f4-b11f-4bcddfebec40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc864f7f-c1e3-4fdd-8ba8-9479d8d737c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d6fd6e4-9ac7-4631-9e22-08b7e511ceb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83fe54ac-007b-4dfd-88ef-9ecd47c04b32",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4985d97-5b22-40b2-afd4-9d48206e7563",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "80f41098-9aee-4e9a-b819-624b326151e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe2e819c-9e94-45c5-99cf-029c7d59fb25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c376ee09-876e-4b73-80c4-bc51ce15ccb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6621ec9-c97d-4278-b4a3-0fac58cb9941",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc7fb5fd-0b4c-48a1-b72c-1221f10700a5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "74f00349-d439-4390-bf87-aa6981b3fbc6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f07c324-c9ec-491d-a7f6-c2da3e57e587",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c5493cc-8b2e-465f-93ae-131fc34c92b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a7e6bc7-e563-4f7b-a212-c3a038292c40",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bf62d23-12d0-4b3c-8c6f-38b514984f48",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06e58db0-8d17-4501-ada3-4b8144234fe5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51cabafe-025b-48cf-8910-c59eb8c8e8b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aef9d2ab-30c7-4a58-8ed7-8608922f955b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a5fda96-c2ca-42fb-8bfa-9dfe871355c7",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5aaf6c64-ae08-46ec-ab8d-d8910a509f3d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d9620676-fcb3-485e-8bcc-7cefdf2cc795"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b432465-3805-4dba-9e5b-4454b8e43f7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6758c5ba-9c2b-4f71-8a40-e0d5e1c04515"
                        }
                      }
                    ]
                  },
                  {
                    "id": "add07512-c4e8-4b9f-85b1-576ca0362e64",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "313aba3d-0bed-4452-a163-77fa61f7d07a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "facac741-d3b9-4a6b-bcfc-88785fb6d715"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21f9aa9c-a18e-45b0-957e-d744ba9fd03c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b5b98d2-10cc-496e-b772-54408c03576f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8b4e5dc-1983-4234-8041-83732a7ac2f6",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4cc10ad-0e21-4709-8a69-02ddc9d2bb66",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c32694de-a647-48e7-98ca-73e19e4e4868"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c09371c-941a-4e85-ba85-ef1137d26390",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc78c521-72e1-4998-a589-f9b8b06dec3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05df72ff-a65a-400a-8caf-943e7094e21b",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71db9b8a-5b8e-4d19-9a8f-fcee6afbe3ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2510c395-fc87-4c37-b261-dd570bd256af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "725b2335-6e35-4936-8903-bd18243c012b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3846a3fd-1535-4af0-afcc-3b4f99559d9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac89a82c-1b5c-4a7e-81e2-da6dc844481a",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42169e24-9c76-44e8-b8e6-8a5b6b1ab05d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4d1ddd2-8ab7-4fbe-a63b-51cd7011c6e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cebb54c-0441-4e95-8d6f-02b81b476ec3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ac73669-0992-4d9d-b3e5-9b482bb6c71b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50bbb65c-ebf7-449b-9ecf-3944768803ab",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91b7fcf9-8ffd-433e-a56a-72a8e9abf60a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5af47bde-231b-4d2d-a187-27966e049845"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d5929fa-e396-4f4e-b4c4-ee708fcae44a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6584ba66-2abc-4988-8145-057149c3fe3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25b4d2f1-571c-485d-ae42-890024abcb43",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "495535ad-63e1-4fd4-93a2-489a765583c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c665d96-1e40-4173-b995-da77a202f5b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "194a6f8b-308d-4ece-a733-1e51139eb91b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a029dd44-5181-4420-9633-82c9289c22b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23d65d7f-8784-4fdf-879a-62be68f2b55f",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05c0c3b8-c378-41a5-86d7-e09f428835e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d7613f74-836d-42c6-a8ea-2a026e600f29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c98ac6d4-34bc-47c0-a040-c159576e358d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73d8dbca-bb79-4d64-a4d1-a937f782c8af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "066741d6-cf8c-465f-ba94-456ec68ecfa2",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58196b87-a141-447b-a1b1-af30fb19f79c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "abbe47c6-31de-47a6-aa6b-0e5765b1afb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8ee7879-b7ab-4068-8ea0-27983c4abf30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b1acc2f-d1e5-4cd5-bf21-4aa82c44a96b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26398e99-4fb8-43dc-9a49-70802794b161",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67018cd0-8206-4194-b396-2726d807faa5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c3fb342-b366-45ca-b004-e5ff338461ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f1c2514-862d-4abb-87dc-916a83ea75bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bec9389-ecf2-4dca-a124-1779a902aa58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfa00d04-3c78-4ea9-9354-dda54746723f",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "454711ac-214a-4165-9ca4-15623f452c9a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "78d7e54f-755a-4db5-8d6c-dfc79f641573"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e26fb573-c94c-422c-a1ec-a4b9173e8596",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d989cc8-ae04-432e-b1a3-ef88a1917d5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8af8b98b-3ee0-431a-8843-b7bbfd5d7b3c",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48017109-d495-4b15-9e9e-ccb0e68cf846",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2712fa62-c694-4e57-a8bf-d1fe5a9bac89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2f93567-0502-4e39-839e-813adc5ae95e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf015f11-03c1-4eb5-a0ed-2117fcf79ec1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "953e03ad-8245-48b4-94a5-e8e1e78bf759",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3df75a07-80b2-4a33-9fd6-bbb915e1e8f4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a6b67145-7c12-45b5-a6c8-07bd527988ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b54695d1-618c-46fc-baf2-a2b7eb5213a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f59f9748-f90c-477a-b215-f111fa07721b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a629534-d0bd-41ce-a58d-2e1c6ed03591",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ad7fc21-9311-4d5b-91d4-09123e450551",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ed9c64d-24ba-41d9-9c6e-b0aaca34166e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d48b28bd-4795-4354-9461-2c9f04d30cd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18fa301a-5319-4aac-9fcf-f0088d7838cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42ebc325-679b-492e-bd95-e3eeed216c88",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "666c33f1-ed74-4dc7-aab2-a92e444e2e4c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9793056d-ebc1-4d58-9303-68362e295498"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1ca8179-2283-4ba4-840f-73cc5d774c28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ca2ff4e-ba3a-4119-a244-8be2e29d4a1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b9ae684-0597-4c7c-9e61-458e33c88268",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c037f9c6-2671-43b4-aac8-f34bf9fdc42b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bebd4434-f267-44c2-bb09-76861f75db2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7474819e-fc0e-4eb9-a3ea-dee2210933d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd8c4ab2-0845-4d9b-9556-983162fa3ea3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cde94606-dd76-48b6-8be0-6a0f5db09c75",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77b5c75b-2ce1-4878-bbb0-39480f1561ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b9d9bf85-319f-4b3a-9540-4ecd68f0e723"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1651875b-dcc6-40c9-ad1c-b68c2135d074",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72a7a243-e3e0-4f5f-9d69-e2b83fb706ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e1562d3-ca98-4f30-a6c8-e788bc472e3e",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a21a211-9040-48ed-ad4b-3e434a110c45",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee6f38f7-a12c-4996-8eb7-a220943cf8d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8e10921-e7bc-48d5-a309-2bbea3c7b07b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3a29293-eb57-413d-b805-1498ff6848c0"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3c8c7c20-54e6-4cf8-9cd6-bf1f1d8ae049",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f32cc2ae-c638-42ae-9c9a-1c1a0b871364"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "da1f2791-6585-4870-bdd0-df9e2beeb8b2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "799cb459-cea7-4396-bd2a-4e5301976fba"
                    }
                  }
                ]
              },
              {
                "id": "bcd79b98-0a11-4c45-861d-a54ad3d7f142",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2513787d-786d-4fd9-8a30-b23790159f28",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "819fdf95-0511-4103-90c6-847de7b977f1",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "3ba2879d-844e-4861-804b-e86e40dee1ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f35853a2-01e7-4d94-85f6-61f518fd70a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "efe21cb2-970d-4876-a95b-bacae08f75e7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e2a86456-8949-4323-91de-09e81483917b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "92f74002-3169-44b2-b869-0956bc62d99d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1b82222f-4d34-4bf5-a9ec-9b2a3caea9c3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d10703aa-40c9-4fdf-b882-2b971f563716"
                    }
                  }
                ]
              },
              {
                "id": "bab7b3d6-847b-46e9-88ec-3a87e394cc6f",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "a2cdb5e4-0a69-41ad-9d51-f61db69d0f79",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b42b89c3-e79d-404c-8cd3-29a5777f9f9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "de59d5dc-4ea0-4452-b5cb-f24dcb9eacf5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65828420-5b94-472a-80b3-42680e8cbc66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be0d89c1-2f1c-46f2-a09b-abff40ba88de"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "768c2441-d7a3-48eb-b770-a4ed700628a4",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f38893ab-1c64-4a7c-be81-5d44dbb200ed",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9f383daa-151c-40c8-b9d4-f7df7cbeb50a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "16bcfc74-2402-4f09-b1b2-09d3e05b9689"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c71ea9cc-a921-4e72-8a29-365320e4661a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c38364c4-fc2a-4d6c-9cec-9e8e322ec952"
                    }
                  }
                ]
              },
              {
                "id": "7294e99a-c2ac-4bff-914e-8d83a40fd6ed",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6a2d2a04-eac3-47ae-b465-bc498ecb5409",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "3fb79e3f-3ad8-43ae-948b-17ea9794f493"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "540b68d4-4730-4df2-93f0-2c8c19fd436f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dc026e6d-14be-4923-a596-ffe2834a2e9b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1b0e3b2b-3dda-4acc-8a73-dc149e046e7e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "eb9e0506-f2f7-4475-a3da-8fd8a4ee3764"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "77fb4a60-bee4-4270-b8bf-76e7d2dc9028",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "67a3cc97-cdcb-4df4-9c9d-010ed44cfc94"
            }
          }
        ]
      },
      {
        "id": "fc3156f8-670e-4c12-852c-23b6693c83ac",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "bf44d3bc-bf09-4f8b-ae55-50cade087b13",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8bd88590-8415-4303-905d-cc6caa4fdb50",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a3e0ed52-a13a-4663-820d-a72fee00f5df",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2d4d09f-4f5b-43c7-95f5-361426ef2d3a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "79190942-b4b4-462b-9a39-a08284f36fdd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "197d8b41-fc44-441d-88a3-7c2d3ca731bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "245df6bc-c096-40f3-959d-55fa5b8cab04"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e24a008f-17dc-4048-8f60-91b5d8c6756b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5568fe3c-ca2f-4e5b-8d4a-138cc86aa6fe"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "36d9e4f5-4eea-4d30-8973-a7d4db216e1b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "102bd93c-351f-4262-a8fa-50e99ff99697"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1df41eb8-b7ba-49e6-b803-3e8d7fd79c9a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "e215e9b1-4e2b-4390-9fc5-761632888bef"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0b451085-f317-4601-927a-a846ddc47b15",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e562ac04-65aa-46fd-b2d9-27837b854766"
            }
          }
        ]
      },
      {
        "id": "aa09351e-5983-4654-b6a1-637c025c0dec",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "bcd03fc2-243e-42a2-8eb5-976414f3fa4b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0d57a220-b862-47cd-9c45-64ab70b7702b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ef00bc79-1f0b-431a-b851-5ad2eb986ba5",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51a768be-cfb0-4164-8833-a63ec967c367",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "38706d68-521f-4c76-8d4c-8614d7060a3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6d2a7da-08bc-4cbd-9c24-680ee0b9f1d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f13c4123-21a0-4bdb-a9e6-a1d0a524df4d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3caf99b6-52be-4276-9b16-68db4193f68b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "51e276e9-7389-4ebf-a6d7-d580c7c6bdcd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e30744d7-0542-4071-a932-8019081d3b45",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "91006296-1725-4c19-ba89-09dee26a1a63"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0e13cf58-db14-4fd6-8b38-5f2d585654c2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "729e9611-f6c3-4923-97b7-9b7f1eaae6f0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bb417062-a791-4ae9-b249-ef90806fdb64",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9d090bed-9d1d-460e-a260-1c7190134995"
            }
          }
        ]
      },
      {
        "id": "5736f4de-5354-4251-b026-7120a6dc7c30",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "ac7a206d-2a96-4dc3-947f-217606bd9b2a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "36cdd7fd-034b-4e87-8ecf-2c545724f274",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d225b494-495f-49ba-8d0b-2dfd65ab9d36",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5d7631b-1994-4a6f-b253-591b7543a72d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b18ef466-c1d9-4e85-9a2c-2fb1844a4924"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dded176-1ea0-4b58-afe8-71f9d2b9118e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a837ed3e-cd36-43a9-81c8-e10e49244c7d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "56549183-38b6-43a1-a5d6-ac59f455533e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6c621687-3f11-4831-96de-8ea6a0968a2a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cb15016a-7e58-4bfd-9a0a-b64c3af0a56e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3eaa9978-3e1c-450b-920b-adb91dc97fc5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "515a8e3e-1db9-4a46-a2cb-e300961b4ae8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "6857f5db-bba0-436d-9c12-26b039c1a7ed"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "366cbedc-9f28-4d5d-8ada-5f0002733359",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "adaf16e3-69a7-4362-ba8b-130618aef76f"
            }
          }
        ]
      },
      {
        "id": "a1acdf95-5e70-4cbe-9025-2255c6f80559",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c5fd28b3-54c9-4a9c-9c1c-96afba83dde1",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "20451d7e-1c1d-4847-bc82-f253dea69c8b",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "f7e62f8d-6fdc-4be2-a5e1-20f3b35d520b",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d7de1e6f-0773-4fa0-9e52-695a3e4a47a0",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c644e805-8a6a-4ddf-b81b-6185b1496624",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 37
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 77.05952380952382,
      "responseMin": 6,
      "responseMax": 634,
      "responseSd": 43.228632998099286,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1727311489190,
      "completed": 1727311516895
    },
    "executions": [
      {
        "id": "3316d464-a0e9-4de8-aba8-ef7e069a5eeb",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "d91672c8-84e3-4e7b-9e2f-0c78374966c3",
          "httpRequestId": "3d60ca89-d435-4714-b6ce-7cbff7d86fb7"
        },
        "item": {
          "id": "3316d464-a0e9-4de8-aba8-ef7e069a5eeb",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "86d0f540-98b6-4819-8346-3487400fa721",
          "status": "OK",
          "code": 200,
          "responseTime": 61,
          "responseSize": 0
        }
      },
      {
        "id": "1bf5ad26-54e2-4bc2-83b8-cc80686296ca",
        "cursor": {
          "ref": "1af6664a-af71-4191-a752-a6a0f2355d8b",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "72289ad0-656c-4328-a273-55ea9a3b5c29"
        },
        "item": {
          "id": "1bf5ad26-54e2-4bc2-83b8-cc80686296ca",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "890dfe7b-41ca-4ea8-a942-b8c1f275fb56",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "a7b624ff-1eb2-4a08-8716-119ded3be448",
        "cursor": {
          "ref": "a41ec0d1-3cff-45f1-89e0-3faed8e98699",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "5264d6cf-e8e4-4bb4-bf65-87bb757a26ff"
        },
        "item": {
          "id": "a7b624ff-1eb2-4a08-8716-119ded3be448",
          "name": "did_json"
        },
        "response": {
          "id": "9bb0a0c8-dca6-4cc1-8a6a-2262f01e1245",
          "status": "OK",
          "code": 200,
          "responseTime": 336,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c94bfd0b-4334-45d8-bb00-ee13526a37b7",
        "cursor": {
          "ref": "ca8dba04-9d27-4c54-893b-16ab10141f67",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "271cffb7-d871-4093-ba6d-c7d3c60872d2"
        },
        "item": {
          "id": "c94bfd0b-4334-45d8-bb00-ee13526a37b7",
          "name": "did:invalid"
        },
        "response": {
          "id": "198ba871-5889-4486-80b5-1f7c56b2b393",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c94bfd0b-4334-45d8-bb00-ee13526a37b7",
        "cursor": {
          "ref": "ca8dba04-9d27-4c54-893b-16ab10141f67",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "271cffb7-d871-4093-ba6d-c7d3c60872d2"
        },
        "item": {
          "id": "c94bfd0b-4334-45d8-bb00-ee13526a37b7",
          "name": "did:invalid"
        },
        "response": {
          "id": "198ba871-5889-4486-80b5-1f7c56b2b393",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb83629f-186b-4a0e-bb2d-1871db09e506",
        "cursor": {
          "ref": "732ff29b-c4b1-4e94-8772-76e8bd0ffd9f",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "5139200f-bf46-4733-af62-027d3a0a7740"
        },
        "item": {
          "id": "eb83629f-186b-4a0e-bb2d-1871db09e506",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "fdd2d53f-8953-4808-b0f7-773a64095b68",
          "status": "Not Found",
          "code": 404,
          "responseTime": 133,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b4abb38-384e-4680-9ab7-eb34f686e51e",
        "cursor": {
          "ref": "3d060f29-6b98-47f4-b1b3-0af405bd9799",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "a0e2727a-997e-46d7-a10e-70218a783c78"
        },
        "item": {
          "id": "0b4abb38-384e-4680-9ab7-eb34f686e51e",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "79ea29fc-72b1-468b-951c-75d4c9019b30",
          "status": "Not Found",
          "code": 404,
          "responseTime": 71,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfbf8d28-d1be-47d0-8b35-733586967069",
        "cursor": {
          "ref": "e0ea0823-eb6f-4bef-96a9-40a1706b5a1f",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "dd3abcb2-2d73-4b1f-83bc-ba7877241262"
        },
        "item": {
          "id": "cfbf8d28-d1be-47d0-8b35-733586967069",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "97496f15-126f-46a5-9ca7-7f3a60a06a09",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 72,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a200345b-cd0e-40e0-9617-f27708bf7f0e",
        "cursor": {
          "ref": "f9efb40a-41ea-4e9e-ad2e-8257689d2b41",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "f3962713-4160-4f58-a7a7-9cafcc476809"
        },
        "item": {
          "id": "a200345b-cd0e-40e0-9617-f27708bf7f0e",
          "name": "identifiers"
        },
        "response": {
          "id": "a09b9f84-d3f6-481f-b682-d02e804629ce",
          "status": "OK",
          "code": 200,
          "responseTime": 273,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6450d343-6975-4389-83ea-b03cc5eb0fe0",
        "cursor": {
          "ref": "619fb62f-8111-4110-b385-b92cb11b418a",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "bd86c50c-f218-43dd-bbcd-97405c42d4ac"
        },
        "item": {
          "id": "6450d343-6975-4389-83ea-b03cc5eb0fe0",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "715efd34-05b3-46c9-b405-d8a6a212543c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7131729c-56cd-4491-8ba6-434f5d427826",
        "cursor": {
          "ref": "6192cb1a-f3cd-48ef-9e6f-1b266c89c8e6",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "680f1495-8d36-47f5-85a2-050621d750de"
        },
        "item": {
          "id": "7131729c-56cd-4491-8ba6-434f5d427826",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "b689aa2c-d7ac-4830-ba93-eb9433b8e72c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff6e4827-6451-49e1-9fd9-ea69e5b646d3",
        "cursor": {
          "ref": "8e4d4283-37dd-4b1a-86da-f2bf5727fd8c",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "dea92adc-be03-4857-9b63-8249407732ef"
        },
        "item": {
          "id": "ff6e4827-6451-49e1-9fd9-ea69e5b646d3",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "a0bb3a8f-e060-49eb-b5dd-6dc0394115e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0560931c-295d-41a7-9d45-91e7bec08ce1",
        "cursor": {
          "ref": "f7cde82f-5c97-4bc2-8615-090760ca54c6",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "8293162f-b003-41a3-b4f9-4600d0c5cd44"
        },
        "item": {
          "id": "0560931c-295d-41a7-9d45-91e7bec08ce1",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "8f4f2d40-c77b-4c2e-91d6-5bf703af1018",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8262127a-1370-4976-ae3c-6a6c5e6d4fbc",
        "cursor": {
          "ref": "fd372ee4-3885-4694-a418-38d60d742222",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "e06344c8-870b-4ada-b486-2e5cafc7331d"
        },
        "item": {
          "id": "8262127a-1370-4976-ae3c-6a6c5e6d4fbc",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "148db3e4-9676-452c-9edd-66c0868580f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07a74e3b-9fc8-4c00-88f2-f5536eeb3540",
        "cursor": {
          "ref": "c72fd92c-5386-489e-9d63-1271bf52f210",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "4c7fb001-27d7-49f0-8636-a82163c9a67f"
        },
        "item": {
          "id": "07a74e3b-9fc8-4c00-88f2-f5536eeb3540",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "5edd55f6-64b6-46f6-80f9-6b1cfdc0296f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34bb413d-cc8d-4cda-b4ff-0e29cb2fb8a7",
        "cursor": {
          "ref": "ff574da3-5a0a-46fd-bed2-e05dfd922727",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "9f13a42f-f65b-4b10-97c8-7545d3bff94a"
        },
        "item": {
          "id": "34bb413d-cc8d-4cda-b4ff-0e29cb2fb8a7",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "36e54ff9-c577-4f5e-afcf-ef510dc86a75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dc8836f-9a69-42a7-a29b-88ad1cbdd440",
        "cursor": {
          "ref": "d1784b14-be79-48be-beea-89377ca3734e",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "7c1c6513-a39d-4c8b-9775-33a9db63c291"
        },
        "item": {
          "id": "6dc8836f-9a69-42a7-a29b-88ad1cbdd440",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "764a13e1-6086-46f1-8b2a-27f72bef43fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d4aa12c-cf18-443e-9296-e16d0abac755",
        "cursor": {
          "ref": "804dca17-b7f0-4dd2-b7d0-43d5da225950",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "3310fcc9-068a-456a-9552-97796afbe518"
        },
        "item": {
          "id": "2d4aa12c-cf18-443e-9296-e16d0abac755",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "78242cb0-f584-4e9d-9049-b937e24e7c55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "184c2b39-d59a-47ed-bfb2-e31c9e69bdc9",
        "cursor": {
          "ref": "c33239ff-0a69-4715-a01e-2a66d3572ec4",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "7fa69089-e75a-4b38-bebf-b4901260a0d7"
        },
        "item": {
          "id": "184c2b39-d59a-47ed-bfb2-e31c9e69bdc9",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "6a5e530a-873a-43d7-9af2-8ac74cd75af8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "847bdcbf-a5a3-4470-9534-b8929330c62c",
        "cursor": {
          "ref": "d904bcdb-c1bb-419d-bcb7-22f2fd6ea754",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "216bf096-3431-4c86-94d8-ba668d2f5cd2"
        },
        "item": {
          "id": "847bdcbf-a5a3-4470-9534-b8929330c62c",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "ee736588-72ce-4165-b5a4-96857990b275",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb38506a-52fe-41b1-8ad7-dd3769d7d530",
        "cursor": {
          "ref": "d7982e15-b616-4dbe-8339-59cc14371682",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "38a4070b-07d3-4a25-9515-a508525d67a1"
        },
        "item": {
          "id": "bb38506a-52fe-41b1-8ad7-dd3769d7d530",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "ff2fde8e-b098-4e99-8aad-be9d2b097f2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5095e04e-e0c5-4c7c-87bd-1827daea7363",
        "cursor": {
          "ref": "895851ff-2aaf-4dbc-82cc-2b7addf90fae",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "7805ec88-d586-4ff2-a9cd-1ce51c2f01ab"
        },
        "item": {
          "id": "5095e04e-e0c5-4c7c-87bd-1827daea7363",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "8cfeb484-a9a8-43fe-95f2-99595ff67424",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09d76fc4-77fb-4b58-9fd1-e478a78f927d",
        "cursor": {
          "ref": "34675934-87f4-4389-b452-6e3b3dda9cc7",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "42ade70a-2bc8-47d7-93b7-2dab7cb8d99f"
        },
        "item": {
          "id": "09d76fc4-77fb-4b58-9fd1-e478a78f927d",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "af68af5f-2926-41ee-b5b9-fcf3ab27f188",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b43eb19-adf4-402b-84f7-9c414359da15",
        "cursor": {
          "ref": "ee96d05f-f2fe-4038-8f63-023bb4b3fcd5",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "6b24331b-0a76-462b-bc83-f0b098bacd9c"
        },
        "item": {
          "id": "1b43eb19-adf4-402b-84f7-9c414359da15",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "36195a45-484b-497a-b0be-d788191ed4c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "338366bd-8339-4a51-ae55-a8e99214a6cc",
        "cursor": {
          "ref": "9b2ec203-a8b4-468f-a8ed-0d3bf185c944",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "e757c293-2b55-4441-a735-b2ceb78c686f"
        },
        "item": {
          "id": "338366bd-8339-4a51-ae55-a8e99214a6cc",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "2b057bf3-8ff9-40f3-9344-abbcfd565608",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "994e489e-72dc-45cd-b6b9-f9ba43b63060",
        "cursor": {
          "ref": "bf9cee7b-1714-42de-a071-06dab74491f5",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "2a7de5d3-db04-482d-822b-753f62b43672"
        },
        "item": {
          "id": "994e489e-72dc-45cd-b6b9-f9ba43b63060",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "a77da2a5-5e0d-4220-9089-fa861d05e7e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44f991ee-6fe4-424c-883c-8011fc7b71ba",
        "cursor": {
          "ref": "160efe8d-0930-482e-ae10-126e1f0a897a",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "d272f092-f2a9-47a6-a7ff-151a4d76df24"
        },
        "item": {
          "id": "44f991ee-6fe4-424c-883c-8011fc7b71ba",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "fa564154-3b53-42d6-b946-6b1caa34607d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec431ff3-a221-4ad0-b962-e2a8f3c46f5b",
        "cursor": {
          "ref": "18a3764b-e781-4fa2-8d89-f1a50f07e133",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "4cac6e98-bc3f-4bf2-b8c7-e6dc3020bdd3"
        },
        "item": {
          "id": "ec431ff3-a221-4ad0-b962-e2a8f3c46f5b",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "4ce0000d-ee5d-4587-87a9-7e2a564e3cf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a5d0688-8ab4-4368-8557-222c26f2880b",
        "cursor": {
          "ref": "b95dfffc-f100-460f-8582-825a7f1f47ca",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "2012b5ed-de2d-4bb7-af39-ad257881377d"
        },
        "item": {
          "id": "7a5d0688-8ab4-4368-8557-222c26f2880b",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "d66f5a65-6d57-48b0-84b0-af8964ab86b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f56fcd6-1a9d-48c8-90bb-db0145de0407",
        "cursor": {
          "ref": "e6e08d0d-fd3d-421c-ab87-cca6fb624136",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "1aecae65-170f-455e-8c26-6f6522f20792"
        },
        "item": {
          "id": "5f56fcd6-1a9d-48c8-90bb-db0145de0407",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "f6576a28-d356-464b-b303-0fdacc7c496f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fdacfc4-c43d-4101-b53f-9af28c5714cb",
        "cursor": {
          "ref": "ad6cfaa7-92d1-45e8-9028-d6ed8c236f14",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "89b01cea-55ab-4064-9ef0-8210a55fca10"
        },
        "item": {
          "id": "6fdacfc4-c43d-4101-b53f-9af28c5714cb",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "9e206f71-1be7-4a01-bb65-b9bcd1c67df6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8056172-885a-4782-b984-1618fadca4b6",
        "cursor": {
          "ref": "899e1567-c870-4cf7-8d0d-95628590a683",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "8b28afca-f7c4-4f68-bdd4-7055481fbc19"
        },
        "item": {
          "id": "d8056172-885a-4782-b984-1618fadca4b6",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "46527702-35b6-47a6-941b-bb3ba28fdc20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21e4ad42-9a63-4d51-8421-a7dd904dd610",
        "cursor": {
          "ref": "4ab7fa35-3ecc-4b90-ae03-69198a2a4b43",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "fb2b8234-0c6b-4867-8dcb-bc1dfa3d9e2b"
        },
        "item": {
          "id": "21e4ad42-9a63-4d51-8421-a7dd904dd610",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "3149eea6-d8b6-4375-be1a-8f6a66c74b22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73ffe9e1-2ec5-4f5a-b015-fac133f2c9ce",
        "cursor": {
          "ref": "c0dd4e7b-a926-4f38-ac64-77e3bf04a6e4",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "8525e140-1674-43c1-9c5e-8c35afd426ce"
        },
        "item": {
          "id": "73ffe9e1-2ec5-4f5a-b015-fac133f2c9ce",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "2ad7c0e1-fed6-45d4-a376-521d3ba0636e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39da22ab-2b90-4eeb-ba2b-c6d1c82a7418",
        "cursor": {
          "ref": "6bfd37fa-d360-4fa3-9d71-db2fc922929a",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "953459c7-429f-404c-8448-f68af8682ab1"
        },
        "item": {
          "id": "39da22ab-2b90-4eeb-ba2b-c6d1c82a7418",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "434cd695-0c17-4efa-863d-e29295c81f8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eef7a4ca-f728-4e92-8eeb-d3ce04aef0d9",
        "cursor": {
          "ref": "4c5e8d84-6994-486b-9457-413eceef45a3",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "23138807-21bc-4a6a-a2b4-5ed7c538de16"
        },
        "item": {
          "id": "eef7a4ca-f728-4e92-8eeb-d3ce04aef0d9",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "9c575619-32a2-4148-a182-e7952a585528",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29caafe8-de29-4a90-8a18-0a8683ac0bc7",
        "cursor": {
          "ref": "10e6acf9-44a4-4c63-a738-5e680f31bc87",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "183b4fea-5f72-490b-8911-8ee4340a2e4d"
        },
        "item": {
          "id": "29caafe8-de29-4a90-8a18-0a8683ac0bc7",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "6ce7932c-a5ba-4a7a-88c5-f20430f34bb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17a1d695-e1f6-43a5-82b3-a9e1d6c87aa8",
        "cursor": {
          "ref": "7ce4582a-fec7-4ad3-a8a8-db1a708b93ed",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "7387494e-e66f-4d72-819d-86d945467779"
        },
        "item": {
          "id": "17a1d695-e1f6-43a5-82b3-a9e1d6c87aa8",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "05b3fff7-1fad-4d49-82aa-6f399b0c911b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cf717e9-c9e6-4c89-a3e8-4734c376de8f",
        "cursor": {
          "ref": "09577c17-2f77-43ec-93eb-afc9fca22ad5",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "393691d5-b002-4c9a-ba2a-ab1a2678001a"
        },
        "item": {
          "id": "8cf717e9-c9e6-4c89-a3e8-4734c376de8f",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "60b2e989-90bc-43a4-abc0-1e00f4279f4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eabf49f0-6a4c-4fb1-94c8-0dcf59fa5659",
        "cursor": {
          "ref": "59537b05-9062-4a98-ada6-b4c11b5ab85b",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "c5faa116-64a9-474f-be84-72d4032f900b"
        },
        "item": {
          "id": "eabf49f0-6a4c-4fb1-94c8-0dcf59fa5659",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "a72aa54d-cc18-4e54-a4f6-0e3a7a8d0fe9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6abd0f9a-c39d-4db6-a54f-ab865177efb0",
        "cursor": {
          "ref": "f7cb9d4a-370c-404a-83fa-6b0d338704fa",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "a37bdec6-33df-4b4e-8ee0-181b3669e720"
        },
        "item": {
          "id": "6abd0f9a-c39d-4db6-a54f-ab865177efb0",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "2d268a94-dde0-4ce3-89aa-de0c2a522f78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e8ef756-da31-483a-be15-0810ed70a870",
        "cursor": {
          "ref": "a2cb3d1e-db05-49ba-82a0-e651edd75031",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "09328361-5229-490d-8081-a1bd07fc627d"
        },
        "item": {
          "id": "4e8ef756-da31-483a-be15-0810ed70a870",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "20503504-8c5f-4cdb-8d98-79af62aee055",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a1b23bf-6377-4180-8b43-4f226b82dfe9",
        "cursor": {
          "ref": "ed6fa077-c0f5-46bb-bcf0-980bb4c83860",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "f9850dd4-cb53-4459-829f-1f323661e343"
        },
        "item": {
          "id": "0a1b23bf-6377-4180-8b43-4f226b82dfe9",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "f64e20ce-e68e-4d74-9aa1-67aeeed490d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0822d2a9-2fa8-4e2e-9611-1048a4f97c64",
        "cursor": {
          "ref": "c8f6a27e-48bb-4b81-9bc0-f9f4b7d21965",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "1bd83596-66c3-40fd-b87a-64c87dad7495"
        },
        "item": {
          "id": "0822d2a9-2fa8-4e2e-9611-1048a4f97c64",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "5571da10-21bc-4278-8c05-406433944878",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50cc31f9-0a51-45a3-b158-71d035382574",
        "cursor": {
          "ref": "284b4ea0-7b90-4e75-aad2-1f50a6444939",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "33a6e00a-1917-4915-82e6-d3a357ebcee3"
        },
        "item": {
          "id": "50cc31f9-0a51-45a3-b158-71d035382574",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "db2c3678-d235-4215-9a25-b293e1e99f42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e130031-7219-4b6c-b130-b30d021f9019",
        "cursor": {
          "ref": "9802bb01-6f91-4d35-ab8e-9dd0a5bdafb0",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "74a79b40-1f85-43a7-8977-1d3f071c268f"
        },
        "item": {
          "id": "8e130031-7219-4b6c-b130-b30d021f9019",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "b8b55375-a82e-44cf-94e2-15b998bc1998",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf7bf006-6e8a-4a73-9a16-c4bd1eaeab3d",
        "cursor": {
          "ref": "6056c9bb-2047-44ef-b682-39079bcc554e",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "f62c983e-7664-4eb1-8a86-8d201b7c6c52"
        },
        "item": {
          "id": "bf7bf006-6e8a-4a73-9a16-c4bd1eaeab3d",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "4d659d44-54a6-4802-865c-61d2d2e42847",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1fb4b28-7dd3-4069-aef4-bcd9058274ef",
        "cursor": {
          "ref": "6a89a8c9-606f-4566-b884-56da1bab3844",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "c96cf179-5b28-49b3-b6bd-b0c95b31592b"
        },
        "item": {
          "id": "b1fb4b28-7dd3-4069-aef4-bcd9058274ef",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "7c2465a6-8965-4828-b1ad-c82691142db1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa815df9-38b8-4575-9423-aadbeb2fc28f",
        "cursor": {
          "ref": "e69f3f4e-26c6-46d5-9f86-f1396493e017",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "6253155e-9717-401f-8297-15f045a8ff39"
        },
        "item": {
          "id": "fa815df9-38b8-4575-9423-aadbeb2fc28f",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "63494a85-8766-4e78-8f62-8426d975a2a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2819456e-4201-458c-8a6f-3f7a0f91d1cb",
        "cursor": {
          "ref": "d7a02309-05db-49dd-a908-853ccd0638e1",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "cc27c715-fe51-4293-9e06-59a9d0d11eb6"
        },
        "item": {
          "id": "2819456e-4201-458c-8a6f-3f7a0f91d1cb",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "36ff42b1-a69e-4cd0-be58-a8b5d2aa0efe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaf2686c-ab67-4021-a408-a58b1838ffcb",
        "cursor": {
          "ref": "ee7ed3c3-29dd-4687-b535-baa5f0fd6136",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "2a72925e-aadd-4f47-a1e2-9b6b2eabb054"
        },
        "item": {
          "id": "eaf2686c-ab67-4021-a408-a58b1838ffcb",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "316ad519-1db6-4019-9282-24ccc7780aca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abf19704-0c0d-4b9e-b164-ea93cd0a8aa1",
        "cursor": {
          "ref": "bc16530f-abb3-48e3-a32f-5f714d3d980e",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "8258f9b5-b0f4-41f4-baf7-e8e0c5dbccd7"
        },
        "item": {
          "id": "abf19704-0c0d-4b9e-b164-ea93cd0a8aa1",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "10ffc0b8-1358-4f86-a4a2-1fd255696514",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5d82859-9969-4fcc-aa97-cb161ca80aae",
        "cursor": {
          "ref": "c2e62302-9513-4435-9f85-19cc5cfe2aa0",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "c77adc26-a7c0-4189-b1c6-32942572639b"
        },
        "item": {
          "id": "f5d82859-9969-4fcc-aa97-cb161ca80aae",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "d18bd649-691c-4c33-9e80-5069860d482c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "460ab278-2317-4c53-bd90-cce1b72ae799",
        "cursor": {
          "ref": "53e1fd85-d6eb-4c70-af21-e437cb1ce5b7",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "ec3a9ea6-bd33-4d26-97f1-ca2678dd8d40"
        },
        "item": {
          "id": "460ab278-2317-4c53-bd90-cce1b72ae799",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "47f9450e-46de-4eb0-b8ce-8ee73e4818bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "139a41ba-2cd3-45e1-9df0-7314bc14bd96",
        "cursor": {
          "ref": "f9a790d6-ac28-4d00-838b-377e7d161b6a",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "cff95437-1314-45e1-ae93-e8cbca944ab3"
        },
        "item": {
          "id": "139a41ba-2cd3-45e1-9df0-7314bc14bd96",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "956f37a7-3c67-4e4b-9984-f935a15aa32e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "065d0a0d-e504-43af-b1d1-0194ddd125f3",
        "cursor": {
          "ref": "3df526f2-d535-444e-9487-efaba1a0d2cb",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "01d6fa58-ed70-4985-b8e9-38807b8709ac"
        },
        "item": {
          "id": "065d0a0d-e504-43af-b1d1-0194ddd125f3",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "07317c9e-74d9-4b76-842c-fc3aee7db3f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d44d2c42-9533-4fc4-82a8-086531c1da96",
        "cursor": {
          "ref": "f41ce0d0-9713-4b4a-8d68-86c000c045de",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "fb075279-1135-4c43-90e0-68fbe7e2ec7c"
        },
        "item": {
          "id": "d44d2c42-9533-4fc4-82a8-086531c1da96",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "3afaa342-3cf4-4170-944a-ade35a266c3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "568112a3-213b-42e9-bc78-c8787098c064",
        "cursor": {
          "ref": "c9bf6367-06a9-4146-96b8-babca7a1c145",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "0ac0fa00-4f52-419d-a790-3d7540f24faa"
        },
        "item": {
          "id": "568112a3-213b-42e9-bc78-c8787098c064",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "6e01d739-116c-4680-b8cd-8d9414f58447",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f06094b5-cb55-4ed9-8b02-d6d15f458cba",
        "cursor": {
          "ref": "b84d0814-70e7-426e-b7e8-a554cbdfb86e",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "03134baa-ce0b-4827-9ccd-ab513b1e3826"
        },
        "item": {
          "id": "f06094b5-cb55-4ed9-8b02-d6d15f458cba",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "a5dd25da-ad3d-47df-8276-8dc54af9108f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ad2fd9b-d13e-4fb5-9665-2afafc6ed1cb",
        "cursor": {
          "ref": "827f3f54-cec8-4f20-a7dd-347d3b329cd2",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "f049f83d-9102-4695-867f-2f5c83adde36"
        },
        "item": {
          "id": "6ad2fd9b-d13e-4fb5-9665-2afafc6ed1cb",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "b77d0102-301a-4888-b657-02544bc73207",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "033e30eb-5e3a-4b5e-a8fd-b2aaabe30a19",
        "cursor": {
          "ref": "c81141b0-30d0-4c97-84ee-5e33027ecc49",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "d84a4fcd-1da8-43bc-a4c7-19b2d9c1beb4"
        },
        "item": {
          "id": "033e30eb-5e3a-4b5e-a8fd-b2aaabe30a19",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "324bf8f7-b84c-4b9d-9e6d-68e4e30f5079",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be9bdc5a-01ef-4b82-b45a-c602b6692a84",
        "cursor": {
          "ref": "0e9b878e-aa64-44f1-b3b3-a19ff8af739d",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "80dfa215-0d23-4d6b-a108-79707bd58b4e"
        },
        "item": {
          "id": "be9bdc5a-01ef-4b82-b45a-c602b6692a84",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "53518aeb-fe0c-470e-b95f-8cfd79552353",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61e6a667-d4a9-44ca-9079-0445fa10b827",
        "cursor": {
          "ref": "eb9730d0-2e28-4352-a987-f58cd1d856f3",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "83905efa-dee3-44f3-913e-e0a1ef035b44"
        },
        "item": {
          "id": "61e6a667-d4a9-44ca-9079-0445fa10b827",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "7557986b-4936-422c-83b8-368e83e21865",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50584975-b2c9-4e15-abe2-efa4edb99fed",
        "cursor": {
          "ref": "6d6ed19b-45f4-4265-93a2-062cdd2aba2c",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "69660c83-bdf0-4ed8-8dbc-851f8982df00"
        },
        "item": {
          "id": "50584975-b2c9-4e15-abe2-efa4edb99fed",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "8e5803b1-5a64-45e5-b009-145434f79a97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44c7f380-59c1-49fe-a219-e2761d589e3a",
        "cursor": {
          "ref": "9478574b-f436-4fd5-b9ba-fef7d00ddd7d",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "e7f4ad8e-3938-40e6-9453-891af7d188aa"
        },
        "item": {
          "id": "44c7f380-59c1-49fe-a219-e2761d589e3a",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "ff87205e-3b60-4969-847a-3033fa7a7fd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adb1bc98-f48c-438e-a050-fed5c7c5f380",
        "cursor": {
          "ref": "d5b04503-e108-4785-a4b8-74e023a06362",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "c4b3ce87-7f47-423c-8613-544c0b984992"
        },
        "item": {
          "id": "adb1bc98-f48c-438e-a050-fed5c7c5f380",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "b84195b0-7feb-4b7c-bf15-4eb88648797a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7bf9b79-0f44-4f0c-8cde-838fbed923bb",
        "cursor": {
          "ref": "4f4c0832-2445-4726-8152-107c8e5ad078",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "4530222a-627c-4be9-a554-7add90617e8a"
        },
        "item": {
          "id": "e7bf9b79-0f44-4f0c-8cde-838fbed923bb",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "d627a1af-839b-44b5-8519-03ac3df1f81e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a65bc1dc-de65-40b9-9df2-8c13eca77408",
        "cursor": {
          "ref": "b25c9454-8656-4b4e-a483-d5b1dbbc1712",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "9390866c-3bc4-4b05-a56d-670b9b6ac0c3"
        },
        "item": {
          "id": "a65bc1dc-de65-40b9-9df2-8c13eca77408",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "50845e54-5d61-4773-8166-4722c5b8afe8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d633884a-578f-4f8e-a7eb-44b59fd67da2",
        "cursor": {
          "ref": "479bedcd-d146-4307-be07-16bea3104d89",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "2b6499c7-a891-401f-b907-6255888136d5"
        },
        "item": {
          "id": "d633884a-578f-4f8e-a7eb-44b59fd67da2",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "07527ada-7ef6-4076-863e-c83ae1a79736",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18739247-d248-487d-b2a0-5e2c32819d62",
        "cursor": {
          "ref": "14b8afc6-23a7-4a2d-a786-c7d4f190f16b",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "28847db8-5d02-4a45-85bb-1f69e449c88a"
        },
        "item": {
          "id": "18739247-d248-487d-b2a0-5e2c32819d62",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "f51794e5-d663-4e8b-8893-0c96be9c10de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b636524d-c549-489a-bfb0-613f39e64cfd",
        "cursor": {
          "ref": "0bc78034-78f4-4062-a8ed-e099b44b3218",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "f47fc912-267c-452f-b6d8-a4ab4d16a0a3"
        },
        "item": {
          "id": "b636524d-c549-489a-bfb0-613f39e64cfd",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "6147cac1-9897-403f-b3a7-c3fe7f0cec31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0236036c-c978-4733-9d7d-9903ed0d39f9",
        "cursor": {
          "ref": "8ac20389-1d63-4653-b27d-04b9d7d30be3",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "18d6788d-abc3-45ac-a11b-dbb7427aacfa"
        },
        "item": {
          "id": "0236036c-c978-4733-9d7d-9903ed0d39f9",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "2c3c6e3f-dacb-4e57-9534-809846cb2579",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8772e02-a91d-4a91-a40a-478c6a21fd9f",
        "cursor": {
          "ref": "3cf8cbfb-5ee3-47b3-8c06-bc595818e5b4",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "d94afd1d-eac2-41d5-af00-66c4857d15f9"
        },
        "item": {
          "id": "c8772e02-a91d-4a91-a40a-478c6a21fd9f",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "441d017b-7d2a-4c98-b309-cd89596ab4b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c2938a4-f659-4068-a206-df46c93a96ca",
        "cursor": {
          "ref": "963d6ae4-3095-411b-bb45-ea96bc463910",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "ea3c69fb-7a97-4db1-aea9-094e8da1b5f2"
        },
        "item": {
          "id": "3c2938a4-f659-4068-a206-df46c93a96ca",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "499b0517-3926-483c-869a-755d39515359",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1434c490-a050-4437-a79a-34d28fe22d2a",
        "cursor": {
          "ref": "5d4d935b-ae93-4a7a-900d-7e56db0593b6",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "5e1d29e4-b016-45bd-aea4-29537cfb5025"
        },
        "item": {
          "id": "1434c490-a050-4437-a79a-34d28fe22d2a",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "ea59c36f-c91b-4b55-a66f-ed834529ce99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7de7d78-e882-464f-a9fa-503b71a705bd",
        "cursor": {
          "ref": "9c567203-d23f-4423-9dea-f56fcc143176",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "5a55e57b-191c-4ad1-bab5-6191b07e4e45"
        },
        "item": {
          "id": "b7de7d78-e882-464f-a9fa-503b71a705bd",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "d7e1b6f4-dcbd-48d2-b98f-7cb7e8bc26fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb635281-1a6d-4b6c-b294-1ba6c37da767",
        "cursor": {
          "ref": "7beec62a-e9f3-49f4-b18f-7b9a918b38fd",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "063cb4ec-5645-414c-9614-3419f2fcf09e"
        },
        "item": {
          "id": "bb635281-1a6d-4b6c-b294-1ba6c37da767",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "d2ff00a3-d84e-46b7-9518-2741148abf72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a98754f-94e9-480b-89a0-8d6492833701",
        "cursor": {
          "ref": "a14a39c3-667a-4389-b027-b6f7be64777c",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "9185a878-cec3-4151-9353-b6a4343e7d70"
        },
        "item": {
          "id": "6a98754f-94e9-480b-89a0-8d6492833701",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "9fdcee8e-dade-46d5-8de1-95a3c0db9eaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd009859-737f-41ba-871c-27070424d94c",
        "cursor": {
          "ref": "eb53066e-d401-41c9-a3e9-66802e752149",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "42fd1902-c968-422d-ae78-e7594bb8240f"
        },
        "item": {
          "id": "dd009859-737f-41ba-871c-27070424d94c",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "2df1799f-72c8-4009-8e94-8810fa35f741",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19cc572f-a35f-47dd-a587-071502c0088e",
        "cursor": {
          "ref": "770ca07d-de7c-42f7-aafc-519f86f9ddcc",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "0861184d-1387-4a3f-928b-0d64d0c7c469"
        },
        "item": {
          "id": "19cc572f-a35f-47dd-a587-071502c0088e",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "d9854f7e-6d7e-4e19-a79d-816e2a09a62c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc5779fc-4d51-496d-8ab1-751d85ba2f52",
        "cursor": {
          "ref": "62605f7f-c327-466e-870e-3230484ee398",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "dd7bd2c8-23c9-4e33-b99e-1fe4a6c57678"
        },
        "item": {
          "id": "cc5779fc-4d51-496d-8ab1-751d85ba2f52",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "47ee150e-e357-4fc2-931b-3e313b3fee70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "624518c5-7f6f-4c88-b0e9-1ec104caa63e",
        "cursor": {
          "ref": "4168ee16-37f0-4d5f-8271-643af14023f3",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "5ca647aa-82ff-429a-8009-44999f531d24"
        },
        "item": {
          "id": "624518c5-7f6f-4c88-b0e9-1ec104caa63e",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "f9070bed-02b3-4287-abe8-94ed0d6ca7cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a617cd43-0be6-4dfd-809f-4037ed0f7b9c",
        "cursor": {
          "ref": "0548197a-bf3b-4866-9d6e-6175b88a1f90",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "e5c0aec6-c854-46b1-a361-20c25d4d1e66"
        },
        "item": {
          "id": "a617cd43-0be6-4dfd-809f-4037ed0f7b9c",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "e01a86ef-bc80-4795-bbfb-94a6762b7f33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2edb72a-f049-49ad-b8be-8b8e5732ea98",
        "cursor": {
          "ref": "8ebf4a84-34fd-4bfa-a61d-ea84de20bef5",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "c12decfe-28a0-49a1-8f54-cccc58829cb8"
        },
        "item": {
          "id": "c2edb72a-f049-49ad-b8be-8b8e5732ea98",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "8017aceb-d913-4f3f-8f1f-4c10b2f3ad8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d22cee6-6d1b-47c9-905e-accac8bd3a32",
        "cursor": {
          "ref": "4d9391e0-a554-475a-a4ab-a67fe182c463",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "7bc735a0-9cd5-43ed-a2ab-98d58507450f"
        },
        "item": {
          "id": "1d22cee6-6d1b-47c9-905e-accac8bd3a32",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "e294c061-a74d-4f70-bbe0-ec63b956698d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4c2c8ce-e593-4163-935d-b1bdaf004e18",
        "cursor": {
          "ref": "782c873f-ce18-458d-aa65-eae2ba72cfac",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "4a8159f2-cdd5-47e1-bd7d-b026f65f3bbe"
        },
        "item": {
          "id": "f4c2c8ce-e593-4163-935d-b1bdaf004e18",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "56417556-91d2-461a-b264-986d97401b03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd537851-94e1-4478-95e2-3e82e94bbe62",
        "cursor": {
          "ref": "57fcb122-a442-426b-a231-2b65b4eae09b",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "51e76837-b088-4ce3-a571-598f6ce93832"
        },
        "item": {
          "id": "dd537851-94e1-4478-95e2-3e82e94bbe62",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "bb7414c8-da8f-4840-91da-dce3875a9301",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8083f86-cf91-4bee-91a8-00c982087706",
        "cursor": {
          "ref": "849a78c6-a0f5-40e7-bf27-10b7cb156cda",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "dc7815e8-6cd3-4a36-9a4f-c07fdd67db69"
        },
        "item": {
          "id": "f8083f86-cf91-4bee-91a8-00c982087706",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "931b9b47-dc63-45dd-b535-32a8680ceaa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d464208-a02b-4a59-83e1-9662e39a71cc",
        "cursor": {
          "ref": "563ab814-badc-4015-bbdf-e2907cb937f0",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "d43c7314-51d8-42d0-9c93-c04ed3a7e7d4"
        },
        "item": {
          "id": "4d464208-a02b-4a59-83e1-9662e39a71cc",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "22f30a8c-db7d-4eba-9a43-5c1fd14ef221",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92766e34-8c81-4c47-93c2-3888a9db304d",
        "cursor": {
          "ref": "b9519223-620f-400a-a680-2bbf17efbd1e",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "04cc52c1-6904-4e56-b045-7f7e250aba19"
        },
        "item": {
          "id": "92766e34-8c81-4c47-93c2-3888a9db304d",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "678a6c9f-ae05-4a12-aa9b-c536605f6f2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5086cc17-ad22-42c7-a130-eeb093285b1b",
        "cursor": {
          "ref": "6a06e185-3bfb-4497-8ad4-0079496138f8",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "44c45b4d-be31-457a-b82e-24e9f7f56edd"
        },
        "item": {
          "id": "5086cc17-ad22-42c7-a130-eeb093285b1b",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "594fe021-762c-4818-aacd-8f47cb00b05c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d532a843-1a6b-4eea-8afa-46c2799faea9",
        "cursor": {
          "ref": "b815fb2e-ee3f-418b-b628-15318e196fcf",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "1eb4c4cf-6ecb-42d0-9a93-ff5c3d46f8c4"
        },
        "item": {
          "id": "d532a843-1a6b-4eea-8afa-46c2799faea9",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "c8e8a0aa-85fd-42f7-90ac-37f34534683e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6e94b94-8181-4c71-8fc8-640542ce1cd7",
        "cursor": {
          "ref": "c913e1ad-c966-445d-b630-16953292cdec",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "03c32d20-e063-4ff9-8c5a-e4e2d63b47b0"
        },
        "item": {
          "id": "a6e94b94-8181-4c71-8fc8-640542ce1cd7",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "e8bced9c-0452-446e-99be-9b7d4c24d929",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32703b5d-7fa5-4188-8241-ed7700cccb80",
        "cursor": {
          "ref": "3e1d6f6a-7444-4a62-8474-1f5426f11f63",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "6610a781-a2cd-478b-8469-f46c4a50537e"
        },
        "item": {
          "id": "32703b5d-7fa5-4188-8241-ed7700cccb80",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "6185e518-3cea-48b8-aa4b-2e93940b2745",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 100,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c325ba80-727b-49ba-a6fb-0b9ae08dfb4b",
        "cursor": {
          "ref": "23058ac3-2af7-4d18-9ff8-dc3cb8a189a2",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "a8139690-0e58-4652-8ffd-2dae716e3a61"
        },
        "item": {
          "id": "c325ba80-727b-49ba-a6fb-0b9ae08dfb4b",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "4da4710e-95b5-4890-8dff-37f13b01d133",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b363338-0462-41a3-bb99-4c0bc38efac4",
        "cursor": {
          "ref": "ec5a5178-e1da-4e79-9ab8-094844d723b6",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "92ec64d0-eb33-4950-9cdf-9a93922b6f47"
        },
        "item": {
          "id": "1b363338-0462-41a3-bb99-4c0bc38efac4",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "e80ad923-b387-4169-b10b-0572928ee903",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4af03965-a471-410a-a613-91a6d2f4d854",
        "cursor": {
          "ref": "024a734b-c547-484c-b951-100cd3a49223",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "89a4a956-52f9-4185-bb23-a1e5c6f4673e"
        },
        "item": {
          "id": "4af03965-a471-410a-a613-91a6d2f4d854",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "fba1e949-0dc8-4a0b-8090-55fd55df3ea4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12d24b67-dab7-4ea8-a492-1c0a4dd57702",
        "cursor": {
          "ref": "52a400be-9dc8-49de-80c3-1696a568f5dd",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "edbfa600-7b44-4189-bd45-6871e7f99d14"
        },
        "item": {
          "id": "12d24b67-dab7-4ea8-a492-1c0a4dd57702",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "b62633e2-f73e-4236-9f36-d430d94f313a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a6ade96-fd40-4496-9984-a11cecef2673",
        "cursor": {
          "ref": "73e985c8-6991-49ed-bc04-02d42bc0b632",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "70dc75aa-d303-4e5a-852f-863a72a369a5"
        },
        "item": {
          "id": "0a6ade96-fd40-4496-9984-a11cecef2673",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "6b4b455b-d36a-4bce-9210-ae324a207ed9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d3d71c4-e45d-47bb-a69a-352e9b9f1e75",
        "cursor": {
          "ref": "b6d69342-dbe6-4b92-b590-abe9bb8a55e0",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "14d30979-cbfe-4053-8582-0cd841be5e63"
        },
        "item": {
          "id": "1d3d71c4-e45d-47bb-a69a-352e9b9f1e75",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "f826d6ba-3906-4c18-b852-440e6606f11a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fba61cd9-605a-4be0-9f4a-51bb2c31cf75",
        "cursor": {
          "ref": "26ccbfe0-69d1-4ba4-a678-b6b1aecb40f8",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "109b4ef5-495a-477c-9c6b-442bf22896d2"
        },
        "item": {
          "id": "fba61cd9-605a-4be0-9f4a-51bb2c31cf75",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "ed5e0934-a493-4801-bfc8-a3a64df4dfc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "573abde0-9b38-4239-9f93-1ec3b11a5f36",
        "cursor": {
          "ref": "fae47296-c50e-4d0a-b59c-a0cd17836841",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "573d6b00-4261-4bd5-898d-9ff6342f6528"
        },
        "item": {
          "id": "573abde0-9b38-4239-9f93-1ec3b11a5f36",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "3adb09e8-d5dd-4f80-9d51-fabd8cf54c17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:101)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f00b8730-c805-4e5c-af63-2dca038f71a3",
        "cursor": {
          "ref": "30fea736-f63b-436f-849e-14a0e24de589",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "e51e1aa4-e0c5-482d-89d2-08f4aba46a60"
        },
        "item": {
          "id": "f00b8730-c805-4e5c-af63-2dca038f71a3",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "5c5c3911-5484-41b6-9dfd-cfb3aa927426",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "2ad4982e-92a2-457a-bc0e-6dfebc184810",
        "cursor": {
          "ref": "61fbadbd-7d33-47dc-a17a-2df919c178bf",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "b28fed8a-d6f0-498a-adfc-83b243e60799"
        },
        "item": {
          "id": "2ad4982e-92a2-457a-bc0e-6dfebc184810",
          "name": "credentials_issue"
        },
        "response": {
          "id": "150f82e0-1fc7-45e4-99d9-ed7d9841de21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "91aeb864-f395-4a8a-b99a-5de37ef188ab",
        "cursor": {
          "ref": "9d989570-0f1b-4307-8cf0-30f446c9807c",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "053aa348-0b6e-415b-b1ae-5dd13965a77f"
        },
        "item": {
          "id": "91aeb864-f395-4a8a-b99a-5de37ef188ab",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "fb6a8508-3c2b-49ca-82d6-d491a9f12a6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "41d791dc-abfd-40eb-8dff-29135264f04b",
        "cursor": {
          "ref": "3efe6d20-d33c-457b-9660-0b50de904a72",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "e4776141-f352-47eb-864a-126dbec8b3af"
        },
        "item": {
          "id": "41d791dc-abfd-40eb-8dff-29135264f04b",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "d36f12a9-f962-480a-ba06-f80ee2266c36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 104,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "e2a87d80-f1b3-4a9e-b551-b529f8f09975",
        "cursor": {
          "ref": "a0fb5272-5092-470c-8c3a-f199014fac7b",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "7163af15-941a-4b49-9910-21f5d71fd0af"
        },
        "item": {
          "id": "e2a87d80-f1b3-4a9e-b551-b529f8f09975",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "104cae2d-c43b-474a-97c6-0a50f433505c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "e88f4c89-5c2c-46c4-add3-9c787a68af6c",
        "cursor": {
          "ref": "d0a757cf-016a-4bdb-8167-c917cf3cf3d1",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "2352cdd1-dee2-43d8-9631-fd084351703c"
        },
        "item": {
          "id": "e88f4c89-5c2c-46c4-add3-9c787a68af6c",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "799de1e4-b066-414b-ab07-c9937ae59a75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "17430cf1-bdbc-49ce-9238-77c2428dfc40",
        "cursor": {
          "ref": "3fecfbd4-9d20-45ba-8615-86e4b2ae61b5",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "d41f3bda-1df3-451b-be65-a4653750b120"
        },
        "item": {
          "id": "17430cf1-bdbc-49ce-9238-77c2428dfc40",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "39189fb1-4062-4497-8dc4-c189f608db82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "29433845-c01e-432b-9c0c-f41000e7b8b1",
        "cursor": {
          "ref": "a938adaa-1d31-42fa-a33a-342ddb213e3b",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "ba4ff04c-eca5-49a6-bff0-ad26eb482bb8"
        },
        "item": {
          "id": "29433845-c01e-432b-9c0c-f41000e7b8b1",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "7b26c255-8e5a-4283-8139-497aa353ecbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ad07b87-171e-4a3b-ae51-747d9f7eec60",
        "cursor": {
          "ref": "306a0cbd-7bf2-417a-b5f5-0d1dece41f6a",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "ae5bfbf8-c4b2-4685-8037-42f2e90259ea"
        },
        "item": {
          "id": "3ad07b87-171e-4a3b-ae51-747d9f7eec60",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "1898df7b-c882-49ee-b404-5819f69da7b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efcd8dea-d08e-4506-8076-8f8cb49f386b",
        "cursor": {
          "ref": "6a3dc5e3-b544-415f-bfd1-09f7314d17f8",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "f4d1944b-649d-4e9a-90d0-be83c5901fd4"
        },
        "item": {
          "id": "efcd8dea-d08e-4506-8076-8f8cb49f386b",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "03416d34-6ef4-427b-9209-669643dc764b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68057ccc-8b22-4f8e-a768-7f45c21e1ff1",
        "cursor": {
          "ref": "a908854c-1910-41b5-9516-9a41de634d4b",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "23d719ba-429f-48f8-9bb0-6b938654cb37"
        },
        "item": {
          "id": "68057ccc-8b22-4f8e-a768-7f45c21e1ff1",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "02fe8ff2-f6bb-4143-8b07-6fe96be7430d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5765d241-e4e6-4fd1-b126-275ab7760441",
        "cursor": {
          "ref": "b8ec2e1f-e71b-4eb3-8fc0-1f0fa1fe29ba",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "bd796713-7a94-4654-88b2-82f86c1a37db"
        },
        "item": {
          "id": "5765d241-e4e6-4fd1-b126-275ab7760441",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "7afd5bcf-3bd6-4c18-9cdb-c5875b79a33a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6116972-be21-420e-8256-a06bd2b751a9",
        "cursor": {
          "ref": "7b8734a4-b020-4e72-a34c-a59ffdc335c2",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "b404d537-0598-499b-887e-b0735bea20aa"
        },
        "item": {
          "id": "c6116972-be21-420e-8256-a06bd2b751a9",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "ff85ae02-7997-482a-95af-7acd5e7cb53f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78969432-53e0-427a-8652-231cc8b7319d",
        "cursor": {
          "ref": "50343647-84f6-4333-87ae-13fb4bcaa302",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "4ca9070f-010d-4c65-9ea1-019e6937f36c"
        },
        "item": {
          "id": "78969432-53e0-427a-8652-231cc8b7319d",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "5a3e8f41-48f6-42b8-8a02-914d0d94fd9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef17ca2b-9040-496a-9ff0-0e6b3d8e8957",
        "cursor": {
          "ref": "276cf305-e954-4404-842b-858fb35bb98e",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "8f6e1ec8-ed98-4031-9d55-4d0d2c4312bb"
        },
        "item": {
          "id": "ef17ca2b-9040-496a-9ff0-0e6b3d8e8957",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "326b30df-0892-44f7-92d6-2930cdb30d1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d79529d-fa95-49c5-a725-1afcbedda1d4",
        "cursor": {
          "ref": "b2c58862-d857-41e3-9bad-7044177b0b46",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "11476504-44ac-49cd-9d15-bcb0a1e63e13"
        },
        "item": {
          "id": "5d79529d-fa95-49c5-a725-1afcbedda1d4",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "08acb017-8f28-4a7c-9855-5d67e8d241ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56568994-1a79-45cc-8dad-2f3373b9a463",
        "cursor": {
          "ref": "f437c5c9-0d18-492d-8b10-ae7e2479d654",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "bfc415ac-36f0-4579-83df-457aab89d220"
        },
        "item": {
          "id": "56568994-1a79-45cc-8dad-2f3373b9a463",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "38fd7e81-8be9-40b7-ba76-fab3f02c7b0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b2410e3-3e30-4cf8-b6dd-013e6cb9771c",
        "cursor": {
          "ref": "16f5dcc8-7956-4f28-99f9-8349aa6e499f",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "cade11f6-2f99-4f89-ad85-556051436d0b"
        },
        "item": {
          "id": "6b2410e3-3e30-4cf8-b6dd-013e6cb9771c",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "4f22c6cc-6d7b-44df-8ced-9ab0b19cdef7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "224572f0-5f6c-4495-910c-9fd41c2dcf41",
        "cursor": {
          "ref": "e663eefb-f1f8-4d27-961c-b7f611e2090f",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "c2eebca0-6104-46be-82a3-8ff879a3c28e"
        },
        "item": {
          "id": "224572f0-5f6c-4495-910c-9fd41c2dcf41",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "4c47f469-95d3-43ec-9e10-1edb8fe7f4e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45adadf9-ac1d-413d-a632-5fc5f9c37f0c",
        "cursor": {
          "ref": "942601b9-1a3a-43dc-b036-99b1e795e0e3",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "fb6dfc3a-ef0f-445e-8893-aa97e2c72417"
        },
        "item": {
          "id": "45adadf9-ac1d-413d-a632-5fc5f9c37f0c",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "dbae16ba-6883-4f3c-8e68-42bfb8c67a28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3410850f-005d-4ebe-88e2-99d73b9f3bf1",
        "cursor": {
          "ref": "eba2d274-0305-4025-a65b-09bac40715ce",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "ed1cc2da-8952-4c35-a370-cd18e8470b45"
        },
        "item": {
          "id": "3410850f-005d-4ebe-88e2-99d73b9f3bf1",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "c017c0a0-4cab-4759-9a99-480925702ae0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e07b75ce-6292-4493-8911-295bc21e67e6",
        "cursor": {
          "ref": "6866d5d1-c3ee-4465-ac0e-52ba1c624697",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "94ac350f-0bfa-4110-b392-91523e8c8a0a"
        },
        "item": {
          "id": "e07b75ce-6292-4493-8911-295bc21e67e6",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "4898fd11-1ee4-4a38-9669-12850885a211",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e534a8d-69d3-46c9-a75e-497d71703eb9",
        "cursor": {
          "ref": "20f25361-2028-4632-aed9-38ab909fb8b9",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "49839dd0-8999-4cfc-83dc-6204afe0340e"
        },
        "item": {
          "id": "1e534a8d-69d3-46c9-a75e-497d71703eb9",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "b53b664b-9439-4ce1-aaa0-aaf84cc7a832",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd286f41-0c98-4ba0-8a63-4f578fb12a66",
        "cursor": {
          "ref": "55480c83-60de-4a90-bb2d-37157c785f89",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "f74a1f56-8396-451c-9d45-80f5a0aa50af"
        },
        "item": {
          "id": "dd286f41-0c98-4ba0-8a63-4f578fb12a66",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "f2e2eddc-ffbe-4db1-a72c-f54de8833e7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3484c8e1-2048-43f2-9928-38bb1315fec7",
        "cursor": {
          "ref": "871187c9-9b6d-411b-9f7e-14a89190c205",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "1c8b8845-d7d0-461c-89f6-42866b018acd"
        },
        "item": {
          "id": "3484c8e1-2048-43f2-9928-38bb1315fec7",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "c6c01ba7-f59b-48a5-b476-e9c0d5fd55c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47fc5961-b9db-4e02-9bfe-5abd7d372583",
        "cursor": {
          "ref": "ad987c35-4b19-469b-8ced-96ca908b5ff1",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "216ec82a-d37d-4deb-8132-0e79fbc485e3"
        },
        "item": {
          "id": "47fc5961-b9db-4e02-9bfe-5abd7d372583",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "a90c1c02-2872-4b21-9821-3dd3cbad23bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b39112a1-cbc5-4382-9ec4-aa26a5e4978b",
        "cursor": {
          "ref": "0f6901b5-f7fb-4be1-8101-f24d45f8d3a5",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "8db55b02-7549-4d69-a0ea-f5df94125b00"
        },
        "item": {
          "id": "b39112a1-cbc5-4382-9ec4-aa26a5e4978b",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "d3b15cf6-42f8-4bd3-8a4b-cf757177dcb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be440163-7253-47a3-9c75-2fe7b9482e52",
        "cursor": {
          "ref": "ee7a2068-2aea-4581-8a47-133be7f18167",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "54be240a-d362-4cc4-abfc-a3142a73a23a"
        },
        "item": {
          "id": "be440163-7253-47a3-9c75-2fe7b9482e52",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "47fd0fe2-873a-4c72-9a8f-0827aa62a687",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "971fc742-e9ce-4df8-8aa5-401b7f589259",
        "cursor": {
          "ref": "e6dd0bb6-2978-4c0d-bf13-e1cad4fe55f0",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "a510c791-6f7a-4c63-94b0-027bc672f557"
        },
        "item": {
          "id": "971fc742-e9ce-4df8-8aa5-401b7f589259",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "29695f4d-cad4-4695-a30f-809f5b9bce24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a65b5824-31c1-4a43-a158-cb175b3dc705",
        "cursor": {
          "ref": "6bd822ed-e19a-43b8-a1b6-c950b5ec38c1",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "743df873-eed0-4cf8-a9ab-2aa477a428ab"
        },
        "item": {
          "id": "a65b5824-31c1-4a43-a158-cb175b3dc705",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "18b45e0a-6189-4628-b7ec-6f2b5a0d11f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4fbfe9c-6bbc-4fe6-8a85-b80a1a841960",
        "cursor": {
          "ref": "c5468cbb-0039-4938-843f-61ab81a9440b",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "40239ac5-db41-4e59-8eb8-dffebb574dc8"
        },
        "item": {
          "id": "f4fbfe9c-6bbc-4fe6-8a85-b80a1a841960",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "674fa229-7971-4071-8640-2429112ab92c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b0c437a-42eb-4ffe-ac45-95f6d67ce827",
        "cursor": {
          "ref": "36543293-a56c-4191-8bc7-09e2f7a3cfb2",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "eec9f724-292a-42cf-ac7b-13d5e63601e5"
        },
        "item": {
          "id": "8b0c437a-42eb-4ffe-ac45-95f6d67ce827",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "141efe43-d8b2-4634-82c6-35086b1b5bd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbbe63e0-e761-4dfd-8cec-3b39fbb88163",
        "cursor": {
          "ref": "b07e66eb-d4d7-42b3-aca9-5195411646ed",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "b80e474b-5706-4d94-a354-18ef7801bcb7"
        },
        "item": {
          "id": "dbbe63e0-e761-4dfd-8cec-3b39fbb88163",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "2f733155-eb4e-4dbf-8063-b5eeeed8175f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "309ffa09-90b6-40a6-8e83-bdffebe0c54a",
        "cursor": {
          "ref": "0e6b1340-fb08-46c6-b0c3-efb31766fdb5",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "8b00d296-7b9f-4119-9258-cb6e51a2bc4c"
        },
        "item": {
          "id": "309ffa09-90b6-40a6-8e83-bdffebe0c54a",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "b9dcfca6-4d0e-47ce-bc47-35aa25d5efc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c3bd459-8761-464c-8584-7b8acf56b113",
        "cursor": {
          "ref": "9c40456f-25a8-4922-a0d8-eea20cb5f489",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "12753c6c-9e1e-4e0f-b68c-79809658a02e"
        },
        "item": {
          "id": "7c3bd459-8761-464c-8584-7b8acf56b113",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "72033349-4915-4ff2-bbca-95d089547904",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "964ad42a-0ba2-46f0-9914-b10ac8545c15",
        "cursor": {
          "ref": "5d08f8e3-a28c-4ae5-9b88-4ad39dc3ea6a",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "7878d4c8-3270-4ffb-8be2-7287007d8588"
        },
        "item": {
          "id": "964ad42a-0ba2-46f0-9914-b10ac8545c15",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "2939942b-cd7b-4574-aedb-b652380ec9e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d49d55e2-ff7a-4777-934e-536db48a12f3",
        "cursor": {
          "ref": "2a34c467-9f67-40af-b122-950392a1b3de",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "5cb896f6-af8d-4c27-8c61-dafa2c4f471d"
        },
        "item": {
          "id": "d49d55e2-ff7a-4777-934e-536db48a12f3",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "06ab2be7-fcd6-4c50-b777-fc136c1b6477",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41f9848c-7a7a-496d-9c88-a39c4062fa38",
        "cursor": {
          "ref": "81d68533-19dc-4ad3-b64f-4360669c1019",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "149dfb9d-226a-4d34-b3db-73f7a659c628"
        },
        "item": {
          "id": "41f9848c-7a7a-496d-9c88-a39c4062fa38",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "dda8f7e7-2888-4560-b584-8b3f9343699f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a866bf60-da6f-43f1-94e7-926a6409e113",
        "cursor": {
          "ref": "0e3e8012-e392-4b87-9918-54546267cc78",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "41d3d142-cf15-4c13-8774-888066dee332"
        },
        "item": {
          "id": "a866bf60-da6f-43f1-94e7-926a6409e113",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "dec23eac-7105-4129-8a9c-1eb280f2103f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed935793-911f-4563-bc0a-7b02517df8db",
        "cursor": {
          "ref": "f56b779d-fa1c-430f-a74e-ac7c414bbcbe",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "afbc227a-dcbd-4344-a570-a1a15a677c86"
        },
        "item": {
          "id": "ed935793-911f-4563-bc0a-7b02517df8db",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "4c690fbb-9576-4cb0-9924-e5492992ec19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "145e0c2c-54e5-4fe2-bce9-985aea42cbb2",
        "cursor": {
          "ref": "3743b640-c8ec-4ed4-b786-e4fd58509523",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "8677c815-5a2a-4055-bab0-7cd3794c8aa1"
        },
        "item": {
          "id": "145e0c2c-54e5-4fe2-bce9-985aea42cbb2",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "2770fb8d-46b4-40c5-a2dc-e92e88ecafa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03219523-aa85-4749-bd5c-2984d70a7ae3",
        "cursor": {
          "ref": "38822fe3-0c5b-42ad-993d-9e63cb535add",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "3c7cd53a-cd99-47c5-983d-bbf8b3febad7"
        },
        "item": {
          "id": "03219523-aa85-4749-bd5c-2984d70a7ae3",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "66c0a81f-a388-4073-b686-f8e7c0f86974",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d00166b-3469-4c4a-9af6-4b0b67fabccb",
        "cursor": {
          "ref": "c5b4636a-7276-400e-9c45-c64b1da6d326",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "614b8acf-1218-4861-9bde-5a0d5044f7d8"
        },
        "item": {
          "id": "6d00166b-3469-4c4a-9af6-4b0b67fabccb",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "98555b50-ea9e-4b60-9914-7544366cf1a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a354647e-6794-4bf0-9fa7-5ffbd130868f",
        "cursor": {
          "ref": "254b1130-0704-485a-9a01-cc9af46005dd",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "3b826ca2-1e54-4f9a-9486-804b002fcd02"
        },
        "item": {
          "id": "a354647e-6794-4bf0-9fa7-5ffbd130868f",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "2f7e6a58-a5cf-450d-9d68-e5d33e36fa8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "035e0a98-51d3-4cd0-bac0-039dbbd5d0dd",
        "cursor": {
          "ref": "e0d9d572-f233-4661-b63f-b9c35809cba5",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "5b2dfb4d-7dee-498e-80c6-ad6266f28410"
        },
        "item": {
          "id": "035e0a98-51d3-4cd0-bac0-039dbbd5d0dd",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "7eac951e-096c-427c-947d-9d0d873d9109",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 72,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7117d39-807d-494b-af77-243f7946a01f",
        "cursor": {
          "ref": "0fdf7862-d319-4bb4-9997-5fdc95908f40",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "a1ccf814-e8b5-4400-860b-6815b57c3a59"
        },
        "item": {
          "id": "b7117d39-807d-494b-af77-243f7946a01f",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "b081a8da-4fff-4930-9c9c-4c2fd36dd329",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16dd5514-3e7d-41c9-a0c0-1ea142b76094",
        "cursor": {
          "ref": "5fd55e7b-5108-4287-8e6d-fa77df445f7b",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "5ae22c22-0dff-4c8d-99ab-44570deb3b34"
        },
        "item": {
          "id": "16dd5514-3e7d-41c9-a0c0-1ea142b76094",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "1d958b5d-0f88-4440-b4b5-422fd6a209cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16eea5ce-2aab-4629-883b-8634730d1bb5",
        "cursor": {
          "ref": "9331480a-219a-43ef-93de-d6daef147932",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "d8dac0f6-33b6-4aed-afde-1c8b01570a1d"
        },
        "item": {
          "id": "16eea5ce-2aab-4629-883b-8634730d1bb5",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "89cdf25c-6cd5-4ff8-83c4-34d6da1132b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baa79c62-6eb7-4c17-9a2d-2ce010508481",
        "cursor": {
          "ref": "ba4dd2ed-8ec5-497b-941a-6a2013125f01",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "386cab8c-2ee7-4fde-9551-e1eeff1ceb22"
        },
        "item": {
          "id": "baa79c62-6eb7-4c17-9a2d-2ce010508481",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "0e4bf83a-b649-44ae-af9a-7fd3d233daa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e3f955d-2146-42ce-9ee2-e68822ce8e7a",
        "cursor": {
          "ref": "08738fde-5de2-43d2-bc42-ecde672730b2",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "139fa7b3-09dc-4262-8106-4a1d04cbbefa"
        },
        "item": {
          "id": "0e3f955d-2146-42ce-9ee2-e68822ce8e7a",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "be8ce453-ef7e-45de-9c30-7022339fe218",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de9c1045-3416-4ed4-894e-618648e226f1",
        "cursor": {
          "ref": "048ce17b-4b3e-48f3-8232-ca31c3dcfabd",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "290f7515-2de5-4a99-92d7-77f766a16507"
        },
        "item": {
          "id": "de9c1045-3416-4ed4-894e-618648e226f1",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "b83bb1ee-ae74-4d78-bd92-aa9d8b7915a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b81406c-e74c-4f2e-9ec3-92ca1362308a",
        "cursor": {
          "ref": "313382f3-269a-4dcb-a07d-b49dda4c690f",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "137246cf-c9c1-4286-86e7-6355838a9a74"
        },
        "item": {
          "id": "6b81406c-e74c-4f2e-9ec3-92ca1362308a",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "a752ffcd-fb88-4a37-bf81-b884bff37fcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c295abdc-e1ff-49d9-ad83-48c04636da53",
        "cursor": {
          "ref": "50c8aae1-a55f-4324-94b2-f834ee60a514",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "e5c7fdf6-090c-48ee-bacd-e0cec4b21938"
        },
        "item": {
          "id": "c295abdc-e1ff-49d9-ad83-48c04636da53",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "4b0b99bc-851d-4c95-acca-40b0eeab6f0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1764a71e-3b96-4ab5-b141-368d6fc72fcf",
        "cursor": {
          "ref": "92b47565-1a5c-477c-b5a2-0cf1f474be72",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "6a8857b3-74cb-42b1-be13-b9d21e455a89"
        },
        "item": {
          "id": "1764a71e-3b96-4ab5-b141-368d6fc72fcf",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "ef4c7db6-198e-44cf-b05e-c6228f882e4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "727661eb-bba4-489f-8ad3-a51dfcc0b546",
        "cursor": {
          "ref": "2b8da9dc-4502-4c9d-ac15-a3a86c669d52",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "16c394cf-b90a-4b8b-b50d-5d74bb186f98"
        },
        "item": {
          "id": "727661eb-bba4-489f-8ad3-a51dfcc0b546",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "16b82251-fa38-4605-a5df-07b121c19902",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f990e076-9a4f-453b-bf0b-46a5acea9c0d",
        "cursor": {
          "ref": "0fa24bcc-7edc-4f8f-bd1e-24a9240d49b7",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "8246afa1-b6b9-4da3-92c6-2b70de6509a8"
        },
        "item": {
          "id": "f990e076-9a4f-453b-bf0b-46a5acea9c0d",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "8b53260b-07c1-43df-abd0-edb6aa5bb767",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea226ba5-d1ab-4cb4-a4ab-a01d6da969c3",
        "cursor": {
          "ref": "558fa2ea-0050-4cd6-ae47-f9fba75dcf1f",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "cd7ee32e-4eec-4ead-9f9b-42c3de42eece"
        },
        "item": {
          "id": "ea226ba5-d1ab-4cb4-a4ab-a01d6da969c3",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "6cf4a24c-3abe-4f52-bfe1-b50cc6bfb277",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 99,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1db117a0-839a-4f99-aea8-0f83906d97fe",
        "cursor": {
          "ref": "0e8bc553-a131-44a6-987a-2d9df4d69a91",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "5347f19f-afb0-436b-a06e-c222a6670ed7"
        },
        "item": {
          "id": "1db117a0-839a-4f99-aea8-0f83906d97fe",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "f35ca79c-fcdb-49a5-89a7-a168fcdf1c8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c68057fb-989d-4461-963b-ae02b157178f",
        "cursor": {
          "ref": "3e11ae01-2426-46ba-9209-4e060685396a",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "d57d116f-caca-41e0-b632-29f23a6ea0eb"
        },
        "item": {
          "id": "c68057fb-989d-4461-963b-ae02b157178f",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "c52922cc-4c2c-4158-bf9d-00d76bd95894",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d805407d-868e-4819-a87c-8fdcae0ced57",
        "cursor": {
          "ref": "779ad0e8-42c9-4e5b-a87a-a46593a6a1b9",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "08b4e67b-540a-49df-b2f0-5c07e38e5c7e"
        },
        "item": {
          "id": "d805407d-868e-4819-a87c-8fdcae0ced57",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "bfd10ee5-3823-477e-831d-6e02a5af9216",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad2ee346-debb-4aa7-88c4-c26ef463564b",
        "cursor": {
          "ref": "f0099e70-d6b7-4def-8b2d-e57fdab8481c",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "9559e101-da48-4a49-b164-21ee9d397ec4"
        },
        "item": {
          "id": "ad2ee346-debb-4aa7-88c4-c26ef463564b",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "8d1c1d5a-47fb-455e-8798-2af0c19c10bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1de943c-35f6-4953-afb5-59cfe7712330",
        "cursor": {
          "ref": "dc36fe5a-8977-49c1-b92f-58338940a16d",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "e5b807fe-2818-46f8-995d-699209d71d71"
        },
        "item": {
          "id": "d1de943c-35f6-4953-afb5-59cfe7712330",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "2991efec-0dbd-42b8-a21e-e640e14af482",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f306c61-9331-4acc-afa1-62e0a20c309e",
        "cursor": {
          "ref": "a1252d54-adac-466a-88f1-5c177414977b",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "827f6f0b-f224-4fde-aaa7-c6a4464e3a96"
        },
        "item": {
          "id": "2f306c61-9331-4acc-afa1-62e0a20c309e",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "cc13fc50-2901-46a6-9a57-27466d740110",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47540018-02a4-4a3a-b56e-fe2ac5afc58a",
        "cursor": {
          "ref": "c98edb56-140a-4be1-9bd2-3b4ecbf4351c",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "ad8f2c3d-8272-40a7-ac31-7e1849e49d5e"
        },
        "item": {
          "id": "47540018-02a4-4a3a-b56e-fe2ac5afc58a",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "a22c72e1-73a5-4292-a839-b11a0664bfd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96eba16a-3e38-4fab-ac4e-323e8f66d3c4",
        "cursor": {
          "ref": "055667fa-cd7c-4ec9-8ff4-ac32bf01a4cb",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "9b261143-df0d-4a9c-8d6f-1bba9b5f719e"
        },
        "item": {
          "id": "96eba16a-3e38-4fab-ac4e-323e8f66d3c4",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "edda64c2-28db-409a-a029-5e8b850413ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1640d643-28d3-4ccd-a510-c7fc107fa95b",
        "cursor": {
          "ref": "729e6a38-e39e-4106-8508-2cbdd33c3b19",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "5df363d8-a4e8-4699-98c9-cc5b2ca44528"
        },
        "item": {
          "id": "1640d643-28d3-4ccd-a510-c7fc107fa95b",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "cdc07262-edf5-4bca-934d-fc4b0f2d02a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "345e2fc9-f0ba-4eb1-b410-faa476d250a4",
        "cursor": {
          "ref": "d9c75600-6d86-49b4-81e0-15d1baeb31f2",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "0e749cbd-bb0c-4876-936f-3ccf33ac5da4"
        },
        "item": {
          "id": "345e2fc9-f0ba-4eb1-b410-faa476d250a4",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "0952d01f-6641-47bd-a53a-8dfda537a7c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "107049c7-5804-4596-9cb8-9a753afbc191",
        "cursor": {
          "ref": "66aadaee-f351-44c5-a7a1-4f89786af27d",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "37497a2b-720a-4fe5-8ba9-d76c198f0c88"
        },
        "item": {
          "id": "107049c7-5804-4596-9cb8-9a753afbc191",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "b5bded78-89c4-440e-8b91-9da6bc77f8f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "995767b2-e81e-4a75-829d-44c3275129eb",
        "cursor": {
          "ref": "1af87e2a-9fd4-4a17-9d6a-0ba013a065d9",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "1511b80f-e89f-4557-9717-2b4de6e28b1b"
        },
        "item": {
          "id": "995767b2-e81e-4a75-829d-44c3275129eb",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "683c5449-8640-4a8a-a03f-99694c00c493",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a29bb03-f483-4031-82a7-e31ed9cc3daa",
        "cursor": {
          "ref": "4726e125-50f5-49dd-8f69-704b07164dcc",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "184eb25f-dbf1-40cc-af89-23bd0093b7e8"
        },
        "item": {
          "id": "4a29bb03-f483-4031-82a7-e31ed9cc3daa",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "d4d52b0b-c52d-4d18-abad-43029d4cba4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17a6f2fb-7c6d-4f4a-80e7-c3401cbe7a44",
        "cursor": {
          "ref": "93063ddb-e3b1-48cb-8b56-6d86775948b9",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "d500670f-b0b6-4763-8d11-3c0ffd0089ab"
        },
        "item": {
          "id": "17a6f2fb-7c6d-4f4a-80e7-c3401cbe7a44",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "bda7fe5f-bc94-41f5-a8e3-8dcbffe78a8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d05b61c-6ddb-4c57-8318-e0f5c050bc57",
        "cursor": {
          "ref": "876c18e1-4149-4256-898b-1dc7916ce10e",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "bed5e5a1-a90f-42ce-b6da-a418e384e8d8"
        },
        "item": {
          "id": "6d05b61c-6ddb-4c57-8318-e0f5c050bc57",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "e6b5b2a6-5fbd-4b3b-8841-a63d85c754db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82da96e1-35ae-4bd4-95de-5275c7281939",
        "cursor": {
          "ref": "0b26f4eb-03d1-4466-b495-3be77e0e7693",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "c0000184-421e-4fb0-9235-a32ed14ffb41"
        },
        "item": {
          "id": "82da96e1-35ae-4bd4-95de-5275c7281939",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "af3e80dc-6138-46c5-9039-8c9d13a2b14e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98f7bb63-b36e-4cf0-a0f7-33412eb3cc71",
        "cursor": {
          "ref": "2fd163b8-1d8e-416d-a20f-833f96b1983c",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "9d4aa104-a5be-470d-b138-bdc12c34238f"
        },
        "item": {
          "id": "98f7bb63-b36e-4cf0-a0f7-33412eb3cc71",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "0739927c-9d34-4e68-9f82-20efdab47add",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afe18947-212c-4f2a-900e-9cc5e041ee6b",
        "cursor": {
          "ref": "fe8f9576-f042-47d4-97ee-4f2c6bdac637",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "cca997dd-3a69-4e3d-9fad-3943c2732526"
        },
        "item": {
          "id": "afe18947-212c-4f2a-900e-9cc5e041ee6b",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "baa2f30a-b752-4cea-8fa7-4208ba12e86f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f7f9848-206f-4ae3-a756-0669d284620e",
        "cursor": {
          "ref": "29dcc3a1-cd33-4afc-94de-4ede874ad674",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "654d2882-9e0d-4485-8aa8-a58f88e9f16b"
        },
        "item": {
          "id": "6f7f9848-206f-4ae3-a756-0669d284620e",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "79045e79-80d3-4ecc-aa49-d56760998d77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7c3d6f5-1f22-4c62-ba00-9aa1c001d6ba",
        "cursor": {
          "ref": "e2ca72ac-a5c2-49c3-bc77-206ed8b2be5a",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "79054efb-6a8a-479f-bb92-6ec51c0ce1e7"
        },
        "item": {
          "id": "a7c3d6f5-1f22-4c62-ba00-9aa1c001d6ba",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "b81ce3a6-98f9-42fc-8582-f79f915b33be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b907f352-27b4-47e3-a951-33933965ca45",
        "cursor": {
          "ref": "74476913-6288-4d6c-a1a7-959e2c56a563",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "14789997-f1c1-4f86-abc0-b355e1eae859"
        },
        "item": {
          "id": "b907f352-27b4-47e3-a951-33933965ca45",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "47a49549-ae00-4e03-a32e-bf30453b6b62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52d64573-89fe-4074-81a4-bd40f9998dcb",
        "cursor": {
          "ref": "3c238bc7-13e5-4dc9-8244-9695581d75e9",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "62ae977a-d02d-4325-976e-1997cdacb029"
        },
        "item": {
          "id": "52d64573-89fe-4074-81a4-bd40f9998dcb",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "db764e8d-7691-4afe-881e-e687218ac787",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f3c463a-5b57-42f4-b3a4-2e45c88fe0b6",
        "cursor": {
          "ref": "3474573d-4b52-4546-a8bc-9f63c70f7bb9",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "eb68dd58-bb51-45c2-a129-22488d38c4e7"
        },
        "item": {
          "id": "6f3c463a-5b57-42f4-b3a4-2e45c88fe0b6",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "a8eef1a4-0ab1-47a8-b80b-2a20c1b4720d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffd437ba-1667-450d-9eb1-19f2d51de288",
        "cursor": {
          "ref": "2350397e-fa42-4721-95d1-c6a36abef6ac",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "c16ab89f-9276-4e9d-85ba-c905bf4b47be"
        },
        "item": {
          "id": "ffd437ba-1667-450d-9eb1-19f2d51de288",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "e44a2bad-b598-48bf-8648-4af577cbf2af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ec14d23-e686-4501-a16e-e3b03fe44861",
        "cursor": {
          "ref": "3cdbce53-2f0b-41c3-bfa9-2c448d2f9bc1",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "67d40642-1532-4989-a2c9-393223ff409c"
        },
        "item": {
          "id": "7ec14d23-e686-4501-a16e-e3b03fe44861",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "11f3836a-d6f7-4282-b1af-5c7e289549c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa174137-7a45-48e7-8b14-4983d5fdb5ae",
        "cursor": {
          "ref": "e69fb750-f7f1-4823-aa95-51ee6bdd4a99",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "361596ab-cce2-449b-945e-239d06d08b7a"
        },
        "item": {
          "id": "aa174137-7a45-48e7-8b14-4983d5fdb5ae",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "b4a7c1a6-f10b-4c31-8842-5d435ce5d3c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3293bb78-11ce-4d89-a1a6-3978da00f70e",
        "cursor": {
          "ref": "ad2b5c9c-99be-445b-9e15-a2c486d08c13",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "4ae9b21e-2205-4b40-9ed8-9fc53b3df912"
        },
        "item": {
          "id": "3293bb78-11ce-4d89-a1a6-3978da00f70e",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "55caca98-4d86-4861-9bf7-590dbdf94bf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08b32e01-b9dd-4574-8f71-a5ef6fcd21a5",
        "cursor": {
          "ref": "66019861-68f9-47a4-9851-37dc0be69220",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "ca76b068-9953-4c9b-8b89-9fc6bcbee0ed"
        },
        "item": {
          "id": "08b32e01-b9dd-4574-8f71-a5ef6fcd21a5",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "93542530-0494-4b3a-8086-c030c12c3329",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "206925ad-6098-4f21-96c0-49db523b5b72",
        "cursor": {
          "ref": "2c02fc98-5a5d-431a-af48-6c111f74d120",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "0a87dceb-4c19-44b6-912d-28799797069c"
        },
        "item": {
          "id": "206925ad-6098-4f21-96c0-49db523b5b72",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "385fa306-890e-46b4-b8d2-5b149dcde928",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db558381-ddc4-4721-92d9-089708d93a57",
        "cursor": {
          "ref": "048ae5a5-f748-4d58-a0c8-670bcbc19854",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "e74e4fd3-5106-4ca4-b73a-2a770fbd04d0"
        },
        "item": {
          "id": "db558381-ddc4-4721-92d9-089708d93a57",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "11f86fe5-8fe5-460a-abf4-7f52f919f721",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "478f8d00-9f87-4d61-aee0-21d6fccae2e8",
        "cursor": {
          "ref": "0cbfccb2-586a-4271-8b2a-77ef86f2adeb",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "5f8894af-a05e-4109-a13e-3fea826f39ed"
        },
        "item": {
          "id": "478f8d00-9f87-4d61-aee0-21d6fccae2e8",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "b7100003-3622-4f67-a0e5-8643a6c60ba8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec777a09-0c44-40ed-a000-bd6b51fbb782",
        "cursor": {
          "ref": "7b892283-3f37-4848-8373-cc7219668e28",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "cdb1f187-6fee-48a8-8ae5-dd8f323013a0"
        },
        "item": {
          "id": "ec777a09-0c44-40ed-a000-bd6b51fbb782",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "d5ec419b-e24f-44cb-a017-1ad22db413ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd4af6f7-9bd7-4b29-b655-1b845e90a494",
        "cursor": {
          "ref": "fdacdd63-dd33-4e6e-b291-7ded693f8a1f",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "8b2d523d-7dbd-4111-b9e7-a434f0f4f3b0"
        },
        "item": {
          "id": "cd4af6f7-9bd7-4b29-b655-1b845e90a494",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "409e80ba-f8e9-43ba-a29e-c95425be66dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a0f879b-b090-4f63-8ba3-969bd5036138",
        "cursor": {
          "ref": "578b0d9a-304f-405c-9a25-f68c378cec0e",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "642759fd-78c8-4d7e-b86d-a072c0f0e9c3"
        },
        "item": {
          "id": "1a0f879b-b090-4f63-8ba3-969bd5036138",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "74d16967-65c1-49c8-85ab-3a933ff09add",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9a42f72-19af-4592-bf47-470b7a715c83",
        "cursor": {
          "ref": "c1ab68bf-4816-435a-96ca-564179ffa6cc",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "54cf9c61-996f-4f4e-b1f3-db5822ee43cd"
        },
        "item": {
          "id": "e9a42f72-19af-4592-bf47-470b7a715c83",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "2bd8f62d-bf15-4180-a228-6692c0397281",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db15cbdb-1749-4bab-a924-aadf8788b35a",
        "cursor": {
          "ref": "9993ea6b-b7ce-4e32-8a38-05703bff814a",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "d070edb3-e2e2-4fa0-adf0-27a9f72c14d5"
        },
        "item": {
          "id": "db15cbdb-1749-4bab-a924-aadf8788b35a",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "008a1f78-d86b-4a7e-a769-103e41a0042c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6706fbe3-9462-4290-b2ae-82fe3b5bc476",
        "cursor": {
          "ref": "b6e43881-0e67-458f-ab3d-9642b3587565",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "31f8d0f7-acd3-46d3-a1fe-807f1ed3ae72"
        },
        "item": {
          "id": "6706fbe3-9462-4290-b2ae-82fe3b5bc476",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "229cfc11-59f3-4c79-9dcc-8dba8f8a861c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4f8637c-36b2-489c-bc0f-74bde8472534",
        "cursor": {
          "ref": "f9e83c5f-374d-4195-af1a-832f8a4b71ce",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "26730da5-c958-477b-8b8e-4cc508f77429"
        },
        "item": {
          "id": "d4f8637c-36b2-489c-bc0f-74bde8472534",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "4a57eb24-3c3e-4c37-bb7c-bbc6ef3fb534",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da04eb57-4b56-4236-b1df-3e28fd49392c",
        "cursor": {
          "ref": "c07ec739-592f-4286-9f33-49beefd746ac",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "4ad2af9e-0be7-44b7-9c80-bc44ab279d7e"
        },
        "item": {
          "id": "da04eb57-4b56-4236-b1df-3e28fd49392c",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "33b218fd-2355-4a78-b85e-923d476d4835",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46178097-6759-44f9-9363-ca61e85e78ad",
        "cursor": {
          "ref": "2b5ac2a9-2fc8-4bd0-b6cf-a8dc0ec26b12",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "4520d137-56ea-4a26-b335-2dcbc2a978b8"
        },
        "item": {
          "id": "46178097-6759-44f9-9363-ca61e85e78ad",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "24cebfb1-46b2-4be9-9035-a422bc494268",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b20a4d2-1fed-46bc-97bf-8f4975fdd013",
        "cursor": {
          "ref": "cfc2932a-d50d-4f53-9325-dfd8eefbe3f1",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "562a1776-70b3-4241-a0b7-2ef7f035e9f9"
        },
        "item": {
          "id": "1b20a4d2-1fed-46bc-97bf-8f4975fdd013",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "720e1743-f3e1-46f7-8a43-cc19afa354ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2badfffa-d59f-4d1f-ab5a-3dc5176e9c1c",
        "cursor": {
          "ref": "3d6c5f5d-d1fd-43ae-af73-1bf45b0736f1",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "b6310841-1c8e-4f8b-976e-d024274e1af3"
        },
        "item": {
          "id": "2badfffa-d59f-4d1f-ab5a-3dc5176e9c1c",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "d6f5230f-f591-4979-8924-4aa9c1b367fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9961be5-4f7f-4aa7-9416-097599eaea26",
        "cursor": {
          "ref": "d2fb5af0-c2c3-40eb-ab1c-e06dbb407773",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "a6d7dada-8ceb-4ff7-a65a-32e1c6a580fe"
        },
        "item": {
          "id": "a9961be5-4f7f-4aa7-9416-097599eaea26",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "2a436996-eb13-490f-9d0e-9b5ee15bd266",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45815db1-41b9-43e5-af7f-dbc2ea095398",
        "cursor": {
          "ref": "92a1cbad-368c-437a-b67e-41767b56ca98",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "32e6fc78-ef3b-433f-b8d2-0cc7aafb7142"
        },
        "item": {
          "id": "45815db1-41b9-43e5-af7f-dbc2ea095398",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "8c40917f-704c-4f24-a478-9636b14fa3b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7542e11-9d90-40d3-a830-46027508fc56",
        "cursor": {
          "ref": "44a05338-b438-46a5-80fa-264e8feec293",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "7d1280ee-d4bf-4470-8994-05499e7983df"
        },
        "item": {
          "id": "e7542e11-9d90-40d3-a830-46027508fc56",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "14ccf435-09f6-4936-9f6b-319129e9e48d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7692f818-61bc-436f-b35e-c77974345e60",
        "cursor": {
          "ref": "0bfb2341-1b45-44e7-a6f8-b6c01c817202",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "55b93eb9-869f-44a0-bf0c-929639300bc4"
        },
        "item": {
          "id": "7692f818-61bc-436f-b35e-c77974345e60",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "36770d8a-2d74-4d6a-ada0-8a3320ea808d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df53aeda-1de3-454e-ab90-7f7ec868b042",
        "cursor": {
          "ref": "bd09d701-306b-4215-9a18-50209c5d8e15",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "2e4b59dd-3ece-4e8d-80fa-8434ff4b8d35"
        },
        "item": {
          "id": "df53aeda-1de3-454e-ab90-7f7ec868b042",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "32c0998c-e81c-4912-ae94-bbb86b5bbc76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "291147b2-9d32-4f00-b443-ccbea6b41ace",
        "cursor": {
          "ref": "d735866a-d126-4ca4-ac18-4c7f8b0f5fcd",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "814c412f-f01a-4d3f-8985-e443188cfee8"
        },
        "item": {
          "id": "291147b2-9d32-4f00-b443-ccbea6b41ace",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "0ffdab81-ff2e-4bea-9db1-c62d48be862c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b10f7747-5d43-4ed0-9acb-4447dbd754b5",
        "cursor": {
          "ref": "37f4e966-bf25-4afd-ab94-6fdb10161948",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "2e7dbda9-9951-4032-84a2-9afdd164d2f7"
        },
        "item": {
          "id": "b10f7747-5d43-4ed0-9acb-4447dbd754b5",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "baf5a29a-4926-49da-82d3-158bbf368665",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84d449e8-d018-4c60-b8ae-bb204879d7f8",
        "cursor": {
          "ref": "314f2b2d-15e0-4b17-99a5-528d934c9209",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "07eb4c00-2438-4aec-a269-d7e7d2822c2a"
        },
        "item": {
          "id": "84d449e8-d018-4c60-b8ae-bb204879d7f8",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "d32c09ee-5b3e-448b-86da-e4754a6d7503",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eeb0f8e3-ffb2-411c-a6b8-6a065e84c971",
        "cursor": {
          "ref": "ee9dca2c-4a31-4559-9c92-54cd6cbf77b0",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "d6cbef5c-3fd8-4975-8c05-0148f856d447"
        },
        "item": {
          "id": "eeb0f8e3-ffb2-411c-a6b8-6a065e84c971",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "77caaf13-9ded-4365-b983-85fb17222ecf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3378b001-81ac-4878-86f6-1d60ed71b45a",
        "cursor": {
          "ref": "b6b63bdc-998e-4f55-8c54-687015c2be06",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "2c248929-0317-499c-a7cf-8752ac7946d7"
        },
        "item": {
          "id": "3378b001-81ac-4878-86f6-1d60ed71b45a",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "50572a42-16ab-40e8-bbcb-598a2bcb4f45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa041d89-9206-411c-96b1-08dad7efd9ba",
        "cursor": {
          "ref": "82eb845c-e6a2-42e3-8ddc-648088321130",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "fb410adb-0b16-4a93-95d0-476987293661"
        },
        "item": {
          "id": "aa041d89-9206-411c-96b1-08dad7efd9ba",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "c470e9df-5d90-4c3c-aa7a-35c1a2c5a65f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6383923-0503-426e-9bd8-23dfb2a47f64",
        "cursor": {
          "ref": "77fe1a57-5d15-4039-bb00-fb5cf346b0c4",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "bbf170aa-1cdd-4615-b99a-2003f63da99a"
        },
        "item": {
          "id": "b6383923-0503-426e-9bd8-23dfb2a47f64",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "ade168f3-db2c-4941-9fae-3175b5b0040b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0b6e44a-9790-4183-b076-1420f5f4a39b",
        "cursor": {
          "ref": "d3e93a5b-427f-4acf-b50c-bde0bc8848bb",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "7a9dc80d-5fe8-4983-93ad-29da6e4df2b2"
        },
        "item": {
          "id": "a0b6e44a-9790-4183-b076-1420f5f4a39b",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "e3771d28-5759-417e-9f17-095bb3b881a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23b08777-639c-4e14-a3d9-b962e2a34e14",
        "cursor": {
          "ref": "ff6546d0-6359-47b4-ba7c-a05d589a11ad",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "e610c184-446e-4b12-ad7e-da5f0f1772bc"
        },
        "item": {
          "id": "23b08777-639c-4e14-a3d9-b962e2a34e14",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "ed7e7f0d-2c1b-4058-ad0f-2ddb9ebec639",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "585ee6c5-a021-49e1-8b99-7db3403ff3ae",
        "cursor": {
          "ref": "d285fc39-6659-45b2-b25e-f73901d8282a",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "9c3888de-7548-475d-ae19-486bf5041cfe"
        },
        "item": {
          "id": "585ee6c5-a021-49e1-8b99-7db3403ff3ae",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "8f8b9a0a-e3a7-4272-b92d-4b3f2f25fce2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea94b0b5-c002-4f88-ae2d-e0976feee9e7",
        "cursor": {
          "ref": "3512f746-75b4-45ab-8312-9adc81f53060",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "38040b73-3092-45d8-8250-b334f98526e8"
        },
        "item": {
          "id": "ea94b0b5-c002-4f88-ae2d-e0976feee9e7",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "5c91ef58-c908-4c06-9697-e87da3aa63f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a96eb47c-a8a9-48c6-ab32-8ae265024643",
        "cursor": {
          "ref": "efc1058c-0ab8-4b86-be9d-fafb894517fc",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "16eea4cf-f423-4a05-ab2a-ca7b50023e04"
        },
        "item": {
          "id": "a96eb47c-a8a9-48c6-ab32-8ae265024643",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "c90d7920-ac10-48c3-a819-44ecba4e2cbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ab3dce6-d7e7-498b-928f-68a45ca79659",
        "cursor": {
          "ref": "291d64ed-d2df-431d-a255-0c45d668d890",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "8a2b3e37-8950-4cde-981b-fb815b242494"
        },
        "item": {
          "id": "5ab3dce6-d7e7-498b-928f-68a45ca79659",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "26bd8d7d-0317-4f49-a727-6cbf717efb0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42f27687-76cc-4476-a0e9-28efe470c814",
        "cursor": {
          "ref": "50e1334a-fbfe-4195-bfd8-b32c8492fcfb",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "d2922cea-9765-4dfc-a868-9e9a3bd90cd2"
        },
        "item": {
          "id": "42f27687-76cc-4476-a0e9-28efe470c814",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "73095291-7907-4f63-a38a-886f702c0df9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a961f65d-d4dd-49db-97b1-d8deeba59d69",
        "cursor": {
          "ref": "831828f2-3e3c-4294-9c71-f3b0fde4398e",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "dfec8a0e-075d-48ec-8624-8f20bc448def"
        },
        "item": {
          "id": "a961f65d-d4dd-49db-97b1-d8deeba59d69",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "eb825a65-67d3-4a7f-a36c-1491040953a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "647307dc-64e0-4bcd-8b8d-b1d5c5430071",
        "cursor": {
          "ref": "a8eefc5c-4e42-40e0-bd26-8680c2f20332",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "6da0a3bb-41e3-479d-bd71-5692aaac2351"
        },
        "item": {
          "id": "647307dc-64e0-4bcd-8b8d-b1d5c5430071",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "00f15e90-0af9-489b-946a-13d7509959cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "627996b3-3aac-43bf-8dfd-8a87a3f6e734",
        "cursor": {
          "ref": "4e7883e5-add8-4fe1-a0fd-b8842bd85d03",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "5ad6d872-41ea-4b0d-bc96-d8599c571e70"
        },
        "item": {
          "id": "627996b3-3aac-43bf-8dfd-8a87a3f6e734",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "e0c5ef5f-fb83-483c-b85d-1b464d812355",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83fe54ac-007b-4dfd-88ef-9ecd47c04b32",
        "cursor": {
          "ref": "dd0ab4a6-35da-4d5b-a5eb-9032acf3f26d",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "9187b08c-9493-4613-b428-309a9a5cd4a4"
        },
        "item": {
          "id": "83fe54ac-007b-4dfd-88ef-9ecd47c04b32",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "ad3ac152-9504-4a0e-adbb-aea146dc810a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6621ec9-c97d-4278-b4a3-0fac58cb9941",
        "cursor": {
          "ref": "520b70f6-1fb2-4153-b26a-30b5b51ec91f",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "c4afed4e-ebcf-43c9-8d1a-cf536caa8c3a"
        },
        "item": {
          "id": "b6621ec9-c97d-4278-b4a3-0fac58cb9941",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "a751bc3a-cf31-4d86-98ee-52fb5d4a9691",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a7e6bc7-e563-4f7b-a212-c3a038292c40",
        "cursor": {
          "ref": "f600d047-e989-45c7-9d17-d7acd93c99f2",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "399e36c5-dc85-44ca-9b82-71ee7aa461a1"
        },
        "item": {
          "id": "6a7e6bc7-e563-4f7b-a212-c3a038292c40",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "ff2dddb0-44fe-49ac-940d-8e0af7cf7a56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a5fda96-c2ca-42fb-8bfa-9dfe871355c7",
        "cursor": {
          "ref": "1cae6df2-0498-41cd-8ac9-912d2801662d",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "a10814b9-1e70-49b5-90e4-c34514f3db5d"
        },
        "item": {
          "id": "8a5fda96-c2ca-42fb-8bfa-9dfe871355c7",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "506cde43-350e-49b8-9407-2780cac7baf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "add07512-c4e8-4b9f-85b1-576ca0362e64",
        "cursor": {
          "ref": "a87b23fd-7027-4d29-9858-4c7fa60941d0",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "b07e57e2-eb18-4407-81ba-cc832e74c8f5"
        },
        "item": {
          "id": "add07512-c4e8-4b9f-85b1-576ca0362e64",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "e06363b4-c4e6-4bc5-b2a9-446ecbd589eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8b4e5dc-1983-4234-8041-83732a7ac2f6",
        "cursor": {
          "ref": "31cbc334-295e-4752-9d26-7dc6127ac978",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "bbd39646-a94e-49ab-9ab1-7f60cf521bd3"
        },
        "item": {
          "id": "f8b4e5dc-1983-4234-8041-83732a7ac2f6",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "52e66516-dd6f-4e84-bac3-6f730bf797f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05df72ff-a65a-400a-8caf-943e7094e21b",
        "cursor": {
          "ref": "6429dc3b-da30-4c46-9063-f90a4a313146",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "e4d203f0-a1ce-4dcd-a921-6d8e2a096800"
        },
        "item": {
          "id": "05df72ff-a65a-400a-8caf-943e7094e21b",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "74136904-9a56-438b-ac79-288e87ea8943",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac89a82c-1b5c-4a7e-81e2-da6dc844481a",
        "cursor": {
          "ref": "e92c8ef2-61a3-4d79-8afa-f6afadb11876",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "9b114065-b85b-4358-8f9e-20f7cc8af95f"
        },
        "item": {
          "id": "ac89a82c-1b5c-4a7e-81e2-da6dc844481a",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "077e976d-77ed-426f-be31-d3b7d080c7e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50bbb65c-ebf7-449b-9ecf-3944768803ab",
        "cursor": {
          "ref": "40ea807c-0095-4843-bcbe-f0f4399c37e1",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "306c112a-d2b3-4009-b2c2-aec2428ebc74"
        },
        "item": {
          "id": "50bbb65c-ebf7-449b-9ecf-3944768803ab",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "0ae02249-b80d-4fde-a414-3514d013629c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25b4d2f1-571c-485d-ae42-890024abcb43",
        "cursor": {
          "ref": "1bd1172d-566b-4b2c-a3e7-a0360a725461",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "ebba191a-8574-42ac-a27c-889f9bcd3fe5"
        },
        "item": {
          "id": "25b4d2f1-571c-485d-ae42-890024abcb43",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "b76654ab-4c8a-4443-9fc5-7e3386a5a7dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23d65d7f-8784-4fdf-879a-62be68f2b55f",
        "cursor": {
          "ref": "9c7d0f17-7cc1-443a-926d-fe3bb68c449a",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "c2b950c2-12c0-44a5-b659-7dc858743eee"
        },
        "item": {
          "id": "23d65d7f-8784-4fdf-879a-62be68f2b55f",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "cd1cf0d9-7f70-486a-a248-95870f251bdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "066741d6-cf8c-465f-ba94-456ec68ecfa2",
        "cursor": {
          "ref": "d17c3707-9d65-4cf5-bb4f-6d53db79be57",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "b2d0b5fa-df33-4b7d-9427-b3357e403b96"
        },
        "item": {
          "id": "066741d6-cf8c-465f-ba94-456ec68ecfa2",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "b4416dee-3538-4e16-a7ef-c511a7030ebc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26398e99-4fb8-43dc-9a49-70802794b161",
        "cursor": {
          "ref": "1b309aa9-6ec7-4be4-a38a-48704c2461e9",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "b32b5edd-00ea-480b-ab70-a133d96f752b"
        },
        "item": {
          "id": "26398e99-4fb8-43dc-9a49-70802794b161",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "74a8d6e1-e118-4406-8905-de29ffa14efb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfa00d04-3c78-4ea9-9354-dda54746723f",
        "cursor": {
          "ref": "1ca2661f-aa6e-49f6-b532-66e8f70d5f35",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "1c3eeab0-385b-4e37-a2ba-20ab6df4005f"
        },
        "item": {
          "id": "dfa00d04-3c78-4ea9-9354-dda54746723f",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "7d004d61-ebb4-4fd5-9daf-d555d45def66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8af8b98b-3ee0-431a-8843-b7bbfd5d7b3c",
        "cursor": {
          "ref": "d3a631f6-8ed7-483c-9d3b-11abb186391a",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "3379f541-e94f-4e86-8d8b-d78d0d261804"
        },
        "item": {
          "id": "8af8b98b-3ee0-431a-8843-b7bbfd5d7b3c",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "225d2db9-fb3d-4bdb-b78f-7948e9b84da9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "953e03ad-8245-48b4-94a5-e8e1e78bf759",
        "cursor": {
          "ref": "46e92a06-574d-4734-b2f5-d739085974f8",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "4c5c6fa1-f2e8-4a6f-8951-3723106b0414"
        },
        "item": {
          "id": "953e03ad-8245-48b4-94a5-e8e1e78bf759",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "8ca28e70-26ee-4789-a704-7235e8fcf608",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a629534-d0bd-41ce-a58d-2e1c6ed03591",
        "cursor": {
          "ref": "c84d9373-07aa-466e-8b1e-86fe5f1b0e21",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "0373c045-8f95-4542-8484-0711d904ed60"
        },
        "item": {
          "id": "0a629534-d0bd-41ce-a58d-2e1c6ed03591",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "dd304bfe-ec0a-4de6-9a0c-84e13e4e1220",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42ebc325-679b-492e-bd95-e3eeed216c88",
        "cursor": {
          "ref": "13aec2b9-f834-4482-aa50-ceabdfd1f75a",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "d9a70a56-727f-4423-97c1-a3523df13090"
        },
        "item": {
          "id": "42ebc325-679b-492e-bd95-e3eeed216c88",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "7bfe2cad-9abc-47e4-8231-0799131c610e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b9ae684-0597-4c7c-9e61-458e33c88268",
        "cursor": {
          "ref": "230d8c7d-2330-4cbd-b82e-21081e1f95bb",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "af61cf0c-08dc-44b4-8d76-ed9fa1320f99"
        },
        "item": {
          "id": "2b9ae684-0597-4c7c-9e61-458e33c88268",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "6fad76cf-ecf3-45e6-9ca4-c581651adb78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cde94606-dd76-48b6-8be0-6a0f5db09c75",
        "cursor": {
          "ref": "4e4aa23e-6efa-4027-86be-0205066875cd",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "e0f05cae-7f76-49b1-a560-860ad5050405"
        },
        "item": {
          "id": "cde94606-dd76-48b6-8be0-6a0f5db09c75",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "28930358-772a-48dd-b4ba-f373bc0b8285",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e1562d3-ca98-4f30-a6c8-e788bc472e3e",
        "cursor": {
          "ref": "5e0fe671-f894-47f0-95ef-24812d1aea08",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "a5637ce7-78f6-474d-91ff-47d82db1613e"
        },
        "item": {
          "id": "2e1562d3-ca98-4f30-a6c8-e788bc472e3e",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "f00443f0-f247-4e99-9560-38b6079d1d53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2513787d-786d-4fd9-8a30-b23790159f28",
        "cursor": {
          "ref": "e2735da3-6530-4590-8f84-1323149b2e1c",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "f9014efb-10ab-48b6-859d-6d2295aeccab"
        },
        "item": {
          "id": "2513787d-786d-4fd9-8a30-b23790159f28",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "7da623fb-1eb9-4b6b-bad2-b1e5eab9a7bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:244)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2cdb5e4-0a69-41ad-9d51-f61db69d0f79",
        "cursor": {
          "ref": "cd8e0f93-333e-4add-a643-6efd721a232d",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "3177cd7f-90a1-4c02-a0b0-bba6cac5eabd"
        },
        "item": {
          "id": "a2cdb5e4-0a69-41ad-9d51-f61db69d0f79",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "a4e403c6-612f-4117-9ca2-eb8c33b5b3fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:245)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:245)"
            }
          },
          {
            "assertion": "response verified is false",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is false",
              "message": "expected undefined to be false",
              "stack": "AssertionError: expected undefined to be false\n   at Object.eval sandbox-script.js:3:245)"
            }
          }
        ]
      },
      {
        "id": "f38893ab-1c64-4a7c-be81-5d44dbb200ed",
        "cursor": {
          "ref": "a88e3fa3-4528-450e-ba84-ccf9a46cc18b",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "851c9fb5-46e0-4f38-ab14-f30748ecece0"
        },
        "item": {
          "id": "f38893ab-1c64-4a7c-be81-5d44dbb200ed",
          "name": "credentials_verify"
        },
        "response": {
          "id": "a46382e1-0da7-4716-8441-be4c18842303",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:246)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:246)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:246)"
            }
          }
        ]
      },
      {
        "id": "7294e99a-c2ac-4bff-914e-8d83a40fd6ed",
        "cursor": {
          "ref": "da91bece-7c51-42ce-b029-e7a8236ce1e0",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "52f9efea-4b0f-4153-9ac6-3cbe1db6152a"
        },
        "item": {
          "id": "7294e99a-c2ac-4bff-914e-8d83a40fd6ed",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "0f5bcac8-fd8b-4da2-85a7-ed1e8ee57034",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:247)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:247)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:247)"
            }
          }
        ]
      },
      {
        "id": "a3e0ed52-a13a-4663-820d-a72fee00f5df",
        "cursor": {
          "ref": "c2a40062-5599-46f4-86de-3497fd3d9b0a",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "df3c2383-b103-43a0-b7fe-cb43d59adf0b"
        },
        "item": {
          "id": "a3e0ed52-a13a-4663-820d-a72fee00f5df",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b750707f-71c4-48e3-a247-4410be9d09b4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 72,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3e0ed52-a13a-4663-820d-a72fee00f5df",
        "cursor": {
          "ref": "c2a40062-5599-46f4-86de-3497fd3d9b0a",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "df3c2383-b103-43a0-b7fe-cb43d59adf0b"
        },
        "item": {
          "id": "a3e0ed52-a13a-4663-820d-a72fee00f5df",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b750707f-71c4-48e3-a247-4410be9d09b4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 72,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef00bc79-1f0b-431a-b851-5ad2eb986ba5",
        "cursor": {
          "ref": "cc185c8b-b920-4acb-860d-86888db61b86",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "1ec6301a-9692-4390-b6a9-d1f5ab37e60a"
        },
        "item": {
          "id": "ef00bc79-1f0b-431a-b851-5ad2eb986ba5",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "d41c03f5-2663-42de-a2b0-35d4a9479c0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:249)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d225b494-495f-49ba-8d0b-2dfd65ab9d36",
        "cursor": {
          "ref": "bcc92be8-117d-4103-94b5-21fd517fcd99",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "30b0f659-1e06-4ea8-a67f-04edfbfa86a8"
        },
        "item": {
          "id": "d225b494-495f-49ba-8d0b-2dfd65ab9d36",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "ae5333ea-a87a-4727-8486-134e36356cba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:250)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}