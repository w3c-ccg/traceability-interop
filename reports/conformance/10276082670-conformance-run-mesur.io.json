{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "80408f7c-6b1e-4839-9aa2-2b70453a87cc",
        "name": "Clear Cache",
        "item": [
          {
            "id": "9a8f7548-8eaf-4996-94e2-4c424037abbd",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3a21572d-ee43-4c43-a32a-5b583991f7dc",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "51f219a0-4653-42ae-aa8c-8ed0a9f15f4c"
                }
              }
            ]
          },
          {
            "id": "c630f2ab-9e31-43d1-849b-2b16c919a23a",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a311f5b5-f196-4dd3-a2bd-bef93d95d70f",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "a5292e13-a0ef-4169-a063-44fbc3f603c9"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "fe544230-d489-4011-a540-faf357d300ce",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "f1159fd9-f422-4504-a30f-80e74fccd369",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c18acdd0-8c67-454d-bbff-7983f58e4255",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b5a229f1-8f7c-4d8c-95cc-73300212f689",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "68b13612-6647-4000-a37e-ac2e55ebf5cc"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "05d5c322-a3fc-4f80-86d9-6bc0bedfbdcb",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ae5ad93c-ae85-4a8b-90c3-9f9a013f791b"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "822c93be-4bab-4096-9b89-351cc0c64b60",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4c7f3726-6a4f-4e74-bd6f-28c7772693fa"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1ba8d84a-8eb0-45c8-988e-c95cd9e83446",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "d3317634-158c-4938-a95e-d886398a03ef"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5e5401f7-4403-41dd-9bce-36d9b93f4b5c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a9c7ee2b-9590-45ec-b1d1-2057e88bba56"
            }
          }
        ]
      },
      {
        "id": "a7978de4-a91b-4937-8f73-dcc08eea8ae9",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "7164fef6-4c2c-43f7-9a60-56cb8db81375",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ae9d234f-d76a-43b8-b65c-0d161b1f79ba",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "99f5939c-0066-41c0-9a83-7c0dbf3e0a85",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c093c8de-8dc0-43a0-a444-03c40a408cc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ec8440b8-0548-400f-bff0-61d47e48360c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9ed3bbb-c850-4b05-a965-1fb587c4f255",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b56692f-dab8-4ca3-8bf7-430d8162e7ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "05c86934-6a7f-4d37-96af-d8675395eccc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61538c23-897b-4fc8-874b-1dc2d6f348a1",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc4fd63a-33dd-4022-babf-5e7292db5018",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "62ddd7a9-cf1d-4184-8a03-d24782215706"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ea5eac95-6140-4ac7-bab6-54a07e9ccac7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b2200cdd-9801-4451-88f4-7f2fbf67fff3",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e74bb3a-9d0a-4a83-ba87-0d3b4b365a3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "04c40cb2-d7c0-4c4b-8c71-ebaebe54738b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69706407-2cdc-44b6-b546-1967d5ece00c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e4072fc-733d-4872-98ee-47439d744c63"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "2bbf9490-6b09-49cf-8a01-0f9129ddd4ee",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2442e8fc-9856-42e4-89d8-9c69677a790e",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "04d3d9a0-92c8-48ea-8c82-252dd3c02437",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "9b3b7394-1fb8-4aae-96ca-50c1077826d8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6b5d9598-9b10-493c-a9b4-43f341ffda58",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "5e46b0a0-4df0-4104-832d-22142b5073e3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "241e9b76-528f-49f5-9220-db049dd90e10",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a008d2b8-fc29-4c3c-b927-51f6cfc04e5a"
            }
          }
        ]
      },
      {
        "id": "4c4dc0da-b14b-43a5-824c-e07075195832",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "db4f9314-ef16-4fad-890f-e0638b65e24f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3064c332-8e2f-4582-98ab-a45655be98b0",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "4d27b3cf-2c08-4ace-afb8-cb83e163b98c",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfa7f30c-3cc0-40e8-80a0-00613562f45e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c93ac005-2657-4cd2-9bf5-6ad59034adb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50c3f010-b230-49a1-9353-c62347e2356f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "39b2a086-261b-42c6-944c-733e7c50d5a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eac102db-969c-4964-b8e7-b5cc76043110",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a034a548-7aef-4fac-bac0-05aeaa75fd64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c21e89a4-2822-4205-a7c6-8b862aeac1de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9596e928-7cd4-483b-9330-f54ba3943a0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a7fdc465-4757-4b0f-af22-449855e30690"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83c278d0-92d3-4155-b190-0a9d54bbb060",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c14c91c6-28a3-47c3-ba65-7479a4da5268",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90ca8ed1-0b1a-445e-a19e-61513c59c8a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54f23c7d-0b5a-41a3-bb84-80b41347fa75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7b9bfa6b-2f72-42d1-bd25-a71c9abb5d66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ed9211a-ffeb-4fff-971d-27cbca499174",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d84ece85-1e53-4ade-a69b-74e44d924aa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "537be6ba-a4cd-4116-b910-572547c46ee1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9bde356-146e-45c4-8b54-9c85c32ddf71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9633a028-32b0-4db1-a05b-d27e5314e084"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ffb083e-3947-4db3-836e-d8540e5e199a",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2553c596-4497-458e-bb26-1703664bd337",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ed3ed4e-bf3f-49cc-b008-a797cce305d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb55b34d-fc9c-4a25-8cb2-2409b7e009d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2b6c43c4-99b3-4571-aed5-a497a2e568d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5d5b058-74f9-47e1-992c-b9ede0d2f54e",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75b73653-cf1e-4be4-b971-b7a390a64e59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5dd6b05d-32aa-4b51-b700-f44b17b4375e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c44b519-b155-4370-a990-97330d4db6fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9f2f10eb-7ba8-4ed9-aed7-5ec5a8cdd6c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb25a1f0-43da-45bf-b480-d1746d89369c",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09ddfacd-fec5-4f39-97c7-a347cd3ad2f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff17e440-88ac-46ce-9dba-ba5abec85213"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65c7d7ab-2551-45c2-8bcf-df4bd3e27d1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9753ea16-3cab-4e84-991d-c1713b60d7da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a19884ad-5e55-452a-a67c-028fbff436d6",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c136aeff-a9ed-4e8f-9b65-6a79f7598bee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4beb3c8e-86a7-47b4-aaa6-a1bbf04dacf0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3fe990c-a344-465c-9bb2-289257f2a701",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2f7009d1-95e0-4bc5-b0d4-6a39f7acfe50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5ea7a5a-150e-4c56-ad28-2c2affc46d4f",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bbef748-81d0-4a66-852c-64e2038df90b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a4f7499-5a81-47a2-93c4-611f57f5a4a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03c4dc63-18f5-47e1-a6d6-32e81f1579c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1c568eec-182c-4711-adc0-3c40faa617a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bee7a8b4-b88a-4054-a7b9-61ffc15ffd97",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd47252d-2bef-4598-bec1-35c52f6a77cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79462e63-b66c-4bd8-9c70-dc589cb33f03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e24868a-e123-43ef-bea5-f1a7413af88b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7296dd3a-c93a-4cb4-a614-ff30dafbf109"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efdd7299-5384-4d83-94c1-170f61655bee",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da62e6d8-53a4-498b-a984-a853cdf41a7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "633cf10d-de44-486c-9ab8-cc678a17ad1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "721c5c92-f415-483e-bb69-78d654a15c3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f88bbab7-9639-47e2-9fe1-7693fe0bbd33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb7dbb06-c485-4d38-83e8-0e90d1bf1b62",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ad3da6d-0927-404d-b505-67e695e21060",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "418a1650-286f-491a-8895-b3368ea7cbf1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbea94dd-3e07-464d-aa3d-fbbf1bafdfcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3a2043d8-ac35-4667-b405-7081554b5e0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f278cb44-dfff-4f2b-81ec-0e6c2aa15751",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59e9e7d2-a61b-492f-926a-376cc12e07cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8363a5c9-963b-44b6-9b41-644f1b1dbdcc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2db7e97-e3e5-4a22-aa6b-c00c9c67574c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fcc4eec5-7fb4-4d5f-9b1b-cedf4fdfbc82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31717fff-896a-4168-82dc-ec6d8017ffea",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68654295-cd8c-45c6-ab04-e550fa3d61f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99c89f3d-e419-42e5-82da-2d29cfb76e1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "751eddbd-011c-4bce-b141-a4d41440b4c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6041d9b0-495c-4f57-9761-bfbaa40e9458"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fa040f6-a294-4ff8-89ea-d4e89c124376",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa96cc65-f4e5-4187-b828-fa577b9bed72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58e0dc07-d485-4b1e-a017-c5d9528c344e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9573fc3e-6ec4-4f82-b0fa-1c0b4b5238bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0420c7d3-f679-4ca0-a2c7-ce3449da4d44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03a1fa6d-c4ec-43b6-83bb-c2243a930d72",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ebf69f9-2a00-4919-9e4d-292a815b0deb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72c1f81a-688b-4a2e-b2f6-d5efc59d3c64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9d17151-4e36-4ab0-a316-c0adc31555dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "427d4636-f86c-4aad-bc76-65f8bcb82533"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11f741ae-09d2-4fac-9805-8f7a95ddf3b3",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a43f369e-e530-4f75-9037-8850ec0edf60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94f47a19-596a-43df-b2a2-c77365882a53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edd4c286-6bf5-4cbb-91c2-882b4d77463c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "023b85c5-78fb-44d0-9274-3640ac9b04ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec2a776f-349d-40c3-9d30-de0098fe56a1",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dfcecac-449c-4f3b-8f50-d74663782228",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1d555c3-bba7-4501-a7a2-0e04ad99490f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "088c7fc3-a7b0-4bf5-af96-68cbdaab5ff2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "c1254d47-b27b-45df-bac0-467eba01d462"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d32e623-afc5-4f5c-a990-eb4febcf955d",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8401a2d-c852-44ea-b2c7-4c72c51c24f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb7dab83-9d25-46cd-a29b-32a38c6629f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7c795ab-7940-450b-8b9c-b4b20c4d7f49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "79eee4e3-6925-4ac1-a565-a62e21b04aff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3e6f9b6-a53c-4831-86d7-f629609ee5de",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a279104-eb7b-4410-9046-00769a6eed2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9cfe18a-861b-4a2f-b416-99b5d4a433fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7095db67-ce6d-4fbe-a74e-ea06136b1078",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b2631cf4-3e48-4ffe-850d-c77221c6c9ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bee2546-eacf-4626-9886-0e2e054fdc87",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12f624d0-2025-403d-9930-ac35fa481967",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14e7bae0-f69e-42a7-a2a5-8395dd85a24c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10564e87-f355-4b1e-a09c-00e77c5e879c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "04ee6a9f-3512-44b9-b7df-9509b14a1c96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5f9cc66-5c70-41b6-86a8-4d2c68f6a6d2",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11f62156-e044-40f6-8848-f809322acbe7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30955e16-6118-403f-a6c1-2e38ac8b68d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19c712e6-7e0a-4f10-b3a1-09a299c404d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9bc38c1b-a0d2-4cdf-a3c6-b0bf5837b00d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae55221e-7085-4c32-8b26-d42711194a93",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ab748e6-7182-455f-911f-aa2fdf4d0f06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5f66506-f848-448f-9fae-55b8db86b102"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a16ec85-2020-45dc-85b0-fc0dbcda8c04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9937785f-9ea6-4780-9a8c-9bdb2e964705"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0515e28-1169-4c38-afd9-27a720ae3b99",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9217fb51-3231-461e-acc2-790e85b62f9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96595f06-0369-4eee-9af0-e43f28a03a50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "957e97e2-2a92-44e5-bb14-dffdf42764f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb2e1dc2-0fe7-4a53-86a0-28e81c23274c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e466b7d-12dd-40ed-af7b-3ccb78081456",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d81fa18b-628e-41b1-a26a-34d72413cc75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef2346da-88fa-41e3-87ec-eecb6f7056c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d83eee70-72a3-4a06-a2bc-fcf52d87ad2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b11bd045-9e4a-4bb9-97bf-5b2de6e64291"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5decc1e6-8d62-4b1b-aada-e056cfb9b6d9",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f469b1dc-a0a7-4dc5-8073-fa3b4c3bba94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf3d3ea5-b1fa-42f3-b46d-499e0a8f178b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d260f1e-db9b-4f07-ad5c-77f59edc8795",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b8e58af-093a-494d-b3b8-235b3d047809"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b2f6b7e-472d-4f95-b7ee-f4580c3e383c",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ab540e2-a725-4576-9623-fc519a7f37ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4176966f-1295-4175-af0b-bd2059221ee0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e82143bf-5963-4b1e-a414-06cc20278812",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "adfe6cd8-5046-4725-839e-8ec11d1640db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13c1508f-c8b0-4000-9ba9-d2dae2a1f177",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afa84dfb-9bfb-4760-a807-61916741e7d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d44d9ac-a4ca-4bf1-b4bf-c8baf1d1c8ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9686b384-b65a-4cf5-8d69-f3a82cccc602",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d7ec692-8d96-4a90-8bfc-cceb7dd41bdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51eaa0c5-d943-49ce-84b6-9b51e99422e3",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4989ab1-353c-4f26-9c99-c7318d94b085",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "636d1103-fae3-4106-b14e-de38cf983240"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f956911-d30c-4700-b33b-0e3f4f3a08c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c38ad6f9-1d10-4549-85b0-6297a52917e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbebdcd0-00ef-409b-ab82-f60cef9563f7",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1f26654-aa1a-4d31-bcf0-cddb9c23ce4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5db7a7c-e40a-4394-9d4a-a5653484303f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e5d2643-2ec5-4384-967d-aa351425ef1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "823b3b08-f7b8-4d51-a03a-e1ec97d55bf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de099bba-ab9f-4842-b6f2-963091b9b993",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cba037a-0590-4c41-88cd-790b63eee200",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5df84857-a8ae-4489-8cf2-c35db0676c1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c76bb814-490a-4aff-a2ce-c5e3b478d438",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3102144b-2f30-4eb5-afba-d82134a53f45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7f886b3-c0cc-48f8-b0a3-93ea68b63606",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf9bb5cc-02c2-4f10-ae18-169b48419b14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecbc7b37-6c44-4ba1-adbc-adf61b18af21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33da28d9-94dc-4630-9f11-e216651ed9ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d9fe2977-0989-4769-8c9e-8d7bf1085af3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac441053-bde4-4398-9e91-5628a45a7367",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc8b6b68-812b-4830-b370-fc9311c2eb8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf8d7a83-ffc7-40ca-aa4e-4088450eb46a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3b8b039-1a68-46a2-85d2-05a030a05a59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6a66b43b-96ff-434d-8fd3-202d45640bad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8658805e-8b6f-41d5-8b2b-419be4d306cf",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5da51299-c16c-42c1-9fe8-e94197b6667a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f98559b9-fdb5-45f9-87df-54b12ebee624"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41dd68b5-5000-4720-afcf-d71b58967ebb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e9cee172-4d6e-455c-82b7-13536276aec3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e407f6d-f442-4198-924e-d17ef9f735fd",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaa05226-52aa-49b0-95b6-3b74ed6a9a9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "722ab450-6cf2-48d6-a369-4a39102805a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83a7e12f-3db1-453a-9173-1d827aa4b714",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "1da86edd-031c-4933-8d37-2694a8f810dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cac63d3a-6833-4e81-80d6-c71e19205ea7",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d50df6c9-b210-48b1-8e49-d45f10f2b628",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "abbbf1b2-75e7-4ecf-b329-9c0187fc7d7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2920fae1-e1fa-4fa3-950f-2299ee91cfbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d1a75022-7292-4d21-80b8-88bd34d8b25a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c546a938-a0a9-4c40-a537-234da02968e6",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edee007f-3f30-4925-aa78-4c5cf9587433",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31592fb5-c281-4927-bf9a-09a6177edaff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e23ee3d-c147-48c0-8065-c0843f5e1a28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e7790436-92f2-4db8-a51e-410f75548970"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b254424-9bb2-4726-bee4-e8718b7d4d64",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d73c909-217f-4edd-b176-938700cfd6e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c67c2e41-20da-4294-8089-2ffb8c4c9da0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48eea9a4-a709-400a-ae12-c49685c1a1e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "4bed6a2f-490e-4cad-8c29-b43038797e6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba42ff1c-8fd6-4c17-8b14-32dd6c561b6a",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ef1b8be-03d9-4316-8b54-745792024e26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6f93bfa-8a72-459b-ae4e-419b8e722d13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df7e04ec-7c51-48eb-bc39-a192909a6f79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "1438707a-18c1-4f4c-8032-465c94c6fc85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "010a71b0-fbfc-47b4-8c24-3b40c4c1c080",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89f4273b-33c5-49be-a06b-198612b88976",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d6d2e80-9977-4626-bd92-427cacd5f699"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac36ba85-b914-4c74-82f1-c4ed2116dd40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c9fc74d4-a801-4213-be27-33587baa6bc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daceed4d-4cee-4dde-b211-8e62141e853f",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7df1ba1d-8dfc-4129-ac4e-fd499f4915af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e178de05-ae96-4989-823a-2702223ca717"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b98c069a-40ab-49e9-8bd6-713ac5d11ed0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "226d435b-f8b8-4107-8ff6-1b55a5df4d99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6012196a-dcd8-4df6-a53d-d23c51baedd3",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f14f8d0-0db9-4503-b1f9-10543f1a04b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb745884-cc3f-42d4-9be0-bdf67d4b45dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b72102f0-bcad-41fa-92d0-22bdb0fa22a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "9915f4ff-63dd-4860-ba51-66ac62081adb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18c0a05d-8af7-4947-968b-a3b6dd720511",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41b2bc83-0a77-43ec-b2f1-da6f55a702d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "037c4145-2011-4632-afd9-4e6ba7c5787d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dbff050-8f4b-4f1d-a0b9-b692d3822f8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "941254a6-f2c6-4e46-bdd8-ed9ccd98ca59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fa989c7-0ad3-496f-95d2-4cd5b60f19b1",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bf99a9e-c420-4717-aee2-0c7afe6182fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31079d11-9d85-4653-87f5-97ab338b3970"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "388cb58f-bc54-4a1c-acbc-43aba96c04f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "361f9fa8-b052-4600-8544-8e03337ef1d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66b12ff4-b2d6-4ad0-ba4d-35191bf6dc9b",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "158d71ad-eff9-47e6-ba45-fb675da919cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78b91339-c3ee-401a-a421-72771044d551"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57f82e81-6978-40f4-a961-bef4e1e7716f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "15ae1777-7123-455b-b141-f4c81aace9a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efc0bacb-2c19-4fb5-868a-66b99d4e326c",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c17915d0-c148-473a-9733-3bc477bddedd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cc71653-7501-4046-ba92-f0177c937cef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5064fb2-609e-41b7-a11f-114972f04b41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2ac8df3f-6736-4864-bc60-b7d91d4d69bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57670c19-85db-4b2e-aac8-953be1bd131e",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93df2405-e1e6-47c4-b353-86ea400b44f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24a02bd1-b32e-4874-807d-e487b5a63d41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4db6a59-7bc8-4c7c-a429-fb75cd9a875e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f23c42ca-8713-4bd7-bece-e639a8a4087a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7a0eaaa-4975-4dd7-bf8e-8633d6a3bb50",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8633fe6-9b1f-44cf-9334-302708084849",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bb1c865-cb09-4a9c-a509-f1afc469dbc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ecb63c8-79f8-41d8-a070-5644425a281e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d26ec1e3-8244-4abf-9f89-205acda43dd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f12700c-8bb2-42c4-9e0c-66bf88d48354",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "318fb652-1187-4027-80cd-69a3e3dc2da4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76111150-72d8-4376-bf58-03a5c8d31263"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56044614-ccac-477e-bace-cff3801623d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d22c924a-ee12-417d-85ab-f16dc9716ec8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cba79ee-276e-4e08-8610-21ab30965c62",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5673624-f04e-44fd-84f2-0c2069efcf22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9932239-43fd-40c1-af38-5cd3b02792d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61041854-287e-435d-985a-b3e415c53190",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "99663d1e-c0da-4d1e-bc1f-e5728cb02088"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cad28e64-dcf0-4081-a01f-3713253587b6",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1f40998-2177-4d6b-a3ce-155063b92ac9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93fa3716-0d9f-4c3e-b6f4-3090e91affe0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f27b91cc-5eb2-4ad7-8484-607a2a5bb8fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "59c0b907-8f3f-4373-8d3f-75a593ebfd43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d760a104-7527-4000-9e8d-2fc18ba38f54",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6353536-8e42-41fd-bcfb-d2d35d162d58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32aa2820-dc52-41d0-9041-7899ebc279bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3741bb5-f8c6-4726-9b8a-4ee663906982",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d840a664-4db5-4a47-ac5f-6c8923dc70d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdb079e3-805d-423d-b052-e079d796823c",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6afb152-ce08-4235-ba88-ae5b68cf1c34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6bc7a41-23ad-4404-9db6-396a99fff7f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e26c8738-8f7d-4924-821b-84f23c9dd5ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7a9dacde-be65-49c9-bd05-9ea29c8c08b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b496d15-609b-4d45-95d6-2fa3bc2caceb",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fcf1b73-9668-460f-a886-38330d417b57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eea57e8f-2b78-4846-bd0c-d47b779a182f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dad9170-d567-482a-a2ef-a6788b7c58e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "08dd2f0f-8e8e-420f-b19e-2eaafb81c9c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f95406d8-54ee-444c-9c17-be51f8282324",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5232dd98-884f-4868-860a-7713bf2c2284",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30bfad93-cd1e-4bb6-b753-e81480a6afb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00b5d8ef-a8e1-4a42-9262-d960ef4f314d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6f109880-0169-4cd1-9c49-16e179e0fc50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9920e66a-d80e-4479-a7bc-11153eaa39f9",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "511c97ab-9d61-4e54-b383-84616f964e08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32702427-c408-45bb-a79e-e2c11da68485"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "065458ff-c835-44a8-80dd-da3d3c145173",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "6d914261-c310-48ae-a668-0c69558c0c36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9091c1fc-a967-4fbe-a130-8bb2d6821bf0",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4606cfb2-7bf1-4578-b8d7-c3ee9fab5ae5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d5ef4e2-ce46-4df2-849d-3fc1c5fa0d3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82735c9f-c007-49c3-8535-f5b830cac3f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "28da03b9-ceed-4bb9-8f0a-52d6396fbaca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f0c7ab5-ea88-4105-b93f-91cac53da42a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca1f4ff4-0afb-4e32-8375-b483535c38b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34ed503f-54ca-44f6-9bc3-e84b8a798685"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a43d136-963a-423d-9114-73e6e8bb0aec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f1e841e0-a9ba-4795-b62b-6bf4f9cee393"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0489ac09-e77f-4d85-82e5-742d8f719964",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f8791a2-640a-45c0-922b-f77b9ac2126d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3009b5e6-436b-428b-ae51-fe671cbb9ca3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a10badff-7f45-4949-82a0-66a82a066520",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "1d992539-ef76-4812-833e-1aea8de86a99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ec52601-4ebc-45c7-b2b5-ca2beaf5fef9",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7acd4185-ac49-4911-994d-61c15ded39a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3e12101-fe70-4bbe-b62e-57c6719acda6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17ef53ee-8c72-45ee-b563-781a339e2725",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "6d210929-061d-4eb6-8e5e-dd46e1ea7001"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65ee6822-77e2-4d95-a3f1-a89e3f5381cf",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b07d15ba-b8d1-4035-b5f2-03b345e47657",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f14bc49-b19e-472c-8f43-bee86c4c0ead"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d8e767e-f955-4c6a-b43f-6d049d9e5ec0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "e146b2e2-ccbc-446d-8f60-c5157eaeaa7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "671d2e5b-2447-461e-89cb-67dc368ec86e",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b139393-de25-414f-9330-af6edf1b5b4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee78f20a-1fcf-4a26-b854-e883f8e62dfd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c01958f-2f16-4a98-a48f-f815672679b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "fb5ef209-8f65-4921-9cc0-2de1590a40d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5358ef28-7e4d-44d7-9550-59d5bcc841f0",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13fcbc7c-229f-4120-af4f-dceef6f1d4b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "909f8868-07a5-4dbd-ae73-0213b2550261"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77607992-f5b0-4a6b-a6b7-0e2fd010390d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "f53a99a9-22df-402a-9d5f-e9f184caa0af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bd71a20-9b64-45a1-8fd2-235978cfaa01",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "821c667e-b1d2-4e4d-aac3-51bb7f42d017",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98e34153-b483-4756-b973-039cc800a83d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be502353-34b3-4f32-9e97-7cf4f07f77a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "eb2d6d1b-364f-4a4e-ac7a-ef244a016234"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e3134d2-bf71-4afc-9c18-27a453cee475",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c89ee00b-46ad-44c7-81fd-210fe62f4bf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13febdf7-c1b7-4a6d-b84c-b4d3e0130175"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d8534e6-0a33-4aa7-814a-a08214b34140",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "af9f3186-0ff3-45c7-8f85-cc463b01e86d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d12c45f7-3bf7-4ad9-9920-30b33584923f",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2334196b-ec73-4827-a5ea-308c0c843074",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23feb406-46c5-488f-8b6d-c59eb30f405e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5d2a520-084d-4da4-9d7b-88c2ce7562f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0712ebce-a984-40fa-87ce-c01b828e4eee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26a3bb75-5d52-4e7f-a9e2-1e77d9f36543",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3afc18c3-3d3b-41d6-9abf-eb0db544d094",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "320cbeac-a4b7-4fcd-a499-741441042403"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cafd578-3f6f-4a4e-bc6c-254e69c2fe6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9ec85191-5d1c-4877-b9e5-3d7e2fd1f170"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbc90dd3-aa6f-441b-8d92-8b654a461dc5",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0004c794-b462-4f71-998e-463969deaa73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35285d42-a88f-4811-b911-33719172c523"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17d99e44-e5d2-4141-bd0c-d377e9d8d5ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "93a021c0-54cb-44e7-be49-496c745f7f8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2cb6e08-5b89-41e0-9983-eb3a0e33649b",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a0ad874-332b-4647-a865-c44c918d4dd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fd97f78-d211-4be9-a010-28db56fbbb04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b22b1ce2-2146-45cf-b72a-5e33bfb857a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "11775495-6af1-4925-b83c-51f88ba418bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e82b6893-8424-440d-a371-cf220a9cc25f",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ce97bd2-a76a-4e8f-8088-cc9dc3c2dd91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5013ffe1-6608-4920-8cb6-d6dbc2f83976"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11276fc7-63de-4551-b2cc-9f68473161ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5f1983f0-c935-426c-9cd4-788425afb898"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01851122-b3ed-4118-bf12-88bb16083003",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa4478ab-17a1-4117-bebd-81507481a111",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58d7cdf7-42ce-465f-849f-8c4ce164a027"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8930946f-35d1-437f-9034-108f28fa1374",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6755e7b6-d382-4ec7-8c1c-940e8f781daa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3c6e85b-11b1-4bd5-b4f6-08d807661eae",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de6f50bc-4013-433a-a07d-bb02feac9c21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3fd03e4-da34-4611-86c2-38b9307f86b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1c17995-6b8e-427a-9db0-4251096935f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "99b98919-c456-4792-9477-2d329763cb1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50b919e7-e807-418c-b585-7e806adcb9af",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8521a01d-30fb-4a83-ae79-7139924b31c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c1ae682-7537-40c8-ae20-cf8c240e7be6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9aebbd41-cc84-4c1e-8836-41279119ed1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c82e8dd6-d598-495f-94c2-946e7bd929fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "905c2ed0-60df-4524-bdb7-1b040f9f34b3",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ec9097e-11fc-4728-9680-0b97376eff02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "916eba0f-7ba0-4d5c-a824-97e6c52ffc43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78b11265-2d7d-46d5-8856-c65f067a4e8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1aec8090-cb82-41f0-be65-6bca6401a08c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a553968-e8ce-43bc-a313-6788d1737912",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "973bb1d6-a8af-4b18-bf9d-2a67776011c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6aba9e49-e48e-4153-8be0-ba11efbd824f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "772dba84-ba9c-46d9-826d-8b21b736ef63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "11fb199c-f5b8-443b-8616-05f9143a327a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b155cd5-d309-43a2-9f91-7d3f54f8f6e6",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81daa7e0-2ea2-43c4-b847-942b829c27e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e328c195-8bff-4736-a5d3-683958f44f6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68527524-69e6-4896-af97-67c49de369ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0c980258-1ea1-4217-bc2e-d34e858e5219"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea7f9c8b-d43c-4c6a-bcb3-be4bc8ac1c67",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a09f3d75-5cab-489a-8c65-5b0056a84db8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f341794-3431-44b2-8a8c-e721ba6e9f19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3a32ac5-ae14-4cff-93b6-25d48b66da61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "904b6d2f-4ab5-4c3c-b522-7eb0e501c374"
                        }
                      }
                    ]
                  },
                  {
                    "id": "317294ef-02e5-42e2-894c-4faf347a5a87",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0d1399b-87c8-4ce0-ba11-8f293976349f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40e24c47-d766-48d0-8302-4c7b77509211"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f896a2da-4fc0-4827-b5dc-08679e920b54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f16649cc-54e7-4902-97fd-3e079e9968c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b373aae8-97c2-49b0-b6f5-8bee90bf58af",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df51c99c-6e24-4669-ab50-843c7e859f84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "750e25ff-d149-4c7a-823f-4f51862b593f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5ea93ab-1c71-4084-921e-a19b12cb7214",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "153d1dd4-6782-4662-8dbb-7cde80904182"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bc1330f-f1a2-4ef1-8c65-ae322f9528c1",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d11e0bd-4704-4f90-92a7-6fd9584b4713",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f07bd626-13c1-4279-a3ff-6b8408aa1f90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da6274c8-e427-49fe-b55e-7e2c76b7148b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "da5b187b-fb76-4c14-87ba-473cc58c993d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d28c92a3-f916-4883-a814-02ca308c5d32",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1253123f-aab8-4124-b314-6a820f72fd96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d01ad86-65bc-4f7d-a3a4-1a6bcca10e87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "240aab6c-5720-4614-a2a4-7e4a3b17640e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e47cd1d3-61a3-4476-9707-29ac0fb641e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "730b3aba-1ee1-4661-9a58-416d416b4d42",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95d1ef14-7607-4f63-a42b-72b50cbc4272",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4a52ca0-3af0-4729-80ed-89cdefee466c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d744d1fc-a7d4-4ce7-a476-5daa279bb55c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b7becd04-9b3d-438d-88f0-c1d1a8b4dcff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03cd9160-38b9-487d-acac-3c389dae44f6",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5252c4a-1d4e-4323-b442-1e16c73c438d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e06bf115-4916-4582-bbdd-56095abb5434"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a08fe0c6-e057-4ec8-af3f-cf879cc56ddd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7d8fec0a-7bb6-448f-8c6b-19ef8f7ba910"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5973f096-5122-4649-8844-06b40a444b37",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8a954cc-6398-4275-adc8-a365c4d40afe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6228a60-b29c-4e41-ad81-d6bb3464c626"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5b476f9-8e32-47cf-ac8c-baec6d745206",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0b0d2e5c-3d45-453a-bfbc-3b0b927949a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f50c58c2-48bb-40c1-88a4-efbff548f1cb",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7412aa9b-c81f-41e2-b17e-1d4ab219d736",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cfafaf4-c147-485d-8008-509bb7c7888d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b78caa6f-4ed6-4248-86e5-ab517b31c3aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9ec55cc8-a754-45ac-a1f0-f23b0368b481"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3421a208-7c42-4e49-a2c4-c32ee20de618",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b1d8c75-ac45-44a4-91fb-9dac7d7e48b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4e0e617-5570-4408-9d35-9ec4a0fbca7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a1fc0df-18b7-4760-96b0-dd85f565e7d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a3e38714-bc5e-4754-ac14-d269d46e10d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79f4935f-4f6d-4a55-be62-b8b95ee075a4",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f32d4c24-9e01-4c99-ba62-81400dfc927d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11deca2c-7610-4e04-aefa-f92d32235242"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "112ed558-c696-4897-8254-7e755164929b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "3b7c9de6-ad01-4086-8e81-2d0371c0ed78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5709e3f0-1c2d-4dc6-b907-5e64209a57da",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92d6ff6d-f172-4da2-ae66-f8a80b3a763b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b875f1b-5503-47ae-abb9-18c0e6f08426"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dde6df3e-42f4-4436-bf5e-10d5d4827818",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "2d02a37e-a504-4f36-b5f3-27fa18ff0362"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1aa5462-480a-4162-8bc5-b70f4e62e458",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6da141f1-9a0a-43e6-829a-7d1e42651fd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad6ef40d-f8ea-4090-a4d7-c2875369875b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac33e4d2-fdae-4223-a4ed-c1395ffa89be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "109c0eca-6808-4718-af56-745103d58384"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e760d9fe-3691-44a7-a30a-427bad5b2975",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67ea30b1-4d8d-44b6-ac36-d828fe6e934e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12f4913e-d00b-47c3-9ed7-4e6fd1fc80a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1cb21e7-7ca5-4d8b-ba27-7134b2f02688",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "ef1ed4c0-fd89-45dd-95ed-be1a0f9aa452"
                        }
                      }
                    ]
                  },
                  {
                    "id": "699e4130-e764-4be7-941a-2b55d61d2e00",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd2f0fda-05c3-42f7-b24f-a6e39da0f906",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "159b245d-8105-4f1f-b67a-1895a6d178b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "327287a1-cfd2-4a4b-b8e8-18b952ebf8f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "a749ad07-4a44-4d82-bdb9-c5480ccee753"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ca29dae-5730-4886-b03f-f38ce12b05b9",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3269e14c-1a90-4178-ab59-e18662a3a659",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "7fa0de1b-4c26-437b-823d-d8bd9ce7255b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4eed3b0b-b789-4aea-a8fc-766cb742c4e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "a8d28903-8b56-4698-a3fe-4f7e71c99b75"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "715fe93e-d5c4-4bf6-976b-5967950a0ebe",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a1eef9d1-db34-4280-b28e-c22583311d2d",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa40b631-0cf0-4d2d-ae1d-f3da182ccc61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4d986c07-2876-4ba9-88fb-badf4e7eee4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fbaa6b7-2b73-4177-8c4c-c1c6c9613d2c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "41797abd-dc21-4d7a-aba4-10075c7c82d4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9b8f0491-c069-45a3-8b46-1aa1bb8b1d8f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9b30cf9b-6950-45ea-b34d-ffd4b8789e10"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2448fde5-c50d-4e49-af57-d6df28ab2c08",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dedf039a-2b3e-4163-af8d-4b8128b18e7c"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c783edfb-e31f-4bf3-a566-a5d46574e72c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d3aff07c-35a0-4785-9ddf-a1f58996ff1a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "02b49bec-a793-41ef-86da-e361d7e66e24",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5abf084e-29a6-44a8-9d36-61832aa1f01b"
                }
              }
            ]
          },
          {
            "id": "a14bfd06-0a48-42a4-a998-5379328328be",
            "name": "Positive Testing",
            "item": [
              {
                "id": "601c572c-b67c-4532-8d1f-c9936e26e715",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "0e9201e8-f5b7-4e5f-96c0-318020096375",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29fc53e6-4852-4ea4-bb10-709dd74950ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "3a2b4397-7f44-4b4a-999e-c1e242c96f2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "216de49b-115d-4370-bd32-39375e3cbb3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fb53c4c-bc96-4cf5-943b-a74e40d4923f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4137586d-43bf-44e5-b198-91f53a11af41",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "36118d3f-ae95-4038-8103-5c1134b38e53",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b41c96dc-b5c3-4b18-98ac-648c0a3d510e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6d2b9720-3cef-4b2e-ae2d-b0a7ad8dbaa5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "68f34f2a-fef4-4482-a5b1-16f0e2ee182e"
                    }
                  }
                ]
              },
              {
                "id": "87e88f9d-40e7-4ceb-9f2f-39d43974054b",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2de069ff-0a20-4e02-bba8-2171483a11e8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "952e7b34-7a30-498a-aca4-22aed2f4ecc5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d6ccff38-29f3-49e9-bed4-ac2e1a623607",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5a565dd7-40d2-462b-8ead-ee5050533e14"
                    }
                  }
                ]
              },
              {
                "id": "16a9fed2-8bdd-4dc0-b603-4f4e3202b74a",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a864f66e-3f71-41f4-8e68-a1216575005d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "88dcb6fc-37b3-4980-add9-ef8242f7c2d7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a752678c-6bfe-4081-a241-ac6d92b465a8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "320f2650-b94a-4925-9219-42b225292ec7"
                    }
                  }
                ]
              },
              {
                "id": "a8be1909-5928-4b06-9fd3-bee376666739",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "02e1ecde-57f6-4308-9543-fe5a18ecd2b0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1c311cb7-da2b-47ee-b57a-c4585f33b8d8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a0abfae4-4bd4-453a-aedf-13f00137eb67",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "62f6080c-27e3-4ae8-84f0-d40c23a1f3a1"
                    }
                  }
                ]
              },
              {
                "id": "9ce640a6-8b87-4a3e-bd93-4d801b315496",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "48c82790-a62a-4c1f-ae02-5de8f1eb8d43",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5ffa3010-913f-4718-9306-0032ae0d31db"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3c7f3a10-5f8a-4eca-a170-dbf8ec8df16c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "f873a7bc-07eb-45b0-b39b-9077873b6504"
                    }
                  }
                ]
              },
              {
                "id": "0b9807f4-2c8a-4591-9166-4c57dbeb19e7",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "94767eec-89bc-440d-ad13-307d79c333f0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a4d96b71-73f7-48b0-8360-5e6db5a72159"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8ec2e13d-8aa3-49fe-97fa-dc495dc89acd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "7ae7f879-1202-4b9b-aa07-d4efdc7504a2"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b7f37a42-47e9-4a47-8a7f-c28b221dfb92",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e65d08f4-72a5-4737-89d6-75f168193210"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d90d0abf-bc16-4b3f-8b25-6c95bcaf19c8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "aba2b9e0-66f5-46b1-911d-00016127e166"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d819f156-0a48-4de6-95a1-065d971e7d9a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "8be918ba-49d4-4c80-9000-276247a1ac08"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ef0e0112-f543-435b-a4e2-eca60f1edf86",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1479b214-7c5f-4cb6-a46c-8f4fa839d047"
            }
          }
        ]
      },
      {
        "id": "ba7a5e46-d938-42d8-8a7f-c91c7f84c402",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "48e4bf7e-4037-45bb-89cc-daf56bdbf39c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "44836a79-3544-474c-b103-0ed0f8b654c1",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b0cf4eaf-a66f-4dc8-a2ae-885e0bcf74e2",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20b7e069-e116-4962-9c24-1fadd0f356c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6fc5c7d-553e-440f-a393-4367bada229f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86df02c6-b3f6-4403-9654-2d387270e405",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "b374c431-7931-4255-8cbe-6751991a8b40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "415e2b7c-1b69-4e15-b428-96fea16d675d",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aec35972-fb90-4897-a3c4-0c15db59196f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7feef164-3c68-4fc4-9ab0-e63f4e6c2573"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "237beaeb-3af1-42bd-b9f9-2dd92b7d7322",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8870a4ae-5bc0-4339-a435-54ed03357d29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb159cfb-2ae4-4a9f-a387-0f8cd019bd92",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "098f6552-3514-4064-b4ad-71a71240322f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffb69b46-d55b-4eab-8fa4-edea52eb875f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "399f0ae8-db80-40e0-9e9a-7ba13790bbaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "86401464-aab8-4e12-8c53-a9eb0581e2e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08eaca1c-59f3-482a-91d5-74889ecf7939",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62f169ad-f20e-49c9-8537-48fb441f1d09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bb56dd4-b063-40cc-8a3a-7c08f0b89b7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9992d5b-36c5-4f70-9ff7-0840c2dfaec0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8bfc7bca-e908-4b10-9d25-1baf4fa1af09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d55543c-4df4-4c93-afe0-e75b4d694d7f",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b845707d-4bac-48f4-a521-dfc4bd2d2bbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0eefc294-4ae5-4a3e-a0da-79050670f198"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10fe8b52-dcd6-4d8f-b1f4-02e3d3749e8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e5760def-24ab-4d54-bad7-fd66fb53acae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae93cf38-cad9-488f-b741-78596cef1ce0",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e7e8ec1-9d6c-45c1-b673-ffe9f98f38bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "096f8fa2-fd44-4007-8bb7-654610632201"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83ae463c-f88d-4244-bd31-a26e50af4e71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7bee7343-901d-451c-9222-d623ecd035b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc46bf25-303f-4f6d-83c5-ad24719f1dcb",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5f02f8e-1c1e-4d5b-910a-4fe4701ee215",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8e2c1e8-9efa-44c4-946e-aaf0a82fa54f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6eaece22-d3bb-48ab-96ba-c67109784612",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "189ef9d6-8276-4330-9678-a2bcf9c29018"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55dc506c-c78f-4495-a911-e0312dd1801a",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4ee13e2-5ea2-4d7c-8f22-5f5bc1d2772e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11a0d2f8-cc2d-41c3-8e52-7f09cc6334d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d318a0c2-299c-4400-b1b6-141cb8fd8719",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1c86147e-46bd-469e-846c-64f3ce8c95f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6230da17-6211-4f7d-a4ad-cac048fc50fa",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07264d35-e33b-4f19-9599-339d9a930555",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bee88756-aea9-4c3e-be17-b9d48c6228bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f2e3c8f-e4ae-46f9-a52d-720f0298e921",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "59c4508f-b91a-4358-8ea4-c4a1985d479d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85015985-dbce-49a3-9295-d78cfea3c31f",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fb8df76-d7bd-4991-8bd8-0e1d1fb099a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a7c777e-a82d-4511-8562-5385c7a58c16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e9cabb4-5577-46ae-9c6c-ac46d8e53071",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e357f222-88d1-4f19-aad1-4fd6bf222da4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a850530a-f044-4066-b1a1-515430ab0cfa",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b17d3026-dd9d-4dc5-9e13-efff3c7daf1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae064085-a371-482f-b482-36f962e0db45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d97562a3-5d25-4b97-aa78-2b2134e4a290",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "7b7b192f-5da5-470d-999b-989b2b13bfed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8714fc28-a87b-4492-9d20-171e0578f1f4",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f023678-ddbe-4017-ac57-3b6689638b71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c498204-aff5-4ca8-af7b-6bafa35a6114"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3f58731-dbf3-4423-ae30-51704d14b9c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "48e0f079-d641-484c-b16d-f7f423f4e465"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ed20e5a-ba41-4e97-b4f3-a5d157995ded",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f19b67ee-8ecd-48f8-90d2-b61c74bd2617",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdadaa64-d805-4e10-a3cd-be5f4e16600e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12b95c27-701b-450f-ad7e-9f449d57797f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b5f67f01-8c46-46f4-bdd1-ce66330c84bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddc7b631-7230-4b18-a96c-3edcc1620cc7",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c60d90aa-0742-42c4-9932-427212dbfca9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "496a9b6a-3ae6-4c7f-b5c5-1aa45c24af27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c7ca3c9-fa05-40a5-918f-b6aa26284c26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "4624d4f3-d8ce-4881-b0a6-6a08863ca036"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fcad8ae-21f3-4c8e-99ff-be8bba536d69",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88333574-9990-4eb3-8dbb-9e6a123762b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8a827db-6deb-4a09-b44b-a08458194344"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57c5a27a-f686-428c-8a33-3c177804f4aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "cfd22f2c-2fb5-4c01-ad89-b3281e6b945c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15c13705-a815-40aa-82eb-27deffb86ac0",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ee3c8f0-f424-414d-b81e-44906e9f0cbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa62c43e-14b4-42ae-a174-6bfcf0626f37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4eae1d9-5e04-4cfe-bf9c-cde60f8a8d27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "7b4da905-9aee-4479-a86b-bc7aeed9b204"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ca56de1-64fe-4df1-9e0e-614391ac0e1a",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a99a3da2-b954-492b-8f1b-4b6fea9000ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ced1e997-0104-4a79-9773-e25345a60ad5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ed88934-2fd0-4bd4-adad-6b44384c2c08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "8bc21568-2c05-4219-a9ee-bb12b8f8e9f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e28fbd8-803b-4c98-b450-7d65dff7392c",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24c71639-dd9f-4f47-b429-b38cc6394e47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f276eeb2-43a9-43ab-a208-04d4d3b0bc3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e607f8a7-269a-4d50-909b-a0e7dc82554e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "53d293d4-e9eb-4bf5-a952-165354bac58b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79602dd2-8a48-4919-ad12-9b19a4998399",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93214c9f-9617-4210-aa19-cf22b466dab6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24b69f31-af21-4a1a-b386-22d62adcf583"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d38f08a-e7a1-43df-a1e9-e6b843aac080",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eba66a51-a778-43be-b4fe-f519607a6f98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6b8e140-79af-4e8f-a681-be5c70a5b935",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4660611-f360-4cd1-a61d-88c3fa39064b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c3a9792-0d7a-4eac-8dcf-cf61a9b3ed92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b790846-07db-485a-87de-76af1261d6da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d451bb0f-b9dd-4b03-b15f-77dc0dd05fa1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fff12a2b-22fb-4306-9fb4-c28ddee481c9",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd01dffe-5734-41ec-9112-96f2b5cc9ddb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a68f287-a70f-46d9-9394-0b43e2de3e6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da9ea191-447b-48d8-80be-2633c0976e3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "372f93fc-b769-49b1-ba8a-0362d57d5230"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5aa6cd76-6c60-4e64-924e-3a376b8314a9",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d184958c-ad8d-4a87-809c-cb71f29247a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d40086d5-9443-4ec8-8440-3ad03cf9c24b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1831f2b8-4691-4272-9872-ae4f69d3f65e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "10c4d949-2c37-49b6-86da-d0e1c59efd29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e72d53e8-ad4b-45f7-8dbd-5b9786160cdc",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "607a523c-2212-498f-9192-3d15c54608ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76ade972-35f7-4101-9e76-1e1b97091baf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23b66efa-c292-460a-b09b-34564a3cc82d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a22d9d2-67a6-4b3e-a3e3-07ba42fbe0f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "214031c1-c7a2-4686-b7bb-cc88c5315c95",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78848b23-fa0f-489b-aed9-2f0c25ecc7c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45145bf4-3bc5-4051-a7d0-2560e86ba1c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e772ab26-0224-4cad-b6b6-dba4d0db5f6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d0e30477-99c2-4c08-9b48-3452096cd7bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85440e45-d10e-43f2-af29-fbb4244cfebb",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ea23815-c773-49f1-9f41-73db095ef727",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e93aff31-3d4f-4233-b8dc-f672c3f938e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b203caf9-866d-4fdf-a0a2-cbd391e5cdfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "27cd424e-be4d-4b62-8396-8a8d6536f65d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72661865-f8a6-447c-ba14-33c29434dbf3",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efaad6c4-0b16-4dd5-ad0d-8f25c2c858db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4f3a2e9-1409-4f64-b9b6-4969f4edf5e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45105eed-7022-408b-b809-e4bf80f9716e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f64a0446-f248-4147-a8eb-dea8ec2593f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aee38852-205a-4bf8-bb49-d4ed94f6029a",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c6ae998-7c65-4a01-b36e-3f39fd7a5ca3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a372ed65-eb15-4408-92f8-b4ecc3cf8e4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "514e902c-6696-41a9-b1b8-c8c573a6445c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff566516-b2a3-44a0-9fe7-596c711f25c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ab6f778-adec-404e-9d24-455ac6b83036",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c280168d-78ed-4a89-ae93-db50e7073745",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c7275fa-ef56-4340-a65d-1a5a66d8b36e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49fa5e8f-5d61-4628-833b-4df686c49a2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "453d937a-da1a-428a-a59d-48c90f332bdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebec490b-886d-4a83-b710-d02ded125b3c",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5161544c-a31c-45f6-84c7-84e3c423322e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54340bbf-2a17-478b-824a-b03621ddb435"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbc94069-64b4-4bcd-9c11-819eb630dc9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "05a9a372-99c9-4038-8d6f-56e292e38c55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c3a8ea8-ad1b-4dcb-9449-d072cfa2ec62",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10255323-153b-4cd0-8bce-36e03e258b0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e17b2bd-c066-4561-a344-1308dd96007b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5724c94-9cfe-460a-879a-a7d1f13fa8d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea745624-ef43-4413-8f11-35989815a12f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32573feb-02fc-48bc-82fb-6a3fca498720",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "458d6d21-0236-4c83-8d08-a1fcc44e7354",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec1875ad-8737-47a9-99e6-c80e9a7a82a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1db7cf95-7e57-4850-9b90-6890d3341018",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "64c605d0-4611-4660-ad66-2e6c08ab5880"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b200f4c-9d92-46a9-9584-875374b9b082",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7faab866-a7e4-4994-a48a-d13330d7ccaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d42b7cd-c3df-41a1-8aaa-da1c51c6cd83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1065520f-cc3f-4614-b2d7-84535dcdcc42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c45b30b9-a5e7-4431-b914-5835c051a6a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1435d442-d942-49b6-b85d-68ea8372307f",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d13de62e-b373-4f8d-901b-fa17c34be9e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83d4c91a-4762-4739-90c8-011473284697"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51ea9965-e43a-46ad-81bb-42b929414f48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1deb750e-5832-43c2-8beb-4f8c4994747a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df0a837f-0904-4998-bc9b-1e4ae683367a",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30582bfb-5a3e-4603-ae7f-52fae3856af5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea11a3a6-fc24-49c4-bd27-34af9d3c8b5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69929cae-b0c2-4f2f-96ec-34a4497e0e54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7aa03911-347b-480f-863f-6893cf6afbfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc974aeb-fdde-444f-9c71-9c69ff285589",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "804e6f90-a047-4241-b88a-842570ab5c36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae365fbd-d26c-4d78-98b6-1b5382f0bcbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f619687-c799-417e-a036-1315064b2eb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef0f9386-e9ce-4e07-b6ab-84f3b701685d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2c60615-2347-4d52-877d-e9d00f738a89",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad82f8f9-a2d9-4014-aa01-b4f7eca20528",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3903e89-481f-465d-ba61-15637872a250"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88f45431-f9b2-43e1-b915-cc5447f4aa83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "665eb6d1-87cb-4b1a-8a30-6580d316a6ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96273009-0b4e-4418-9eed-c949689fe7cd",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "251b2b74-c4bc-4b2e-bbc7-135bf63329b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "201eb527-9f1c-4bc8-866e-426c3d03cbbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c02974f-5d01-4827-91d8-57736e804209",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1594e830-27b1-4584-bba0-1e6abbfd57a0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c8568be0-6f82-4af8-a964-8309c0549555",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "62f0bd84-88db-45a8-87d1-3e328bca4e27",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6fb8195-37fe-4aec-863c-5f817f785e34",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "dfe80d57-5625-4b62-864e-908b97c9957e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9177ff3-2372-4c6d-88d1-ac6670730719",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "05109d8e-8a21-499a-bf0b-2d48bb524dcd"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ac2cb225-42eb-4279-b939-da2268f5aeb4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1260162e-b15e-48f3-a864-611dbda01cd1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "36d18095-adcc-4851-92bd-bf06f3d526ac",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "eb72beea-8131-41fb-a95a-e17d77a8176d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d7a20208-93f5-4efa-a927-7b81d5d12980",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "3ce71475-06c9-4b47-9640-e34f2963962f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e92c3f71-53b2-43a9-9158-2fb0cba5fa8f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "24c1713a-608a-4955-b819-b3a1ddac404f"
            }
          }
        ]
      },
      {
        "id": "e3d9b897-fccc-4e64-903b-a79859a8f857",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "6e402b97-c285-46fc-a3a8-b8f0731ce399",
            "name": "Negative Testing",
            "item": [
              {
                "id": "024bc603-6a19-4cf1-aa8d-85b474c4bbf5",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "039b16fc-a399-4c43-8a6d-953d43816fc7",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b07fc113-da01-409e-b6ff-42b4cff33ae9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4493302b-634d-4d0d-81ed-de6cfd3983d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "208e2d0b-08e5-4847-b945-f40bb651aebc",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86b0ff18-5f33-45a8-b41c-fa700028fc04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7edc111a-65f3-4d38-8136-3e13ef1ca147"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2d8f1c6-588d-4a9d-b7e7-cd09a1a04bb8",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e225f433-64f9-4b93-8d77-9aff20286fea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e5bdecd-fd21-4778-a8fa-296c672d47a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67147981-48da-4590-824e-bf3ccf4b5508",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08c09941-d9f6-4f30-bcb9-3d18044753aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c4d1a3f-2556-460f-ae52-bf92c65d9388"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e43c3066-8815-4617-8541-a3436b634288",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bc4d1f8-6ceb-4cc5-a098-a72f63be107b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a3d4414-21f8-4415-9a76-ad850aacd39e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a00d79bf-ae43-4dcb-a399-98b82445aabb",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "289861d2-686f-401e-8d8b-797757bfb09a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc41389d-37de-4a0a-ac08-37346aa66800"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcb83061-4b2d-46cb-8285-8bbf9f156488",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91d3a85f-95e8-4070-876d-a30e51656d22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "980fe7a2-73ff-48b9-ba8f-df8b8f43c4ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de20b6c0-9586-4dec-94b9-b6f6c8be7338",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "841526fb-aeff-4a3a-bfc7-ebe168ef3069"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a9db31f-56d4-438c-8cc3-ae15cbc75057",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccac9d84-0701-47a9-b5d6-204245461172",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "244f5a3c-feb3-4fd1-8743-4caeb7ad999d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57faf1a1-190c-4c29-a9d3-a26d904cc530",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a1c4f27-c290-4443-9c99-b806b741210b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f909812c-263c-415f-8372-f0c7a85c0c68",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4a8bf4d-4120-4c55-88b9-caaf4027ae55",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c006219d-3176-41ce-addc-60d491a59e4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8693cca3-412f-43d4-800e-ed37437324a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfbad40c-c1d5-4a57-96d1-3c57d4bc63f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac142d62-ac9c-447a-b5ad-e383fc78cbde",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0126de4-22cb-4461-ac9f-b1a3217f5a1c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cc4d2f40-5894-433c-9b1d-bc42811ebd3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "206e1336-78f0-40c9-a912-c341123c44c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "950c0384-fe60-42d8-88a0-114db91f8ba8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b122ea81-7ed0-465b-9237-306c270f60fe",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b170458-3bfa-427c-8a83-33b1d87f9fad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "224925c2-7288-49bb-9a8c-7506f8799e75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf99efa9-03d1-47c9-bae4-d1d2b34da58d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f7b0495-b938-4092-970e-9989b94ebeea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "741d5d38-bd35-4ac0-b7b1-90e1a93da3c7",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "551bfea8-c41f-4b89-bfdc-2b5800420eb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1caed3d-c319-4ceb-b31a-0a44b18d2279"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58e3906b-abf0-4d9b-863a-54dced03c5da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "663d3da5-8509-4e96-9b2c-2d6af5a298f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fa4d821-6bb3-4512-b244-2d5008b5849b",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e3befe4-091d-49e2-bd9e-b3de17c0921c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "25280e2d-bde2-42b2-b8b1-4a23199c1050"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f56a7140-afee-485f-858d-18dcf3633cb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b670ce43-44c1-40b1-8c64-da161380c0e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66187f4d-01a8-45b3-ad0e-cd99e68722e6",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c397edd8-4ed9-4c2a-9419-1af7d093356f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1130b2ed-e716-4e84-8481-0b8e03fbe461"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d2a2dac-0628-4728-8d58-1544b53db81b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85da834d-4466-4877-89d7-b2d38f474476"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31b410cf-6755-4314-88d7-0d4da267e95e",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d489bed-0321-4422-8a40-e737dee6936c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d7fdf605-36bd-414b-b06c-ea6781d1025b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54f2545a-19b6-4de9-9e33-166f417a45b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9cfdd61-163d-46dc-a408-ca23468aa817"
                        }
                      }
                    ]
                  },
                  {
                    "id": "473853fa-dfda-4f17-8409-5148cb25af32",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1871e9e6-b88b-47bb-9369-4bf88e618318",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d0b999c-9119-4bb2-adad-66c19417cf33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6944b741-ac42-455d-a639-b4f9688d9d14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab000a62-59a7-42ee-ae74-ae0ec84e1cda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f069d90d-9e52-4993-b6e7-a5c85bcb1689",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4eec47d4-206e-4cb7-9b73-c07990ae7cb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36ebb089-2cd4-4412-a194-2b2d6491eb7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdba064c-7511-48fd-a75c-1da95b83d708",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8cd7100-477e-4cec-a084-9b50f42708e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc72217e-5cfe-49e2-b492-da980c310535",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90bd9be5-9b2e-4609-a078-f1c29df6c1ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ecd49ff-a435-4641-8889-6c454569fa79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af2da054-6672-4237-a9b2-d019b63c7575",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e18e7963-6296-4f2d-b2a6-30017511d8df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f98a8905-5d88-4b9f-91ae-367f8ad6fd97",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08048d5e-fb90-4a0a-9677-e2165ff4185b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a24fbe51-a1b9-4deb-8e59-b6064c1ff2b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8328aa91-f4e6-4d81-9c5d-6a01d0d91442",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6c459c1-65d4-4819-8619-618413d84113"
                        }
                      }
                    ]
                  },
                  {
                    "id": "331859fe-e0c2-4240-b7ec-0c3a7be96d80",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc116894-210e-47db-b392-1ff10456dd74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea4187be-b7bd-4b78-a74d-5f4cf3266b27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97c34450-12f5-4c19-99db-1a07cfd2b75d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d666ca26-d913-43c4-9ded-570441fec61e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f60f49c2-50c0-4a13-92da-78f7277d4bfe",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c545be2-8411-48e9-84b3-7520ad231060",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b707d0c-f0f2-4fbb-a9af-4e080806a54b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0549ea89-58ed-448b-9763-3df2ee8ba1cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0c5c20c-32c7-4d0c-a617-f24864447ac2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c47cef8c-dca1-48d7-adf3-363793aedd90",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "428a9264-5deb-4897-aec3-5e5f5677fc0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1e851ab-2722-4ed1-9771-1afccd48b487"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cd0b516-0d48-4c25-aa12-0bd894913c5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e7c7455-068e-481a-a872-938857f5e8e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6397a10b-eebe-47fc-90fd-69c1af22ba86",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc7d98d4-5932-4a74-b95e-f786461541d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63daf7ed-3251-4dd5-9954-7b33c78e5825"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b89d913-8940-42cc-aa62-af863ab7dfe7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f0b7019-b315-436e-a50e-a694f077ec9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c56ab380-ddf6-4cfe-ada5-4e541d9deffa",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "741df9c8-ae53-4d86-89c0-981ec79914f7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "08e386cc-b96f-4773-9a6d-56cef2c6cda9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d3fd7a6-6e1d-46f5-bef6-b5deb2597e74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fe388f9-a2ce-4fa5-b726-03c0b33e8c3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bedfde0-ac7d-4cb8-974d-5323806c40d5",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57a9584e-e4fc-47ef-b96b-fadf6d6d0f7d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a727021e-370a-4a19-a367-856b51dedf96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17784b54-ab32-495e-a7e2-d3a795df22df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23944543-b21e-4096-a5e0-a6ece401f7f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79fe179b-2dff-4d54-9d6d-b403ae60b65a",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57afb5ba-2f77-4d65-a7ab-9c559ebfb94c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef57b361-1bdb-42ba-9c57-6a473b8c2232"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fc84cd8-219e-477e-96d3-31766b2385e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34026457-c379-4339-8757-a3373a8542bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ef41507-e228-4168-a00a-eab83d4636f3",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f294d2ef-fc39-47f2-9fb1-84491c4fe043",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0fe6a1fa-28d4-415e-ac6e-aee996575932"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d2ac0ff-3719-4c46-bed0-0700440a7200",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d02ffa93-d062-4529-894b-07759c1ee59d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "564653b3-17a2-4085-b51d-7bd532181d4b",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efdb23a5-423d-46d3-ab96-8a6ddc28e8d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bd71efe-17c1-4b1f-b090-a27443596b48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5172de5a-1486-4433-b856-88b421f190f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa5a4408-23c8-4566-9d47-777f29403fff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "911e5358-f670-41db-8a4d-d9350e9eb8c1",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2327219-86cc-4dc1-ba7c-ab1192384cc3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "89031f1e-4378-4448-a667-48428f0d571c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4215fe1-b37e-4de9-9972-a1c42b2d2b33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10207223-5415-4ebe-a283-62a1cb8c0b1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc041012-b557-45ad-84a8-4b3181d9a3db",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7b0a0d5-1699-432a-b31e-7c409652b019",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "46c361c1-13a1-4809-ab09-92d3993cc66f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02932b4f-fee4-4817-b1e5-ceb565c61e95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5df415e1-214d-424c-9ad7-a781758c25c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbb76c7d-58e0-411a-b9c8-4d4f1980c004",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21c32a2e-16a1-46d3-b45e-423680f0a8b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d0b75b08-221b-4f3b-b042-7d2c3ed49702"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b541f60-7ffb-428d-9695-bf4a6eee7f6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f4c4a13-0817-433f-a694-9a31328b1a75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "266eaf12-e680-4950-bfad-7d8849dc5f50",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c11d03e3-31d7-4ee2-beeb-9e9861d0c10a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fa903f88-201c-4cae-93f1-e6870aaabe27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ff5f8c3-007e-404f-9107-f3804e64d54b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "068cba6e-eb9a-4942-8cb5-c30d2055bf13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bec13afb-fbdf-45d6-96b9-47ccfdc9560b",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b42d2d32-724f-452f-aa39-144767961858",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "043a3381-f85b-4bea-84df-05ab2e1af5ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad158f24-38a7-40ad-90fc-e4981caf8ff2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ff0e482-00a5-45aa-a892-e70c52af2ddf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "254a35a1-ccf3-493f-846f-e7b25eb193f0",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd41a59a-1d89-4e51-97fa-18f5d2f954a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a5eb65a-e717-43bb-b78e-e9ef78b96c8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afcc79c7-fcfd-401f-8591-3c7a1effe90a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff022637-eccd-4389-9e3a-44e8d49ba508"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ef98f44-236a-4334-9a69-6a15c9ad776e",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30cf3597-cd79-4537-b3c3-0bb73a88fa64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82e23045-44c8-423e-8db0-1ad99d798258"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab29b441-5c3c-487e-bbf5-267b69149bb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50f3911d-b124-45fe-97a0-688a65bdc619"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bd377ba-bf23-4e5d-9d78-9f8e9acb6622",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbba3712-6c40-4381-b7e3-67ac89ceee61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82b340a0-599a-4839-bc6a-3e8c1c433f38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4f3f46d-3e43-4abf-9ebe-01823eee899a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a8785e6-9f66-45f4-bf6f-316c8c997cfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04fb6b4b-5691-4698-85a9-2df09ac8a531",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e31664a7-27e9-4c86-bcfa-1d1da81b5e9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efec52f7-9b85-4981-b8d4-34cfd9d9699c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80fdabab-ed51-447d-86a0-0f6fccf40117",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b94d84f1-50a2-4112-af44-62f9bbb5666b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4c61e15-af39-4f9d-8e8a-37c13ff92465",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8f6bbde-a1bd-48f3-b591-7e8879d5ea95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eeb3bc0a-488d-4bd7-a718-b05f6162f9c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3452cacc-c98e-46fb-8167-7b2df532815a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b031d0aa-3c24-4d0e-9113-413e450b60dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f53ebec-2068-491e-9a9c-4940838134b2",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1ff2e5a-7fec-4437-90f7-bf698a215167",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b578d01-99f0-45ab-a986-38fe07d2b561"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87e81de6-e4a0-4af6-bf3c-18b3ab851fa5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a900c9c-0171-4e8c-a55b-23adf2eec198"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e670ca87-531d-4f27-a4eb-890bbd35afa7",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ececb958-5c6e-48a6-8b49-4118cf0afa49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4a646eb-49c4-4a33-a7ba-625a90d3d7cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4a429b7-6285-42a3-b8fd-16b586750b36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35eab4c4-313c-4706-ab95-54a0a63eb048"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d656a104-bb41-4102-9b2c-21b36de9dcf4",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2309e0cd-0427-405a-89ec-748851b9354d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "876b412c-fbe1-47c4-b010-d49c53bfcf16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdf1e06d-b5b5-4c0b-ba4b-12e324e7c8be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b158c63-2a0e-4145-a0a5-cad786024d0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8d2b1cc-afb2-436e-a306-b945dcf15097",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a3379ef-0e66-4921-859c-2f3763575abb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3637d8ac-41c2-4392-9345-fd2497120195"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f03a84ed-f26b-4a4a-80d8-e26be14a2158",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d11374dc-44d3-49eb-9a1c-5e539219ce93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1d51b16-332a-4f7e-a8ee-35ccdae3b77d",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70be0680-c383-42c7-bd80-2baae59cc647",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c1cc6b2-11d0-4f3d-9cfd-cb6ae0ccfa32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afb50956-38eb-41f1-b6f8-efce83c5eecf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83a2391d-537b-4399-af14-7d7becf0e2ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6359dba9-45d3-4d74-9a8a-6448a9dd128e",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4af67e31-ed10-4e5d-9674-67ec39f7517a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1bc6f24-4826-45e5-a0cc-a2cc22437ae6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16be4de2-8ed6-49bb-870c-457a6ba3475f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95e1c9ca-219d-404f-b64f-2585a186d29e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7a9bf4f-9351-4117-ae06-1a851c05326e",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2878fefa-dac3-49a1-8afa-48ff8cc636b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b150411-fb0d-4447-a4d5-695884809241"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40566f10-6392-41d5-8974-fb56416db9be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e3f0962-a90b-44cf-a1fb-10029cb0e665"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d7e5ddb-6657-4bfe-9e82-7b0c571dcdbc",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f847a152-bc0c-42bd-8e61-fc6dd7ef6674",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7195a480-fe5f-4819-bd2d-cb18fb9ee755"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1107ea2a-6bdf-46d2-b986-9d3e05dcff94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0553d58-503a-46aa-8077-73a747f957fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe414839-6693-441a-9aa7-18f9f934d708",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "697f7ab4-9e1e-430b-bd27-b9370bb5be15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "377a00ff-3fb0-43fc-abea-dbfebbdca891"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7f84a69-979f-42b4-bdc3-11f3ff6b25fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ff161ed-413f-4236-8c78-188cf3cd7670"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2eef577a-e942-435a-bd6d-1d41468bce1f",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38e0993a-2aa7-473e-b77d-71c88b241b6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c98981a-24c1-445e-b7d0-b2e48ef12bfd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72e4aaf9-c3e1-4157-8f3c-35fb6a8340c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cd6ab9c-b962-416f-b02e-b47ef0e17bfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "789e5387-7af5-4c52-9f25-bd105a726616",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c387a16e-657b-4b4a-bc6b-373947005145",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93382849-e102-4a15-83f6-99660107ea97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2734f36a-71c9-4507-80d4-f2ca661d4e8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07a3058e-80ea-4592-8950-c8f008e833eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a34f3a6-5c14-4ddf-9766-51f46e165949",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dd4de18-66b8-4d4e-9464-4a88d8f48df5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90d1829e-26b3-4916-a654-0a29bac94878"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2ce1cf7-2391-4bbb-80ab-5b76855aec98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd80d982-c7cc-454e-9169-1e4f7b3b2e68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1a9b108-1b21-4c16-bd09-cf0c7ec97518",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b638211a-ec2f-490e-99b0-0c85148775bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f48a61a-9e51-4d74-855a-c0cf02e0ee71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e431ae20-80f6-4e8c-8d99-f84a9a6c746c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d14d2e8a-bf25-41ee-8e20-b850ea2eb7fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25847ba9-2fef-4d20-b0c6-301af60ff631",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ec61c37-25d8-413f-a2d4-b4672989a2d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4317915f-bc2b-4e16-a4a7-e57ffe841d31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f4c5e90-1b1c-454f-aecd-da2566a5d594",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0e1d8e1-1162-4805-8f6d-3f17a01e0732"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3682d9af-4165-45cd-a24e-8294319ef8ff",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6b1618a-abcb-4b1d-9a7f-34f7be9dd0a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7a98278-c535-4fef-bac7-2d9099af39bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11002d1d-e0f5-4c8e-a5fb-3bd041138690",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75c16228-b24c-41ae-ac62-82a02d3ac617"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bafd542-90fa-4d13-a742-3919e36ad2f4",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3bca431-10a0-4f05-93d3-d5f3784b1871",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d86e663-c159-45bd-80fd-11ba0ad583eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8642f7bd-09b2-45d2-aee6-a298eceb3da9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ab3892a-2162-4de5-816f-6e0fddfd9cbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc8df996-5557-4250-a4e9-d8bdaf5226c6",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53284c2d-8f0a-4b8f-bd5f-b243cfcc26ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a322c4b3-bd0f-472c-a11f-e0066adde729"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5ea396e-5bd1-42e9-9193-bc7aae7b5e82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e1ccbd7-3d8e-40e2-a534-adfd6b0b2d64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09a50f46-105c-4ddd-bab1-16466be31988",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "423a2253-fb6a-4ff9-8b00-dc3ed441d9a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3c8e39b-f6ca-4d1b-913b-c1beebdd0e31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "878cade5-eb0c-4a86-9618-759a253d7b0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c690c97-229d-4eb1-8662-54584c3b758b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2391fc5c-b9e2-44cf-92d8-9c76c744d9cb",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0e75fcd-644d-43de-b749-7374f0e1c37f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae2ad032-bd39-47ec-a3e7-31e56f076860"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d80b0128-92cc-4991-a4bc-a798b7f4c5be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2e21ae2-9b39-4a59-882a-db29e0f271cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d908da3-7d34-4481-b6c5-c5c6112c1382",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efbe84a3-f4f1-4963-bd01-60fea65091cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7731436-a541-4408-bc7c-9052f00403f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "608ad5dc-86a4-4cd3-8fe9-1637736f1ae4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c165049-e2c8-4097-8075-450cfea72f8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e413e241-d344-40f7-8c42-297adbc5b66f",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb3a5782-d86c-4bbf-b3b7-7e8c4b9bc90a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20ea2361-4532-497d-b65c-067980713515"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "853caa9f-4179-43eb-82a8-7626beead873",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbf1f62b-d33b-423e-a496-4a71291a2dc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "017ae738-29d9-4427-a309-a608c2025414",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07dd3291-2a15-4323-89ad-8ad8238fc814",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b429e5ee-162b-438b-b18f-29a2278a5a15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e80b0a6f-cc38-4d07-8117-1127ec46ac66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "785701ba-5e1c-430f-96a5-b254bb65fb8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0014f1d6-8be5-4418-807b-9682bb0e7dd1",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3915f6e2-6ab1-43fd-aeea-95993296c8c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6695712-b894-4560-a6cc-1245afc89d57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55da12f5-84fd-46e6-9bec-0723449852f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b2dc781-b104-44ba-b73c-387698bae064"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33db466f-d71c-4b1b-a6c5-ef638566c29d",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2aae02c7-b06b-43f4-9e22-a8914ff4558c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08b6ab90-a761-478b-982a-93c41e116487"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed2b7f63-a132-408c-8741-132d1d7fc977",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e0e0377-2bfa-4826-946a-6ba609123d90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e3f6350-c327-43b6-b9ba-f72744f97584",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14cd8cd6-ba76-4535-a067-9bae85d5be37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc37dd1e-4529-427d-9cec-a08906ad3411"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7354cae-0370-487a-9811-d2ca6de61766",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "971526b5-1636-4ad4-ac0f-93f658313f4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e20db2a-6db9-42c6-8f46-ad1ec725a23f",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "876a8790-7917-4f6e-8173-c8f3790fe87b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f78da47e-32e1-44c7-8b7c-339ea84b5cff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "201aa9f2-dfd5-4992-968c-788a72a96edc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19d9b4a3-642b-4699-a22d-dcb6ad236cb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7df5ee8e-779f-4658-a649-a068305a0f74",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bbd80d4-5b45-46b9-9040-858653e3e411",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "62273bc6-1446-4ab9-954c-af7d2bb1c477"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8713aca-ba1f-442e-abc1-c18eeab3246c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18ee9e8e-d8af-4e1c-87bd-ee1bd3cb3f9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2ea41dc-e992-46da-93b1-68bf3296afe1",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2011114f-b700-4731-aed4-99c2d61790ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ac7e8b9-bf6b-4204-b1ac-19e9452aae8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e31a8929-ff69-4bf3-86d4-15b7064a851f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26e6502f-3e3b-41c5-a989-4360a154f10a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "115b872a-e016-453b-8f41-0c07b453e261",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9d72ec1-7f06-4122-8f4e-a4dafa545d02",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e824acc1-ddd1-490f-aa4f-f844c4fa1a07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec7ee30c-fac4-40e2-9f51-d8864f3b76f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ad0cfa3-6dc5-4e46-8f6d-448ffdd1a852"
                        }
                      }
                    ]
                  },
                  {
                    "id": "212107b0-a833-4130-b44c-a4996f7960e1",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82fc807a-589d-4c9e-84df-608f7f8d4796",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc71fced-ed54-40f7-9c99-9825cee05c42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eca6a2cd-3523-4c00-8804-b4e40b9db5a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba7391f5-c8e0-4415-a142-becc3766dca7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57788981-c6e1-4460-8557-5e4162ee09ea",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3219da68-ddd7-4ff4-b199-04f5d144d89d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "93fd1e02-2619-447f-b974-87427842d640"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "795b3207-7413-4da4-8084-40e911130506",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42927a41-dde3-4eec-b54e-f0ed600a25ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6520db4d-10fe-42e9-a748-7b41749f5722",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3506e306-0def-4a8b-a9c5-96014aa4592e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "03d9a945-1fb9-4160-8973-b52dfdabd49d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52793877-0cce-4ead-b1e6-24e4f4cc75b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7efa5e7e-9342-4f24-a09f-384d083b148f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2275173a-99fc-46d2-8621-0d442fc7a319",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98bac80e-ced9-45e8-aa0d-0b0da618df2c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9bd6d5c2-e6b2-42fd-a886-242eab47a024"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33294f85-4db3-4e1b-8466-d610d6f9db4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0401fa46-a7a1-4991-9038-a9fe276a86a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93c27d52-7007-474e-8e62-1c655b1a7f56",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc952899-8013-4d90-a5ee-52a142146ea0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "af4bf5c1-796c-4355-887d-e0ae74de0fd0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7857cb4-eef2-4845-8638-84c9f0e1ee14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb182eb7-9241-4d78-aa5c-f64b2cfaa9f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ec8a2fc-06b6-4e8c-80e6-f8b572931269",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45ba8ef7-3c7a-407a-8ccc-7cbe0395eba2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "68c483d7-ffdb-4a22-a2c6-9669aa4d0051"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d206961c-ee1a-4258-a2ad-c040689c1ef3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d671f8d3-2847-4133-acf8-56fe778a12cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80f2c72d-6cfc-4635-a965-a368d73c9061",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "277d7b4e-3559-40b4-8913-a796ec09c1ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c850382-ea8f-456d-86b6-4110574b0090"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b22b25d8-9b65-4c7c-af87-1fbe423e0139",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d40c262c-5cb9-42cd-890e-e3b584ebfa05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bcb261e-7c2d-40c8-b9c8-b5b142cb387d",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88d4d923-a544-4d00-9bef-e1391b7018fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba00028b-825e-45ee-a1be-b777a6031e94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abfca16d-51a4-4f13-8235-cc0a78a2669b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f0de62c-7473-48f3-8924-b3bf2b633a27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de62fff2-e9e8-489b-ba9d-240c1cf13d0c",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ba662a2-e70a-41d8-a955-7c94322fff0b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f234a58c-e6e9-424d-8c5a-765896080cbc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c0657af-857c-401b-826c-8dab6e2dbcd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "164f4440-0ba3-432c-b15f-68e8cb9c579b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8aabaf67-59a8-4e3b-82cc-e2b3af939964",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2085fee2-0630-4f7d-8f03-befad506c3c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e73a7896-7b3d-4bfe-bc07-fbc999862fac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7086a16-a497-4db1-a343-00d033d03ce2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de10bbd9-d791-4fc7-94db-88dfff1e9607"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ad0bedf-4e98-4acb-a8d6-f3caea1c85bb",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "765c4de1-1874-49b7-8c5a-412f8bd07660",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d8b3bade-466d-4023-b96f-d3de26b357a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "440581c9-3332-48be-bbb4-ea71ea4a85eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "938e1840-d540-4511-b09e-745496bfa1ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8af8fede-ecbd-4925-a781-10d0b8a7d4b8",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bf89d7f-b71f-40ec-85ad-e3826edab5d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5194d516-ff6c-4cad-a2e5-59ed9c8cfbcf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbf990bc-c12e-406f-ba00-a919612bb81a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14ea5a0c-8045-4ab8-9150-e48fb39daa1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d949d5c-f769-47dc-bcf0-4d7e762c61fb",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f3b0114-2930-4488-9d5e-e9cec7814928",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "13dc2a18-bc2f-49e2-b335-3f463c0bb0c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19d6a5b6-0bdd-42a6-958a-2335538591ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59c98c46-91e7-4280-992b-38508aded0d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bf1d0fe-a1be-4f8a-af1b-093f9c158c4a",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "870d375e-dad3-4e85-a33f-b9d5f231bada",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a4a61142-0d30-490d-b8ea-885f16b13562"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd2575aa-fdb8-4564-a8df-88a6fb59ae72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd1d28d1-55cb-462a-9c75-0b9b2cbe3889"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9e15a84-1d8f-496d-acd7-01708ccc1fe7",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16ecf07b-47a5-4b4d-a897-fb311c6ce446",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fe17dc8f-46b4-4758-a1cf-d0615d2ee204"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0a327ad-4b5f-4df9-a4ad-71e7537c5fbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88025c08-1f3e-449f-88bb-f784f1ab8145"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76c43d09-3c67-47e6-8089-e26dd774afe1",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5be1e3e3-83af-4ef7-8f48-14071069030a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e29bd654-94d5-4c4f-8380-50b49f74942f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47a3e601-50af-4c9f-98a8-7584b34a63a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70d51392-7ed2-4fdb-aafd-f637fe891b13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cf0abb8-f27c-4a90-b81d-50659be3a9c7",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0fc3c0a-1c9f-43c6-beb8-253f34767588",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6dd5de6c-ada4-4b79-8ee1-9439a717d408"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a193814-8a2e-4d7c-b714-37c25307db21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4026de9c-771f-4a1e-b135-e0fd77c101bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a20cc21-2483-4530-9307-11648d216a33",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95d654b3-f347-4554-bfd3-742ab48283ee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0ac7c409-395d-4ffc-932b-58b8972bbc0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd6939d8-d32f-40e8-9a59-ec8ccee8aea5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25c8640d-64c1-4e01-beb5-d0d0e85dd215"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4b924e2-924d-4f87-9bce-c1c5bd6d0190",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2de196e6-d897-47b6-839d-74185c591a15",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a0a6ad36-b92f-4b97-8db9-bdafb229c85b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49ca0a61-32c9-4acd-9114-c50e9192daaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c800b5a-50ae-41ff-ba72-ab00aaf84ebc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a440a14f-2576-4514-b6c2-5da7f882ede8",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "759c2e76-9c8b-483e-a95c-a5ad285adf3d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a2529533-a041-4409-9819-dbefcff0c0b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bacdb4ab-1ede-431a-8880-dda5678d8128",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91e2c889-849d-442e-9b5f-6dc633301096"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83e18056-d502-44ef-97fa-ecf6566dc0bd",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a883c385-d00c-425d-be90-b490cb8e61ee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b9b7733-f762-45f9-9776-c7858f07b37e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c3beba5-4b47-47db-814a-1dd0741fedcb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97cb4e61-ca86-46fa-bb7f-b21752917ae7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b34e940d-edab-4492-bc68-a00764cbb78a",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73ebe4a0-36fe-4a77-9cd0-0ac23dbb1435",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7fec95bb-7684-4f29-bfe3-e5457de098ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0197fd9b-1174-4668-9440-fcf243755129",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "490a0abf-6a3d-4108-a446-f41faab03430"
                        }
                      }
                    ]
                  },
                  {
                    "id": "155cf865-a8c8-468c-8f22-5795b6672f49",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a5a6269-db50-409a-98f2-4a8af9118964",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d7659ab1-8c62-40cc-9bb8-591d6cec827b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30afe573-5e40-4023-82a2-164cde239572",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5db07a8f-95b3-4159-8b1a-2787e2004d97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb20354b-89ec-43c9-91f3-f6bcf6cfe88e",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b1bf7ca-4cf5-44f8-9ccb-e0b172d823ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d83ac8a-950d-498c-807f-4378308a812f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68c36588-1d18-424a-a03c-1262671fe769",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7382361-a9d7-4a24-b795-8cc8bbd5eec1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b65b4c1-be4b-4a41-833d-a5d20adda09c",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17fce7b1-4418-4b01-a0ce-bd3f3bfc7af4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5923b747-810e-44f3-bd04-19654ef2ce1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b1b62bc-0e80-4e49-9dd4-26432d3fe61a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1f37824-5d56-41a2-b592-9f9033b8853a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "840f45d1-9a74-4043-b44b-2a8d5be2cbf5",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79554720-d62d-4db5-a493-16571bf6b934",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "61fa2cf1-2ec5-46ff-a918-c81f00992422"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bee4c43e-5101-42e7-a3bb-dd1743cc6002",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37139ee8-62d4-4de7-8c8a-22c79076e794"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1b7cae4-7782-4f21-abb7-494e96fd19fd",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5de2b87-3c60-40d1-baa9-e816d895fd36",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9657242a-d02c-4ebf-b06c-b3e69bdf90c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6074078a-a358-411b-a7dd-247ad40152ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edb82dc1-564a-46ac-adac-65445a43aad7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "789a7209-a839-4802-a51b-2562715f236b",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c65bd711-bf78-4e72-8e32-bbb8610dd489",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "873b1be5-2a54-4c80-85b5-af5db50f757f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f317a87-5923-437c-aaf3-92827ae48621",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "134a7f85-b54a-4884-901d-3caa211f4684"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a9e1289-b177-4258-bb47-e32a1444de7d",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0507bf05-4ce4-49c2-b421-68f2a37f306a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c7963a4-a164-4059-8a66-39aa80fe9cf0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71949f44-d5f3-4625-b9a2-dbc0753f1e0c",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3c6bfe0-e2d3-472c-a428-7cf367f488eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a38092d-44fd-427c-b0bf-133fe20fd040",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0730b279-f57b-49d6-833b-fd2b816ae80b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a031f3c-f7be-46ab-bbbe-961912fe9ccd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b310792e-fc5c-4a86-898c-8e8315a586d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6cf47f4-bf70-46dc-bb70-a65c641ae25b"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c690917b-9099-4db4-aacb-5bbb7fef4e38",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "617f63de-2cc3-4bf5-ae1a-2a3d7e90f72c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "13657891-707d-4111-9d4c-7bc1a5430d48",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2e3c1f65-d1af-44d2-ac71-1184e385be7b"
                    }
                  }
                ]
              },
              {
                "id": "d8648c92-0f4c-4d66-9f8b-228fc2271474",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6d222efb-02a8-419b-9161-9b6cd49cdedc",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfa0afc7-49ae-4e51-bb3a-24a612aef56c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "06e763ca-bed6-4b1e-98bb-0ae0d2024477"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe07968d-7657-4bc2-8dd0-0e82646e009a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6e484b50-2abd-413e-9f22-6f1059983f81"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "69d4262d-e502-4a0c-b405-2619d16ce1bb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e958d70c-1678-4230-a6ef-ce97b75357d2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "20ae4a32-f2f1-4ee1-863b-375c267ad8fd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "24b53803-dfb4-401c-a1cf-2e08e14bd2e6"
                    }
                  }
                ]
              },
              {
                "id": "e8799522-360f-446b-ab2b-fad9d7a8ed41",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "dcb26a02-3ea0-4082-974e-3c216fd7ab0e",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d099ebb-c90b-44df-9f29-7e7f78a3fa6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "a428c670-22c6-4a53-8a17-821c8e592c19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4ea7f9f-94b9-48de-9633-5fec7b0d47c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cb6920c-99bb-4f8a-bf0b-9e2afe5e5e54"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "d00f3650-bdfc-4397-a980-31d7fb2b9cdc",
            "name": "Positive Testing",
            "item": [
              {
                "id": "fd2b8f49-31fb-453e-89ea-8326bcc3f503",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e8568498-3b3c-4848-8e08-2e518bce9813",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "32c3c7b4-2bfd-447d-a7ed-22566a78f783"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b7648fe3-5dd2-49a1-a870-51cef18a873c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8dbd02bf-445e-4d0c-b589-226cdb8b841f"
                    }
                  }
                ]
              },
              {
                "id": "c2c04967-f7b2-45e0-bc8f-e198a1659514",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "887514ec-e86e-4a3e-aaed-ec0a77c5db6b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "28bc647f-a7af-4270-a5ea-c775032e8569"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "73ac8a38-8c31-4373-b8ab-e0a77bd7ecd3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "92e1ffae-de0c-416f-a4c5-d43a9504fa29"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c18eb40f-f73d-4cd9-a58c-538ab870b415",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "cba1c54f-581c-432b-a53d-9db516d5208b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a87b7753-2093-4547-876e-29e1ffd60a4b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f653ce3c-155f-4693-8d5e-30d3f9b0e75e"
            }
          }
        ]
      },
      {
        "id": "bea8e3b2-b47b-49a5-b158-e54d7fdf6c6e",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "52b7d3a7-123f-4260-bfbd-32b3113cea41",
            "name": "Negative Testing",
            "item": [
              {
                "id": "cc1071b0-ad09-4f5e-970d-48796da3d1e4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e0f90c33-52e9-4d11-9787-5f21e0a4c331",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1561c477-5eb8-4bde-8806-eed1ec0fd2a0",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "3dbe61a5-49a2-4b2a-a1ac-62eaa2a0c305"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce7a0d7d-6667-4b78-9efb-ef7cc703c751",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4a8036cd-f37c-4ecd-9111-851222b3202a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6530150d-85b8-42b2-b6ab-7ebca1b418ea",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "81c7280c-b294-4c88-8616-60256a633d68"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a94876b8-dd8e-4b7d-b864-b3a009f3e164",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "375404ae-f113-4a03-9385-f71903e9c532"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c92d23d8-16bb-49d2-9605-998ea3945131",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "63e156e2-81ca-40e3-acfb-6537242a8a4f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "21b1dba7-5772-48a4-89eb-7e6d391b5680",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c4206275-b9b3-4afa-8377-da5e893737f8"
            }
          }
        ]
      },
      {
        "id": "89df087a-e7c5-4eb6-be2d-00e856c02a1b",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "d7214e3f-4f60-4c55-92d2-f1a1f9d387ad",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a9501fea-1e11-4430-97ef-567040842f75",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8a1a881d-514b-458d-ab92-da9641a46016",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d34d0b0-3ffb-453f-abfe-8b4848813e9c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fd6e7981-cc26-4ffb-872c-5330782df8a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f39390ed-d60f-4437-912c-e1008f9b0786",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f25f15ca-9325-4405-a161-9e123972c48f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c0d86019-1ca5-4f5a-9d1d-6b5ceb5b8999",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9a13ee6a-48e9-4cf5-9d9a-e3f3a9daf0c7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3084b650-0901-4439-b480-51332e5e7078",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9b5760e4-e247-4a69-ba05-5ee0ac8dc076"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "999b659f-955d-405a-8c51-eacce039cbe8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "3ed58639-d26c-481c-8e1e-1bd78f224c2d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2e1306d1-6c40-4293-9b57-81f440094f07",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "56ae54d8-fd58-431a-a920-967c024959e9"
            }
          }
        ]
      },
      {
        "id": "ec93491d-5e24-4f29-be36-2a70b433ec5f",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "8d1fb1e7-d13a-476b-a661-177272d009bb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4f6aaff7-1719-4373-8b01-3eda65beb70a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3af8d607-bb6e-4fc8-abd7-506b10317fb6",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72aa65ca-6efb-419e-9748-1b5f48d25731",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "df0fa189-15a5-40e8-890b-df37349b3d18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2204bc0-4d07-41e7-901e-1f5176a21c38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ce6275cf-3628-4855-bc85-bd2b8a890f4a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "acd5ab37-562d-4ccd-9625-b3ec11f7b680",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1b190196-1a1f-439b-926c-326d623f06b8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "577a50be-66f4-4650-b78f-672d30957758",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e7e8c5d0-4e6f-42d9-9357-cbc61accc87e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "804d31b7-6881-4198-a3c1-59ae0ed1bdf1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "7dacddb6-9476-40ad-86e7-2d12342d43ed"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "01c2b183-f798-42b4-9f32-93d1062f86f0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "42fc5568-a010-45d7-bebf-c0ca4d520f85"
            }
          }
        ]
      },
      {
        "id": "fc472ec5-8db5-416e-9af1-7e3dd179d1ff",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ec348a97-d30e-41cd-ad32-6fbd928af4ca",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3ed80cd5-25e7-4cd4-87b8-94bbe7ae4584",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "5bebbca7-30d3-45df-99dd-0a7b48861850",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fce0f638-dc80-4a09-a073-ea6ae6e90e3b",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "be8b301c-4aa5-4764-a419-4ceada60ded2",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 37
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 77.45634920634917,
      "responseMin": 5,
      "responseMax": 403,
      "responseSd": 34.96917689485202,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1722991249643,
      "completed": 1722991277274
    },
    "executions": [
      {
        "id": "9a8f7548-8eaf-4996-94e2-4c424037abbd",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "ac72474b-629b-41a2-81ec-aaf0eb7ca30e",
          "httpRequestId": "1f798a7c-596e-4782-9242-648c3b02223b"
        },
        "item": {
          "id": "9a8f7548-8eaf-4996-94e2-4c424037abbd",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "ba1a2a5a-0121-4777-828f-e609f6ea4c18",
          "status": "OK",
          "code": 200,
          "responseTime": 46,
          "responseSize": 0
        }
      },
      {
        "id": "c630f2ab-9e31-43d1-849b-2b16c919a23a",
        "cursor": {
          "ref": "f526952a-2c81-4588-8b5f-f4050e675351",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "36930b0d-2bcc-4116-bcc4-b483eecf2754"
        },
        "item": {
          "id": "c630f2ab-9e31-43d1-849b-2b16c919a23a",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "3c90f3a9-0dc1-405a-b116-77bcf4569978",
          "status": "OK",
          "code": 200,
          "responseTime": 5,
          "responseSize": 0
        }
      },
      {
        "id": "c18acdd0-8c67-454d-bbff-7983f58e4255",
        "cursor": {
          "ref": "7e7529be-8fae-4c5d-ba58-7bb1b7872e98",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "3601e564-5574-4626-b4bd-5e7cfbe579b5"
        },
        "item": {
          "id": "c18acdd0-8c67-454d-bbff-7983f58e4255",
          "name": "did_json"
        },
        "response": {
          "id": "13946727-f109-489d-9002-c8db7a39edd7",
          "status": "OK",
          "code": 200,
          "responseTime": 382,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99f5939c-0066-41c0-9a83-7c0dbf3e0a85",
        "cursor": {
          "ref": "85388a18-eb1f-4de6-96fe-d138ab0e87fa",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "9dbef88c-2f21-4311-a9f3-9336851f3b40"
        },
        "item": {
          "id": "99f5939c-0066-41c0-9a83-7c0dbf3e0a85",
          "name": "did:invalid"
        },
        "response": {
          "id": "1bc4cba5-335e-476c-a760-e4321794102d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99f5939c-0066-41c0-9a83-7c0dbf3e0a85",
        "cursor": {
          "ref": "85388a18-eb1f-4de6-96fe-d138ab0e87fa",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "9dbef88c-2f21-4311-a9f3-9336851f3b40"
        },
        "item": {
          "id": "99f5939c-0066-41c0-9a83-7c0dbf3e0a85",
          "name": "did:invalid"
        },
        "response": {
          "id": "1bc4cba5-335e-476c-a760-e4321794102d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9ed3bbb-c850-4b05-a965-1fb587c4f255",
        "cursor": {
          "ref": "3599feff-69c1-479a-a787-9c476de0b056",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "f9329f34-fc39-47a6-b982-5c5fd079e1ea"
        },
        "item": {
          "id": "a9ed3bbb-c850-4b05-a965-1fb587c4f255",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "248c25a3-320a-4a7d-a95c-a67a8c9d2b3a",
          "status": "Not Found",
          "code": 404,
          "responseTime": 124,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61538c23-897b-4fc8-874b-1dc2d6f348a1",
        "cursor": {
          "ref": "0199b62e-0a18-4db2-a67b-53623a838064",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "12710286-53aa-450f-a258-6406ebee7c8a"
        },
        "item": {
          "id": "61538c23-897b-4fc8-874b-1dc2d6f348a1",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "147ebf46-ecd0-4b5e-9b15-298535fe996b",
          "status": "Not Found",
          "code": 404,
          "responseTime": 73,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2200cdd-9801-4451-88f4-7f2fbf67fff3",
        "cursor": {
          "ref": "18f6acd6-0e44-42db-950f-a7126f68d68c",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "dd168b14-e72d-4840-962c-471384a09d5d"
        },
        "item": {
          "id": "b2200cdd-9801-4451-88f4-7f2fbf67fff3",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "8e52f8be-f1f9-4d05-8cba-c29f12cf39a4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 73,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2442e8fc-9856-42e4-89d8-9c69677a790e",
        "cursor": {
          "ref": "6cdd475f-8bde-4d6c-ab56-c7ffefecfe98",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "61d41b5c-5a4e-4079-a5ab-9d39d71a0b0f"
        },
        "item": {
          "id": "2442e8fc-9856-42e4-89d8-9c69677a790e",
          "name": "identifiers"
        },
        "response": {
          "id": "12caba82-22bc-4e0c-ae89-95cdeab7b30a",
          "status": "OK",
          "code": 200,
          "responseTime": 269,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d27b3cf-2c08-4ace-afb8-cb83e163b98c",
        "cursor": {
          "ref": "eff6ab73-9b7d-4f48-96bc-febb4392d81e",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "70be3290-2b85-4e54-8211-20aa4d9e58cb"
        },
        "item": {
          "id": "4d27b3cf-2c08-4ace-afb8-cb83e163b98c",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "bef014e0-dbc0-4b8c-99d3-0e41a2fa7425",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eac102db-969c-4964-b8e7-b5cc76043110",
        "cursor": {
          "ref": "0261735e-265a-4e48-89ee-b075e39420af",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "66805933-9361-439d-b07d-e9305d048564"
        },
        "item": {
          "id": "eac102db-969c-4964-b8e7-b5cc76043110",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "7bb5f7fe-7e70-4dcf-9bc3-1f55fa3b4735",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83c278d0-92d3-4155-b190-0a9d54bbb060",
        "cursor": {
          "ref": "a9f9d062-9af7-46c2-b6b1-e36197cdca61",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "212d4108-2766-4cff-8374-3f3bde00c5a1"
        },
        "item": {
          "id": "83c278d0-92d3-4155-b190-0a9d54bbb060",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "7c5199b3-c3a8-4ae5-8948-144b84e927d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ed9211a-ffeb-4fff-971d-27cbca499174",
        "cursor": {
          "ref": "2a35430e-d391-420c-bf31-fa6d094ac890",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "33f7d34f-d01e-40d1-bdc8-10a7017b059b"
        },
        "item": {
          "id": "0ed9211a-ffeb-4fff-971d-27cbca499174",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "603f9531-6c76-4831-8811-0d6f25d8e4d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ffb083e-3947-4db3-836e-d8540e5e199a",
        "cursor": {
          "ref": "4793fe58-c553-4e39-99f3-606e21a93f02",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "2b462b1a-6183-4053-bfeb-d213f7f07db7"
        },
        "item": {
          "id": "9ffb083e-3947-4db3-836e-d8540e5e199a",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "b84b9b45-30ae-4f78-a42c-95af26347d6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5d5b058-74f9-47e1-992c-b9ede0d2f54e",
        "cursor": {
          "ref": "797b9038-bda8-4251-b407-02cf7a9d5da5",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "2cc839a3-d03f-4275-b392-6ff455c07a70"
        },
        "item": {
          "id": "a5d5b058-74f9-47e1-992c-b9ede0d2f54e",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "329fbc76-256f-4266-af54-4c5c83ca320e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb25a1f0-43da-45bf-b480-d1746d89369c",
        "cursor": {
          "ref": "b964e5a5-4e56-4614-8436-d870f9c96719",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "3cad63a5-ed32-466f-a3d2-55d011179c37"
        },
        "item": {
          "id": "eb25a1f0-43da-45bf-b480-d1746d89369c",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "3f28c7cf-5b40-4c36-a6b3-82fe052c121c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a19884ad-5e55-452a-a67c-028fbff436d6",
        "cursor": {
          "ref": "d095f888-4ded-4cec-890a-1954f89a0a75",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "4549a63e-03b7-48fb-bed3-be8e6cdb34d0"
        },
        "item": {
          "id": "a19884ad-5e55-452a-a67c-028fbff436d6",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "4ae096cc-d0ad-4d86-a30f-d5bd1b88307c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5ea7a5a-150e-4c56-ad28-2c2affc46d4f",
        "cursor": {
          "ref": "50aee53d-0f48-4830-a2b1-3687a210b509",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "d9041a7e-8d51-449e-ade3-fbac48f1bdd5"
        },
        "item": {
          "id": "d5ea7a5a-150e-4c56-ad28-2c2affc46d4f",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "82f4c869-be4a-4e0a-ba56-09e3598ef8a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bee7a8b4-b88a-4054-a7b9-61ffc15ffd97",
        "cursor": {
          "ref": "5e97eff1-1349-4f5a-9e4f-4470e7185853",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "329d74dd-9120-4b5b-b478-3f57c83c5df6"
        },
        "item": {
          "id": "bee7a8b4-b88a-4054-a7b9-61ffc15ffd97",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "a6db2c1e-58f1-4e91-909e-7639eb5a7f03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efdd7299-5384-4d83-94c1-170f61655bee",
        "cursor": {
          "ref": "29221f89-eab5-4ae5-9962-9cd165089361",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "cf461c79-4127-48b1-9a67-e6b8f9dea56c"
        },
        "item": {
          "id": "efdd7299-5384-4d83-94c1-170f61655bee",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "21989a2d-b464-4847-b34f-1b1a6b862e05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb7dbb06-c485-4d38-83e8-0e90d1bf1b62",
        "cursor": {
          "ref": "88df930b-fb05-44f6-8e37-c19d58923029",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "3f4e8e3d-9c9e-4651-8c1d-f9e788cd8a1c"
        },
        "item": {
          "id": "cb7dbb06-c485-4d38-83e8-0e90d1bf1b62",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "2976ea80-f75e-4512-87bd-e68c7f665b4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f278cb44-dfff-4f2b-81ec-0e6c2aa15751",
        "cursor": {
          "ref": "f5826894-ed57-479d-99bb-777286262939",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "d780e8bf-6aa8-4a4a-93ac-30b73ad86d26"
        },
        "item": {
          "id": "f278cb44-dfff-4f2b-81ec-0e6c2aa15751",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "ea0d9213-31ef-4ab7-a237-70a4332b15d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31717fff-896a-4168-82dc-ec6d8017ffea",
        "cursor": {
          "ref": "0c9bab0c-028d-4980-a376-34929de40932",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "a230a5be-a87e-4d5d-a287-4fc3995569e8"
        },
        "item": {
          "id": "31717fff-896a-4168-82dc-ec6d8017ffea",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "17298710-397c-4e37-b0fd-5056aac73dfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fa040f6-a294-4ff8-89ea-d4e89c124376",
        "cursor": {
          "ref": "72c05fc6-c362-425e-8972-27b9a302304f",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "c06237b6-d959-4323-9a1e-f7d9f7caa8d4"
        },
        "item": {
          "id": "3fa040f6-a294-4ff8-89ea-d4e89c124376",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "e800329c-a284-4664-a56d-1690738f43b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03a1fa6d-c4ec-43b6-83bb-c2243a930d72",
        "cursor": {
          "ref": "598230be-7e81-4d57-9890-c72cf837c4ec",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "990ac866-1595-4e3c-ad90-c29293ea7cc9"
        },
        "item": {
          "id": "03a1fa6d-c4ec-43b6-83bb-c2243a930d72",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "6b9d5a92-1b67-4bb9-bb84-201838fd06b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11f741ae-09d2-4fac-9805-8f7a95ddf3b3",
        "cursor": {
          "ref": "fa2612ac-a245-4119-af86-c592ea74f012",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "3c47c2f2-da9f-40a6-a0be-b97ce3335998"
        },
        "item": {
          "id": "11f741ae-09d2-4fac-9805-8f7a95ddf3b3",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "5fc4beef-3bcd-4aaa-85b0-1e95ba61a1ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec2a776f-349d-40c3-9d30-de0098fe56a1",
        "cursor": {
          "ref": "083bc699-28e1-43d8-8839-fa87630c2aad",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "4335045f-1b44-4920-8e40-adde68160633"
        },
        "item": {
          "id": "ec2a776f-349d-40c3-9d30-de0098fe56a1",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "818b5a7f-c908-467a-8e75-7723e732558b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d32e623-afc5-4f5c-a990-eb4febcf955d",
        "cursor": {
          "ref": "990896fb-5ad4-4b30-99c1-9b8e0ec35935",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "7f76b701-f151-413f-900d-fe9edb448daf"
        },
        "item": {
          "id": "2d32e623-afc5-4f5c-a990-eb4febcf955d",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "00838c68-6bf3-4ae1-8eb4-b612ccdf9697",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3e6f9b6-a53c-4831-86d7-f629609ee5de",
        "cursor": {
          "ref": "20fe97ee-c09c-4d92-b522-49e914b12ca9",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "b8e37dbf-2834-40c9-ab0b-3c1e0743c359"
        },
        "item": {
          "id": "d3e6f9b6-a53c-4831-86d7-f629609ee5de",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "b8e1933f-0757-4b67-8d33-19307c45f884",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bee2546-eacf-4626-9886-0e2e054fdc87",
        "cursor": {
          "ref": "fde73706-e729-4881-8381-70d58ec29d00",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "9a24d143-4e60-4721-9ed1-a8eef1a2c527"
        },
        "item": {
          "id": "1bee2546-eacf-4626-9886-0e2e054fdc87",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "b4254e0e-4f1c-4a0a-8e2f-0b684929ebe3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5f9cc66-5c70-41b6-86a8-4d2c68f6a6d2",
        "cursor": {
          "ref": "13d3fb03-77ac-439c-8a17-70f23a9f5a81",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "8f4ee1ed-6d08-41db-9d02-69c55448d4bb"
        },
        "item": {
          "id": "c5f9cc66-5c70-41b6-86a8-4d2c68f6a6d2",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "494e4de5-b271-461e-b1f1-d128bc4e24cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae55221e-7085-4c32-8b26-d42711194a93",
        "cursor": {
          "ref": "7dac9931-ba05-480f-a08e-6055a68d747f",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "6dd3156d-76f2-4c47-b7db-1e1c0045f976"
        },
        "item": {
          "id": "ae55221e-7085-4c32-8b26-d42711194a93",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "a1fe7d04-9370-4ad3-a4d4-1aa71ed0e3c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0515e28-1169-4c38-afd9-27a720ae3b99",
        "cursor": {
          "ref": "08fbb3f2-0e40-4d18-aa31-d0bc9610899b",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "285dcad2-59a0-46e0-9cb6-5a7c46af0e57"
        },
        "item": {
          "id": "a0515e28-1169-4c38-afd9-27a720ae3b99",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "a2ccd7e3-7c4c-4db2-b6d9-9c0e030165fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e466b7d-12dd-40ed-af7b-3ccb78081456",
        "cursor": {
          "ref": "887e066c-a82e-49d5-b555-3f49cae5e081",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "9a3ef23b-e497-47f3-9557-99a056b438bd"
        },
        "item": {
          "id": "7e466b7d-12dd-40ed-af7b-3ccb78081456",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "faf3205d-b28a-4ce1-9001-24fbe5425507",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5decc1e6-8d62-4b1b-aada-e056cfb9b6d9",
        "cursor": {
          "ref": "ac693b59-f51b-41cb-babc-65c0c715b073",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "5d3f3569-6553-45cf-8e24-5637314f0609"
        },
        "item": {
          "id": "5decc1e6-8d62-4b1b-aada-e056cfb9b6d9",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "b44a2a8c-2004-4580-88d9-86a91dbeb47d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b2f6b7e-472d-4f95-b7ee-f4580c3e383c",
        "cursor": {
          "ref": "039b32f8-e2ea-4eff-bbe4-35fb0109851e",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "173d862b-96e8-4ec9-8b97-d9232f936030"
        },
        "item": {
          "id": "9b2f6b7e-472d-4f95-b7ee-f4580c3e383c",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "bae7a6e8-7da7-4ca6-8cec-83e5f9b472a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13c1508f-c8b0-4000-9ba9-d2dae2a1f177",
        "cursor": {
          "ref": "ea5c04b8-42da-4e5f-97b3-fd7c853c5947",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "8ccbe127-1709-45ff-b006-f80572504e51"
        },
        "item": {
          "id": "13c1508f-c8b0-4000-9ba9-d2dae2a1f177",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "456fe078-7253-4a75-b059-d2d0d7f6d101",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51eaa0c5-d943-49ce-84b6-9b51e99422e3",
        "cursor": {
          "ref": "9794a7fe-7529-4a3c-a906-479e38b40c54",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "ed2fae01-9591-42f3-b6ce-a1bb41e86df5"
        },
        "item": {
          "id": "51eaa0c5-d943-49ce-84b6-9b51e99422e3",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "b8bd5717-b694-4df2-88d8-2a221f1cf3f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbebdcd0-00ef-409b-ab82-f60cef9563f7",
        "cursor": {
          "ref": "ca1c7cc6-b90d-4d63-8bfa-637713f4f347",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "e5548780-4204-4587-83d9-2d7277dd34fc"
        },
        "item": {
          "id": "bbebdcd0-00ef-409b-ab82-f60cef9563f7",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "10ec6162-2b53-4fc3-a85d-96826ce3b958",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de099bba-ab9f-4842-b6f2-963091b9b993",
        "cursor": {
          "ref": "0592d47f-ef28-4099-8c5a-e34a56317fa7",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "29e1ae47-102a-41b0-a472-d58485439efc"
        },
        "item": {
          "id": "de099bba-ab9f-4842-b6f2-963091b9b993",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "0c735258-7576-45d3-98df-875d453b4444",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7f886b3-c0cc-48f8-b0a3-93ea68b63606",
        "cursor": {
          "ref": "638eb9cc-40e0-45a1-b731-d2387320ee88",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "8bf382d8-fb67-4ce8-9e4e-f3bcda429149"
        },
        "item": {
          "id": "c7f886b3-c0cc-48f8-b0a3-93ea68b63606",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "d6a45527-b452-4f99-9209-b1263496d9ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac441053-bde4-4398-9e91-5628a45a7367",
        "cursor": {
          "ref": "bd9faa19-15c7-4350-9a00-82661c2c57a1",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "cd6d160b-bac9-4fb3-95d1-796845702970"
        },
        "item": {
          "id": "ac441053-bde4-4398-9e91-5628a45a7367",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "cb12dc70-5244-43e6-9f51-f817611e10a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8658805e-8b6f-41d5-8b2b-419be4d306cf",
        "cursor": {
          "ref": "c81129ea-853c-4941-a38a-5886f90c7929",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "9fb81c9d-e8b4-4a98-aed0-9fd0c09174c4"
        },
        "item": {
          "id": "8658805e-8b6f-41d5-8b2b-419be4d306cf",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "07a4c3ee-4af4-4946-b0aa-09c2707929f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e407f6d-f442-4198-924e-d17ef9f735fd",
        "cursor": {
          "ref": "31b0ff30-3346-4c55-8fb5-56d22c6ea8df",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "457df5d6-acc6-4f88-9d1f-5bd844a78da2"
        },
        "item": {
          "id": "1e407f6d-f442-4198-924e-d17ef9f735fd",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "d7ab931c-38a0-45a8-9a09-3132fed20198",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cac63d3a-6833-4e81-80d6-c71e19205ea7",
        "cursor": {
          "ref": "035e857b-6907-4361-9310-4578fce1daf8",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "0ade448e-9008-4335-95b3-b2674ac24f19"
        },
        "item": {
          "id": "cac63d3a-6833-4e81-80d6-c71e19205ea7",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "8fdf65e0-5dc8-4e2b-b56a-35a1b8d1f952",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c546a938-a0a9-4c40-a537-234da02968e6",
        "cursor": {
          "ref": "46c7981b-56eb-4876-9e23-00a739145e84",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "0274d67f-d8c5-48d9-87d1-0b8273eadb1a"
        },
        "item": {
          "id": "c546a938-a0a9-4c40-a537-234da02968e6",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "68eff6d2-b0ff-4262-b586-df78443a3a64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b254424-9bb2-4726-bee4-e8718b7d4d64",
        "cursor": {
          "ref": "48699474-eff0-4d9d-bedd-24bd96e63aa5",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "e742c727-9171-48df-9f31-faf26dc2efc5"
        },
        "item": {
          "id": "5b254424-9bb2-4726-bee4-e8718b7d4d64",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "2ab2fe19-8b26-4972-9821-e747497931ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba42ff1c-8fd6-4c17-8b14-32dd6c561b6a",
        "cursor": {
          "ref": "e42cdb08-2c3f-4c87-9327-d7494c10670c",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "fb388dd3-5c3b-44c8-964a-6350a1504120"
        },
        "item": {
          "id": "ba42ff1c-8fd6-4c17-8b14-32dd6c561b6a",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "9fc4c054-bd6b-4efb-966f-b9356503ebb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "010a71b0-fbfc-47b4-8c24-3b40c4c1c080",
        "cursor": {
          "ref": "a9ef0388-f718-41a2-9c10-b472e1ce8627",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "4d2763a3-514a-45d0-a9c2-2a5b7f3af9a0"
        },
        "item": {
          "id": "010a71b0-fbfc-47b4-8c24-3b40c4c1c080",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "f50023a0-8da7-4c76-9855-1f9d2a787797",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daceed4d-4cee-4dde-b211-8e62141e853f",
        "cursor": {
          "ref": "9ef5bbf5-fdd2-43c6-9582-1a6edfc0f84b",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "ec135c2b-c545-45cd-ae37-08d930b1a7a5"
        },
        "item": {
          "id": "daceed4d-4cee-4dde-b211-8e62141e853f",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "5c622110-d346-4ad2-8344-d7a3b510c788",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6012196a-dcd8-4df6-a53d-d23c51baedd3",
        "cursor": {
          "ref": "91b4a36d-2771-41da-a4ba-692eb1ab1cb3",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "86f592e2-dbf1-4fa4-aa75-d2a1e186069a"
        },
        "item": {
          "id": "6012196a-dcd8-4df6-a53d-d23c51baedd3",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "ff493c04-1684-4630-be9a-ed8f6753d844",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18c0a05d-8af7-4947-968b-a3b6dd720511",
        "cursor": {
          "ref": "014ff6f5-6243-4c7b-ac9b-8996a9e93d4a",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "a4aba60f-5cfe-4f37-ac2c-25b8081d3e41"
        },
        "item": {
          "id": "18c0a05d-8af7-4947-968b-a3b6dd720511",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "a09f4c86-4801-4840-97e9-870fddf966c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fa989c7-0ad3-496f-95d2-4cd5b60f19b1",
        "cursor": {
          "ref": "c7c4aca5-2b71-4ab0-b5d1-a1ba63f55c70",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "0e791ef7-c1a9-40e8-a968-441a7744410f"
        },
        "item": {
          "id": "9fa989c7-0ad3-496f-95d2-4cd5b60f19b1",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "c60b0c44-aee8-49b4-ac2e-893ba0b3228c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66b12ff4-b2d6-4ad0-ba4d-35191bf6dc9b",
        "cursor": {
          "ref": "15d7a411-1b96-4b39-a1fe-e3104d68b075",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "92f76fb5-b8ce-453b-bae2-36a9c6d390d7"
        },
        "item": {
          "id": "66b12ff4-b2d6-4ad0-ba4d-35191bf6dc9b",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "f4605552-2a84-4150-a4c4-84fcf49d4b05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efc0bacb-2c19-4fb5-868a-66b99d4e326c",
        "cursor": {
          "ref": "159a1204-d761-4035-8788-ea33725eac00",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "434b9618-aa7c-4ac0-91fb-b1647c928c4f"
        },
        "item": {
          "id": "efc0bacb-2c19-4fb5-868a-66b99d4e326c",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "aa6615a6-3639-48b3-9b78-fd560ce01032",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57670c19-85db-4b2e-aac8-953be1bd131e",
        "cursor": {
          "ref": "049ca61c-72b9-4683-ac8b-9d1ad4b4aee2",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "9427269d-054f-464c-bc66-644c3feb3270"
        },
        "item": {
          "id": "57670c19-85db-4b2e-aac8-953be1bd131e",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "a6b494cd-b69d-44d8-8026-f337acc8b77b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7a0eaaa-4975-4dd7-bf8e-8633d6a3bb50",
        "cursor": {
          "ref": "fe8c06b2-b277-45ff-88f9-ec70e5cb9d8e",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "32ef260b-6eb6-4850-b62c-3ca9a28f0179"
        },
        "item": {
          "id": "b7a0eaaa-4975-4dd7-bf8e-8633d6a3bb50",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "05a6b95d-c825-436a-9807-74d07f6913fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f12700c-8bb2-42c4-9e0c-66bf88d48354",
        "cursor": {
          "ref": "68b5338c-5f21-43f0-b0f8-2195c832edac",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "b21d0b99-b9e9-4aaa-9f6c-0b3868db0404"
        },
        "item": {
          "id": "1f12700c-8bb2-42c4-9e0c-66bf88d48354",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "3c4d0b9f-f4e7-443e-9f83-565a6d98d7b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cba79ee-276e-4e08-8610-21ab30965c62",
        "cursor": {
          "ref": "dd21e687-1857-477e-af23-125c0198f6b2",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "01174867-d9dc-4355-af9f-4de3e9388a73"
        },
        "item": {
          "id": "8cba79ee-276e-4e08-8610-21ab30965c62",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "c0272ed5-55ac-4e65-a527-067b2822686c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cad28e64-dcf0-4081-a01f-3713253587b6",
        "cursor": {
          "ref": "8a92d4d3-c7e4-4338-8cee-e7ee31f75520",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "563a1cbd-d983-4756-81a5-b1df35bcff46"
        },
        "item": {
          "id": "cad28e64-dcf0-4081-a01f-3713253587b6",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "dda566e4-38a6-4641-bac1-21eb42b4cd55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d760a104-7527-4000-9e8d-2fc18ba38f54",
        "cursor": {
          "ref": "fb62d0a6-f5f6-4bcc-946c-b8e7247cf3e1",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "f3e5f19c-ea3b-4f84-8ce9-e31b9fc126fa"
        },
        "item": {
          "id": "d760a104-7527-4000-9e8d-2fc18ba38f54",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "734756a8-fcdf-4fe7-88f4-075c3143f051",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdb079e3-805d-423d-b052-e079d796823c",
        "cursor": {
          "ref": "e916b906-9cc1-4fae-95b6-0747cf14254a",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "2fda7785-2b44-427c-ad1d-ee34efea37dc"
        },
        "item": {
          "id": "fdb079e3-805d-423d-b052-e079d796823c",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "a251be71-f0ee-40f0-81e3-e79e894c8d31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b496d15-609b-4d45-95d6-2fa3bc2caceb",
        "cursor": {
          "ref": "d4d9dc15-a991-438c-a35d-b9484ee5a090",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "cec11bab-f967-49cb-b097-356005adcb63"
        },
        "item": {
          "id": "0b496d15-609b-4d45-95d6-2fa3bc2caceb",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "3cee6839-ab33-41d4-af6d-d54539b30987",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f95406d8-54ee-444c-9c17-be51f8282324",
        "cursor": {
          "ref": "90e51efd-53eb-4d04-9106-5715abbd9917",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "68e5a15c-536d-481a-b285-4c696d29dc6d"
        },
        "item": {
          "id": "f95406d8-54ee-444c-9c17-be51f8282324",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "d92d9997-753e-4bc5-a5dc-6e765b91de71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9920e66a-d80e-4479-a7bc-11153eaa39f9",
        "cursor": {
          "ref": "749f8c1a-1b17-4207-b00b-8df0baef2a1a",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "27a4617d-5b23-4b6e-9664-7a80655e3d87"
        },
        "item": {
          "id": "9920e66a-d80e-4479-a7bc-11153eaa39f9",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "05509504-3a83-46d6-b5a8-33259be61676",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9091c1fc-a967-4fbe-a130-8bb2d6821bf0",
        "cursor": {
          "ref": "824e9113-2f41-4a27-8adb-3861a8f33b54",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "a64f4151-10ab-4b79-9553-d83f4d222699"
        },
        "item": {
          "id": "9091c1fc-a967-4fbe-a130-8bb2d6821bf0",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "8214cb20-7ba6-491d-b3c9-48f37cdd96cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f0c7ab5-ea88-4105-b93f-91cac53da42a",
        "cursor": {
          "ref": "74b95aff-6a58-4cef-8b34-3d0659d606fd",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "98e9fb5a-b502-410b-a68e-1cda09b1d25c"
        },
        "item": {
          "id": "4f0c7ab5-ea88-4105-b93f-91cac53da42a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "448f3b35-1028-46d1-8088-dc45328a7b00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0489ac09-e77f-4d85-82e5-742d8f719964",
        "cursor": {
          "ref": "01468de9-922d-41c0-9f62-39cac252d0a2",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "f288ac49-be82-4314-9056-04cfff23f218"
        },
        "item": {
          "id": "0489ac09-e77f-4d85-82e5-742d8f719964",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "250a07c3-bfc8-4843-b9a2-fc431b5129ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ec52601-4ebc-45c7-b2b5-ca2beaf5fef9",
        "cursor": {
          "ref": "ea43bb03-da63-4ec2-b1b0-af945b11220d",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "3e034f90-532f-4587-881d-57a1ae805010"
        },
        "item": {
          "id": "2ec52601-4ebc-45c7-b2b5-ca2beaf5fef9",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "a9c65a65-a9f8-45a5-a0e9-d72751963ec6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65ee6822-77e2-4d95-a3f1-a89e3f5381cf",
        "cursor": {
          "ref": "d64c75b9-7817-4a9b-948b-fc682b38bbf7",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "6df46050-da2d-425e-9425-8af800a25aec"
        },
        "item": {
          "id": "65ee6822-77e2-4d95-a3f1-a89e3f5381cf",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "e15f9c15-3c72-4563-88a3-da74ac33c787",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "671d2e5b-2447-461e-89cb-67dc368ec86e",
        "cursor": {
          "ref": "a12c5314-47b3-46ad-80f5-ccc5bf26df7d",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "769d3847-c972-4a8c-8fda-5c0828e84e06"
        },
        "item": {
          "id": "671d2e5b-2447-461e-89cb-67dc368ec86e",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "3fe2d2ec-26c5-463b-a3e4-c960350e703b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5358ef28-7e4d-44d7-9550-59d5bcc841f0",
        "cursor": {
          "ref": "7010d9cf-fd39-481e-9696-6e5e646a593c",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "5f1e9277-b520-4dfd-8a49-874ea76c5bf9"
        },
        "item": {
          "id": "5358ef28-7e4d-44d7-9550-59d5bcc841f0",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "cb6560b3-7c1d-47ce-bc89-37f9ce40d347",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bd71a20-9b64-45a1-8fd2-235978cfaa01",
        "cursor": {
          "ref": "5b5fa925-f8dc-4ab8-9436-d02c460b5a99",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "dd8556b8-4658-4482-b1d4-08472687d428"
        },
        "item": {
          "id": "6bd71a20-9b64-45a1-8fd2-235978cfaa01",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "0563345e-1d1c-4978-9c1c-0bbe9e95e75c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e3134d2-bf71-4afc-9c18-27a453cee475",
        "cursor": {
          "ref": "b46979ff-4256-4459-994e-318b318efd25",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "2f13de3a-fc2c-4491-b8f2-b53935a82f0b"
        },
        "item": {
          "id": "9e3134d2-bf71-4afc-9c18-27a453cee475",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "9129058e-0906-4f0b-914e-d79e6df57000",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d12c45f7-3bf7-4ad9-9920-30b33584923f",
        "cursor": {
          "ref": "10e3d3c7-4cbf-414b-9cc3-6a9dfc3d55d3",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "d5168a90-ffc8-440b-807e-411fb8845225"
        },
        "item": {
          "id": "d12c45f7-3bf7-4ad9-9920-30b33584923f",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "82739d50-b40f-4d28-8521-31cff3747e74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26a3bb75-5d52-4e7f-a9e2-1e77d9f36543",
        "cursor": {
          "ref": "5285444f-44a3-43a7-ba14-3777f4f1841e",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "ce74d5a7-130e-494c-a62f-fa53b59b5693"
        },
        "item": {
          "id": "26a3bb75-5d52-4e7f-a9e2-1e77d9f36543",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "45927c04-104d-47d6-940f-776a94586bd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbc90dd3-aa6f-441b-8d92-8b654a461dc5",
        "cursor": {
          "ref": "a636a8ca-b32a-4496-a5c2-cc9f8e90fe63",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "73abce28-e816-4d30-a0d5-e20ca9343257"
        },
        "item": {
          "id": "cbc90dd3-aa6f-441b-8d92-8b654a461dc5",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "16d27d2d-0aec-4848-9240-15ab665fdec9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2cb6e08-5b89-41e0-9983-eb3a0e33649b",
        "cursor": {
          "ref": "6529f682-f01a-4e12-8320-32bb9e1c18af",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "1e7ecf7e-e779-46b2-8b21-d7374084cb52"
        },
        "item": {
          "id": "d2cb6e08-5b89-41e0-9983-eb3a0e33649b",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "b05cdd01-a305-42b7-894c-7a0844cace3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e82b6893-8424-440d-a371-cf220a9cc25f",
        "cursor": {
          "ref": "dd73bc57-21ce-43d0-a121-266775764b04",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "ebdefcd2-c59b-4598-a7bf-c4f7601cf74a"
        },
        "item": {
          "id": "e82b6893-8424-440d-a371-cf220a9cc25f",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "c42f0c02-a29c-4942-a415-e681dd572e5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01851122-b3ed-4118-bf12-88bb16083003",
        "cursor": {
          "ref": "c0e3d676-58b3-4095-afe2-f2c8f4fc302a",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "93fb2fc2-4bba-4d1b-a7c6-d6b2468396b8"
        },
        "item": {
          "id": "01851122-b3ed-4118-bf12-88bb16083003",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "dac93da3-f644-4bea-9beb-4d2600651b5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3c6e85b-11b1-4bd5-b4f6-08d807661eae",
        "cursor": {
          "ref": "83a2db80-ce46-4e5c-b860-3ef35182d053",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "81159ff5-579f-4607-a326-1710f9fe20f0"
        },
        "item": {
          "id": "c3c6e85b-11b1-4bd5-b4f6-08d807661eae",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "bdd518df-1fb3-4cfa-abe1-433a1ffd5ffb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50b919e7-e807-418c-b585-7e806adcb9af",
        "cursor": {
          "ref": "da993f5e-fe49-42cf-812f-17ef56ed0402",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "892cefdc-b229-49ea-a6a0-94b6492d82ff"
        },
        "item": {
          "id": "50b919e7-e807-418c-b585-7e806adcb9af",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "5601c327-f458-4597-a275-a9f4fac8db1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "905c2ed0-60df-4524-bdb7-1b040f9f34b3",
        "cursor": {
          "ref": "035408c9-2571-4d8e-8151-51b57fe3f9cb",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "daaa19e0-df29-4fb1-b101-a77a4e5866bb"
        },
        "item": {
          "id": "905c2ed0-60df-4524-bdb7-1b040f9f34b3",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "f2481263-5d92-459b-8cc9-a168ea920efe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a553968-e8ce-43bc-a313-6788d1737912",
        "cursor": {
          "ref": "5bdf60b8-aded-4855-a934-21aa79667d00",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "56948d66-0e8c-41ba-84e3-f63fd1908600"
        },
        "item": {
          "id": "9a553968-e8ce-43bc-a313-6788d1737912",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "4b8d8284-ddb2-4558-9965-daf8904da1e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b155cd5-d309-43a2-9f91-7d3f54f8f6e6",
        "cursor": {
          "ref": "53e433ed-364b-4309-b075-98a45a863d45",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "dcd07c07-f607-4a0e-82e3-a7563e78b7c1"
        },
        "item": {
          "id": "5b155cd5-d309-43a2-9f91-7d3f54f8f6e6",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "68ada2ed-5de4-4243-9b23-7f01baffa3b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea7f9c8b-d43c-4c6a-bcb3-be4bc8ac1c67",
        "cursor": {
          "ref": "63df47dc-40f4-429a-823b-ae148f55717b",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "726edafc-f366-48ee-b5e7-3cf332c92638"
        },
        "item": {
          "id": "ea7f9c8b-d43c-4c6a-bcb3-be4bc8ac1c67",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "6efb12c8-6f17-4df2-98f9-b9dedd9b5a34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "317294ef-02e5-42e2-894c-4faf347a5a87",
        "cursor": {
          "ref": "3c0e96ca-da74-40a6-9ce9-9797e287c66b",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "76765a40-fcb7-4dbc-ac1d-32963f26ff71"
        },
        "item": {
          "id": "317294ef-02e5-42e2-894c-4faf347a5a87",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "248438f8-eeb5-4d45-9f14-6c07dcfe64de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b373aae8-97c2-49b0-b6f5-8bee90bf58af",
        "cursor": {
          "ref": "6d54d9e3-265f-40a2-9be1-4a6a49e00ec9",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "321e94b0-2e70-4646-8a54-3651ebce9f4b"
        },
        "item": {
          "id": "b373aae8-97c2-49b0-b6f5-8bee90bf58af",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "cdaf2d5a-eb0b-4ab2-ba70-7895ce0d97ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bc1330f-f1a2-4ef1-8c65-ae322f9528c1",
        "cursor": {
          "ref": "315477e8-6602-4218-9ef6-138eb52efc0d",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "a6aa23e2-47d5-470d-963d-e79a1dd6b691"
        },
        "item": {
          "id": "0bc1330f-f1a2-4ef1-8c65-ae322f9528c1",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "09bee915-c8ca-438c-9058-d6652cc90724",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d28c92a3-f916-4883-a814-02ca308c5d32",
        "cursor": {
          "ref": "09c4037a-52c1-415a-8419-ed2992008ca2",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "07667946-aea0-48a9-a668-bd49aa1c7289"
        },
        "item": {
          "id": "d28c92a3-f916-4883-a814-02ca308c5d32",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "6320f9a5-c9c1-4565-a190-8aeab438f777",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "730b3aba-1ee1-4661-9a58-416d416b4d42",
        "cursor": {
          "ref": "536d9bab-17e3-4ccf-812e-c3540da2ed11",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "4d0e998c-4b02-469a-bf51-2723433bc439"
        },
        "item": {
          "id": "730b3aba-1ee1-4661-9a58-416d416b4d42",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "beae4463-7399-4a4f-a328-d1af71628822",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03cd9160-38b9-487d-acac-3c389dae44f6",
        "cursor": {
          "ref": "2cd55cb2-5d86-4813-9ded-e41f2ee5468b",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "4edf3af4-11a7-4225-bed8-24350ab39762"
        },
        "item": {
          "id": "03cd9160-38b9-487d-acac-3c389dae44f6",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "38a632c5-b696-475d-98d5-f55a2ed840a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5973f096-5122-4649-8844-06b40a444b37",
        "cursor": {
          "ref": "4e23a6b1-8fc9-46bf-bc32-0076c0ae787c",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "5fc3ca85-7fb3-416a-a7b4-8e30899fe479"
        },
        "item": {
          "id": "5973f096-5122-4649-8844-06b40a444b37",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "967d2b61-06e8-40bc-9b91-9dc0f2cea12b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f50c58c2-48bb-40c1-88a4-efbff548f1cb",
        "cursor": {
          "ref": "d6e35da4-08bc-4364-884b-e0bdfd5c1d54",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "1b927a64-b99c-4fae-b73c-4a0494a02406"
        },
        "item": {
          "id": "f50c58c2-48bb-40c1-88a4-efbff548f1cb",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "556ca016-e19e-4961-a8f7-edbc17bdb9c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3421a208-7c42-4e49-a2c4-c32ee20de618",
        "cursor": {
          "ref": "722f8f36-4470-4366-93b5-5a7a87c8c017",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "df6153e1-dc3c-4048-a2a1-e513d1f62660"
        },
        "item": {
          "id": "3421a208-7c42-4e49-a2c4-c32ee20de618",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "3143d18c-0dea-467a-a7a3-4af0fc377f17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79f4935f-4f6d-4a55-be62-b8b95ee075a4",
        "cursor": {
          "ref": "cc08cf64-1ab4-4880-a317-b24558e49458",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "96db060a-99ed-499f-8af2-7571fad1404d"
        },
        "item": {
          "id": "79f4935f-4f6d-4a55-be62-b8b95ee075a4",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "d13ae163-4d80-421a-849d-7fba5a52b47f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5709e3f0-1c2d-4dc6-b907-5e64209a57da",
        "cursor": {
          "ref": "11f05b35-b974-4cda-acb0-fa364c6d15d8",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "960b5f69-8c74-4003-ac87-8d56c7f36f05"
        },
        "item": {
          "id": "5709e3f0-1c2d-4dc6-b907-5e64209a57da",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "bdeb76f9-d626-4edb-b185-3aaf857c3268",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1aa5462-480a-4162-8bc5-b70f4e62e458",
        "cursor": {
          "ref": "94bfa053-0202-4c1d-96fe-0aab3b99fcc6",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "30ff50cf-3e29-4a80-98b4-f16f2daaf317"
        },
        "item": {
          "id": "a1aa5462-480a-4162-8bc5-b70f4e62e458",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "41beaad9-2c19-4e17-a7e0-122273eb77ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e760d9fe-3691-44a7-a30a-427bad5b2975",
        "cursor": {
          "ref": "fb359546-85b4-4074-b73c-d2d38a00fe21",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "1f3ed29c-fa20-42a4-97a1-f4712f8d0a17"
        },
        "item": {
          "id": "e760d9fe-3691-44a7-a30a-427bad5b2975",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "a8fa7be5-4af7-43b5-8885-b90bc5697b7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "699e4130-e764-4be7-941a-2b55d61d2e00",
        "cursor": {
          "ref": "a1e79769-ccc5-43cd-bb20-c84d67fc43cd",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "8e1b11fc-05ed-4864-b997-69b310e7c51e"
        },
        "item": {
          "id": "699e4130-e764-4be7-941a-2b55d61d2e00",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "2c191056-e5f2-4715-b6de-47485dbf7caf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ca29dae-5730-4886-b03f-f38ce12b05b9",
        "cursor": {
          "ref": "66885f84-9353-4777-bd42-16968ce1012b",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "3daa47ad-9ef3-499c-a241-2321ac53a674"
        },
        "item": {
          "id": "1ca29dae-5730-4886-b03f-f38ce12b05b9",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "aa3669f0-4544-49cf-b6da-c541954db3c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1eef9d1-db34-4280-b28e-c22583311d2d",
        "cursor": {
          "ref": "eed841b3-f161-4ad4-9370-45e04e1b40a0",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "9e7971a5-c3d4-4259-86e3-06f926699763"
        },
        "item": {
          "id": "a1eef9d1-db34-4280-b28e-c22583311d2d",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "a1c2492d-73ad-45d3-bbf1-f5b39a53dea1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:101)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e9201e8-f5b7-4e5f-96c0-318020096375",
        "cursor": {
          "ref": "441ee7a0-16a2-46e8-aef2-0fb7a27f83f7",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "f74dc126-7857-431b-990f-d9f1f2b2f01e"
        },
        "item": {
          "id": "0e9201e8-f5b7-4e5f-96c0-318020096375",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "b4ca4a66-9f29-458e-a65b-cc923ffed47a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "4137586d-43bf-44e5-b198-91f53a11af41",
        "cursor": {
          "ref": "958c34cd-7d19-42b5-8623-482336c1e406",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "91575480-f1ea-404f-b1fa-4eb4ca970d3c"
        },
        "item": {
          "id": "4137586d-43bf-44e5-b198-91f53a11af41",
          "name": "credentials_issue"
        },
        "response": {
          "id": "429a23ea-5fb9-4ff2-8de7-ea33752aec50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "87e88f9d-40e7-4ceb-9f2f-39d43974054b",
        "cursor": {
          "ref": "ee1c82b3-5746-4355-8d50-c8189f457f17",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "cf2d4826-f950-419a-ba41-b802036c8b05"
        },
        "item": {
          "id": "87e88f9d-40e7-4ceb-9f2f-39d43974054b",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "d2baceea-a423-4862-b086-9970ab3e3ce7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "16a9fed2-8bdd-4dc0-b603-4f4e3202b74a",
        "cursor": {
          "ref": "8a8b4038-313d-43a9-8613-a10362ccac43",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "e8a954f0-6e18-4b48-bd29-e53c0a9b7e3e"
        },
        "item": {
          "id": "16a9fed2-8bdd-4dc0-b603-4f4e3202b74a",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "47cd9374-c3d1-404d-9d72-0829f6bd12aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "a8be1909-5928-4b06-9fd3-bee376666739",
        "cursor": {
          "ref": "771c154a-175a-46dd-b069-8b8107bc281f",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "c5399e7a-66c7-478e-ba35-72653f0526b0"
        },
        "item": {
          "id": "a8be1909-5928-4b06-9fd3-bee376666739",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "dfc70e87-c1c3-4759-9a54-c081856a68b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "9ce640a6-8b87-4a3e-bd93-4d801b315496",
        "cursor": {
          "ref": "74218505-ad48-418d-8654-67b333e1f035",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "53684c8f-d17b-4ad2-a795-9f0af54c6f9b"
        },
        "item": {
          "id": "9ce640a6-8b87-4a3e-bd93-4d801b315496",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "2b5d3c27-9f47-4919-aeaf-b78dc7ffe025",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "0b9807f4-2c8a-4591-9166-4c57dbeb19e7",
        "cursor": {
          "ref": "8d0441a1-d8ba-4df7-8b0d-edf0a5215e41",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "ad584b3b-5fe7-4793-8119-803659251328"
        },
        "item": {
          "id": "0b9807f4-2c8a-4591-9166-4c57dbeb19e7",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "e2652fb8-2b2f-4430-bde4-e1f0f02f5886",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "b0cf4eaf-a66f-4dc8-a2ae-885e0bcf74e2",
        "cursor": {
          "ref": "25cb7e6c-e980-4fc8-8eaa-b7d8099f6752",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "88eb2e9d-97e4-41b8-b66c-0f043d9eccb8"
        },
        "item": {
          "id": "b0cf4eaf-a66f-4dc8-a2ae-885e0bcf74e2",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "057c0e8c-b01a-45a9-a379-d971cd1026a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "415e2b7c-1b69-4e15-b428-96fea16d675d",
        "cursor": {
          "ref": "e84f7f36-a509-4316-9b6c-7182a481f926",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "1897f232-4fb0-410d-b319-23f943ee79da"
        },
        "item": {
          "id": "415e2b7c-1b69-4e15-b428-96fea16d675d",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "18a10825-9d0c-4036-8557-bd681f272148",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb159cfb-2ae4-4a9f-a387-0f8cd019bd92",
        "cursor": {
          "ref": "74fd18b2-9532-4f4c-b2c8-68fbfd3585fe",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "b7112f72-d7de-415b-b7f9-1cf9a2c11e26"
        },
        "item": {
          "id": "bb159cfb-2ae4-4a9f-a387-0f8cd019bd92",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "763a8c66-4919-4f8e-a186-0c9389291f27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08eaca1c-59f3-482a-91d5-74889ecf7939",
        "cursor": {
          "ref": "a6ea9679-f602-4db3-bec0-d2a4607e168a",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "50dc9baf-9e12-49a4-86d6-ecb978864cea"
        },
        "item": {
          "id": "08eaca1c-59f3-482a-91d5-74889ecf7939",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "30ddc0a0-a29f-47b6-bee3-220a433fc0b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d55543c-4df4-4c93-afe0-e75b4d694d7f",
        "cursor": {
          "ref": "0588d3f1-abb6-43af-84a5-e012fb440196",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "1ddf5407-a9be-44a2-9b8e-5e008d89d89f"
        },
        "item": {
          "id": "5d55543c-4df4-4c93-afe0-e75b4d694d7f",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "23e46319-48d9-466b-a853-1b72ccec9f81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae93cf38-cad9-488f-b741-78596cef1ce0",
        "cursor": {
          "ref": "db11feac-a069-4f86-9a3e-b66ae733b477",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "765c50c6-b957-47fe-b53e-bd5ffab76681"
        },
        "item": {
          "id": "ae93cf38-cad9-488f-b741-78596cef1ce0",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "09a7c98a-cbf2-49f0-ad87-a667a590950f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc46bf25-303f-4f6d-83c5-ad24719f1dcb",
        "cursor": {
          "ref": "15c1cb57-1bcb-439a-9b56-d0156e2ccc62",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "94d9d197-0159-4028-bcb1-9215573214eb"
        },
        "item": {
          "id": "dc46bf25-303f-4f6d-83c5-ad24719f1dcb",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "f4f3b86a-3127-4e1c-a12a-579ab00d6cd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55dc506c-c78f-4495-a911-e0312dd1801a",
        "cursor": {
          "ref": "d31fd23e-42b1-4dbc-b5bc-38b45e9a438d",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "d10219b2-d4c0-4441-87d1-d9ed9e3f1970"
        },
        "item": {
          "id": "55dc506c-c78f-4495-a911-e0312dd1801a",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "800681dd-ac13-435e-a437-b80f39e052fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6230da17-6211-4f7d-a4ad-cac048fc50fa",
        "cursor": {
          "ref": "a170a9aa-ce33-4b8e-897a-d740d28e00f7",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "811f10da-3693-440a-bc36-3d3a442b3efc"
        },
        "item": {
          "id": "6230da17-6211-4f7d-a4ad-cac048fc50fa",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "9d6c076f-cce0-432f-a716-9161bb3fad60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85015985-dbce-49a3-9295-d78cfea3c31f",
        "cursor": {
          "ref": "2690b424-f752-47c9-bbcc-7a49b7f5f674",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "a478f5e3-ac10-4b8d-ad68-81890a32deb3"
        },
        "item": {
          "id": "85015985-dbce-49a3-9295-d78cfea3c31f",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "43554f6c-50dc-47d5-99a6-ad7d373ac646",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a850530a-f044-4066-b1a1-515430ab0cfa",
        "cursor": {
          "ref": "ea2c34a5-2b5b-4915-8f79-2a83b3918990",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "c10e0ca7-41fd-4069-b7f5-3d3daf367b38"
        },
        "item": {
          "id": "a850530a-f044-4066-b1a1-515430ab0cfa",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "620eee63-2b86-4c34-9d39-9349a3f143d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8714fc28-a87b-4492-9d20-171e0578f1f4",
        "cursor": {
          "ref": "eb3aa7c4-21e1-4313-bec5-2eab04d9ee85",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "111a9acb-60d9-46ca-b483-1c171eba94d3"
        },
        "item": {
          "id": "8714fc28-a87b-4492-9d20-171e0578f1f4",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "d59d9bc5-833e-40f4-a69a-30e8eab97158",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ed20e5a-ba41-4e97-b4f3-a5d157995ded",
        "cursor": {
          "ref": "25a68bcf-153f-4dcd-815d-08f302e3703c",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "50a9b4d8-b888-4ea9-b268-9f2e11990e43"
        },
        "item": {
          "id": "8ed20e5a-ba41-4e97-b4f3-a5d157995ded",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "24b04e2c-e9ac-4465-b9f0-192f8ac9fb1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddc7b631-7230-4b18-a96c-3edcc1620cc7",
        "cursor": {
          "ref": "4a9e45ad-a474-43fb-a77a-74b38e051b50",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "052dfbf6-2f93-4a42-af25-8ed4ac8dd853"
        },
        "item": {
          "id": "ddc7b631-7230-4b18-a96c-3edcc1620cc7",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "1342fa17-dc38-4c9a-9d4c-5ccfc273adb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fcad8ae-21f3-4c8e-99ff-be8bba536d69",
        "cursor": {
          "ref": "462329f0-9ebb-4089-96b5-f0672e928b4e",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "f586906f-8fb8-403d-af00-c130fe915d73"
        },
        "item": {
          "id": "0fcad8ae-21f3-4c8e-99ff-be8bba536d69",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "85a301fb-3b2b-4311-a73d-cce79fa56f5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15c13705-a815-40aa-82eb-27deffb86ac0",
        "cursor": {
          "ref": "5a45f092-2096-4f15-a11b-5ba24cd2a252",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "af149c5b-d415-4a46-aef9-d2ddbf0b8214"
        },
        "item": {
          "id": "15c13705-a815-40aa-82eb-27deffb86ac0",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "bb28bb3f-a8c5-43b3-97af-532f6ec6dccc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ca56de1-64fe-4df1-9e0e-614391ac0e1a",
        "cursor": {
          "ref": "182358ba-4b83-4ef3-aa6a-ec1bce953031",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "49bdf1f6-62fd-4ea0-ab3b-1658fb618670"
        },
        "item": {
          "id": "8ca56de1-64fe-4df1-9e0e-614391ac0e1a",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "4bff7b1a-9bce-4ed5-a233-c3e55c49b921",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e28fbd8-803b-4c98-b450-7d65dff7392c",
        "cursor": {
          "ref": "e13102d0-684a-43f7-8a2c-9c776c5c74fb",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "7b4a8c1f-a804-4ac1-a7c3-43f5c2f3bde5"
        },
        "item": {
          "id": "0e28fbd8-803b-4c98-b450-7d65dff7392c",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "d721e96c-0c11-490f-b8f7-e6685509adc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79602dd2-8a48-4919-ad12-9b19a4998399",
        "cursor": {
          "ref": "cef12747-2c5b-45b6-b17a-35ebbf655d06",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "f234dc5f-47ee-4f4a-ad07-5779efc780f0"
        },
        "item": {
          "id": "79602dd2-8a48-4919-ad12-9b19a4998399",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "92eedda1-4986-49cf-8d65-7e9baac7a4d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6b8e140-79af-4e8f-a681-be5c70a5b935",
        "cursor": {
          "ref": "48f4c596-423e-4adf-b914-51a803900df8",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "34281bb0-5e85-4abb-9e99-98cc2b8575ba"
        },
        "item": {
          "id": "a6b8e140-79af-4e8f-a681-be5c70a5b935",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "169ae0e5-d2a3-4033-8f0f-051c86be55ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fff12a2b-22fb-4306-9fb4-c28ddee481c9",
        "cursor": {
          "ref": "e5fe6f92-9d52-46fd-a8f6-63e7b124c559",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "c7e2d777-5c68-47bd-aae5-16ebe19c87ff"
        },
        "item": {
          "id": "fff12a2b-22fb-4306-9fb4-c28ddee481c9",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "c9a34f48-e3ad-4ef8-ae18-2e14b11f1d30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 403,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5aa6cd76-6c60-4e64-924e-3a376b8314a9",
        "cursor": {
          "ref": "063e8e00-ca33-4b6e-9626-07a390594593",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "c6c479a4-60c3-4c78-b30d-9b2693463107"
        },
        "item": {
          "id": "5aa6cd76-6c60-4e64-924e-3a376b8314a9",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "4c1ad3b7-230f-4867-86b9-43489ae247b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e72d53e8-ad4b-45f7-8dbd-5b9786160cdc",
        "cursor": {
          "ref": "2da78dbd-c77a-4689-aa3a-abab1ae57db0",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "c297caa4-7738-4b42-9a92-10d966d6e85a"
        },
        "item": {
          "id": "e72d53e8-ad4b-45f7-8dbd-5b9786160cdc",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "a772609b-822a-49d9-b0f1-385726be120e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "214031c1-c7a2-4686-b7bb-cc88c5315c95",
        "cursor": {
          "ref": "9d19a9a9-5fb3-42bd-8faf-c29166b99654",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "a1d5c536-1cb5-445c-b023-164de70cf522"
        },
        "item": {
          "id": "214031c1-c7a2-4686-b7bb-cc88c5315c95",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "a43e2b34-c85e-46dc-a7f5-efe528485356",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85440e45-d10e-43f2-af29-fbb4244cfebb",
        "cursor": {
          "ref": "79247912-c1c3-44ba-8393-0c679bb59618",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "f91c68e9-ab60-478a-9804-d60619b030b6"
        },
        "item": {
          "id": "85440e45-d10e-43f2-af29-fbb4244cfebb",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "5d5774d1-696d-45f1-85a9-1995c8b215eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72661865-f8a6-447c-ba14-33c29434dbf3",
        "cursor": {
          "ref": "80f1adbe-0e4e-4dff-9627-474ccfe8b8c6",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "e537eb3d-bdaa-4a04-83ff-937f1d2b2dd1"
        },
        "item": {
          "id": "72661865-f8a6-447c-ba14-33c29434dbf3",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "ea77b8c4-b09e-43ea-9f33-88fc523fe374",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aee38852-205a-4bf8-bb49-d4ed94f6029a",
        "cursor": {
          "ref": "3d2f4f22-4d29-4186-93c1-3bec1c193858",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "17ec1452-aa49-423d-82b7-290d15ff7d28"
        },
        "item": {
          "id": "aee38852-205a-4bf8-bb49-d4ed94f6029a",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "f362cee4-9f5c-45a4-967c-f9cec810c4fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ab6f778-adec-404e-9d24-455ac6b83036",
        "cursor": {
          "ref": "6cd2d94f-e24d-44dc-9c04-38d0eee48e03",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "c9a338ed-02c0-4cc7-9d86-d7c938ed21a7"
        },
        "item": {
          "id": "6ab6f778-adec-404e-9d24-455ac6b83036",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "dc3242ca-7675-4eeb-a508-a81eb2a785ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebec490b-886d-4a83-b710-d02ded125b3c",
        "cursor": {
          "ref": "901acc99-6cb1-45d9-a38b-f830b058977d",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "2a7c7fc2-7a9e-4078-ab8c-f23e7fd8b5f8"
        },
        "item": {
          "id": "ebec490b-886d-4a83-b710-d02ded125b3c",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "a8a1b5e5-b2e0-4c3d-b5fe-af16d64b8bde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c3a8ea8-ad1b-4dcb-9449-d072cfa2ec62",
        "cursor": {
          "ref": "b4fa13a6-35d9-4576-97e8-8c3ec341a5d1",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "5f34eea8-68a2-421d-93dd-8a9b6a9b3a13"
        },
        "item": {
          "id": "7c3a8ea8-ad1b-4dcb-9449-d072cfa2ec62",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "ce0cb14a-302a-4a4d-816e-d9a5fb4e2390",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32573feb-02fc-48bc-82fb-6a3fca498720",
        "cursor": {
          "ref": "b1849147-46ef-4c8f-89c3-bdf11915d7a8",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "d3b4c141-595c-456b-8de8-a1294c9d0a0e"
        },
        "item": {
          "id": "32573feb-02fc-48bc-82fb-6a3fca498720",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "2b4ba21c-cf19-44a4-8b72-1d5a6b8c48c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b200f4c-9d92-46a9-9584-875374b9b082",
        "cursor": {
          "ref": "e6fda707-e7ec-45f7-92d9-4a2d9e0f22ac",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "de01ad04-2713-4c2e-b6c3-284383a60755"
        },
        "item": {
          "id": "3b200f4c-9d92-46a9-9584-875374b9b082",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "6fee8f44-618e-4a2c-9734-b68d4b030875",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1435d442-d942-49b6-b85d-68ea8372307f",
        "cursor": {
          "ref": "482affce-bd65-4d1d-b62e-ad546f19bf09",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "7de505c3-ab58-4b41-ac65-2ffddd7fe1a4"
        },
        "item": {
          "id": "1435d442-d942-49b6-b85d-68ea8372307f",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "60792824-96c9-460f-9df2-a0dcb6a11a05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df0a837f-0904-4998-bc9b-1e4ae683367a",
        "cursor": {
          "ref": "2bd4e952-7e37-49e8-8ca5-341bcd5d9953",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "8b2f12e4-7c8e-4a44-af41-0bd7f02ba5e5"
        },
        "item": {
          "id": "df0a837f-0904-4998-bc9b-1e4ae683367a",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "369e7cd4-e148-4e9e-a402-6f6980a2ea75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc974aeb-fdde-444f-9c71-9c69ff285589",
        "cursor": {
          "ref": "46c04af8-9b72-45e5-8712-56b0fc70e70d",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "9c6010e0-f98e-45b5-87ce-d9a8fb983470"
        },
        "item": {
          "id": "fc974aeb-fdde-444f-9c71-9c69ff285589",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "e04de67a-61c9-4fd6-8d56-41cf414147b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2c60615-2347-4d52-877d-e9d00f738a89",
        "cursor": {
          "ref": "5afb5de7-cb79-4bdd-9bec-aa5838dce615",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "d3647c62-4b4b-413b-88e5-c332fc01b5cf"
        },
        "item": {
          "id": "e2c60615-2347-4d52-877d-e9d00f738a89",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "65a2da59-eb18-424f-9af2-b129b6ff31d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96273009-0b4e-4418-9eed-c949689fe7cd",
        "cursor": {
          "ref": "62f4fdbc-3994-4974-9cfe-1404480aab1a",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "045ce6ad-4bef-408d-b6b6-e098111ca3f0"
        },
        "item": {
          "id": "96273009-0b4e-4418-9eed-c949689fe7cd",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "01ad6b31-0e6f-4b63-a0d4-c01316c5a13b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62f0bd84-88db-45a8-87d1-3e328bca4e27",
        "cursor": {
          "ref": "445c8ddd-f244-4023-bc21-779affc41116",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "7c8dd490-a9c5-4966-a890-41bccf149961"
        },
        "item": {
          "id": "62f0bd84-88db-45a8-87d1-3e328bca4e27",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "c325563b-2989-423a-bc93-c5fa1c6b1768",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 73,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "039b16fc-a399-4c43-8a6d-953d43816fc7",
        "cursor": {
          "ref": "bc3ad454-7f78-4e1c-87fe-15c49c5c0ff3",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "7b733b3e-c59a-454b-99f7-f5f920aa6691"
        },
        "item": {
          "id": "039b16fc-a399-4c43-8a6d-953d43816fc7",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "ea2aead2-1a50-4a98-ad27-896f55520ecd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "208e2d0b-08e5-4847-b945-f40bb651aebc",
        "cursor": {
          "ref": "a5c3ee81-6f74-4db4-b73d-fe80641b4602",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "cd95d18c-5ade-444c-bf6a-42f4973c5972"
        },
        "item": {
          "id": "208e2d0b-08e5-4847-b945-f40bb651aebc",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "87c8d6db-4f85-4b5f-b65f-96671d7261ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2d8f1c6-588d-4a9d-b7e7-cd09a1a04bb8",
        "cursor": {
          "ref": "587c35ab-e3b4-4458-b4e2-2263a57e3077",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "55b51186-2335-4af2-b6e3-f8f88e6f199d"
        },
        "item": {
          "id": "c2d8f1c6-588d-4a9d-b7e7-cd09a1a04bb8",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "12de355f-a86f-4073-a447-8a97b3756997",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67147981-48da-4590-824e-bf3ccf4b5508",
        "cursor": {
          "ref": "f7dae6d7-7fb3-4332-b741-c375a8cb2aef",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "89caddad-c258-4f5d-99cf-e67dbdf81f7e"
        },
        "item": {
          "id": "67147981-48da-4590-824e-bf3ccf4b5508",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "7481d39a-2b2d-45bb-8977-0307e7125111",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e43c3066-8815-4617-8541-a3436b634288",
        "cursor": {
          "ref": "ce2b631c-db6b-48ee-8893-032b73650ce9",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "0a7c9d9a-76fc-4926-834c-0a1b3c718286"
        },
        "item": {
          "id": "e43c3066-8815-4617-8541-a3436b634288",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "31b3937d-27ed-4e48-8693-09c5e42fb052",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a00d79bf-ae43-4dcb-a399-98b82445aabb",
        "cursor": {
          "ref": "c027a3e6-d94c-48fe-a15b-630e71a85ee2",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "31175ae2-3fa3-4516-a1e4-002749cca115"
        },
        "item": {
          "id": "a00d79bf-ae43-4dcb-a399-98b82445aabb",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "bbb13871-b44a-41d3-acab-c6a5ed060ce5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcb83061-4b2d-46cb-8285-8bbf9f156488",
        "cursor": {
          "ref": "e857c533-d8ae-49f6-820f-4549e642b1ae",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "56e3ccae-9936-41d5-be34-e77c955e6464"
        },
        "item": {
          "id": "bcb83061-4b2d-46cb-8285-8bbf9f156488",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "f8425e59-a196-48ff-8ee1-11c889fe6ee9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a9db31f-56d4-438c-8cc3-ae15cbc75057",
        "cursor": {
          "ref": "bd7b9261-eb68-4b51-85e6-c2eb27f10873",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "7613a7f8-18fb-4d28-a35d-eae9477a3c88"
        },
        "item": {
          "id": "4a9db31f-56d4-438c-8cc3-ae15cbc75057",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "e748298b-9d0b-4121-824f-0f925c5cf0f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f909812c-263c-415f-8372-f0c7a85c0c68",
        "cursor": {
          "ref": "1ec24a92-2f2f-4064-aeec-79283ca3683a",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "8648f468-8881-4603-aded-a80c7f989391"
        },
        "item": {
          "id": "f909812c-263c-415f-8372-f0c7a85c0c68",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "6da59414-aca4-4ddd-84aa-e9ebde06d692",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac142d62-ac9c-447a-b5ad-e383fc78cbde",
        "cursor": {
          "ref": "1a308a29-51f8-4d2b-a950-ee54c83ae0eb",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "73de3a26-822f-42ae-912a-79db38984729"
        },
        "item": {
          "id": "ac142d62-ac9c-447a-b5ad-e383fc78cbde",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "c2b6a7fd-f9f0-496d-9a70-0acd78bc18a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b122ea81-7ed0-465b-9237-306c270f60fe",
        "cursor": {
          "ref": "15ffbc1f-f146-4edd-95fb-11574849ab8e",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "f2aa0794-002c-4d4d-bcb0-7c74983ed446"
        },
        "item": {
          "id": "b122ea81-7ed0-465b-9237-306c270f60fe",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "6b3a42c7-c3d5-44be-8656-4fc65f565b7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "741d5d38-bd35-4ac0-b7b1-90e1a93da3c7",
        "cursor": {
          "ref": "6be6e373-2e10-4fc1-93b7-a552647ceb28",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "1c6e4481-4f1e-4067-b394-bba2553ede8b"
        },
        "item": {
          "id": "741d5d38-bd35-4ac0-b7b1-90e1a93da3c7",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "5df4e01c-f85f-4e33-9bd4-678687922049",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fa4d821-6bb3-4512-b244-2d5008b5849b",
        "cursor": {
          "ref": "552a3c93-13b4-444d-8bd4-ae01048770f0",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "99a117fd-304a-481e-aa14-95fe4218dd5d"
        },
        "item": {
          "id": "4fa4d821-6bb3-4512-b244-2d5008b5849b",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "893893ee-c192-4fd4-8dfb-fd7291c34789",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66187f4d-01a8-45b3-ad0e-cd99e68722e6",
        "cursor": {
          "ref": "badd1d96-5899-407f-8cd8-d99fa2027781",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "8ac160fa-2c9a-42e2-b48d-be695e059927"
        },
        "item": {
          "id": "66187f4d-01a8-45b3-ad0e-cd99e68722e6",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "da28a4d0-c8d3-48c0-9b4a-45e35a9105b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31b410cf-6755-4314-88d7-0d4da267e95e",
        "cursor": {
          "ref": "24a2a57a-667e-4b0c-83ab-2ade881a5736",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "2ed045b7-6e62-4b3f-9698-911f54ad052c"
        },
        "item": {
          "id": "31b410cf-6755-4314-88d7-0d4da267e95e",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "1caad795-5980-47f9-9ef5-38e27af48e0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "473853fa-dfda-4f17-8409-5148cb25af32",
        "cursor": {
          "ref": "8eacaf91-11bd-4590-8fbb-355ac8edde4d",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "7ce6e5b8-d14a-4a29-94ff-80eeb7ef793e"
        },
        "item": {
          "id": "473853fa-dfda-4f17-8409-5148cb25af32",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "a7297c55-4eea-40f4-85e2-860fe9d56fcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f069d90d-9e52-4993-b6e7-a5c85bcb1689",
        "cursor": {
          "ref": "b3930774-3490-4927-bc36-8181cd2f1af4",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "77b096ed-66df-4de1-b3ad-1b01af406e01"
        },
        "item": {
          "id": "f069d90d-9e52-4993-b6e7-a5c85bcb1689",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "eac6d831-3ae9-4abd-bd93-c768ff578a04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc72217e-5cfe-49e2-b492-da980c310535",
        "cursor": {
          "ref": "b45c7d71-43bd-424d-a0b5-0f6588a78c68",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "cc3a30b6-90b3-4974-91f0-7e2c09e393d0"
        },
        "item": {
          "id": "cc72217e-5cfe-49e2-b492-da980c310535",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "6e372924-7d26-4c0a-8c23-737c8e02ea0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f98a8905-5d88-4b9f-91ae-367f8ad6fd97",
        "cursor": {
          "ref": "1a27c16a-42ff-45a7-ae99-9c69dab75479",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "629eef2b-221a-425c-b5ef-4eca21e0179c"
        },
        "item": {
          "id": "f98a8905-5d88-4b9f-91ae-367f8ad6fd97",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "1359924c-6151-4080-8896-a1ff2278ab7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "331859fe-e0c2-4240-b7ec-0c3a7be96d80",
        "cursor": {
          "ref": "3925ae4e-95bc-49ff-8dfe-6db6e76cbfaf",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "d321dcbf-05f4-4ffd-863a-8084984cf4f0"
        },
        "item": {
          "id": "331859fe-e0c2-4240-b7ec-0c3a7be96d80",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "02dd59e3-b12b-4f0c-a134-b77f62dff377",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f60f49c2-50c0-4a13-92da-78f7277d4bfe",
        "cursor": {
          "ref": "2dca7f4b-9698-4a79-a6f3-1fa8f6583574",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "2742c8aa-25fc-4bfa-8980-255595deba82"
        },
        "item": {
          "id": "f60f49c2-50c0-4a13-92da-78f7277d4bfe",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "53e622cd-b370-48f8-a65c-4d08340a1449",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c47cef8c-dca1-48d7-adf3-363793aedd90",
        "cursor": {
          "ref": "ec79fa58-9ffa-49bd-bb7e-f994efe0dc6f",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "0fdeccd3-dfe4-46d4-9444-790069e496b2"
        },
        "item": {
          "id": "c47cef8c-dca1-48d7-adf3-363793aedd90",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "3401c681-e809-47e4-bb9d-962df7549de2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6397a10b-eebe-47fc-90fd-69c1af22ba86",
        "cursor": {
          "ref": "79ed1c0b-363d-4862-b50e-2d806833ad26",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "bb8a6074-5b69-471f-bcf4-dd74b3bf066e"
        },
        "item": {
          "id": "6397a10b-eebe-47fc-90fd-69c1af22ba86",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "5481b39d-80be-4c1a-a5a5-5ff9f0760ee3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c56ab380-ddf6-4cfe-ada5-4e541d9deffa",
        "cursor": {
          "ref": "eab3a873-cdf9-4d09-9b56-8dcb664e1ee4",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "509cdbd4-0a60-4c3a-a643-0cbce6d3a411"
        },
        "item": {
          "id": "c56ab380-ddf6-4cfe-ada5-4e541d9deffa",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "4e15d94f-eabc-4208-9c7e-f24ec63274be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bedfde0-ac7d-4cb8-974d-5323806c40d5",
        "cursor": {
          "ref": "9e0bdbf3-48ca-413a-a45e-ae7a627f65be",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "81945e05-669c-4bb4-8b0c-37a3574b29d4"
        },
        "item": {
          "id": "4bedfde0-ac7d-4cb8-974d-5323806c40d5",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "bfe8c733-169f-44fb-85a8-85d781a2908f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79fe179b-2dff-4d54-9d6d-b403ae60b65a",
        "cursor": {
          "ref": "8ea5d3e8-94f5-41a5-983c-1683b314ac18",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "340ff88f-5f15-4a46-a685-227aff19b52f"
        },
        "item": {
          "id": "79fe179b-2dff-4d54-9d6d-b403ae60b65a",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "c06a854c-aaba-41e5-ad2c-d35999a697fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ef41507-e228-4168-a00a-eab83d4636f3",
        "cursor": {
          "ref": "ff14330d-8e44-4766-9580-6026b7558ab5",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "e5c2ade0-c082-4d7a-bb27-8f1e66af1755"
        },
        "item": {
          "id": "8ef41507-e228-4168-a00a-eab83d4636f3",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "88c155ea-bd13-4682-a447-290a3d4bf811",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "564653b3-17a2-4085-b51d-7bd532181d4b",
        "cursor": {
          "ref": "02d478b2-dcc0-47c3-9ec3-62abf7f415ce",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "2df58edc-a0fa-42e4-af5c-00e297352eb7"
        },
        "item": {
          "id": "564653b3-17a2-4085-b51d-7bd532181d4b",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "efdc3597-fcd7-4ef4-a8f1-458424fc7a12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "911e5358-f670-41db-8a4d-d9350e9eb8c1",
        "cursor": {
          "ref": "bcba7ad9-e0d6-4f40-a02e-3c2472d4135e",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "8e7aedd0-7533-4040-ba62-da9c50b39a7e"
        },
        "item": {
          "id": "911e5358-f670-41db-8a4d-d9350e9eb8c1",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "8c8bc85e-2147-448e-a021-54e6d796442a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc041012-b557-45ad-84a8-4b3181d9a3db",
        "cursor": {
          "ref": "94c3d288-b801-4fe0-8dc8-800d8f427cd3",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "7329356f-fdb6-46a6-8c9b-f1c0b19e45f2"
        },
        "item": {
          "id": "bc041012-b557-45ad-84a8-4b3181d9a3db",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "2c886877-392a-4831-8386-1c89458627ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbb76c7d-58e0-411a-b9c8-4d4f1980c004",
        "cursor": {
          "ref": "bc36bc71-bba2-469e-88a3-6854753c76fc",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "cf8aa321-218e-4cb3-a1f5-67ba4a635b09"
        },
        "item": {
          "id": "fbb76c7d-58e0-411a-b9c8-4d4f1980c004",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "6528a2d5-803f-4de0-8567-41275a2cfd65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "266eaf12-e680-4950-bfad-7d8849dc5f50",
        "cursor": {
          "ref": "ecca43c9-f690-40fb-b01a-a6b26a5ed900",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "95264fc7-aa03-48f5-ad49-c816942c43ae"
        },
        "item": {
          "id": "266eaf12-e680-4950-bfad-7d8849dc5f50",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "30c949f8-1202-43d4-bfca-b1ec2141ab88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bec13afb-fbdf-45d6-96b9-47ccfdc9560b",
        "cursor": {
          "ref": "68e9e316-0616-4b5a-ab93-a083788d0d00",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "90cbbe5c-89ce-46c4-b503-5e5812cf0af0"
        },
        "item": {
          "id": "bec13afb-fbdf-45d6-96b9-47ccfdc9560b",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "d392f92c-1db1-48df-875d-8a8ac965a034",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "254a35a1-ccf3-493f-846f-e7b25eb193f0",
        "cursor": {
          "ref": "9712f121-a7e7-498d-80ee-c3de2925b080",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "1145846f-2b6d-4cbd-b753-d027fc99f33c"
        },
        "item": {
          "id": "254a35a1-ccf3-493f-846f-e7b25eb193f0",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "373bd919-173a-47a6-86f1-a4d661460bbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ef98f44-236a-4334-9a69-6a15c9ad776e",
        "cursor": {
          "ref": "3559aa40-8bcf-4c82-a7c2-c6a1ba55ffdb",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "2026f191-af3e-4aa2-9783-d6e2325a51bd"
        },
        "item": {
          "id": "6ef98f44-236a-4334-9a69-6a15c9ad776e",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "b67ad67f-4f22-42e6-8af2-b70e2003b2ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bd377ba-bf23-4e5d-9d78-9f8e9acb6622",
        "cursor": {
          "ref": "dcb83790-bcf0-4ed0-bf48-267ae0d0494a",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "6d0c6570-e06f-4404-8654-6863bbfb8932"
        },
        "item": {
          "id": "7bd377ba-bf23-4e5d-9d78-9f8e9acb6622",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "89b83584-af39-46c4-bce2-0549415a28f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04fb6b4b-5691-4698-85a9-2df09ac8a531",
        "cursor": {
          "ref": "52b07269-cc27-4659-8bbf-e43f4edbf3ed",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "1fabd360-7b42-4d8d-9b2c-739932248ca9"
        },
        "item": {
          "id": "04fb6b4b-5691-4698-85a9-2df09ac8a531",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "9ae397c0-9b60-4e23-acdf-6899cafccedc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4c61e15-af39-4f9d-8e8a-37c13ff92465",
        "cursor": {
          "ref": "87051c16-0be3-4ebf-b028-8ae205bbf3e2",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "364dde8c-d92b-405a-a213-193d179f49e4"
        },
        "item": {
          "id": "e4c61e15-af39-4f9d-8e8a-37c13ff92465",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "ae9234e7-ebc8-47c7-9342-c248dae70ea9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f53ebec-2068-491e-9a9c-4940838134b2",
        "cursor": {
          "ref": "edd59aa9-1304-407e-9104-a8e4728c52bc",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "4da57504-c232-440a-914c-73cab7c8e522"
        },
        "item": {
          "id": "8f53ebec-2068-491e-9a9c-4940838134b2",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "a71dc33b-f862-4628-b464-6d859ff6790c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e670ca87-531d-4f27-a4eb-890bbd35afa7",
        "cursor": {
          "ref": "093fc6ac-7f99-4118-8c95-7f5269a92c86",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "1f2db88f-e0cf-4c14-a1c0-5f581af6beb7"
        },
        "item": {
          "id": "e670ca87-531d-4f27-a4eb-890bbd35afa7",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "b57f541d-9626-4d84-be3c-0d9542a0aa4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d656a104-bb41-4102-9b2c-21b36de9dcf4",
        "cursor": {
          "ref": "0a83fee5-43de-427d-9432-80e0aa61090f",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "e7bb2fcf-41e8-435e-92cc-17aed0bd201a"
        },
        "item": {
          "id": "d656a104-bb41-4102-9b2c-21b36de9dcf4",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "d8060b4d-5f05-4e1f-9452-86ad853acd39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8d2b1cc-afb2-436e-a306-b945dcf15097",
        "cursor": {
          "ref": "b24bbd4d-c696-4ef0-91b4-15517e93f3ca",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "be4579f7-0e5f-495d-9413-73d8fb165d51"
        },
        "item": {
          "id": "d8d2b1cc-afb2-436e-a306-b945dcf15097",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "c6f5c388-a4a5-49dd-92af-d4532a67fa7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1d51b16-332a-4f7e-a8ee-35ccdae3b77d",
        "cursor": {
          "ref": "93e3e70c-0a3f-44da-8521-b7c4577efe1d",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "ae50e466-4750-41c5-a9ad-589b28920e5b"
        },
        "item": {
          "id": "f1d51b16-332a-4f7e-a8ee-35ccdae3b77d",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "f4fb90b4-cf8f-42a3-8828-11b32ce9db7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6359dba9-45d3-4d74-9a8a-6448a9dd128e",
        "cursor": {
          "ref": "13bdf271-0db3-497d-91f5-94374e301fc0",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "98cd1819-54fc-4414-91ae-3f9a40c57339"
        },
        "item": {
          "id": "6359dba9-45d3-4d74-9a8a-6448a9dd128e",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "a5391259-c1d4-4fa8-b607-112425e61c65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7a9bf4f-9351-4117-ae06-1a851c05326e",
        "cursor": {
          "ref": "80ec5044-4955-4611-8ebd-1a12f7fb8bd8",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "da7901f6-3103-4fa8-9d54-128ffc78472e"
        },
        "item": {
          "id": "e7a9bf4f-9351-4117-ae06-1a851c05326e",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "d9b36049-7b84-496a-aa8d-462952c8c026",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d7e5ddb-6657-4bfe-9e82-7b0c571dcdbc",
        "cursor": {
          "ref": "e718eb17-f39d-4274-a25c-22e153744b4c",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "c55a6640-670b-49c9-ae80-d418452b3024"
        },
        "item": {
          "id": "8d7e5ddb-6657-4bfe-9e82-7b0c571dcdbc",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "bbf55e48-4728-4c74-b577-bc162fe13234",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe414839-6693-441a-9aa7-18f9f934d708",
        "cursor": {
          "ref": "aa24c548-37e3-4ea1-8abd-558cd5ec47e8",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "279ff86b-6b18-4a9a-b8f7-3fd259e50e3a"
        },
        "item": {
          "id": "fe414839-6693-441a-9aa7-18f9f934d708",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "360a4a66-47c3-47fc-bbd1-5f51f5bf7181",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2eef577a-e942-435a-bd6d-1d41468bce1f",
        "cursor": {
          "ref": "6b03a03f-e769-4e1e-ac37-b6337ab47b32",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "6696f23b-ce1d-44ff-bba5-0ad6b692b8b9"
        },
        "item": {
          "id": "2eef577a-e942-435a-bd6d-1d41468bce1f",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "b002e2f9-1395-4dfe-97f6-16c4e398d996",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "789e5387-7af5-4c52-9f25-bd105a726616",
        "cursor": {
          "ref": "b95349b0-f0d2-4664-b49a-fb9524a3544f",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "8a396a4d-8ae5-4b99-ab3e-b11c3b3fe35e"
        },
        "item": {
          "id": "789e5387-7af5-4c52-9f25-bd105a726616",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "b73bdee2-b325-4f3f-a0e0-ab8e9ef2d9f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a34f3a6-5c14-4ddf-9766-51f46e165949",
        "cursor": {
          "ref": "d7ec1cd7-7741-4125-9c45-c6097b59f423",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "ec2d25b8-8a6d-49c7-83e7-2e7d7bb00417"
        },
        "item": {
          "id": "6a34f3a6-5c14-4ddf-9766-51f46e165949",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "424019f7-666f-4df8-b174-7fc7a5c48896",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1a9b108-1b21-4c16-bd09-cf0c7ec97518",
        "cursor": {
          "ref": "319bc6ce-c971-4f00-ac99-f6ef0b175f68",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "1e795f87-27f4-4f93-854c-e155857b31cb"
        },
        "item": {
          "id": "c1a9b108-1b21-4c16-bd09-cf0c7ec97518",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "54ba80d4-b552-4b3f-b4df-e3195beeae6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25847ba9-2fef-4d20-b0c6-301af60ff631",
        "cursor": {
          "ref": "ea044f8f-0db8-44eb-bad6-2505ef75d8f4",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "85dbc97c-0000-44fe-95b2-c5facd227b9e"
        },
        "item": {
          "id": "25847ba9-2fef-4d20-b0c6-301af60ff631",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "4ec059dc-55fc-4543-8246-8812316d5c89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3682d9af-4165-45cd-a24e-8294319ef8ff",
        "cursor": {
          "ref": "eeff2b08-9f90-4424-82a5-9006821d22ce",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "ef341bce-ed66-448f-89c9-88fa601e7169"
        },
        "item": {
          "id": "3682d9af-4165-45cd-a24e-8294319ef8ff",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "1d4750b3-a694-4337-b998-49da1733695f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bafd542-90fa-4d13-a742-3919e36ad2f4",
        "cursor": {
          "ref": "a135457e-38c3-4ec6-ae91-0e826da13e5d",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "9f30de58-4dee-4436-b19f-75126aa29b28"
        },
        "item": {
          "id": "8bafd542-90fa-4d13-a742-3919e36ad2f4",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "cd0f8af4-8261-4aa1-ba70-c91bb094017a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc8df996-5557-4250-a4e9-d8bdaf5226c6",
        "cursor": {
          "ref": "53b7dca0-9e00-4672-926f-04387b51e01a",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "1ec1091e-57e2-41f0-9f7c-d811cc0f81e4"
        },
        "item": {
          "id": "bc8df996-5557-4250-a4e9-d8bdaf5226c6",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "2e86c55b-bc76-48e8-abc0-975b5695343f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09a50f46-105c-4ddd-bab1-16466be31988",
        "cursor": {
          "ref": "58299e38-6f53-4b17-9b46-5216fda8a6e7",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "65594bbc-1004-4b74-8430-f80a6db1d49b"
        },
        "item": {
          "id": "09a50f46-105c-4ddd-bab1-16466be31988",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "fab2f8b4-c43b-4783-8483-c983d45412ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2391fc5c-b9e2-44cf-92d8-9c76c744d9cb",
        "cursor": {
          "ref": "d05ac52c-dda1-49ae-8236-8e40ac8d1384",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "ad791da0-7983-4ca6-aa52-3a96867a1b25"
        },
        "item": {
          "id": "2391fc5c-b9e2-44cf-92d8-9c76c744d9cb",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "155a4ea0-1f39-493f-be65-7554b220d644",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d908da3-7d34-4481-b6c5-c5c6112c1382",
        "cursor": {
          "ref": "b859c4d4-3d99-4d6a-9454-73bc730cd36a",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "267b42ea-9272-4002-b835-acaf07fc5576"
        },
        "item": {
          "id": "6d908da3-7d34-4481-b6c5-c5c6112c1382",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "ae364170-cae6-46a0-bf17-eb579cb43d99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e413e241-d344-40f7-8c42-297adbc5b66f",
        "cursor": {
          "ref": "fd962901-25c6-46a7-8a16-4a1514eb8e7a",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "c355f619-9abd-4bf6-9739-f27b072ae8e5"
        },
        "item": {
          "id": "e413e241-d344-40f7-8c42-297adbc5b66f",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "7ddcdbe3-9748-4c6c-8e9b-1c6f6cac32c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "017ae738-29d9-4427-a309-a608c2025414",
        "cursor": {
          "ref": "83ecff9f-814f-44aa-bfbf-105071a55c6c",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "63c87415-1a70-47f2-9cdf-c4e7d54727de"
        },
        "item": {
          "id": "017ae738-29d9-4427-a309-a608c2025414",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "04b6d065-e65a-43e9-b953-745f22da7257",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0014f1d6-8be5-4418-807b-9682bb0e7dd1",
        "cursor": {
          "ref": "6b96b18f-4b2e-4561-85b2-2f6c73939832",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "cc729614-02a1-4045-9587-1c844833fd78"
        },
        "item": {
          "id": "0014f1d6-8be5-4418-807b-9682bb0e7dd1",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "efe9d5aa-f0d4-4309-9cdf-4a828ffc42c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33db466f-d71c-4b1b-a6c5-ef638566c29d",
        "cursor": {
          "ref": "f834d810-1df2-40e7-91e0-851a42296fb6",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "458dd8c0-20f2-49ad-9970-eb581f724939"
        },
        "item": {
          "id": "33db466f-d71c-4b1b-a6c5-ef638566c29d",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "6931dfe7-da09-437b-a5b5-df811f3a085f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e3f6350-c327-43b6-b9ba-f72744f97584",
        "cursor": {
          "ref": "1a4131da-9194-440d-b51f-85dd65d0db1c",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "4708b67b-41a7-42d2-863b-a0cc02f93898"
        },
        "item": {
          "id": "3e3f6350-c327-43b6-b9ba-f72744f97584",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "5a93990c-3ff2-4d45-8eed-37fed0d0378f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e20db2a-6db9-42c6-8f46-ad1ec725a23f",
        "cursor": {
          "ref": "8ceffb0c-b76b-491b-89ac-caf28cb3b1a2",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "142e097e-7f87-42af-8c18-d113c8671e76"
        },
        "item": {
          "id": "2e20db2a-6db9-42c6-8f46-ad1ec725a23f",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "20f37f86-0b18-4437-b008-a90bb3fca251",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7df5ee8e-779f-4658-a649-a068305a0f74",
        "cursor": {
          "ref": "9a1820a3-8d11-46cd-968a-22a9cd384711",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "a4f09efe-4e2a-416b-8ce6-d6fb68df7cb2"
        },
        "item": {
          "id": "7df5ee8e-779f-4658-a649-a068305a0f74",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "a5772caf-1546-4615-9db8-5595374b3754",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2ea41dc-e992-46da-93b1-68bf3296afe1",
        "cursor": {
          "ref": "10a67995-d830-4066-9d20-1d42071a7644",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "67e2dd3d-798f-4768-895c-6e9747585e87"
        },
        "item": {
          "id": "b2ea41dc-e992-46da-93b1-68bf3296afe1",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "482ee6c3-5400-4a4c-9c41-f2c01f4b40ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "115b872a-e016-453b-8f41-0c07b453e261",
        "cursor": {
          "ref": "95d4c70b-b40a-43a9-b784-a85ad76cd65b",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "301cd9ae-45bb-4c14-9870-400314f3e62d"
        },
        "item": {
          "id": "115b872a-e016-453b-8f41-0c07b453e261",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "d63794f3-d4eb-4a17-953f-b104dc36e83c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "212107b0-a833-4130-b44c-a4996f7960e1",
        "cursor": {
          "ref": "f31dde60-1b2e-4b7c-9321-7786de59f059",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "6f7f3875-5ace-444c-8d25-88de79501973"
        },
        "item": {
          "id": "212107b0-a833-4130-b44c-a4996f7960e1",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "f9d03eea-1c4b-4715-a562-2b3929b56dda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57788981-c6e1-4460-8557-5e4162ee09ea",
        "cursor": {
          "ref": "fa2d032f-2d97-41d5-ad58-adfa96edd3c3",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "43882c07-86b9-4b37-b185-e6a797d055d8"
        },
        "item": {
          "id": "57788981-c6e1-4460-8557-5e4162ee09ea",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "4913e69b-f0df-4ea8-8009-0ce156adf7b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6520db4d-10fe-42e9-a748-7b41749f5722",
        "cursor": {
          "ref": "1e2af309-dd26-472a-b7e5-48a3a5202a25",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "632f87e6-b301-4d69-9937-05b9b467c782"
        },
        "item": {
          "id": "6520db4d-10fe-42e9-a748-7b41749f5722",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "989beeb5-00d9-429d-9c9c-04ea245f351c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2275173a-99fc-46d2-8621-0d442fc7a319",
        "cursor": {
          "ref": "fb9b2d7a-44cf-4d95-a1bb-43faf3584138",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "ded81338-aa1c-4d89-be11-3f201cef288a"
        },
        "item": {
          "id": "2275173a-99fc-46d2-8621-0d442fc7a319",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "40264064-ff5b-4590-9dbf-e0ff728881a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93c27d52-7007-474e-8e62-1c655b1a7f56",
        "cursor": {
          "ref": "0218460d-67eb-40fb-8b59-6587780d667f",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "5c185f0b-0a01-4873-b28b-73a1da077419"
        },
        "item": {
          "id": "93c27d52-7007-474e-8e62-1c655b1a7f56",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "b014d99b-b56d-4498-b20f-8d58bc7aa9d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ec8a2fc-06b6-4e8c-80e6-f8b572931269",
        "cursor": {
          "ref": "9a193426-d056-4706-846b-bc8dcee9a434",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "04bf901b-1837-4d58-9083-a47d1c533df0"
        },
        "item": {
          "id": "5ec8a2fc-06b6-4e8c-80e6-f8b572931269",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "a2a7f7fa-4019-40ff-a09e-82bc47f25d90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80f2c72d-6cfc-4635-a965-a368d73c9061",
        "cursor": {
          "ref": "a440990d-58fd-4fe7-88e0-65a47e4d5e85",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "588a59b3-9298-4b04-890e-05a24a6125b8"
        },
        "item": {
          "id": "80f2c72d-6cfc-4635-a965-a368d73c9061",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "fc89669f-f01e-458f-9cff-2f993566f3d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bcb261e-7c2d-40c8-b9c8-b5b142cb387d",
        "cursor": {
          "ref": "3065a702-349d-42a8-b51a-162e27f7cd68",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "775cfc61-d013-4016-9eaa-af27d26362f5"
        },
        "item": {
          "id": "5bcb261e-7c2d-40c8-b9c8-b5b142cb387d",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "269bca50-7a3b-4a5c-99ea-fe700d68f796",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de62fff2-e9e8-489b-ba9d-240c1cf13d0c",
        "cursor": {
          "ref": "dc3f3c7b-4e25-4b12-abed-f3619206d782",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "27394256-3e8c-4aed-8de8-f3ec8b891a77"
        },
        "item": {
          "id": "de62fff2-e9e8-489b-ba9d-240c1cf13d0c",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "40a7176a-4c3c-4c43-913a-c2e2b33fde2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8aabaf67-59a8-4e3b-82cc-e2b3af939964",
        "cursor": {
          "ref": "e53cd9e7-dcf0-4284-be4b-b185ede48451",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "0a3ef076-5178-4eb5-b1d9-3e671332730d"
        },
        "item": {
          "id": "8aabaf67-59a8-4e3b-82cc-e2b3af939964",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "838d2a06-d307-4aae-a89c-7b29d20b0b4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ad0bedf-4e98-4acb-a8d6-f3caea1c85bb",
        "cursor": {
          "ref": "3f4666db-43c8-45a7-a349-a966d6a745bf",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "60fe6fea-1545-45f3-a44f-aee6341452a2"
        },
        "item": {
          "id": "6ad0bedf-4e98-4acb-a8d6-f3caea1c85bb",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "28cb7de1-79b4-4423-bccb-2c014d2e5ccb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8af8fede-ecbd-4925-a781-10d0b8a7d4b8",
        "cursor": {
          "ref": "4a3b7908-170f-4089-8a3c-b8a81a001965",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "8da78787-0211-4761-b721-5b822ad9a600"
        },
        "item": {
          "id": "8af8fede-ecbd-4925-a781-10d0b8a7d4b8",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "29d28e3b-61b5-476c-ae24-0845cd5de87c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d949d5c-f769-47dc-bcf0-4d7e762c61fb",
        "cursor": {
          "ref": "cb7ba72d-57b4-4b6d-9b6d-632baf81f71d",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "179f8ce4-8c2f-4450-8c43-1aaff1a26dc2"
        },
        "item": {
          "id": "5d949d5c-f769-47dc-bcf0-4d7e762c61fb",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "fbf936d5-23ea-4b15-9300-24bed30c8b08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bf1d0fe-a1be-4f8a-af1b-093f9c158c4a",
        "cursor": {
          "ref": "0933698b-68dd-4e95-a9fc-6fc80af77c06",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "ac2503e0-4f4b-48d3-89ea-64f03eb63041"
        },
        "item": {
          "id": "8bf1d0fe-a1be-4f8a-af1b-093f9c158c4a",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "47b0c5d8-f18e-457b-b6b0-62dc73a7b462",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9e15a84-1d8f-496d-acd7-01708ccc1fe7",
        "cursor": {
          "ref": "7f449b40-dec8-4bc4-9558-aff64a5084c2",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "e45e0ff4-329d-4ce8-a6ed-25ffb3fa1559"
        },
        "item": {
          "id": "f9e15a84-1d8f-496d-acd7-01708ccc1fe7",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "a4011d07-4cf5-4de0-abf0-aaf26df73114",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76c43d09-3c67-47e6-8089-e26dd774afe1",
        "cursor": {
          "ref": "9118b1b2-2049-4878-a24f-2ddde89f827f",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "b95d3cd1-6954-4aef-925e-8d5deaa48248"
        },
        "item": {
          "id": "76c43d09-3c67-47e6-8089-e26dd774afe1",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "da42a1a2-66f4-46d3-9f11-24172af1e1b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cf0abb8-f27c-4a90-b81d-50659be3a9c7",
        "cursor": {
          "ref": "0b88259a-055a-4249-b7ff-a8aa60b748e6",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "4e589313-11e7-402f-8e9c-571584c13dc4"
        },
        "item": {
          "id": "6cf0abb8-f27c-4a90-b81d-50659be3a9c7",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "0be80a73-e620-4e4b-99c2-ed05c1c17355",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a20cc21-2483-4530-9307-11648d216a33",
        "cursor": {
          "ref": "1c49bef2-1b77-4236-b7de-9015b5fb5c7c",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "7b3d96fa-09af-4728-93a0-c95ea715b733"
        },
        "item": {
          "id": "6a20cc21-2483-4530-9307-11648d216a33",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "084e3f31-7dfd-4448-bfa0-447182f8f578",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4b924e2-924d-4f87-9bce-c1c5bd6d0190",
        "cursor": {
          "ref": "0d42b56b-7b65-4a8f-b7d3-36d1414fab65",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "1bd7584a-8cb2-42d0-a129-92811cd5c96d"
        },
        "item": {
          "id": "b4b924e2-924d-4f87-9bce-c1c5bd6d0190",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "4dd8bb2a-b50d-4fcd-b062-09c256a94cca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a440a14f-2576-4514-b6c2-5da7f882ede8",
        "cursor": {
          "ref": "50ce2780-ae15-4fcb-bbfe-4c0c208ef195",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "29f12ed9-b53e-42aa-ad86-4aaad35c6397"
        },
        "item": {
          "id": "a440a14f-2576-4514-b6c2-5da7f882ede8",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "a9e04712-25a3-44f2-85fe-0c3ad24a1640",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83e18056-d502-44ef-97fa-ecf6566dc0bd",
        "cursor": {
          "ref": "dd54a242-0073-4b54-925a-5e7c4825718e",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "f5fdd0cd-bb1a-4728-9a6c-ea0b8659a356"
        },
        "item": {
          "id": "83e18056-d502-44ef-97fa-ecf6566dc0bd",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "3991207d-6eeb-4967-8e35-6a981b93708f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b34e940d-edab-4492-bc68-a00764cbb78a",
        "cursor": {
          "ref": "6aac7a70-0e2b-49b7-882a-5b542585d047",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "0b72fab7-6189-49ec-bf1e-cfa90d52f75d"
        },
        "item": {
          "id": "b34e940d-edab-4492-bc68-a00764cbb78a",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "0d4cd649-9eb3-4570-8b95-1d65551e49f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "155cf865-a8c8-468c-8f22-5795b6672f49",
        "cursor": {
          "ref": "7f0b3ca5-a3e1-4e05-8c06-91112e32ae6c",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "a683a661-8ba8-49aa-a69f-6b71bc389ccd"
        },
        "item": {
          "id": "155cf865-a8c8-468c-8f22-5795b6672f49",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "fdb31321-e856-43a8-add3-99caf59e1638",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb20354b-89ec-43c9-91f3-f6bcf6cfe88e",
        "cursor": {
          "ref": "5973693d-e93e-4922-aeb3-2c002fb33690",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "2e626a24-4732-4385-a8be-ac94b45be900"
        },
        "item": {
          "id": "fb20354b-89ec-43c9-91f3-f6bcf6cfe88e",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "5b693909-d517-49c5-a01e-786747bc3dcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b65b4c1-be4b-4a41-833d-a5d20adda09c",
        "cursor": {
          "ref": "55b16946-77ff-4891-91d8-4160e2f1ed30",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "82a7cc9c-bd12-4f67-8085-152fd134bca1"
        },
        "item": {
          "id": "5b65b4c1-be4b-4a41-833d-a5d20adda09c",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "8df997d0-2301-49b5-b9c0-e525535d2cad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "840f45d1-9a74-4043-b44b-2a8d5be2cbf5",
        "cursor": {
          "ref": "ab02c699-95a9-4fa1-96d8-b9c86bbd707d",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "7e906ca5-1886-4716-82ea-c5a08b50109a"
        },
        "item": {
          "id": "840f45d1-9a74-4043-b44b-2a8d5be2cbf5",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "4bb8717f-32d7-47d8-8f66-69b44bc0ad34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1b7cae4-7782-4f21-abb7-494e96fd19fd",
        "cursor": {
          "ref": "e4e4cd28-d4a1-4046-949f-69a171cb6d2c",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "041e469d-f2ce-4d6a-a4e1-8a0b66cb48df"
        },
        "item": {
          "id": "b1b7cae4-7782-4f21-abb7-494e96fd19fd",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "709a1692-8cca-494d-a744-2f76bf9d051b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "789a7209-a839-4802-a51b-2562715f236b",
        "cursor": {
          "ref": "56539c24-4a30-4d3d-b352-c11fb9b71dcb",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "249446a9-75e5-4c98-b7dd-994f1bb529e0"
        },
        "item": {
          "id": "789a7209-a839-4802-a51b-2562715f236b",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "f6f8d69c-1258-49e7-9dbb-a6f5d095e1dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a9e1289-b177-4258-bb47-e32a1444de7d",
        "cursor": {
          "ref": "baf61643-98ab-466a-a1c0-0f6b2a881c6e",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "ab95be7e-7555-4a5d-a3bf-e028e9b2d848"
        },
        "item": {
          "id": "9a9e1289-b177-4258-bb47-e32a1444de7d",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "3c9e0ea5-8ffc-4a91-a1a5-2965cd07b2f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a38092d-44fd-427c-b0bf-133fe20fd040",
        "cursor": {
          "ref": "99d5c79a-e070-4c2a-9b63-258851deef38",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "a262e8b5-6f8b-4494-ae89-b538d2efe6cc"
        },
        "item": {
          "id": "5a38092d-44fd-427c-b0bf-133fe20fd040",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "ad43b9db-a93d-43ac-a04f-2d367631052f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d222efb-02a8-419b-9161-9b6cd49cdedc",
        "cursor": {
          "ref": "e66c144b-7cdf-49cc-9248-49c69e7ec71d",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "12408d8a-ac2d-40c9-8f8b-06455c7ac4ff"
        },
        "item": {
          "id": "6d222efb-02a8-419b-9161-9b6cd49cdedc",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "438e658b-fb1d-4a5e-ace5-8b0a52ac86e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:244)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcb26a02-3ea0-4082-974e-3c216fd7ab0e",
        "cursor": {
          "ref": "8ec5c6f7-9ba7-44aa-98bb-9d7df3460564",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "d3fe33fc-2145-4202-8d1a-61b27b44b094"
        },
        "item": {
          "id": "dcb26a02-3ea0-4082-974e-3c216fd7ab0e",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "958947eb-8775-4e85-9c30-76914232ee28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:245)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:245)"
            }
          },
          {
            "assertion": "response verified is false",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is false",
              "message": "expected undefined to be false",
              "stack": "AssertionError: expected undefined to be false\n   at Object.eval sandbox-script.js:3:245)"
            }
          }
        ]
      },
      {
        "id": "fd2b8f49-31fb-453e-89ea-8326bcc3f503",
        "cursor": {
          "ref": "dad1a5a5-dbb6-49c7-b87e-1d4152ecd00b",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "6ae43a18-bd7a-4c15-af04-d4155f7ee88e"
        },
        "item": {
          "id": "fd2b8f49-31fb-453e-89ea-8326bcc3f503",
          "name": "credentials_verify"
        },
        "response": {
          "id": "887d723d-9f0b-4594-8b38-769bfb7e78a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:246)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:246)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:246)"
            }
          }
        ]
      },
      {
        "id": "c2c04967-f7b2-45e0-bc8f-e198a1659514",
        "cursor": {
          "ref": "b625ddd9-41da-4022-af75-0a2e3601b1b5",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "938e1fb9-e81d-4abb-849e-c51b6d7efc6a"
        },
        "item": {
          "id": "c2c04967-f7b2-45e0-bc8f-e198a1659514",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "d819e97f-bcee-4a16-80f0-345ddf569127",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:247)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:247)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:247)"
            }
          }
        ]
      },
      {
        "id": "e0f90c33-52e9-4d11-9787-5f21e0a4c331",
        "cursor": {
          "ref": "34042211-bbe8-4170-bc30-61912ea07821",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "9035be57-a531-4635-b7d4-70cbe8d439f0"
        },
        "item": {
          "id": "e0f90c33-52e9-4d11-9787-5f21e0a4c331",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "ef4f5dd7-560f-46ac-8389-992cb71d249a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 72,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0f90c33-52e9-4d11-9787-5f21e0a4c331",
        "cursor": {
          "ref": "34042211-bbe8-4170-bc30-61912ea07821",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "9035be57-a531-4635-b7d4-70cbe8d439f0"
        },
        "item": {
          "id": "e0f90c33-52e9-4d11-9787-5f21e0a4c331",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "ef4f5dd7-560f-46ac-8389-992cb71d249a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 72,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a1a881d-514b-458d-ab92-da9641a46016",
        "cursor": {
          "ref": "a7c6cd41-bbd2-4ddb-83d3-dc64eff905a1",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "fb991bec-478b-439f-8665-a8415e91b304"
        },
        "item": {
          "id": "8a1a881d-514b-458d-ab92-da9641a46016",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "584d9a40-bebe-469b-b273-7b7cd0e5def3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:249)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3af8d607-bb6e-4fc8-abd7-506b10317fb6",
        "cursor": {
          "ref": "29682c7b-3db6-4d51-883a-303ee9f8a43b",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "1adccf63-aa3c-4035-b65b-834308444edf"
        },
        "item": {
          "id": "3af8d607-bb6e-4fc8-abd7-506b10317fb6",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "50b84f9f-2e07-403d-a2c6-b895941dade8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:250)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}