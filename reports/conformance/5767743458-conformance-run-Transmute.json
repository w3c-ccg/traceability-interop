{
  "collection": {
    "info": {
      "_postman_id": "4bd78d4a-8f35-432a-a4e9-9e5a47c7c93c",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "b639e486-35be-4e00-af48-075a2f11d9c5",
        "name": "Clear Cache",
        "item": [
          {
            "id": "757fbcfa-b0cc-49ca-89a9-4e14a62bb1af",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c21d4de5-15ba-4fb1-8025-c84ab8d1ab13",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "847dd58d-893b-4b0d-a212-b9ae702e55c3"
                }
              }
            ]
          },
          {
            "id": "bec5f118-66c8-4ddf-9ef6-624d1dccb6d7",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "dd779245-bee9-4a90-83e2-b118d3c399c4",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "a72326c0-6ce1-4f62-a01f-d68fe4aba60a"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "24454d2d-e414-4161-8284-877ad59ae329",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "a74b274f-9a79-47e0-8719-79e394d06b61",
            "name": "Positive Testing",
            "item": [
              {
                "id": "797e7285-8fc7-41e7-8e2b-d96dbf48a9e7",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "46eefca6-5c89-4722-85a3-8bdfdbb04f3c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "dd1a673d-6722-4010-90e0-e730b46cc79f"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6aac1dbf-1dcb-4e4a-adbf-0e7f56aa0e28",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4c8a5529-29ee-4c16-920a-80c30936b4a7"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "8a2b194f-2bee-48a1-bfa2-705621f92c81",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0540221f-2187-4541-9bfd-856ce2df776e"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d8e1b466-2e00-431c-9a8b-54fb65080448",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "a17d3cb2-ee1a-4345-9b2f-6e070a649080"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "94bbc716-9489-44c4-a566-622f05333fd2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "be77bd09-f2b6-443d-9c47-73b1ed266ebc"
            }
          }
        ]
      },
      {
        "id": "346f3826-1ae7-48fd-8446-d85f91cb0ed4",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "c7c6ed14-ad7b-443d-abff-478ba14d8efc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "62d472d7-a076-4f59-818c-0d982f0b0850",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "9891e0d5-ae80-4606-b2ee-9747781a5fc3",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab8dd956-fcb7-41e2-8fff-b5a5597ea493",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "79576ed1-6cb0-403c-9f84-48e2e4af1ef7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c61a858-4cd3-462e-ba7e-a2968a257e13",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e37bd8f-d393-442a-819c-8215dd647e18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6964ff7f-63c5-4d8b-a9e5-cd18aa718ccf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0edc8f2-e456-4dfa-b8a3-55b8532dd415",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54f0bdde-6056-46ce-8bfa-bc58929da3ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6d81c02a-b589-4b8b-b723-cdd09859a9d8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "290a2118-b6f3-4a23-96ea-e3cc870d3a2f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2138e69a-a303-4510-bee1-504adfa7e0d8",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4aca032e-3e86-4e8a-8635-75d96804afc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "868e3b3f-3428-48cb-828b-056ba4032259"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e500ba8e-e19d-4e25-ae68-0cf9d02be705",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ea25a4d-7104-4c56-bddd-e38354f993c1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "134b8f4f-6d92-490a-9cd4-f572119eafa2",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c855a807-59f5-4755-aff8-164383ed5653",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "721dd4c2-9962-4390-904f-b5055fde70f8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "6d6a9e25-df70-4c6b-994d-5beb8f98b3a0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "671ce12e-1c22-4c0b-9d76-7fb79454f646",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "7152824b-fc4f-4191-91e7-c697a66e4587"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "66d10870-3952-4413-9348-48059eb77757",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8ece62b3-a95d-409e-bec5-ccb251069d33"
            }
          }
        ]
      },
      {
        "id": "0a37d2c6-7c80-4cdd-9322-5cd8947ead7c",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "ad107262-42c0-4ae6-8589-ffd5e36c7c69",
            "name": "Negative Testing",
            "item": [
              {
                "id": "04e8a7b8-b03b-43ed-8c4f-47f48f9a6688",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "d703b13c-a52e-4549-9fe6-cf397017d3b8",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e49c16a-3ea8-4d47-b000-96a60f7830cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "deb7fd6f-6965-451d-b30d-b83169b4b00d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bbbd8ac-548b-4554-9ffd-496c08b254b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0c0c8ac1-02e8-47cd-b235-2efcf00cea23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc993777-c5fa-42bf-8660-08bc8c600bb1",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e3aa032-4131-41a2-85bf-3a71ada9c82a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a98ebb6d-8192-4eeb-81e6-23a99b3a7074"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cad73fa4-8f2f-426c-b233-337f2f58e39e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5728d5dd-be55-4c0b-8cbd-30a78909c112"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62e3c067-e54f-4dc1-b1ad-9d66e0f2cc5c",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ffd6db5-66be-4b18-9b58-0996923f1329",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8276549f-4284-4288-bec8-f6c23e3ccf90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c93da26-6edd-443a-aead-5d993357105d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4cb5065b-9e82-4ef6-b7e3-90a6d43a839d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac5cbdbc-e5ba-42ab-a446-ed49d4ca9b7c",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca0000ae-f5be-4eff-a21c-5a5292c78a55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "583ce0df-c552-4273-8b94-760c33e1953b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58507a39-7f06-437b-964a-907135e3b2d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1db46391-8912-4482-8a5c-87243a9bd530"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7256b8d-fa46-44b1-8f8a-081fa11abf4d",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17480135-e5b9-4d76-8608-80a7a8093036",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5641bcac-b114-42d8-accb-eda1bf097ee7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9c83028-9476-4a02-871d-71f64e7c2781",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1b13b64f-fa7c-4a36-86f6-7386041cff83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "091d31dc-c8a2-4778-b98a-40bec237e520",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc69a7bd-3083-4a90-8763-aa67963598b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0527d666-4d25-46ef-bab8-86b83296c96a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be403d46-17bf-4e9a-b8cf-82927eb41bb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "279af4b8-9ff3-426f-ae4b-ec9a8cf1c428"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bbe76a9-bd27-498b-8690-9af8eb1c4e1d",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99513b17-7476-4bc5-822e-0cfb1fdd54dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e9b982d-eb85-491d-9a09-14be9eff2af5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e25b3c3-7ad6-45dd-8d27-652016e90c02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7a9f3126-061c-480b-b30e-ffb7362cd2e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76e08dfc-75aa-4e4b-a06c-8ead2eb8f655",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "869bcbca-5ff1-4612-b8b2-9fc6d40de1d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f44c85d4-f587-4ec3-a4f9-cbcb4efaad3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "068440d7-ad00-49ca-830b-c824770b35ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "892c88b0-9643-445b-97e1-58c831922f5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8d12f83-c1f6-4698-9dac-15fb1890e16c",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f10502c-e6d0-4bbc-ad03-1b9de94ce5d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01ae6672-0fe3-4f18-8136-76e6303d1f25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbfb39a2-b64a-4011-8430-0c456aa2bef4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0d187b74-2d86-413e-a796-bfb9a210df8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31891f43-e953-436f-bbc3-72bb0f0805f1",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f592bf57-2a65-4ea2-baf8-b765ad5f6963",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb2a7b07-d5df-45d5-872f-346438884ee7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30a9d76b-1234-4fda-a8df-01f813879efc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f66b6c27-fa51-461d-b4ed-4b9760e5dea0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3348fdc-3f04-4268-b18c-27eb84c9c16f",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b737bd9e-1f17-4514-856b-8c686c9bacce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ce3f2d5-1daa-4132-996a-44c6d29ff532"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee5aaa31-be49-4e95-a3c3-64285a5097da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b058c287-1b15-49df-845b-74fd79ad220f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8177d9ad-28c8-4212-a1e5-712348fed7c2",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78d0b71f-44e6-4dce-be22-36ddb924ee83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73947548-dfe1-4457-a4fa-1cc3841c2fcb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85508d05-83c3-4e2a-9dd0-cf4b31dc3c83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "db2ba6d0-5866-4666-8c1b-80e052ce3e39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59ac51c5-0aec-46e9-9db9-a916daf156d5",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4515dbe0-3ddb-4db4-84f1-d738211dd805",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f60bc9a5-942e-40e5-9f42-eed26a198efa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9202ae84-81e9-4005-be32-fc9450faf05f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fef2a140-7546-48b1-9373-e51e55bb3ee4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "712402de-a44e-4eae-8a3a-ea54df1dc756",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1d5d32a-3970-4a2a-99e2-50bc680bf2e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3701625-1d60-4b76-b409-9996a778bcc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0027ab1-3553-45bc-b269-a00a5c905f9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9dbcb351-1ad6-4616-848e-a1c249f1d870"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfcfde32-a3eb-4f0f-ab9c-6adaa1b8b1e2",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11f414c0-7822-4181-8482-89fcbb2c8157",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8da0b5b-3877-4c34-8a97-a4169c656352"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fdb8ca9-f510-4519-a062-895ac02bf1ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1cf006ae-e61f-435f-b340-fa1ca1a3784b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d397d88-a05d-4ddd-8967-04e2fe81c7ff",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dae77a6f-bc38-4e95-af87-e70c8b671717",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "102626b2-82bf-4154-8720-8b77675b7418"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96fed2b9-47d6-4df9-a7fa-667a0eb40017",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1c59e29e-0774-4a1e-a1c5-3e0597e1c0e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "549714d4-196f-41f4-b5cb-43b4667b8ba7",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3c74a44-698c-42b3-9803-3dac1bf501f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfad2187-4c75-494d-8558-e9c19bfccd26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b4632d9-196a-4b67-94f1-f85f0b11969c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8847df4f-5181-4cb2-a4b7-c22fcf17e489"
                        }
                      }
                    ]
                  },
                  {
                    "id": "790c32f1-c231-4fa7-89be-47217a1e4d95",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "497d3bfe-2d48-4fe4-b2c1-8b3f1c3b092f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cae50108-507c-4400-b51f-28b6dbaf0229"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d635e0f0-5224-45b7-abf0-8e6d81bf0e45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "ebc6e3eb-1ae9-447e-9d5c-de8e9f82ad43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "086d09e7-719d-4992-9a1c-05f3b8cd6e69",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75ae8160-4091-45f1-b8ab-3e491d94da62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "250f7787-ebb8-4202-ac34-aa602da9a4a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08c741a5-ed3c-4b4d-a8d7-e6491f80c9d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "74e5f36a-ba22-47d9-bd35-de8ab2925843"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48593826-812d-4bab-b957-9040ae5c4f15",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dbdcc34-cf9e-4248-a3a9-12e7f33a828e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9638938e-9a58-42c5-b3e2-ae9fd1b2dce2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c7bc02b-6bde-427a-af74-3be1814d7e57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cde5e326-ee64-4233-aae7-b852535ac965"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a81e3eb1-c6bb-4207-bac8-f07419d167f3",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5509835-e30d-4d00-ad1b-ce126ced26a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2117f6a-3f16-4e87-a61c-d21e9973c04a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e89edd74-c011-4262-a9bb-0ac0cbd4f30b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "40f4259e-df83-4ca5-8a44-e01e51dc76f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40ee15dd-c705-4e6b-b8c2-fdee8b03d1df",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66fa44dc-10fc-435d-a936-c8b664a962cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b2fa724-ad28-47bf-9940-3f6a1ab4f505"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cec1437-da3f-4042-9a74-50ac73df9bdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "00e643f4-426f-465d-8d7d-7b371e90ca95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "805b5a06-293a-4200-9bb1-50849979d72b",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95edd090-a865-4ca3-a197-3737171f4837",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c02a131e-9c31-47bf-b8ab-89128c42e14f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1e2c71c-c338-4dff-b84a-9537d225d55d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b9d95560-c971-4c84-ba80-ce9ef414db30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d953531-2bf9-482f-b0c1-53f855179b1f",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3329c6ef-1864-4748-b3c0-ad001f4f0b10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f249c94-9df1-4fb5-97e8-9d58196bcfc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02c05c17-b4a4-48ab-a607-b8fe1df45753",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "9653face-bdea-43af-ac5e-b32bf80da3d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c87bd856-b0a5-422d-85af-99a27970b0ce",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ae113e8-2e50-466a-9861-0f2f53174961",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a829fc4-0488-4398-86bc-db340ac899e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6ec442c-7dbc-46d8-b27b-5c1b84105f1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f1cc165b-4b0a-4cdb-bed4-a03174ce6378"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6eed35f-c1cf-4bcc-81d0-9a1c97c47533",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "482375d5-e34e-4e2d-bcf0-d3f6e81f2af5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bfca95d-7603-46a5-9de0-bc353d96f3f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "816ac454-b316-48aa-b96e-49154bbcc179",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b3a8880-e46b-4533-9f87-0d6e003c2616"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3c82b3f-379c-4772-a117-11c6e7b2f8bb",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "314138b7-c222-4d8c-9c6f-b074685a4ae5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68489b62-7994-45ce-abb6-48fded011d72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c55b9dd7-dc22-41de-a0bb-9cb581fee585",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "34895aba-ab12-499c-943e-7ba726c4268c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16661dd2-acaa-4ed1-8ba4-1898cc18ac31",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93d4d4c2-08d5-41ac-84f4-e65a781d8105",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c67365a5-f5cf-4bb4-a752-4e9705fd81f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a167a13-8ddc-4c36-98fd-6c93a340b1be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ced8894a-ce9f-45ca-bed0-96698d860109"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6852c71-8a12-4625-8154-ea4ab754f170",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb26ab68-7287-48c1-810e-aa6e2debca6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3a273e6-560a-483f-a659-e649d21cee02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd7a0e15-389d-493e-baf0-a4c43129b8b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "84ef3be2-a84e-470b-8632-a330875c46a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6e85f69-807e-4f4e-a739-29ca8430fa23",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0af0c8c8-3383-49c6-aba8-38aae5c51ead",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee39e131-c341-4d70-887b-aa3a10af9909"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "767d6e91-5525-4d5a-aa53-333f006aead7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "36b0966a-7971-408a-b29d-9a4a9a85a39e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d60b2116-8440-4391-a7a8-5516e3e9bd17",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6010480-fdd8-4bbc-9b2f-611b560f3a54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "538bae9b-390a-4404-9cb3-2052dd9d0879"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15d9bfb7-ec7d-431c-ab7a-81c25408d8a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9ee4660f-a797-44c5-9b31-90de58c9353e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76bc0f06-e259-4a7f-b0ee-8f47f1fe6f5b",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb03e9be-150b-4baf-92de-eae237774feb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f52530c8-c0ac-4e7d-bbbd-c3cfeb1ba7e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c268ba2a-a10f-4877-8b5f-7caf4973ef00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4cfb6e02-8192-4de7-8441-0b04909ad614"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc080b6f-afcf-464c-91ad-d49bce42f05b",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06edd598-183a-47a9-a318-0e452eaf2add",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdac79fb-330a-4259-924d-ffdfb7746c86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68c5ad33-0222-4dc0-a8cb-886a28583440",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4d0d4149-1429-46bb-bbda-4f6ea8f4ed71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d07b7ef8-d9ba-41a2-bf6c-e4df3d6b59fd",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbb08525-90e1-4e5d-928d-493da2911676",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "915abee4-3d33-462b-879d-408ee421128e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9306a844-0613-4fd0-b960-3801ad0c9ef5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cbc0aebc-afe8-433c-8856-43c082064972"
                        }
                      }
                    ]
                  },
                  {
                    "id": "977b0ce8-7024-42ce-8320-d93241ae24d2",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc3a10ee-5708-4ced-bd53-c2daa1e9b691",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07b864ae-0131-4641-8004-19787452109f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c75df44-1e01-47af-9ee7-f15468973dc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "a9074229-2d46-427d-9b98-9d7871c02648"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3edb06a-0057-4547-87e6-49c431d31925",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f9f4a30-dbb2-4c21-8937-f079860895cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "25af9a56-ac09-4f68-9cc2-8bb6fc938b1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b5155dc-b024-481b-9ed2-88f5ebe79cff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "dbd67b93-73e8-4724-8c24-57cd569bf715"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad94fb01-98df-4ef7-968a-3557f99bd1b5",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9757262c-ce0b-46af-903a-ef747c7f52bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02801330-63d5-424b-ab39-8176a0230e0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "609ae5c6-7c92-4281-bd59-7c847ba9768d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "70eea7a9-4df9-4ab4-9097-ce1f8e2685f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7679ce09-5ade-489f-967e-72a3e3733c1c",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "129d2e0d-8590-45be-a171-2799e74d67e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d90fe75b-7c76-4087-9289-83fe301bca37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc3267b5-017f-4a23-b7b7-c62dc29892d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "00a194e2-4c07-4d06-ae24-d9b06e219b8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cad91bc-5267-4267-b98c-f1e2d8d8556b",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45c6ff6c-72d0-44ea-a712-f9d0b54245f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "817eae35-ad92-4785-85a9-286494cbfa96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "318cd930-e190-467e-b4d6-7e1151d2bec9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "1e78ccf7-116b-4e53-baf6-c5b70462d5c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f5b147b-05be-4230-8274-4ee825d80e23",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91294563-1e2d-4bdc-bcde-283f1c0ed05f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01a39c55-05b4-494e-887a-1b60d2c66d27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36ea2964-9ced-4f17-8fdc-6f53503b37ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "8e538f45-34f3-4ce7-9caa-a13442ac1caa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fb1dd7e-de03-4987-bf3e-4c493079cdc1",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eac586da-a810-4df8-a5b0-1f863459150f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d64c7545-17af-4715-b6e3-e5b9e6d88759"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbd3eb61-35f8-4ac2-8e22-1ec163e6406a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "2b2c3d61-6330-41f6-ab11-7460b765afe3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc76cf47-1061-405d-adb4-537e16a7256a",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03ddfb6c-42b8-4c0b-8fc2-8f16489fb131",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2c8cd70-cd4d-46ea-8ba4-aaf808567389"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ea8f888-5236-4a6b-946a-dd26f25ef639",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "4b732675-e18f-4812-a5e7-7b348c434b36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44f833f1-5b6d-4e72-a0e6-a239ae820be1",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a97aa569-6c68-48bf-85b9-c3060b30288b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81b65628-7675-4843-b7ca-af4159acefa8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfcb9e07-55be-4194-bdf1-6b8778f7a1b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "87509e30-49d4-4889-91ab-74e69d4164e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91f142a7-afea-44ea-bd97-a9cc8d1c8a7e",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31ec0aa7-b451-403a-a53d-0402c63d6c11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da14e61e-ec44-4612-b716-635c63e18a95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f0cbcdb-0403-45e3-96e6-84cec6935c01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "cdfdbcbb-437b-4a2a-950d-376a2176157f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfb3cd36-0dda-480e-907e-186f1b737374",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11b1f8fd-ca40-4b0e-a61c-aaa5ff7fea9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45e484e4-d1c1-4899-947e-a380f6bcc3fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a4bb4cb-8eaf-4c83-9410-9329d01597a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "788b7b5c-5cda-4170-8894-c78ddb26344c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af8d72a7-73ba-4183-9fb2-9034f46253ce",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3acb17f4-1e1c-4eae-bd25-6f891cfcbbb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0ad58e9-8c66-43b6-ba90-0bd45bb95a49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac9b2bdc-9e60-468c-b79e-3ea2a591402d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bae01ff8-9ebe-4897-90b6-2f64ea962f35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfd98fbf-9428-4154-a8a8-feceb37c765c",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "412b3536-af8e-44cf-bcbf-5985893be670",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45b80ca4-85d5-4906-b4c3-44deaa9ab6fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cec7bcd-0e14-4755-8386-b277c318d4ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "067016a5-a1c7-45b9-aeed-c82ef6114592"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd34ce8c-1e4d-4119-819b-d2ea96bd4ffe",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d264b2d-320a-469d-900d-4fd3ae3791f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2eeb16a3-685f-48ac-907c-911017c2ddea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e561b22e-06a6-486e-beb8-5008974dba13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "763f865d-7c23-4a6d-8886-4c46de101ad1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08900e34-bf18-4bf0-89fc-5ef7fa516b71",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "790ff3c4-f1f8-4e77-b317-d838651cb070",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ccc45d2-fe78-412d-8a7d-73e3329db8c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e442cb5-b36b-4be1-87b8-125911320c2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8f7e766b-b8c5-49bb-b019-d2c1f7781164"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a4b0701-bb38-40ba-aca9-a996bac5f625",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dcf4ef5-bbe5-4bc8-a470-124c986cec9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a71c5dc3-6395-4afd-bb26-1175b098af89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6cb32b5-66e7-4114-aa1d-d6a166a5770e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3d9c7e07-e175-48c5-a9e8-89917dc65cf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80f26bd1-f919-4ecd-bb0c-5e8454285bb2",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da569784-23b6-4cf2-b108-cde3af7fd949",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96749b4d-aec6-4ad6-9245-8ef40ab8655d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90585082-5512-458b-bf1a-55da5d241810",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "d39d3e19-74a8-4be7-9273-bcb969c6cd4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86a986df-5f9d-46ed-bd98-18bd2b6646be",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98f48583-2fca-4f30-9609-9a7f3e9f6e89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "860587d9-6e4b-46ca-8423-1f7b5e26bf6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0b08852-6d98-478a-87d1-c4ce124c4260",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "857581f8-f310-4830-9509-99a64580846e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "382273b8-362d-43dd-b40e-7e10a0f99431",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa6f596a-e7e0-48c1-b81d-04b44e8f0f75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce7dbfa5-7e57-4285-b1b5-b2bd34d77fe0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c10cd40-43d3-4d5b-be1d-025ed1ba70fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bfa8e033-c7a8-466d-bd28-db581a161526"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7fe2da2-d3df-4b8b-852f-dce2dd4a1051",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78e41aae-e9ec-459f-b219-cd6261ff1f3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "682f965f-cfd1-4fe9-b80d-15f168be2270"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e81fe7df-c14f-44f8-922b-6656dd256e87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0e604611-c42f-4919-a0b7-2787c5200835"
                        }
                      }
                    ]
                  },
                  {
                    "id": "256c3f19-47bd-4f28-8029-4729ab5ffcb0",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c816d68a-235a-4e55-8d90-2d19575d5e4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9eee208-e877-420d-840e-0084310302f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc7dd95b-73ff-4d20-a494-5218ab6e25b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7ce65da9-013b-421b-b393-26752235b84d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d0d0141-aaeb-43b6-9362-8970f8abde68",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87dbc63c-5bfa-45d0-9ee7-7372e57a0df0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8470b68f-196f-46e8-aad0-0015fba27648"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "079522a6-8437-4be2-828b-aa80599a80eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "d60cb1a2-f644-4dae-bbb4-fa23aa431226"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be72bba4-ebd9-47d5-9672-5cff35ce7a75",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f7314ba-7c9d-47b1-aeff-7772e4d85cff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b99c137-7042-4c9c-ac29-c005a19caecb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cea9d9d4-2cf9-4020-959c-e6a21574b5d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e48387f9-1856-459a-96ec-44eea03df426"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daaedc37-0125-4d1d-9ba3-39cee23478f2",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56cab131-1c0e-41ad-be62-eb47159d70af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f43a41f4-3ba8-4056-8c25-ebf4a0e421f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0339086a-ded3-4ada-af45-87462a7e5feb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "8aa8705d-826f-4330-96fe-7dc2e30d1860"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f915a43-2b21-41e8-8007-36d9aef325e9",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bccc3259-f4a5-4707-8876-8e26d4454f33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4aeeb531-a4bb-48b6-8ef7-d8274b556bcf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da2892f7-1e16-4976-a9c0-29b59d3268be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "20f110dc-84f9-4673-ac75-53e2c2253d95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06e7dcdc-968f-47bd-a329-797765dfaa51",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44146e5b-a5a1-40ec-be83-682ba76d4490",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71ea2a50-b295-439d-913c-a8c30c4b64ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5004f088-f1c3-4a32-9457-338fc3bae93e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "6d225a66-e440-4e7b-b720-9eee431fba81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d0dd375-fd77-4f6c-ae8c-e8b960890021",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66a4b850-0591-476c-a8a7-1374673927fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "553f483b-f8d8-47d0-a17a-dca6a60209c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b61e3993-d9b0-46f5-bef0-fa8302d21236",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "9c4d6327-0ee8-42fc-9a36-a375c3dced68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71319db5-c125-4259-9000-70c406795471",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94ec2014-5b25-4c2e-aa53-458ce4f964d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "281de5da-5ba9-41b1-a6f5-13fe65294328"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "984fd451-111a-4d0b-b038-7444589634fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "ee64f6e6-ed6e-4342-9003-d6f8b626f2b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7964fee-beb1-4c15-a528-ef4f48fbaf21",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fb88a8e-fbb0-4e01-8d53-dd3a4f2e24ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54ae25c8-9939-4646-aadd-8a0bd50ea4a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c9865f4-905c-4486-9c87-21bfaec24472",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "9ac44230-534d-4420-8c72-e606bc592fca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7f0a7e6-902f-456f-9244-f968ea36c6a0",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3924a471-78b7-4ebb-8bcc-1c2a5ad7e59f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a01c76d6-e854-4c9f-bebd-b32af0e182ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea0b0d2d-155b-46b9-9cf7-8afd943fdf1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4af90eb5-fdf6-49ca-9f8f-efcf9b2ebe19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b087d1fb-a71d-4e73-b3bc-131a34f9e10a",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02485e76-d6ce-40c3-9dff-9c8f230654d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65cc6481-b659-402a-994d-53805af7c601"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e251ca9a-6db5-413e-9b79-65bc08194b2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f4f33dcb-1aa6-413d-adaf-d23bf9811271"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6243430c-571c-4a47-b3a4-c8be5b3fb918",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d37fb71-8aba-4035-ae24-55a58a9f601a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57f3bc7a-4c98-4894-9101-e0e186ae3987"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cae648e5-ebf3-464f-822e-e952798298bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "23f018c4-0992-4ed4-bb87-b714217ef80a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b10d7b9-eb60-4d1b-9507-dc32da5ca0b6",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b7ce398-a85b-40a0-bf39-3d0c883df8f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9ef03f9-06e8-410f-a742-743ec4163db0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0db477f7-a401-4aac-b530-677351c121e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1b4d5a83-a6b3-454b-b141-151fc0ba5ac6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3aca8799-7329-4932-8c4b-e94578ccda0f",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62efbdd2-040f-40b8-942b-69c9f6b9bed5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "649876b5-1a8b-4047-a8f9-cba18278b36d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2534c9c8-df78-44f8-bf28-d2d6d1001f0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "9d28f9c4-ef23-4975-a790-81b0cb1ab45a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03be60ab-ff5c-4387-8ce9-7be7ddeafda6",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8619329-abbb-4b82-90d6-bc7344e4895d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed5f3e96-d979-48a4-ab0f-d88b52a53dcc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd649b5d-a08b-4c6e-b859-cbcbb6129044",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "5037e568-e0b6-421c-ae6e-afbcb32f77e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf8186be-cac6-49aa-b8ca-c3c402c1edd8",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dda3c85-3c0c-4715-9386-ea29941bd225",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb65dc38-18f8-457b-bcf0-6d3473a0f096"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90c232ac-ec0f-4817-9233-4b649997d97e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "231f25e3-c41c-4ed0-a1b1-008a5e195818"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6db6e273-564f-40f2-8097-3b664db6805c",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f9c4f48-7320-48b3-b5bd-574142708e07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93e2b8a8-eb4e-4748-8bd0-9cafd9d6817d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb2e08a1-2ba5-4b23-8bbf-1ad3afe5405a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4cae68f7-c7ba-47c8-bd94-0f9bdb3986f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31e99e9b-6395-45cc-8c40-b159cdfac0d4",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fa2935a-3f21-40e8-9990-c59695784c95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7221cbd-6362-451c-b3d1-d8f70cba63cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55049d77-8d6e-465d-beca-6d39b4e27537",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "21d69964-ae8f-408b-b03c-d09db63a22f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0271bc5-7a23-49e4-942d-0e19287e80e2",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4204f143-544d-42ba-9468-41236e3fdb36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23c4c5d0-fc2b-41ff-aecd-0e1242e98bb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8eff015-b8f7-4710-a417-c5bc37000e2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "40242acc-6917-43c6-9f54-5b86a43136ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "114d7262-8086-43c6-85a0-d1a33723877d",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b594aed9-0792-4f78-93ca-79884842a321",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63cdf4c9-f76b-4c31-92d6-56ad60189ec0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bb7c748-72f4-45c6-98e1-f4f042ddd5d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e036354a-3fed-40b7-a652-7858a3b25c8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7c90fa9-1a55-498a-8717-73b23d01a8e5",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "804a7a7e-021a-42c9-a908-ba0a78ccbdb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4978c9c1-af0f-4b04-bf9a-c2f475ba6603"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7994788-58f4-4eb9-81c4-6fdbc550ae60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3dd61bdc-a2ff-4706-8357-a552ef931bf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77fdc913-ff45-406e-9bf4-d7080ae73e7b",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f4bedfd-15fd-44e4-ad88-0681fddcd7f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1f622ae-4a96-4706-9baa-dbaa344032a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dbe4e82-d206-4a14-9dbf-285b8910a1bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "835f3de1-2875-4ff8-b319-035629ce8f52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f66fcfc-fd5b-4fea-9d9c-aa725e8dd493",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac563705-2f91-454a-aba8-ac1ffb8b6167",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33162311-7efb-4e08-b62c-08aedcb16ef3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1ae3d75-74c3-4024-8b11-3702608a85bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "87965aec-7fae-4a63-9f1a-4aad29d9f3a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "537f7f09-d435-4717-9aaf-e337787dcba3",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12900e59-c76d-41fd-9dcc-221b10751549",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee06fd25-4e85-4e10-906b-0bf260c609dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afd5e193-cae2-49ad-bd38-e29e447682b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "aef49404-077d-49d7-b77a-f94fbe796761"
                        }
                      }
                    ]
                  },
                  {
                    "id": "010fdc4c-3800-4851-a59d-54349144aaa6",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "433e777e-b4c1-496e-a6b2-e02c459ecf44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d796c9b4-ce2d-4c1c-8e8e-3626662192c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "830bc546-ed24-4b74-a586-2bfc3aaee5cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1345de64-8f96-4ead-953e-ce178c4aeda3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7966561a-bdb5-41f3-a7fe-7121b982ebba",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2328d1bc-2e36-40b9-b4de-311230755262",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69b445e6-7092-41c6-96e0-f326b7a444ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8a40fa6-5108-4893-b351-c7157ca0c839",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "77582ac1-dadb-4f06-bac2-4a45b5b74cac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99c72a39-6f64-4666-b33c-930ab487a085",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb2e991f-97d3-4e7c-822e-53c277f154ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ba49a2d-de48-4e23-9868-c98992d0244d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4c894fc-d4ee-4d1f-ad69-67ec869b107f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "84796c9f-036e-445b-b24e-f114fb67d175"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6600304f-66f0-457a-bd8a-9682013b6b7e",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "111b87cb-9be3-495e-9cd9-fd632eb4665b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9aede94-c713-4e72-ab69-98107d60ea9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79509b4e-bdc0-4954-b4dd-bb5a0f585d8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8a4bd250-c666-4291-a0d8-133f4deabf13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1686c944-0200-476b-8b69-7b97d657dd98",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f8d085a-d087-4842-b856-1e1388a97b65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4170d75c-8648-4d98-b9c8-dbe7b05cccee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1343d359-bc95-45f4-99bf-6f9bb8a16531",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f3936d06-fba5-413a-9188-028b1aa53809"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08cae9f6-9bda-4ed9-bd7e-1ce2810066f2",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7e59674-9091-4b84-a47e-5fefee3b11d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9442d7c8-d48c-48e7-9a9b-e36c51036c9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b28d0a3-1329-49c4-a120-5a0d8a6d5892",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f88fce5b-ce00-433b-af8a-ecc34c413b76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f71e039a-7466-4743-90ac-68c9df692fc2",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fb5a19b-1c97-461f-8d4e-8058e658a2ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f548cb18-8e72-4e4c-902e-40ffb2296857"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd173fa8-5036-49b3-9bb7-d2f1876216e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f7406ae8-32d7-4dea-aae5-071871ff13d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf7c4370-77e8-4e6f-8c36-2f6a4666967c",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77e2719e-55bf-402b-8547-ff02db75ad12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82c79a63-165e-4b17-91bc-4fc91d959af0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e7fbab4-b058-4265-9265-ca755b880f90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "095b224d-2ff8-4a86-9887-8fd8aa5efa71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "425fd85c-c57d-4dec-8d2d-33f41df242e6",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c3dc359-c6e7-4ad8-b08a-b2ae713f6c3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8dec5af-9291-4792-8c02-c67d348e6cae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70fd279f-7ece-4ef1-950c-b4944bfd8869",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "dc30b72b-83b2-4539-85a3-1b30eb877dba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c4f46a1-652d-49ae-89b8-ee4678ec5d7e",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1f1a898-839e-4b77-a472-fc7d17616711",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e39d53f7-4788-43a8-b550-67fdc314c14d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cb0933b-8218-442b-b7a3-37187b33a686",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "31354d4b-3e58-4390-910e-88f0b23b7b40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cfa47d2-dac1-49de-8f71-5a961344b3ac",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc261581-0ef7-4dc4-a56b-f23ba98bb2f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68ac679f-fbf0-4385-a1ad-edf26f6009cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98d2dd78-e856-4bf5-bf6e-f82cdd9861e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "3cd50cb1-e914-4eee-b181-e99f4acc969f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b35deb2-21a4-434e-9659-cc9d782b9104",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0897029a-e69e-4bb5-bd06-cf13eb799c7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8219f22c-3e75-4744-9e2f-e4b13d91f047"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a24f8b79-459c-4374-8517-e1a9623ddf30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "156df8dc-4815-4f37-bdde-77c2a181ecc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e18837b-4873-4284-b4fc-b4501fe151cb",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83502f57-64b1-4786-bc38-fc387dc3d4f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "634296fa-a74e-4ff3-911a-cd59114eda53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36daa772-daef-46fd-9b42-81361ab36f6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "cc9b3a42-057d-491e-8754-75800f7e1e7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6be6d1fc-15da-4566-8006-bce3bfada66c",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "908e98bc-35eb-4eb7-a7ed-776f206086d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "8f9f2252-3af3-423d-84a1-4dd27cb2b600"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19111a23-0e48-4b61-83b8-9f763a999517",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "cfb0ba36-f0d4-4658-af9f-3ff73deefcdf"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "31bc8dca-8fb3-45cd-ab7e-9765791b4924",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "72897581-5b8f-4c52-aa18-a9d8381e3fc7",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10ef66e4-f3b9-4f4b-9a1f-1df4b4df1048",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "44850bde-4618-47d8-a6ca-78b0798dd246"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32c5295a-8b86-4f2e-a035-251728cf0e83",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7ecf0b76-694b-4ef3-90f6-35bbbaefafae"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "837422fb-2e01-4c73-b21c-c88963237539",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6d4f3aec-0fee-4142-a260-5653135bc952"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "13661280-2377-4264-a536-886c9da9fe24",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "be152c06-dc22-4e4a-9d57-d26c2c631cae"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c9a35476-a721-4959-979d-636f30e88c3f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "39f77925-753e-408b-a87e-8f83df323520"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ca4f1b7f-68a0-470a-b0f2-ebb1cbcdc669",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c0aed85d-768f-43a1-95c5-ccfb2868650b"
                }
              }
            ]
          },
          {
            "id": "8e193f20-656e-4b47-b194-d127fa2688d6",
            "name": "Positive Testing",
            "item": [
              {
                "id": "43eadf4d-7c9a-4108-aaff-52a16886b88f",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "23a11c4a-7af8-47a2-a67b-7c3aa863a2e2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4e59d823-c1f2-4315-8c7b-14eda0e2d987"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3ce8439b-3ec5-48d5-b7d3-af538cc81bbe",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "6dca4a69-6238-44db-ae41-52d543d46138"
                    }
                  }
                ]
              },
              {
                "id": "5d2caf83-b3cb-4f93-9f05-f7e7ae58e753",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "33ac9208-15ef-48d9-b778-3feec74cd0cc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b73873ad-a4ab-467d-b25d-19a2b58619f2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7a2efade-5d2b-41b0-81cf-22cb8ddaa0fb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0942c05b-9f14-461d-aa50-7a4575c400ff"
                    }
                  }
                ]
              },
              {
                "id": "00b5ccea-d230-483d-a7eb-d65338addadd",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "64bd2c9a-5729-4447-8c39-ba0bc86e1841",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ad799078-cf27-430d-b25f-2776ca821f72"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "204ac6fa-7603-414b-9e38-5e10b33c910a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "6eec6457-d499-4050-a82a-ccea869afe15"
                    }
                  }
                ]
              },
              {
                "id": "b8d6c382-cdf9-4859-8261-bd0e05d39375",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b1a81b5e-7224-4909-a8ab-f4c643f4d58c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "615f9060-2985-4035-9a9b-e4c7317e52da"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ec4a0efd-64ec-40ff-938b-a692a0ec83d3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "1f6b31a0-ee13-4e53-b58c-610284918aa6"
                    }
                  }
                ]
              },
              {
                "id": "8eca32e8-43cf-4908-860d-f1b71973a213",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ce037a9c-2b1e-424d-934a-e4621dddcfa4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0d9de695-5a7b-4a47-b0c1-8cf1c430a66a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f7630879-ddbb-4784-9d5c-772d6ce8f5b7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "ef9277a1-5301-41b2-aa08-96a4cadcac7e"
                    }
                  }
                ]
              },
              {
                "id": "e526cd18-d82c-4a0c-9691-b73da929d173",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8d18e559-5623-4bc5-a1e9-a17efd2d9ca6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3fe9d226-6958-4cce-b5af-809e03d5bf48"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3f369081-ac51-4b22-a44d-da44d3012635",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a36d4b1f-a838-4135-b69b-c2a42bcb79e5"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "bc2f018b-93ff-4bc9-b6e3-f8956e1cdbef",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c98f6e60-1b60-4c81-88b6-ad154892a87d"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "3f2a32dc-4032-4d23-a6b0-aa6d74e3a2b0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6d998ef9-709f-4a06-be9f-7d3ed2af8483"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "958fc6a9-5c8b-44f1-84e8-1207a1b4137a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "7e38aaf7-5685-466d-bbdf-fecd97747b6a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5884cc22-b1e7-4c24-97a4-0e13b27502bf",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2ff0bd5c-bdde-4e9e-8c34-9ab59d6ac91d"
            }
          }
        ]
      },
      {
        "id": "dfc0aa1b-74e2-4d0e-85a3-bebcc637b449",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "74466810-fae4-41f9-8488-182a2b9cf445",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f166a219-cd94-433a-85cd-cccf4a3b60f1",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "3e05adbd-2aa2-465c-a0da-6665cdeb2ae8",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffd29d26-6277-4a58-bd74-1f097bde00b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9d35b5f-ac47-487a-ae19-3d44174a54b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28fefebf-f024-4a29-ae76-77902bd4c8b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "c24fa58b-90fa-466c-9958-ff6a58bd3199"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b78df397-d93d-4bbe-a3fb-fc88133591e7",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abcd6352-daaf-4095-b2fe-28325ee94931",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b67e950a-8418-4ac2-ac33-9649e913b3af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "254e5afd-e8c3-44ff-a4bc-5aab77e60b66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9e7cd53e-1fbd-4f29-88d8-7351c7e77d37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbab1eaa-3bbc-436f-9209-d3ee9c951b25",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2095693-648b-4ef2-b8fa-66e599d7a09b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77b5a340-d1ed-48ce-83d6-44e6ecb3d038"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f172fae5-83ff-4016-b9f8-9c16d9c44ee8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "67b35f59-a3c1-4069-b701-972e03ee7972"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db766154-b441-483c-97d1-16f7224cbf05",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80e8c878-781a-4f9e-ad93-79713e359f81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7a92efa-33e4-4605-974e-9f859b430ee9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ba73df5-1ec2-40f7-a92f-6de624ea49b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e06941ff-e4ba-4c66-9f9b-d60ff179690c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33381693-e52c-447a-9038-092d6c7b055e",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0666134-7a7e-4275-8699-e6f4069905c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32a1beb1-cf89-4027-8633-7688d7dc65cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2f8a77b-e790-4b31-9486-5173f7d2c205",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e04e71d-7808-482c-8b30-881a24d4eede"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8be67066-bab3-446a-9e90-a74b159e6b32",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45af654f-c954-4a27-acb1-a8fe640a9ee7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e53c1df8-f9cc-40d8-9233-35021b5bc9fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec3e5d8d-1d2c-4cce-92d2-c079ffa10ff0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "49f9f4f9-1c3e-435b-ad4b-16969400bfdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e348d86-1a52-46b0-8fff-b1f5b9ceea8e",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35315ed6-9de8-41d7-bb4f-ff657e8d6a8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98f5af7b-a02e-4b9d-b9e0-aa86f234bb35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04d18e80-e98c-411d-8625-b00f32ef35a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "e3548fb3-bfd5-4bf1-8a7d-82c33941b6ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbf6dd5e-5fe2-4084-91f6-5243113fd1c8",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "137f71d7-dfc2-47ee-9a5f-19c82b95605e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74981a4d-8f7c-4aef-bb72-1232c3f4f6bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cff91fd-3365-4632-b4de-a5d989492eeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "45fe7501-10a0-4590-a663-43d34a7083e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9d1b83a-b026-41c1-85fd-dd1c310bd916",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d061a62-e926-4e76-9604-c831693067e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5240505-68a6-48b3-870f-d3425fee35ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aef1fc6b-764e-430d-84cb-97b2e5e76b94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f4c757a4-bc59-4296-ac4e-1c6cd7150228"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91368f5d-e39d-4749-a21e-5e670eeb1bdf",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "905facb6-2e50-462b-b9bb-5b0513b3d832",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3348664-0eb4-425f-8e49-0b1dbfe0173b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "165c5b01-dd4a-4872-8b80-716b51ffc4f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a166a4e3-9709-4bb6-9378-ecb62694bc6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04a07d2b-961e-4703-983e-7c95cc4129df",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3e32684-e16f-49c3-94b5-809840627669",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "739e3091-e8c2-4fd4-8c74-d9f949ef5b58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ee5aa2c-0831-44b2-989e-85002d594f79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "fc068691-96dd-46f5-bc90-9f064822a326"
                        }
                      }
                    ]
                  },
                  {
                    "id": "389e99a5-8b66-44f5-977e-2ac65fb1ac8e",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "402ef86c-b591-4c01-a52d-ee500d6d4004",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52cdfc1a-05f5-44d0-ac10-23a7160549ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b81c1a4d-7bf3-498b-a095-89013b1e1d38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "df49ea27-11a6-49a6-9e73-47edaeef8005"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d09efdd-33a0-412d-9846-9b0584ce782f",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5b8d68f-1554-4556-b6ea-a6c18b0d940c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91e57968-9330-4a2b-81d5-221464aa05c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fd5fa05-3102-495d-824a-24bee89c3ef3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "067f607c-6082-4d6b-a017-c4c74fad2798"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c484a749-eae2-4a37-91e8-77111feb632a",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15e39f88-4f71-4946-be63-c5688efc1000",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "498bbb9e-afec-4068-a66f-f278427a69fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8e5accb-83ba-467a-a5e4-549146d35bb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "5659f192-6b36-4a75-ad7f-aee6f556e761"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fc22676-a714-419c-8cac-3c34969d7c7e",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "227e1970-fe9b-40f6-832f-e748271da697",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c12fe0f6-7165-4f15-a9ae-72986fb1974e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35c2ebd8-4034-475e-a670-108b885f1bfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "d4c8feaf-b1c6-4e3e-9e60-513366e2b15f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19c63826-896e-45a1-a273-6ad826f4850e",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c719925a-87a1-458a-b31f-294ebac43072",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "983ded22-eb47-4a0e-a2f9-79e0a51d921f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b84fa48-cf73-4446-8d90-d5898eea73f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "f20d60b5-38da-4df1-a7b8-1cb4a8896dcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef4eacad-3cc7-4d6e-9a37-6e9631e21120",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd7f806a-b345-459e-b839-3fe266398bdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b79a429a-404d-4192-9489-0f4bd187c89b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27980a66-8fc1-4f61-a369-9fd79fc37b8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "5621ed15-1004-4910-8083-f7bd1d753e51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0de7050d-fba4-4e6f-9c2c-64c2a5052e9e",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65447e9e-5e2b-4fc5-bc74-e54041d2e7c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7c2d495-86f4-4c48-b185-d178debaeb7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "751a57e4-e932-4bdf-a98f-ea23d336c99f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f734050c-c0d0-479e-947e-3198b8440e23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a27b67aa-412c-4c6a-8e95-df8271602f21",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "512e1a17-c6db-4c74-a92b-7cbf94d26c10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf413f44-ba9d-4dbe-8d5b-5fd429ae09e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50b2cfac-3ecf-4561-9057-71001f49a2c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "84bd99e1-e731-4d4b-abd2-a5583fd978a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6090d4dc-0e3a-4070-8d5b-97f2542f492c",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9476850-e7fc-417d-a1f3-fa36a5630cba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af050153-e379-4f6e-a99d-b6ab685de139"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9f814ce-a77e-46bb-9145-339c499dbd50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6eb469df-9dfd-4898-8633-876cee9f6ab2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2746a54b-136b-49c6-9fc1-7448c1eb08f2",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b93d6fb-3af7-43c5-b7a7-a1cad31aab33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6955c35d-6e02-4ec8-8416-6659aa5345c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5bd8b80-c6f5-4cce-8bf7-07ccf8f3e223",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e64394cc-9dcb-4d16-aa12-8a5c3511ee9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "191fe2ec-e8a3-4f63-9754-46573ff820e4",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5ad1761-d79b-45f1-a71b-b590b66651ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17a51f40-ecec-4da2-a8b6-98d1765b2056"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ed1397f-fd08-4e1b-8b19-93346d199127",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7bbdf4ae-11ae-4f61-baa5-71db4510a2f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ea6d4f7-a844-4e5a-bbac-8b08ffeb5c53",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c89b3de-f5c4-420a-a207-9af9b1ce852f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "000761f0-9288-4cde-85f9-9d3472d9b08c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3370fd95-3e66-46bd-85d7-055e13cfc69f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b4b155d7-5146-48e2-82e2-e2aa3814248b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3d64aff-f7e6-469a-9e16-1f8f4a84a1aa",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8baca06d-b91a-42ea-8a43-0e0961a3e281",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a799e3f3-6411-4236-82b8-34f5f9044494"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c862bdb-0c4a-4d81-8004-428fd7894a75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8eb1f8fa-a97e-4de5-8e25-c169046b96ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f6cdb34-6a03-446e-92f7-49559378a70d",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33016abe-2db1-405a-8715-5c794c1cdb81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0bee030-ab46-4c28-88eb-d5ebc5de5328"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "405fedad-a2fa-4a8e-81d6-055ce720627b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7d18a8a0-3c62-4475-ac3e-67dab62fa8f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2256d72a-1ea8-43b1-b871-ff7b51b4e22d",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a727899-61e9-4c51-a7c2-9ce6367a8366",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc0b409e-8466-4c3f-b18f-ef531cd20f47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "735ae242-f107-4930-9a1e-a0c8b489b01c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "81b0c1f2-b11d-48ea-a929-06639b0a8c41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35203027-5f12-44ce-a0cc-6d6c7b66b506",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d996d3ec-72ab-448b-a819-fb9e52c6a776",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8aea0770-5ec2-4f75-9eba-52c83a410813"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d862dd68-137e-4dd8-b51f-bba42987ac04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f0efe0a1-ed1d-4421-9838-e7deac60b3e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7698ce39-5aa0-499d-ba6e-f4a5f4cecc59",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be1dfe44-d0a3-4526-ab56-781147b4cdae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a17bd322-9b1b-45de-a9ac-c3c310a4914a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d8ec4e9-7d79-4338-b085-760745f8d0c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "78f9d161-10bc-4165-9091-ea115fdeef91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb9a342f-c374-4582-8419-04ebfcffe7b8",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37d8a5fb-fd6f-426b-a6e3-5528280f56c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6b76eba-3b16-4f8f-bd11-569438f7c38b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e0dac23-b71d-4ea0-8cc5-e8110056e5f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "48913e68-cf73-4b3f-8d7b-fc4e9d4a3f5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b879c49-1da3-49eb-93a2-7e8d97d31945",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1184dbd7-de37-43dd-981e-8a84c33f1ce2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd12cdb5-5c44-4888-93ab-8232398e8c62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74ab510e-5ee3-4040-9bef-295b167066e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6d7e57b7-8fc7-4707-895d-7d289eb7a3fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14e35dc1-b9ff-401b-b0a8-a4b0a0eb4183",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bb610d4-41a2-4ce9-b901-eb5bbc1ab949",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "153550a3-f335-452b-86d3-970894c19312"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c375275-0b03-46ca-9000-2c841b28216f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9cc94814-74ce-4b7c-92a2-364249a1acc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b445eae7-6d7c-4e0d-9d7f-92d642666eb3",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a3470a4-8d56-4c17-80aa-458108a12044",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fedfb0b5-32d8-4126-a57a-a14c58062469"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddab0df1-07be-4055-9f2b-f09810cad5b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "55e7701e-b46c-467a-988f-f52fff43fba2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "bbbd055a-bc1f-4883-8215-4f377412b129",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "45eea31d-0d96-492a-bca4-62dbae4a2328",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "beb15b5b-96d6-4075-a472-6763050bedfa",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "a572880d-6bf2-4e77-a9d8-10d057e334b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7e63cf7-f787-4ace-9f85-d7d801427180",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d165021d-cea1-4d19-821e-3a739401461b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fb881971-46e5-4f89-9a4d-3dc193882bce",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8b671325-e60c-4c6f-9065-d6d504a85db4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8be82689-c33b-474e-9da8-af59d1500309",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fe811620-c2e7-47c0-b5c7-2518bde9efb2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fe0a103f-242c-435b-a1ac-72d5731a2ddb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "eeb57ef3-92c5-4c9a-8d4f-ccc3af394056"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "472b0c26-612d-46a5-9cce-d6b830e0e2ab",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c1d54d57-ab47-43cf-bd80-ae17948f22c7"
            }
          }
        ]
      },
      {
        "id": "f6bcdebc-b7a7-4a2c-a445-7d0bbe017125",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "8781dae2-d5a1-43ac-9f6a-89d616cef3d0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "95527665-133c-41ad-ae23-ac26e9e7fc0f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "16fa8f51-da3e-430c-96e5-9f91560d10a4",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f44f5f9-f5c9-4f85-8c4e-6ff72d363cd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b14df64d-a7ed-44a7-b42f-c82691e60037"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c42ad0ce-6ba9-4355-a198-9c243cdc5fb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "ffebc8eb-4e3a-49da-b519-36e3449efcfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "268497b5-fa61-40b9-8a40-d1e69823a233",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a274bf9-b5cc-433c-a7ba-bff19c10674f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bd854e5-4fb3-426c-95ae-6ab8cc595ed2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a83b9dc4-2e39-46c8-b3c8-238a86067607",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1275b2f1-783c-4450-8b72-8728b9396145"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3fd7108-2321-4424-a91a-4309e6046689",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6b1b8be-90e6-4c91-971d-6fdfc3860594",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed49e199-88b7-4751-bcc3-c9bff6a9f570"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7182d977-c422-461b-bf8e-11ffbe8d1195",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0076edf2-54db-4fbc-a78f-c0334476f9b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67e4c7a5-64ea-4fc1-b53d-27c116eb722e",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4b159a3-4394-4479-96f1-01192e90458a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6788a477-a494-4d7c-874c-95047295fc5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d5cd19c-7e93-45f7-8ad3-ee9a659cd10a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5016bcdb-e091-4ee7-abb1-9f95176789a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5b47a97-2c9f-4465-802f-409c5c28f61e",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12364640-6b63-4edc-b4c5-a179085da759",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9af2f690-9daa-42ad-ace3-0544fdc39fa8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "016ef433-bb7a-4d07-9820-a34a5b2ac653",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "16ca4622-4ba5-4b90-9ad7-1baace220871"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19cdd076-ebc3-40b9-90b2-31795f6df86c",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e822f41c-001e-4522-ba06-352ca923a399",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63108e9b-8b34-434d-816d-1642509bb7f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d1a7e69-0881-4ec0-ad36-e995e03518e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5fa23208-57ce-49b7-a10a-6038e322ff6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a88651e9-c43c-4867-89a6-8f76a66aa57c",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8fa4e10-21c4-4060-afec-72a2568a91d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80155cbd-c4ee-49c1-887f-746533984b10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a860fd2d-36ac-4bac-beae-19a3d126c600",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "c32d3161-5bfc-4e74-b1af-3c313941f6fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08c890d4-4231-4bac-97f1-16a5cf451366",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82febb58-be5a-40cc-a1a2-c08fee90ab2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "930226b6-65aa-4a60-aacb-5a3b293bf1f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33f43ece-ff68-446b-b85f-89c333a19fae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4269e94a-a6eb-473f-a762-7122275079a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2011f322-fcce-4ad5-804e-e4b494b3f0a6",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "442f651b-2f79-45e9-ab8c-dd949235c9c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0743dbed-1475-492a-8627-53c3facc34b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9e6d0c4-d8c8-4982-8c9d-745a09c70be1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "de9310c4-4207-40d1-bab7-08fe7d847027"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4c411b3-5620-4251-957f-8eb285ed3d07",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab1a2fe4-14ed-45bf-a213-65b17e448d6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51fe4418-bc7d-467f-91cf-60d6a0957d15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae6a6590-cf85-415f-82db-bcbb57581dc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "65ff3dbb-fd35-4ebd-9686-f01f3a2b42f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a533c710-7b83-4616-b0f8-089bf8f36d4c",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "214e4c71-b58f-4b4e-804d-193f26c1c87d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e74cc516-e9b0-41ef-823c-26a42ab3ed37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7119e114-d09a-4207-b13d-9733dfaea558",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "20cac993-3a8b-4fb6-9d70-34cc60e43e89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30b2d6f9-5745-474a-a1ee-41e2895e3066",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "967a8e8e-b4f8-4dc7-a788-1e3c0898cea8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bc83e96-7dcd-4bdb-8d33-b6dd1ddbc0f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "134d2886-245d-4739-89fb-fbb303005252",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9a3d81e2-252f-43eb-b141-321649643f83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3aa25d7c-ca54-48fe-b634-248e48707417",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94b25254-7990-4266-9dea-f8eac723ea52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4721df9-3a0a-4f7f-9ee8-9fa239b84837"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "994d13b5-7e5f-48bd-ae2b-f9e37512fc3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe3aaaba-50c1-4f8e-949b-3f9f5c0d34a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a403736f-ab9c-4940-80dd-d7abb3a3f4fa",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2633e306-b686-4c6a-a584-ebe6529fea36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e40f4201-0e83-494a-af2f-bab3f76860fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6b71540-f64d-4603-87de-ec09887480eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d83b2f4-7183-49d3-bc5a-6dfdeb53413b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae6b1097-c7c3-4a1c-bf29-9882674cad7b",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8b2b436-f988-4009-9fe8-887cbc16c221",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b571de4a-c364-401f-bf42-d8993602ed13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96087b7e-55ff-40ee-a694-b8df83bb62b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "9017b7b8-c5ab-4d2b-b7ab-385247dfe342"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41b9ba18-c241-4e24-abca-971543d563e8",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edf9f2f9-9e12-46e8-a5cd-663837a9e5fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6123bce8-44be-497b-81bc-abc78d23dd40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "233c84ba-527d-420d-bc7b-3a5101275ab7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "d46ebb74-487f-4f8b-b172-0d73a628962e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27c5ba27-a940-43bf-ab3f-609e9c0c501e",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c8366a8-ec9a-440c-925c-72530984bdfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff41d3de-2537-419e-93ff-6cadd5137bca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7822cc47-7921-43d0-a6de-718196e1582e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac0bd8a5-adbf-4b20-95c9-30d05e666a09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50ba4835-ac02-4de0-946e-c319852a1dc6",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcad97cb-b8bf-469a-8a68-0565645b6c93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f075c210-d43c-438d-8100-71ebd828f28e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c1a60df-2829-4b9f-b71b-9aaa072a940b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "89e9ac33-1110-42d8-91a2-ab6c2a979c16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4048fbf3-12ac-48aa-9604-6ef16164a7b6",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "071be4a7-3d44-4b29-954b-05c50fa45aad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "607fa74e-2482-4b38-bedb-08ef45008570"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47cd1b1d-1e49-4e53-88b0-5934df377281",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "60fb976c-63f6-46ef-b20c-1101d5d9ccfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c733ebb-185c-4b71-a2b4-6aea2b8c3530",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9fd23f3-f722-4815-9259-f823c8912cc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a205362-27b4-4daa-95bc-d1450976c8aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f41e32f-7b5b-43f2-9414-99383a05e0bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b368013-24ab-4db8-a363-77ef64b94a99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25bc243e-ae75-4a60-a413-015d8914f9bb",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e783657f-6519-4672-a1bb-94634c1e713d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4321498-bf87-422b-8341-b2a50584ce8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "443e04e5-9009-42a8-b68f-30fc6cfea2ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "41bc5555-ef6a-40e3-ac55-bae9fb1ee2ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffccbd9c-fcd6-4e37-842d-511885d749d1",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16843bc9-dc24-457d-be23-122ba4c93817",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62cb57fd-24d6-4496-9cd0-c96152555cd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c615262-3b93-469b-a0e8-e0f4dc1b437d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a83a17e3-b19d-457d-9ca2-d9294fb8089e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91ae416d-ab15-4637-80d9-46a985410597",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9173e649-2568-4480-bced-a8ea1fb9e846",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d6e9cca-d5fe-4143-9c95-927465344d31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a1190e1-cdc3-433f-9c65-e3017e7a3c97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "87695e77-c8d9-4560-a0d0-b828b1418dd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27aa15de-84ed-48c7-96d2-c843f11979a8",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0caaccab-dd52-474e-8ea4-93a94d1362b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcde7093-1214-4f33-a207-1c669edd21ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a7e5920-ccea-4269-b1fe-3df4ad887e2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "982a71fc-b595-4118-aed3-10aa00374935"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7be10bf7-0db5-4ae9-8fb9-c71f944029c9",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "613689bb-a6f2-4562-821c-a2121ebf738d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b7060e7-0329-448c-aeb1-0442c52b7748"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91547592-c07c-4d73-9001-21419feccc9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d009e8b4-ec62-42ae-8f22-ccca01ce03a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2726b709-f80e-45c3-8407-daefae1fc8dd",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6de0c11-9608-461b-a0d7-efcdeec6b38c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "545d9dac-7aa5-4abf-8049-ee4f1b2c13f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33ec386a-c6d5-4be0-baf5-dfeb76823aab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e25eaa83-36f0-40f0-9f8b-85cf395e0ec1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52429524-3a6c-4902-9097-6d1ae7dc6c5d",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb6eb586-150b-4a4f-88c1-dc80ddecc67b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66ee3338-423e-487a-ab4f-e9d6ceabc484"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80984de5-139f-4142-9c1d-b4a5b0ce6090",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "01248618-2479-43e4-9875-917f94016762"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba71b341-443b-49a4-b992-1e42a7204686",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2447b348-adb4-499c-af62-57e247117979",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cc731dc-217b-489f-b15c-7a3d47a9b322"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c92d338-5852-4fea-8e69-9d753f7fb867",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "341bc9a9-17cc-48ed-971d-208592b66068"
                        }
                      }
                    ]
                  },
                  {
                    "id": "397314fc-014e-4175-9ea0-2a5efb2fd8e6",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81d20760-cf4f-49d7-9a26-41e79d1eaa74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "222caa6c-b40d-4210-bb83-5eb3c38497ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc5429c0-9fa7-45a3-9287-acf49de57073",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d2cd070-9c71-4f83-91e5-76c1064779ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "163e45fe-e5b2-4d2a-93f6-e6a7546b7d09",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d495c85-0a60-43e8-864a-cdc89a10523f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6594d085-76d2-4437-967a-504549d4f330"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec7aea20-ffa7-467a-822c-c29822a97ec3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "896826b5-3e83-43a6-bdc6-2902c99d0e3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "409a96d6-eb6b-4310-9006-9d660576c40d",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b8fcaba-59e6-4d78-a799-9c4579f1b572",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "813b4ed5-8df3-449d-a657-3995fe2be57e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "369c0f73-23f9-4514-af1f-0eff23916879",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "09c36b92-e8b0-499f-9426-a5ece6543c13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6942f4e6-b8d7-4137-af04-572df979e2d8",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eab28e52-40e3-4aab-b26c-450b96cfce3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7217c40c-af49-46c0-a13a-5b1e53ca255c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0ba732f-f1e4-4286-9287-b972d069ee93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "049b40a3-d34c-480b-b54d-f03654f1372f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37a0b193-6edb-4497-aae1-43ad8a4e6a5b",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42a245ce-3bf9-4614-a346-54b5e5ac76cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "495457cd-b38d-4813-8b79-2a47816b7634"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "395fd521-3f3e-4099-80df-dc432d5ae872",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f38eba9b-f46d-4d71-9031-71ecb255f700"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68035523-1ca9-4352-be6b-f7fe2f0cd8f6",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2e9f397-276d-4ebc-98f5-786c8a72f5b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38d0aa56-2348-478d-ae3c-d28fd3f47548"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "409c56a5-f433-41e0-ac60-9d8580a99540",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "46ff88df-12b9-4c8b-bb68-b567b3e5f2e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8626ee98-9b6a-4434-9e90-46cc36ac2bf0",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1783e700-7ce9-4923-a0f9-3f9e808b16e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c35ccc45-25c2-4aa0-9d30-46615737d305"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2479d7b7-9924-475c-b2d7-f8dba6901d9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1dd195c0-7c0b-4011-b5a8-0a7cf9419371"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e765871f-8187-4440-81f6-7e61e8005b7f",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dedf0bd0-a5e9-432a-96b7-ddc43bd27bf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8946c740-7b0c-40a1-8a9b-9cf4b8172a6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a15ff9c5-f797-497a-8258-e5a7f0090da7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d6ded6fb-4437-46c8-9fc0-360d4298aa68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfb53343-db2e-4d16-b6e0-131d6b990627",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "604f3817-529f-476e-a6f3-b5b6f9be9bca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39bc8e58-a228-491b-acea-3a821f133423"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8a83cdd-5621-4d27-bf0b-55806819c352",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c082a833-e8d8-46e5-8384-0775233faf48"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9f1edff1-59be-4cef-91b2-8376c2fdc1d6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9de966e0-7479-4c99-a3e2-7dd86c519405",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f42b9c32-c803-4dcb-b8bd-fe233f1f8222",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "5dd379dc-6ad8-49f6-acb0-d487f1ad4533"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61f85252-5389-4383-b84b-405649b74937",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7916ec5f-2092-41c3-97fb-afa75e3edb12"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "75a2e674-ae73-4f16-9601-c5dc82c3964b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6cefd4c6-7202-4280-8984-cd4f4d886d5e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c123e619-ae89-44e8-84ed-df59aa35a912",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e5c5e49d-f9a0-4558-8e4c-0c117b28b577"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9c1eecb8-44a1-4a5e-9786-e595ed9b0392",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f7ee8382-9c70-4fc7-a41f-7149cb10c62f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "10b985de-a409-44c3-b564-a55e5cc336f4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6e0e5ee1-a699-476c-89c8-72f69a280cac"
            }
          }
        ]
      },
      {
        "id": "4a22e38e-ac7e-46cb-ab8d-63acb6865609",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "02971e0d-4275-4a6f-aea9-79fb663c18f0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ebeb2e4b-70b3-4663-b9cf-78344e0c3cba",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d9cf6518-f28f-4eff-853a-344cea031e8a",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09ee2a77-0ab0-4ab9-85d3-99d056141804",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50b12792-7cc4-4e11-af5d-f430f9bc4970"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38c103e8-20e2-475b-b823-26c1b1276978",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6bff49c-f6ea-46f9-af7e-af02d47d44b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e16051f-faba-475e-80d7-79ecfb993e41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85c8d9fc-fcc7-4fef-ae8a-0403f8a4e831",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0df3859b-c18d-4ccd-ba2f-1d9fc7cbf0c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31937016-0710-46d2-9daf-edabf44ab7d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14eaa0e5-8a97-41d4-a22c-eb25f4f6272b",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1435c24-90d6-44c8-a589-0871d9014cd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d613da23-d4c9-46f8-b54f-9f43617d24c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22cb4371-cb43-4d3f-be11-d32a20f57288",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74e29adb-2699-4f5d-9a02-2a2c74c7912e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80c3cd8b-2e0b-4f77-bac1-4289b8a1df52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbc8dd79-3c43-4676-b288-8cdcc6117817",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "040bb206-85e5-409c-9cb1-1f64d7bec1bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b57bfa38-0d44-467b-a4d2-1b388a291361"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e68465d-c3a2-4797-8fdb-4baacb35d86f",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4f35d3c-5090-4236-b371-5b6e27e5b28d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5560f655-349f-49a5-bb74-7a9a3226325d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08f342df-2009-4d5f-b56c-24493cedafa6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40b2fd0e-51ef-4206-9e30-9e83488c4665"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8ba8a4f-e97f-4224-b569-04ca2633966f",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8c22ad0-f5fd-4c56-80a6-e48241a0e4b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fce17b83-1864-4053-a09c-034dbfc8ead8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb0db648-13dd-4568-ab87-fa7573bed630",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab61e77b-79e1-4dd6-9f7e-dcacf3930944"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eda8277f-8082-48f0-880a-640b89a01e67",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1339360f-9303-478b-add6-bcc668b9d091",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de37566a-7d1f-4010-bcc5-e21a6d88c42e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b821cc2d-b4b8-4515-be30-f0e13af181a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0436f74f-7f7f-4f40-81fc-efcc35b99b86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f8deaf9-b69d-421d-b41b-035c91bfba6f",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02b1a996-efc7-44d0-be70-33404cda3a3a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "35799ca0-ee05-4bad-bfda-8403c4e87c59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75249045-3cf0-4cdd-98e2-1bad3f0f7358",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a80d812-42e9-4db9-a4c1-05d10ec62d3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c55b5bba-765c-4131-8100-b340f43482cb",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6be1608-8b74-4bc2-823e-d3c9d07e196f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6d5d743-d4ce-442e-8f3a-157400d95071"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12000659-6b58-45dc-8f2e-6de213c5ed88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a04b8e80-db26-47ba-88e3-b97e7a8ffe19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2faa0250-d31d-45ba-a939-0261d54923b3",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba5e3e55-44e9-43c2-8ed9-5580a3b52809",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bac2fec-246e-4f27-bb4e-6ff926570ca9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f01e802-455d-426e-b2ea-d753f2021fd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87fce317-72fa-4ef3-ac6a-009f0faf2bbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4de3cd8-87b4-44de-8498-d2f9cf317500",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8195f182-aff7-450c-aa34-d81dcf5161a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "abecc3c9-679d-4500-acd6-4fb3cc592895"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05b9bde1-1f15-4bf3-b07c-21617992cc1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1397890-d066-453e-b8ef-b230f64acadb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bee13ccc-7167-44f5-b361-ce4cbeef485a",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0e09eba-804f-4760-acb6-0db14946b1dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d6301eee-0277-4b28-9064-d125555caa87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed3e734c-a14c-425e-86a5-6b3005b13b57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19eaf355-c413-41da-bb8a-218b11cefdb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "030d722b-fdcb-4ef1-a24e-7f7d624a9ed5",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2af60f5-6389-428b-81ba-f0fde1448799",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38ba1385-bc1e-4c1d-b882-f7ce6fcb0c6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c7b68fe-cf55-42e5-907e-921640139d79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfb90d08-c784-48a0-a47e-9d2340b9d79c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a986fadd-337c-4a6f-baf1-2c1575b4f6bf",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f982a155-5dfd-43ba-9b7b-e16ca9799352",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "58bdc966-d3ab-49c0-b951-2aab78322681"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "060bcc08-36f3-4488-b660-047e0ec528ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "216b9c3e-c699-4455-bd08-cf589220e5e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a374a669-0ef7-4b9b-90c4-ca5ab4a3cea0",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1903499a-afa0-4f11-a369-89c145b2bad4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe9a5230-fb89-43db-932e-b3ffde75a4eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccaeff76-779c-423b-9b5c-1344f3ffd435",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e67fd12-59bd-46cb-b52f-0c53c56c7d01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f1de8c5-69f1-46df-b731-ee5e62d4a6ff",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6aa0e96-705a-439b-83a9-20b405be21c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d82fe4c3-0af9-4239-9bab-aea5cdc8d7cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac6972b3-2b8b-47c5-90b5-56b594a6e7bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20978e67-1fd2-4bfb-92fc-09c55791a41c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39d3293f-85c7-471a-8049-b7e31c30ff13",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d17e198-5dca-4afd-b8cc-92dbd2530386",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd660b66-e2ad-4ecd-a743-8416333cc297"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "564768cf-7aa8-4b21-be3c-ae5d2f377dad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9584133-726a-432e-a99a-a73a250dcd7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "844b6be0-4d1b-48d6-b57c-91328666795a",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdfdbf92-287f-46a1-817c-e43db1eedfeb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e00903f-ad05-4ba0-b52a-1c93e05e5e7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f900bfd0-4283-4a08-b9cc-484e31836781",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ad6bae6-f2cb-40d7-ad1e-e2a6474c9e34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbdd4faa-f997-4ade-af7b-e12a662c5145",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c6d9537-13da-4d20-aabd-f0f2b3b2bb3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fdf6e0b-c68a-4569-b89a-3ce9c5d5a582"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5eb16cd-fa9c-46f3-bc8e-5b02c4772de9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "730dc0c9-e8a2-48d7-b0d3-2eb48d7d6665"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d194177e-f19c-46bd-a2af-aceb54e8d8b2",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e32a982-7963-41d4-8f5e-d32c0cd7b581",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "550ca8f3-3cbe-434e-a546-0869d6c707e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "563fc28a-d1c6-4fa1-9b11-c19001340b12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db181bbb-772d-4aa7-a0ae-2e1958795281"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45ed66a9-bed1-4eb2-b744-0962a1662946",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5fbeba9-9624-40e2-a26c-0383bf2bc5d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54a990e9-62ce-4466-a1e5-f89f7369bea2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3d1e7b4-4427-4fda-a101-03514774dbdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5afd037f-1207-4939-8430-8a1c127073d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecaed715-156b-48a7-b349-7861ffd8885e",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba22c021-7d97-4cb0-bc4b-3c43107bf90e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a3701a0a-0183-4a22-86f0-203cf498eea3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd3caf8b-bffd-4378-9d77-cf8c31db8a74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ad8c276-c81a-40c4-94cc-070a901a60cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1625e18-ca0c-4a0d-be84-e3e2e1594553",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26fd5a56-1b1e-4703-8b36-7396cfc2f112",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b8dcef84-80e2-4619-bc01-4186210de243"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "060f1d4c-1855-497c-90a3-550b1f309504",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fea4cf47-29a5-4637-8016-c66803cb9c22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b7b0c1e-4b93-4242-8bc3-05310d85ba17",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cd07548-f0cb-416e-a95e-bbff26795648",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3512c66b-d551-4a6c-af38-eb3f0468e566"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b110204f-39ae-488d-8772-d579b3fc65da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67d48e89-cec5-467b-9df7-d066029f838a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed2517fa-7ef8-4cb3-9a52-8669034078da",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69f61703-9dd6-4baa-88bf-5de2d1465a1f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c7c8a7fe-8e48-498d-b34c-45d28d362534"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "705b8cb2-f1e9-43b4-8ed7-2f5701bbb26a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30a46aef-cd2b-46c1-af86-95a133b5609c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12a2e7c8-8806-4db6-b21f-5bb4931b5a7a",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "703c8e52-a3c7-4110-aa6f-cd4a7ee4f2d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c1c1af5-aa58-48e6-a9fe-bc96cacc1d74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a8bd44c-037a-4fd2-bec9-a0a20e76cac7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "556c9afe-69c7-4eae-a758-716934a24816"
                        }
                      }
                    ]
                  },
                  {
                    "id": "090e2259-43eb-4add-ac4b-254e24301ccf",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5675279-0f39-4607-90c7-7de90d4575df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "064b6ac6-c1e7-4d88-9a47-6f585ade4fb6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9142c190-90fc-4b04-becd-cfcccd7feac0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e7eb383-f77b-44b3-b517-49961f2247d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cab01ba5-8ab5-4368-b4ea-f802b71f64c8",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cee6a8af-b316-47e7-8cb5-d3b3f14fa8a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "74799fbd-13e2-466e-a84d-c0aa03b4ad97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ef9aef7-d674-444b-af07-3b058c1e2e61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d1f1db1-b80b-4b22-89e9-e95d17701549"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22ca792c-6a50-4c57-b98b-e86b63eb4ae2",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23a13869-19f3-40ce-a2af-dbe841e3bfaa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc47bae6-6ce3-4208-96aa-e815dc4a0229"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f09dff4-819c-4af7-b72c-488f244f8cba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e22f9496-63bd-4028-98dc-422cd65c7792"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d96c47a3-1e13-4431-ad03-1e06228414a0",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32f9444f-0370-49b8-8263-ed93a2ab87ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ddb959d5-d029-47ea-b0cc-764b54ac854c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdb0b440-06fb-478f-8c75-365ce7464e90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb06db71-686f-4bdd-b1e6-d2846aee7e5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16381358-2b9d-4f5f-b978-4485d0ddaece",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55dbda15-14a4-4377-822f-cabbc20a087a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c9a38af-ada7-487f-ad6f-09f086ca882d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ece20afe-3467-4d3c-8292-7408210b8cef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c47a711f-fc96-439b-b7ae-a00df15548f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a9a5637-09db-43a6-8362-511958ae73a2",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca74cffa-f3fa-4389-9e4e-d00b7535b1bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c932938-1674-4cf9-9b3d-b07f479d76b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a8a68a5-19e9-408e-b8ef-bfa7530941a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7128b150-602d-4f2a-930d-06839cdbcfe4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b435a499-bc96-4f54-80c9-83f46b325317",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "928dec15-21aa-47e5-a9df-0843ee8e82b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2635c75b-3271-4a31-b9d8-b95efddc87ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00e92f2d-c432-4f32-9d47-c7a62cdb0b1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8528117f-4762-4dde-b3d3-aa7f1e867275"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84780d03-8bb2-4a6a-821b-2e5a1508723b",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "882e075c-3545-40b8-b12a-97c9b7174b80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bee0847c-95e4-422f-8137-1d7005151a38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4ee1631-148e-4fa8-9406-6a1afe417073",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "842f2f9d-3553-49e0-b492-75efc91598f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f96d6198-25fe-4424-ba9f-f974a71a96ea",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b02e86b-9429-4307-98e9-dfbd316b106e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3db9d51-59d7-4c28-bf76-aa3cffc31ef4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93f2dd6e-273b-4f30-800e-6b94003ddffc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0325875-0728-4a2f-88fd-4d520ccd80b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b388646-4275-41a8-9ae7-6e95d5d55828",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a53ad49a-716a-47b3-a0bc-f505672cfa0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea16777d-0bf5-49a0-8c5b-b293b0ea11f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "523a4cd0-a341-412f-9952-c1524e9fa156",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39d3f535-35c7-4958-af4d-0a1561e767cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "156a9e48-0f49-4443-be83-d783bc1de28f",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29def55e-d299-4e1b-a0f1-b88708aa602d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d47384e7-72c8-48b2-9072-102d2034d0e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "994329bc-d4c4-43b8-aa7e-7460acb27f9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6fc05c6-e4eb-432b-90cd-48783b5e8fd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c87ca1d-3f02-4960-b7a1-ffba6e2a49c2",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c735ab56-470b-4b23-9a3e-597d4bcf4ed8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba7efe57-3686-4061-866b-dbcb3c7c582e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79a60715-2e51-40dc-a0e7-efac3c92d7f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e840a463-19b9-4c9a-b3c0-b75eb7534120"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e023f63-3937-4185-8725-dda625f221eb",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58a680b6-662f-4de6-a069-f3edeca74705",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24ebc0f4-9614-4bcb-8b16-02aabb8f10e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5a77207-3785-4f7f-935b-c0060d073570",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d53c777-1348-4847-8a5d-e62151b4246a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3c7917b-9cd9-4eee-9deb-0111b5500d2d",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "742829f6-05e8-4f46-9090-dee9aa2a6983",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a82be9e-38cc-4904-86af-b7e9c02874f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33e55c52-1f9a-4323-984f-ff9c41d9765c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "062355fb-dab5-499f-a19b-f02bd78cef36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a47044f-7342-49ac-94e2-d6025d9a4045",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62b3d814-b855-4501-9c8b-948d66529a83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78e88e6e-79ac-46cc-a90c-dc3919ffd11b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1baafbd2-0ee4-48cd-8319-41e4ae38d4b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "573f8f84-532e-43ab-9237-7d6c9a6a3d71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3dd8f2f-7b53-4245-985a-ef878859e277",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48a73c9d-1c09-4801-a576-477ad242c81c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e14e4b5-1ddc-4330-b4ba-84b831a503a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80000a2a-bcb5-4f14-8fd4-70451e35eca3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "122e4352-df69-40b6-a07a-cedf804ed2f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40517fe3-c83f-48d2-8081-581473ea0df5",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c7ccc8f-67f3-4527-8ed6-40226067a915",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ac367c0-54bd-46c0-9918-a4348f99fbec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bdccc1b-708e-4f91-b1bc-4c94daf77e6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8c399fe-4bac-46c0-85a0-e3d52cbfa12c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0bd8e26-2d0c-4e4c-b9b0-f5f4790ef418",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81a71744-28aa-46c9-b82f-a31b9d711304",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73fa6889-4f62-4830-9f20-ea4ec9eef9f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dad2041-7fc6-4736-9171-b22ebe880c84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df6f5337-5465-4ec2-8dc8-03ded091c638"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3a1401f-8281-4662-971e-e2828c451d38",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44aa3f14-c340-4779-b0a7-383fe604eb7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a290790-29af-4da8-abf1-94eeda2eb67f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a037fcb-72fb-47a9-b696-064a157e9772",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "342adcf3-64c4-48f3-82da-e12975e521f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c13c7ae0-1c20-490a-9b58-e9f9a6f5ed52",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a3fb3aa-e935-4ff3-aae6-355996ac239e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d55677a4-34e2-4734-abbf-f1c6cda23882"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c06064e-1ef1-43ce-ac40-2bd9fff606db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4471e58e-2b26-462b-9c38-73bcf34f9cad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9ef0e3c-5087-4b97-8c54-af80e992d026",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00746390-8bc1-437a-bf15-168812a1829c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd73ce5c-dbb3-44fe-8fd5-aa78972dec41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68efd4d9-a8fb-4daf-9268-dd50cbe7a2cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8f097c6-f1ee-4c98-af3f-6bf8ded0843e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d996c076-1662-4ab8-bbfe-85926d6a53e2",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d52a4f02-3f8e-422a-bc20-05f6ee4b7293",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65406564-3d60-4d78-a050-0e66170310f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f80445b0-3896-4110-ac96-f948c67c4a56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "058fb1de-28e8-4e4b-a2f4-09bb0a3cef02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "353d03c1-d289-432b-ad78-9b041440d1e7",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ae4ced1-1134-4626-96b4-1ab1ad1b0e82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "854b102e-710e-4f0c-9cbc-816a3185e5e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e449898a-e2ee-41d6-8c82-95fe37e3b836",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfc97f3e-49f7-453f-b4ef-dc9730cb4691"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e2541ed-47ab-4bd5-9c49-ae92de1258c0",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfed9832-9d3b-4952-b960-4e03fc662dc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bb57cc9-45d2-4bbd-9e6a-fc8e0029600e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cbbf795-6b83-4c0c-9f68-2ac4e4424d9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "953b337e-4ef1-4435-b3a1-017505e5faf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2fcee1f-0c58-40be-ac20-97c39f7b255d",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfc48345-8ff5-4c45-839b-ad27aaa76172",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5e8f25f-9ad0-47d1-9376-94dfa29a8318"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e33c620f-f037-4f95-bffb-57bfb874b170",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d22b9e7-e89c-4274-a94c-d3f25f0d31ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2b24554-bc5d-4e2b-bd33-0dace531df7f",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "142b67e9-ec5d-416e-9a74-fff2321af39f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edbca5ff-6122-43a8-b1af-45bde2bdcc47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "793fbc32-047c-479f-af85-fdc3dddfe276",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff6c3485-99da-4d5b-9fb2-b7f94be6c300"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24005e7e-fe4a-4a97-97ac-b7e6d6a71d60",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2c0588a-bfa0-4b29-915b-0327aa004468",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3368d54-afea-4eab-8abc-07e5f316f74c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c6538e0-f7cb-46fd-8add-0023db7f946b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe615edb-d9a0-475f-8cbd-b98f1ec7c402"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a0be381-3be0-483b-8986-2443f8c3f6cb",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac2bd0e0-335d-40c7-ae2b-7d16ed30cb13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abd24105-f3c6-45a6-807f-f217335b4c91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f758017-43b7-452c-88b9-aa2183ccdf9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d505727-1006-4bdf-bb5b-78400a6bcd0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e0310b1-2a9e-455a-a188-b9941b73e65b",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96e66636-5db5-47ab-b1dd-4e0445c3f14e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "350f03d2-36ac-4cc6-b226-9b0a5fb43f38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38162c25-7341-4265-a606-dacedc2d6438",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "629e5b4c-d24d-490e-8929-bf091c5954ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11102958-dbf6-485f-b0e8-7450c3317627",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c3f9de4-9b75-41c4-852e-fefc8a565f6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09c393b8-dbd6-4762-8f99-c4a58e164e2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9bc4dcf-2851-4c58-868c-5ed19104472e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8b9c9a2-3ec9-4d57-b746-28776c78ac7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "968cfb00-246d-4681-996a-3d43ca8331db",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1c3b216-1eb7-4b55-b125-e6389c50e27f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8b2cdb8-7c6d-471c-90ac-4f4d60de7432"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93ec42f7-7ecf-42dc-9b75-2cf3237a97c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1397451-146b-4dd2-bb7e-357366400ac0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "162436ae-1f16-4c51-b75f-17f94995d5ce",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ad82f73-4d08-4b2d-aaff-8d8f8120b55c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc5d21fb-dd1b-4e76-84ea-e47c1e6cf763"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13f7139b-77fb-4ad6-a1f3-65ee815d4b8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9113aad-e1df-492e-bd00-ed241d1bee99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "811a132e-3295-469d-ba92-1282387f7016",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae7e7707-a019-4029-853c-cae671d67018",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4746072f-fe4b-4697-89a7-f250e20df2f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c0afa45-3728-436a-a2d8-522a4db449d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "554d3312-448e-4cbb-8627-bba4649394e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "348ac48f-a3d9-407f-8c02-4be3635fc589",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f0a2f4a-3b8a-431e-bd3b-1273b99294a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bec3e00-3788-4243-bd39-44718ce20045"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80b75fbf-35dd-40ee-b508-0666248f492e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77edef34-1420-492e-b5f5-231cf9124784"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffcf0700-33b4-402d-b4d7-a3957178090e",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57805d56-7ccf-4d46-a893-16df10f2d7b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb838058-0eac-4290-bea1-31aefa66c8cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92f144f1-c159-40bb-b6f7-af8e1e1a0121",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee6f5abd-b3c0-4185-bf7c-a08690f8666b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5df49d95-bc09-4c8c-9e89-0d3a45782c26",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9c09316-f322-4e97-b76a-544d58588148",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a27cc41b-f25e-41d7-8ed6-75eb22234fac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a6c4822-ae32-405a-a49d-9b5ed353dab8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0aa2c48a-893d-43b2-8d66-866163cef119"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9734eac-71cf-413d-ab43-f6d8f5ea449b",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d56d9fda-03c8-49ab-aa7d-f9b2f6ed0085",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a9da90a0-2f87-4454-a987-e65699760997"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e077d760-7fa4-4ccf-94c1-3f5059af90d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9618d84-375a-4d52-b240-9a13f5a4367f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a45591a0-bf43-42cf-be5d-4520e9c4df46",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9034944b-8fc4-4194-a8b6-556e003d4469",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8014c833-eb0c-48f4-92cf-8d5bac69a4a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fde85974-6c29-45e9-a70c-c1815e8eb40e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b7a835b-c868-43c7-89f3-814dc2804aec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a95c96db-3016-43e4-a458-41efafa88469",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "808c1aa4-214b-4335-a226-8f7aa1e6259c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d5b81de3-3b96-4749-9bf7-0e5b556ab401"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e290984a-930e-4aee-adb8-13c98e27c63a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c54e6459-57fd-43f3-9fca-c6db786b15c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "911e9563-4b32-4be5-84ee-0c5329b473bf",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d2f5280-1e35-4116-b46d-da0d8f9bc162",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e4e9fad-70f7-467d-b333-481cc6052d6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dae46947-0f2e-4f22-87bf-34a2cbdccd43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22a219f8-8a96-4021-a4d3-38813a094cb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9b6a82e-54f1-4767-b5fd-17013593c4a3",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f64d1d3a-3919-4f55-a801-8e20aa7f80a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8fee5f4-95f6-47fa-9d2f-b5c23e2695c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45dd1e76-ebd1-4aa6-886f-de6689fe82fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff3d1387-e492-42a5-89cc-d7f63b5ac619"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9136d84-a7d4-423b-9692-d115e9dd17db",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26fad315-e31d-4327-9f91-7f29a1136666",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca01f653-d262-4224-8e37-7671efbf7490"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2305dc51-ce51-45c0-9adc-008f97ee1968",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a9e0b74-ef24-448f-bf36-ba5f96f6e9fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a7b9990-ebe8-4673-9c15-740cabc5dd80",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb20407a-5472-4825-868a-3c140ec3022b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9031aca4-47be-4b03-b0a4-d3f38321258a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b537ddc9-88a9-4129-9b1a-09ea1f64050a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abbb5de2-6979-4acc-8298-d52e6776e41f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93fca7e6-d1c8-453d-933a-d2d70ee59c63",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bead82b5-1bce-4fa4-be63-50ae95539d43",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "925bea5d-9a2c-4c4b-9977-1f441f89aa50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "631daded-76a2-44b9-a305-0674f5b6bbc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "415f9a9c-4a13-4273-89cb-cde5153af814"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d123b139-5bc1-41ec-891b-3d3abbaa5b8c",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e1b30f3-06ee-458d-bcaa-b25d4b438c88",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "73bc2cfa-d6c5-4914-b12d-e90c4beff8e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9574b9a-25a8-4895-b703-8fcfcc9c838e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "955e011b-99da-4303-9f3e-69eb6e2eb970"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94c4ed5a-3e4c-40de-9b20-3c5c1c6b27a5",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fd4f865-1209-4a23-b62a-b9195287d536",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "78c36d08-1f52-43dd-994b-9eba1fd4587d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f60ec18-6b56-447c-b07f-50569b67a061",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4674f278-9b62-4bc6-ac70-c246b0303df6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cda3130-0d91-4c10-af0c-574109e3ba0a",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e97c4bac-f37c-44fc-b1c8-6577c7b2c43d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee065959-0447-441f-b337-d7c7cb6de56f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0917b88-bb52-44f7-bc01-ab1b5f6916fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df1409c9-f5fc-4756-b523-753948cce479"
                        }
                      }
                    ]
                  },
                  {
                    "id": "790d6240-874c-47cf-bcc4-a787633ae399",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dc212db-b04c-4eec-b4bf-fb057dee4ec2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "677d0054-63c7-4b4d-9399-65aa830ab9b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cd9c7c4-a854-4dd3-9468-bced23d03b85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38c2eec8-2758-45d1-be62-65e3d173b091"
                        }
                      }
                    ]
                  },
                  {
                    "id": "203a8dd0-0ac2-4fe1-b01f-c0b3f250d67b",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef603d0c-aa2c-49d3-98f0-b1c4fc9aa739",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f95407d-117f-4908-b0ce-43f4cba93447"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cb7b9dd-4f25-4cc7-ba46-1aa50396f930",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "618ae52f-339d-40ae-b66d-14a689432f14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40318cc7-8beb-4678-90d8-1e32fc06f409",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca04a8c4-7b22-4bde-ae88-cf33c76b2788",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e0ccab5b-fe29-44b1-b4b7-5b6e993467e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f05402c5-55c6-4f60-97c8-b3e719843a5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3359b7b5-56db-49db-ba88-37be575383b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c579ae64-41dd-4368-a1f5-6207bce307d8",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97677be1-91a1-44d4-99e3-83d68b608a89",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2edec95e-6ff2-4d12-93d2-cece0b1a2b42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87ad141c-a561-4f5c-80b4-cdd8e010075a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "712e720b-9167-41e7-9b52-a88e3d310e76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f673b67-00c1-48d9-a357-ca493e85025c",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64f8cb81-a6d6-4438-9097-b6307284df8e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b2fb8b46-4631-45b2-b97f-826dbc9b738c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77364a32-80af-49ce-a023-37c2adbc015e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fc292aa-1db8-4e62-b8f9-35d0ea77ab6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d0df099-383c-4498-a8a5-d003fdc10cc3",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28727e62-b8d3-4b25-8287-f41924c6a23a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b33f0060-42ef-48da-b965-dd6b96fa2649"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61fefddf-fe2f-48bc-a0ae-374f74c0e41a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9dec852f-d958-4d23-9f8f-fc1f5fd4a97a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b90788f7-897e-45f4-9463-6a38080c8cf5",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "102614f8-5b1f-4689-8f2e-d1c56b9d0318",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac92c126-30df-4ce6-9c0d-5b4a47260af8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ecb6087-fa4e-4d24-b419-950ed26d8010",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c4696a9-066e-4bce-9ceb-39eec5a17806"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b57a4db-474f-42f6-be8d-7c7d726686fd",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebab89a4-efdb-465d-884f-50594c06ed32",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a577c5fb-dc60-479c-a8d1-4d810bc143b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39a3ceca-8587-4854-8661-9afbbbf383eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc2efe39-1100-427a-9e06-43b16aba6068"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bf14418-704f-4dcd-aa82-d5b27ee0f5e1",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5462ed5-8991-4054-bb21-da1f67a111c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "79d77511-5992-4e64-af18-6ad19de54425"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bca5fa1-a376-4ce7-92a5-3dd239b8f7e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6b047dc-0aac-42fa-8bda-813fe5b66946"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36c02f57-cf56-492e-b266-e3b45433776e",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acfc7d3b-6cb5-4216-a499-0df3137e923f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "462f6c1d-c416-4315-a715-0961c2cdf2fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "780c86e1-fa15-4698-9840-10966c68671a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c7a0688-3200-46f4-9cd5-033efbdb7c73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02a955f9-dd62-4ded-9d32-6204e3bbac31",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57b9d97c-fd50-41fa-95aa-1e2d0da242ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2fab7692-09c8-4d3a-8b10-8f0b0fddf00d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dba6418-9fc7-429c-9b02-37d737f8d617",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98abed11-9eb2-4d9a-86e7-6544d52ce6ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b7acd24-23f8-43ee-a0b0-b92a3ed0ce6f",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0597d1c-8090-44ca-976d-0eb355bd9b33",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dac97ced-896b-49f3-b20e-24cdd8682b85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "244b4bd9-164a-4708-9561-ca1d9a8844ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "618a24a8-c3e5-4870-b152-eac08a76ce93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c71f367b-dba9-4e0f-b04e-530872e323a6",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1e49ad8-08f3-48bd-9416-a01920319879",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9daf2253-173e-417e-8b2e-7772d6e2a778"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4501da22-d9b3-4dbf-9ef7-4f0a6503fa43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2753920-7cc4-444f-8448-c27c74b90a80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58538cc2-dd7e-4a37-8f44-b8b22a7b646c",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd12380b-4ac4-4c81-88c7-6e7cc4e7c070",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e0348f5d-a0ba-48a9-9b3c-3afe364336b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51bf0020-240c-49c0-a066-ef2b8c11f46a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aeaabbc9-22a0-461f-8a60-83527b561ab4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78ee5d49-140d-4568-bba0-16671e3cfd8c",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe33568a-55d3-474e-962a-600ddc153153",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "188a3ae8-2b1d-427e-ab9f-17ca7d661562"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01ea23fa-0dd4-4ce5-9db6-f1fac4ff2f79",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61244e4f-d1ab-406e-a943-80e8db26bdb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22b9f9e6-1e1f-41b8-b796-da75b5518e94",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd543ef2-bf57-4feb-b562-27250c2b92b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d52d4051-de65-443d-b509-d5e93fa70307"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3148b4bf-bac5-404b-8374-d0eda2009e68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6299d8a2-b93a-4f6a-b17d-ca5e045ec88b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92367fae-60fc-48a6-9177-6f3b30fd1717",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2215b21a-18c6-40c9-9841-a68b8fb1395d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "66aceb11-2419-4a11-8c4a-6ba8f64787cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96074a65-c67a-4863-b592-fa4bf6dcdc06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26480d93-47a7-44f2-8f26-4f2d0512511a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91ccdcee-f400-4b5c-9b20-1cdde47a317a",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44ceccb5-01cc-496d-84e9-2d46052fed1a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d468ed5-2d65-4a53-9884-5190c3ba73b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28d2a7e3-3f03-4076-a78e-0718dffdb21a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1fe47d2-3be1-44f3-9a92-ead6c26e9ae2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c16e0ae-5bfc-4c46-8505-d82975d99b6a",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e8eb143-ca68-447b-95e2-06b255739422",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b510e1e0-9dd5-4de6-bb73-140fd0ff53bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60cab2bf-bcda-4d55-9de8-41e61fac0fa1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f06f901e-6310-4ea4-8bd0-ca38042a07d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00b9c83f-e39f-44c4-90cc-bae5834b532e",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f6f1ec0-b4fe-4122-99c9-fb301935eea6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71471902-bbbc-4318-b685-00208bd082ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b761ae1d-04d9-4546-9815-6a5bb16aeb5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a30017a-30d5-4267-8989-01d4895083ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b9c3f85-4364-4694-b749-e5a8830b6bfb",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7afc5f97-3a0e-47ff-bc9e-ca81f44700c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2afd6e51-6b4b-48d8-99ba-06d04c42df54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88199d13-3e04-466b-b7a0-e08d2119c1b6",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "006c2da3-8952-4127-8646-80f391e6f641"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d5d0711-1054-4453-a02b-0ca1e37b93c7",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2492f630-4353-4556-a123-8765548ea17d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d5f500c7-e0ea-4fda-a51d-59f62f47335e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3b640df-944c-4cbb-8216-dedbea7bfa83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1aec323-164b-4577-b91f-85064c4c5099"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ae1634e3-a9f7-4bdd-83f8-0ce8333f12f7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "92a019d2-0c21-4ad8-a19a-c10d0095ed6e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ca13d9b1-ee2d-4b54-a74d-ffbbf4cac562",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "453f1417-613e-4d8b-a8d3-35ece1bdeeed"
                    }
                  }
                ]
              },
              {
                "id": "31ed56c9-354c-4d50-8c38-55ed4dda28ab",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5073687b-7622-4ee0-81d6-f76e93d2aa9e",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff92e4f7-d975-4ff6-a9b3-cd9466c8ed40",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "59bb1c7c-345d-42a4-b913-9a3b4e3e6e9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23745ab6-a81c-4108-86fa-71b41ee51c31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fdb16356-4329-4a36-8e35-47bb1b8219f7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "941182c6-ad30-4a68-bda4-feffeb3bb611",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "28ede15e-aca6-433f-a10d-30e387b4a8e7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ef107c04-cc55-4940-8bd3-92e199bad216",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "05e76df7-20de-42e9-96f8-f24ba1b16c9b"
                    }
                  }
                ]
              },
              {
                "id": "da6e9160-5314-4d42-9fe7-453a16d0de35",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "3d6f9432-422b-42c4-ae01-57e852c2386a",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18a5c9fc-1c7e-4533-9554-accccb9b20e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "6a54447a-5d0f-4cbe-9e3a-55b568739ebc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b294278-cf0d-4592-a7a7-43d2db896544",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53f2502e-51ee-4685-bd31-6274b4cdae07"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "bd040d74-c95c-4b28-9db3-6b3015d408e9",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7d4d00eb-0e77-4625-8e4a-5c30efe4ef78",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9db7c86c-8c6b-4410-878a-6912c870c098",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "9b28f5e1-7402-4a21-8b30-29f732a5af2d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3235f72f-214c-4030-a591-919229b8de68",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "37bce3e5-10c2-41c1-9677-a96544a19d7c"
                    }
                  }
                ]
              },
              {
                "id": "7c969b44-ce0d-4299-a05e-ca0c15406ac8",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3f139e0d-74b3-4a9e-bb33-b855eb767c41",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "cd7b4584-180b-4463-87ef-18e7bd97205d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "64da5ca2-1128-4b0d-9541-96bbd9b4ef37",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ca6df1a4-c223-4066-8acc-665a3d5b5518"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "36e49eb5-195f-4642-befa-11f570e1f7bf",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "baddccf8-8563-4dfb-87fd-076b1d56e674"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "93c7ccb7-9848-48be-8dfc-4509319e70ae",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a71815dc-ddd7-4521-916c-0ffd1b0ce050"
            }
          }
        ]
      },
      {
        "id": "831cd96c-fed3-4197-9a3d-2b62a2805acd",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "a1829d80-d809-4719-af58-91b90e561277",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ec67ae2d-d4ff-4709-943c-dc8e74769247",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "010a59fb-d4ef-480b-a54a-32f1167f06a8",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96f3606b-5125-4b37-9c84-20b3c4ca5a12",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "3c331f96-0cf2-4d75-95a6-a1061fadcbd1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26a9ed85-a439-4273-95b8-d211fb4f0f8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ed84ecbe-ca0f-4505-86a7-01f0a480f69a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "95fcbf5a-e2c7-430b-967f-ef91e7c7c859",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1445cddc-520c-41db-bedd-581ac7ff193e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3682a1e9-9247-427c-b8f2-6d726c99af7a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "11ed6cb6-c2a7-4791-a494-5a4c03edc4a9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "83383f5e-041b-4bc2-951a-b66b0ea883d3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "2336be35-9dc4-444b-a453-278d839debc1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8221faee-cff8-4766-abc9-be647617b3c9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e135a1bf-2c3e-4f32-b8b8-d4e6610acc4b"
            }
          }
        ]
      },
      {
        "id": "74cedfde-7d35-42f9-9150-56e172938532",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "2df6e0e2-3613-465b-893a-08e8e9166d6e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c2f30385-27a1-4083-a1c5-d06a958baf69",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6717cd44-5903-4625-9090-2306998ec10e",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b85f3e3-ad75-450c-a7bb-a404e6af4adf",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "93a0bcec-35df-4547-9c3f-c3107ed02706"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f5f88b5-7339-433e-b57e-62f840ac398c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "22bcd799-ddb2-4f52-8833-ad089e175fce"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8a70f828-f92a-40ab-9a0f-39e6de5cfabd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "aa311382-7e4e-455c-adbd-b849029ffd1e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3e6fef63-8d4a-4b3d-a3c8-f7f1a68c7f13",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2c5300c7-0049-487d-9c5d-3b6f4cff26e2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "13da2d4c-9fb3-4a91-b359-97c89321f1e5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "aa650004-ac95-4253-9729-b5807515f000"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b505826b-1709-4d48-be46-a51c552c99fd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "76e498e0-a91c-4e37-8288-a8c90bd0d5d4"
            }
          }
        ]
      },
      {
        "id": "412cfa64-0047-45d9-adf7-aa31b10b6a66",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "fe7cf713-6138-4030-9da2-f7d3e23f56ef",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ddfa9b23-b6e7-4381-b3ed-388fda81ccd8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "557a286f-4583-4e8f-a054-e5ee9a68a9d8",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0acaae6-2496-4777-bee2-3fbde33b6f02",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6fd6e403-0041-4f3c-bbf0-8e6b0db9bc4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25420fe4-4ea8-4d9c-9835-5e3fe16f2108",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "58ad182d-0ee4-47ad-be02-fd761eda5ee9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5df4c435-4ed7-4dfc-aefd-2ff507260067",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "93075b75-542b-4f56-b982-b2a50ea9917c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b873180b-27b6-4e38-bc33-51e56ae7d29c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cb6f1ae8-ce1a-43b0-bfac-87a89daae77a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1ed43a61-0f1a-42e0-b2d2-a10a7c504ddd",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "dfb0423c-daba-4ec1-8330-274ec6bcacf6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7e027bdb-0e63-4e5f-9d58-5a875ef5422f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c4444c2f-2726-4be5-ae42-5bc0dcb6ec55"
            }
          }
        ]
      },
      {
        "id": "ff17dc47-003b-44a2-97d4-cc722445cc1d",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4869461a-cf05-4e4d-85e7-7ef4b8a6f2c6",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ad0c47d3-17ee-4733-88ae-1929690321eb",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "eace4ff7-c616-4023-8fa7-f7940e04d78d",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "730489c3-9ef2-4f22-b510-7a0be55f211a",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f428979a-84c4-4813-a13d-71edb9a5289e",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 571,
        "pending": 0,
        "failed": 19
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 220.2464788732396,
      "responseMin": 7,
      "responseMax": 6641,
      "responseSd": 434.54619661739486,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1691195912322,
      "completed": 1691195987219
    },
    "executions": [
      {
        "id": "757fbcfa-b0cc-49ca-89a9-4e14a62bb1af",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "d2be9d80-e93d-4fe8-b197-13825745c0ce",
          "httpRequestId": "dff7f81f-77c2-4c63-96a0-afbee4a3548b"
        },
        "item": {
          "id": "757fbcfa-b0cc-49ca-89a9-4e14a62bb1af",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "ddeb7e73-d9ab-4969-954f-d1703aa84962",
          "status": "OK",
          "code": 200,
          "responseTime": 55,
          "responseSize": 0
        }
      },
      {
        "id": "bec5f118-66c8-4ddf-9ef6-624d1dccb6d7",
        "cursor": {
          "ref": "fd29da3f-ccd4-47bc-ac24-0fc4ab294d7e",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "10a755d1-7caa-46aa-bc82-cf4361b1ef23"
        },
        "item": {
          "id": "bec5f118-66c8-4ddf-9ef6-624d1dccb6d7",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "1f2a3a6d-a2db-42a8-b701-678fc982dd96",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "797e7285-8fc7-41e7-8e2b-d96dbf48a9e7",
        "cursor": {
          "ref": "3667f670-9d5a-4ca5-aa62-a3269cd59d4b",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "f73fc437-9998-4c9c-a365-da1515c8348d"
        },
        "item": {
          "id": "797e7285-8fc7-41e7-8e2b-d96dbf48a9e7",
          "name": "did_json"
        },
        "response": {
          "id": "ce7a0f7a-1c4e-4034-86b3-295761ad246f",
          "status": "OK",
          "code": 200,
          "responseTime": 1025,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9891e0d5-ae80-4606-b2ee-9747781a5fc3",
        "cursor": {
          "ref": "70cb1630-abce-4677-b716-5d5009dc54af",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "51d5b4e2-19b7-4ed5-b027-1677871e3883"
        },
        "item": {
          "id": "9891e0d5-ae80-4606-b2ee-9747781a5fc3",
          "name": "did:invalid"
        },
        "response": {
          "id": "75230662-16e5-4717-8a97-fd3107543379",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 330,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9891e0d5-ae80-4606-b2ee-9747781a5fc3",
        "cursor": {
          "ref": "70cb1630-abce-4677-b716-5d5009dc54af",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "51d5b4e2-19b7-4ed5-b027-1677871e3883"
        },
        "item": {
          "id": "9891e0d5-ae80-4606-b2ee-9747781a5fc3",
          "name": "did:invalid"
        },
        "response": {
          "id": "75230662-16e5-4717-8a97-fd3107543379",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 330,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c61a858-4cd3-462e-ba7e-a2968a257e13",
        "cursor": {
          "ref": "17f60e6d-f29c-4b97-a584-9cefae870b08",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "977d60d4-281f-4817-8e64-81596343ed1c"
        },
        "item": {
          "id": "9c61a858-4cd3-462e-ba7e-a2968a257e13",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "f88533da-a90c-402c-a1bc-476f1a1a2ec3",
          "status": "Not Found",
          "code": 404,
          "responseTime": 347,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0edc8f2-e456-4dfa-b8a3-55b8532dd415",
        "cursor": {
          "ref": "50459da3-2327-4566-b529-89f960da2528",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "440ed257-2c46-4327-a375-767339cfa617"
        },
        "item": {
          "id": "c0edc8f2-e456-4dfa-b8a3-55b8532dd415",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "66d820e3-cd20-40fd-9850-9b2a0c2801bf",
          "status": "Not Found",
          "code": 404,
          "responseTime": 315,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2138e69a-a303-4510-bee1-504adfa7e0d8",
        "cursor": {
          "ref": "e7b5fbe9-935b-461b-96e8-11812702a7f9",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "f35b727c-4a99-42da-aa16-bbcec7422d88"
        },
        "item": {
          "id": "2138e69a-a303-4510-bee1-504adfa7e0d8",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "5ae45a9f-be60-47c8-8923-9f23b9661e3b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 55,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c855a807-59f5-4755-aff8-164383ed5653",
        "cursor": {
          "ref": "5bd5a3fc-791a-4d6c-8aab-d3f11a131e90",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "71a68c0d-87c5-4513-afa1-d80efc52795d"
        },
        "item": {
          "id": "c855a807-59f5-4755-aff8-164383ed5653",
          "name": "identifiers"
        },
        "response": {
          "id": "9097c37b-2dc3-42a4-a1ad-e52f8522cb0f",
          "status": "OK",
          "code": 200,
          "responseTime": 1024,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d703b13c-a52e-4549-9fe6-cf397017d3b8",
        "cursor": {
          "ref": "9daa88b1-68f7-4d91-aa2e-890fd9d2771b",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "6f464dd5-9217-49e5-abef-0bc6a053bc5a"
        },
        "item": {
          "id": "d703b13c-a52e-4549-9fe6-cf397017d3b8",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "dfb05d97-8a7f-4150-b8e5-812163c54b6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc993777-c5fa-42bf-8660-08bc8c600bb1",
        "cursor": {
          "ref": "e741ceb8-6f72-475f-a370-b48c10566d07",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "a177da12-f23f-40ab-bdc9-448d8f70ba29"
        },
        "item": {
          "id": "cc993777-c5fa-42bf-8660-08bc8c600bb1",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "a7f77216-b187-4f28-87fd-5b0fe992a62a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 976
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62e3c067-e54f-4dc1-b1ad-9d66e0f2cc5c",
        "cursor": {
          "ref": "9073f147-4e58-4d52-b4d6-70f47529f1b5",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "b81f1b15-2802-4641-a95f-4d42873c5e34"
        },
        "item": {
          "id": "62e3c067-e54f-4dc1-b1ad-9d66e0f2cc5c",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "2f15fc93-5379-4252-a560-7411a7d11b91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 984
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac5cbdbc-e5ba-42ab-a446-ed49d4ca9b7c",
        "cursor": {
          "ref": "34636a3d-b3d0-4f4d-8122-742b841ce019",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "1dd77252-29d2-4d7e-a9cb-6fa1b73312a7"
        },
        "item": {
          "id": "ac5cbdbc-e5ba-42ab-a446-ed49d4ca9b7c",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "64a7883b-3b5f-4afc-b51e-ccbfe1f7404e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 981
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7256b8d-fa46-44b1-8f8a-081fa11abf4d",
        "cursor": {
          "ref": "74aaba78-ee8b-4250-a6d7-444887ff4cbb",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "48c566c3-7382-49f5-a44d-12584b34ca89"
        },
        "item": {
          "id": "c7256b8d-fa46-44b1-8f8a-081fa11abf4d",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "bf1e729b-f557-42b9-a95f-65e1cec7d75c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 983
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "091d31dc-c8a2-4778-b98a-40bec237e520",
        "cursor": {
          "ref": "1e5b72ce-5d3c-4580-857c-461fb5c56ba6",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "be8b6135-6d7c-40f3-bc06-fac6d3c5b128"
        },
        "item": {
          "id": "091d31dc-c8a2-4778-b98a-40bec237e520",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "340f5486-2b7f-4fb5-9804-855666704442",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 1030
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bbe76a9-bd27-498b-8690-9af8eb1c4e1d",
        "cursor": {
          "ref": "4b00abb4-0d1b-48a2-91b4-19e783d861cd",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "54ae7208-e7b6-4a65-8b5f-657501f8f593"
        },
        "item": {
          "id": "9bbe76a9-bd27-498b-8690-9af8eb1c4e1d",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "ab79487b-fdab-4de5-8f2b-26a54a6148fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 1019
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76e08dfc-75aa-4e4b-a06c-8ead2eb8f655",
        "cursor": {
          "ref": "3a471fdd-7ba0-408b-af82-93e35236868c",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "51bd72d8-5fc1-4f1a-a1fe-2120a1b009f3"
        },
        "item": {
          "id": "76e08dfc-75aa-4e4b-a06c-8ead2eb8f655",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "39f4a217-5de7-47f8-b8e6-ef7a699d3108",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 1068
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8d12f83-c1f6-4698-9dac-15fb1890e16c",
        "cursor": {
          "ref": "ec6d85f5-a179-47b6-84d0-97ef910c9b86",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "bd7dc39b-0420-4945-98bb-5da7a2d6a567"
        },
        "item": {
          "id": "e8d12f83-c1f6-4698-9dac-15fb1890e16c",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "7754bcda-78ec-4f55-9467-535bf3d3d55a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31891f43-e953-436f-bbc3-72bb0f0805f1",
        "cursor": {
          "ref": "dc65960e-36d8-4af0-bb7c-b7007fba013f",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "5925ae47-974e-4c17-b099-911222b4f51d"
        },
        "item": {
          "id": "31891f43-e953-436f-bbc3-72bb0f0805f1",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "e92f87db-408e-49d4-9dd3-c2e12f386c1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 1034
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3348fdc-3f04-4268-b18c-27eb84c9c16f",
        "cursor": {
          "ref": "f363bfad-ac4d-4cfa-b201-5f08e778e68a",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "3d20ab36-95ca-4562-b178-ca1fda824f94"
        },
        "item": {
          "id": "b3348fdc-3f04-4268-b18c-27eb84c9c16f",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "f75f93a7-8c86-4adf-b4eb-655fd1032b33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 1036
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8177d9ad-28c8-4212-a1e5-712348fed7c2",
        "cursor": {
          "ref": "00be02ba-8eac-41f0-b449-97685623a623",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "f76fbabc-0dce-44a6-b7e4-e2bcb5ad1234"
        },
        "item": {
          "id": "8177d9ad-28c8-4212-a1e5-712348fed7c2",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "59f21d78-f682-4e02-91a6-40136f0e34c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 237,
          "responseSize": 1077
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59ac51c5-0aec-46e9-9db9-a916daf156d5",
        "cursor": {
          "ref": "58f172ac-28a8-4ce8-9a90-0e126e6bc377",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "531acfaa-e6ff-46f2-b722-0da3f940fe92"
        },
        "item": {
          "id": "59ac51c5-0aec-46e9-9db9-a916daf156d5",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "2d746e12-9e78-4008-9d76-69a4f4c3d400",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 1092
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "712402de-a44e-4eae-8a3a-ea54df1dc756",
        "cursor": {
          "ref": "40c2b5c2-9af6-47f9-90c4-fb3bf2353932",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "b40a43f3-d6ab-419d-8260-8065cc196d78"
        },
        "item": {
          "id": "712402de-a44e-4eae-8a3a-ea54df1dc756",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "3709922e-26ee-4fb7-b911-2a97912cd8bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 1048
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfcfde32-a3eb-4f0f-ab9c-6adaa1b8b1e2",
        "cursor": {
          "ref": "4012fe23-a06d-4fa0-a18d-f20bf3d706e4",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "4f94cca3-8c42-401f-befa-59d29eae42a4"
        },
        "item": {
          "id": "cfcfde32-a3eb-4f0f-ab9c-6adaa1b8b1e2",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "78a979a1-5ad3-414b-8a1b-b7170cf06179",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 1045
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d397d88-a05d-4ddd-8967-04e2fe81c7ff",
        "cursor": {
          "ref": "cb2342d2-f053-4d82-8c28-c42e7fce148f",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "e04f8939-bf16-4ee7-a9e9-118244c0d883"
        },
        "item": {
          "id": "1d397d88-a05d-4ddd-8967-04e2fe81c7ff",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "0808006d-992f-4d2e-a595-3711682d98d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 1047
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "549714d4-196f-41f4-b5cb-43b4667b8ba7",
        "cursor": {
          "ref": "4ad79a1c-8076-4c74-a12b-eb0da8821bb4",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "9818ea2a-3766-44eb-8764-6aab13b6113d"
        },
        "item": {
          "id": "549714d4-196f-41f4-b5cb-43b4667b8ba7",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "3de2a7c7-fd26-4661-9f15-dc422f13d8c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 1097
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "790c32f1-c231-4fa7-89be-47217a1e4d95",
        "cursor": {
          "ref": "d1329479-299b-40a5-b130-770db904a707",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "2b416073-e80e-462a-a675-f2fc134525ee"
        },
        "item": {
          "id": "790c32f1-c231-4fa7-89be-47217a1e4d95",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "8b85e161-ec45-47eb-819b-9915307cacee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 1025
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "086d09e7-719d-4992-9a1c-05f3b8cd6e69",
        "cursor": {
          "ref": "5f307f13-5638-42cf-b792-939f545e4869",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "2adaa1dd-6d9f-4b6c-a152-9d6ff44d8999"
        },
        "item": {
          "id": "086d09e7-719d-4992-9a1c-05f3b8cd6e69",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "056ea056-dea9-43c3-80e6-287bc9114710",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 1020
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48593826-812d-4bab-b957-9040ae5c4f15",
        "cursor": {
          "ref": "900eff1d-558f-4771-8127-dcea70d202ce",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "ece9b344-4787-484d-967b-e2d6a4fb091a"
        },
        "item": {
          "id": "48593826-812d-4bab-b957-9040ae5c4f15",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "c37740e4-6ec7-4804-9771-316f64d45b92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 1017
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a81e3eb1-c6bb-4207-bac8-f07419d167f3",
        "cursor": {
          "ref": "42c16bc4-ca4e-470e-a7c5-3bbe4e561694",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "785b0d2d-80ca-46f8-bbb2-b3fd3d1ec33d"
        },
        "item": {
          "id": "a81e3eb1-c6bb-4207-bac8-f07419d167f3",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "5ad54cd6-dd52-4f3c-8dfe-4f85d3587d3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 1019
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40ee15dd-c705-4e6b-b8c2-fdee8b03d1df",
        "cursor": {
          "ref": "f207d25a-9194-4782-a187-e43809278598",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "3d01d198-0617-4b77-9cd4-cacc54017b67"
        },
        "item": {
          "id": "40ee15dd-c705-4e6b-b8c2-fdee8b03d1df",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "77ffe99e-6cc4-4147-82a9-f60f9cfc4454",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 1017
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "805b5a06-293a-4200-9bb1-50849979d72b",
        "cursor": {
          "ref": "1242fe24-b740-4b51-8b04-d3e1b664cf05",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "db54c945-e9df-46ac-80ee-edf60201a22e"
        },
        "item": {
          "id": "805b5a06-293a-4200-9bb1-50849979d72b",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "b3a649c2-bc28-41ab-8cee-bca74567ffe5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d953531-2bf9-482f-b0c1-53f855179b1f",
        "cursor": {
          "ref": "3e3bbe7b-82aa-4fce-8a10-916b756242cd",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "10ba2b28-f239-47c8-8738-50dfd18de591"
        },
        "item": {
          "id": "9d953531-2bf9-482f-b0c1-53f855179b1f",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "2f22045b-e8bb-43ff-9f45-ed6e920b0082",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 1039
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c87bd856-b0a5-422d-85af-99a27970b0ce",
        "cursor": {
          "ref": "35d693c3-3429-4d29-a9cb-005a3e2f2e0e",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "77b229de-4393-49ac-bb59-037ff4f6ff76"
        },
        "item": {
          "id": "c87bd856-b0a5-422d-85af-99a27970b0ce",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "1a30b3d5-cc4c-4328-8e9a-4ea4ff1e9440",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 238,
          "responseSize": 1065
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6eed35f-c1cf-4bcc-81d0-9a1c97c47533",
        "cursor": {
          "ref": "3cf574be-24a1-4a48-abba-f989e519de1f",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "b0fde4dd-8828-45a4-851c-a6259091c099"
        },
        "item": {
          "id": "a6eed35f-c1cf-4bcc-81d0-9a1c97c47533",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "78c595c3-72e4-463e-b64e-4bae9594d2eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3c82b3f-379c-4772-a117-11c6e7b2f8bb",
        "cursor": {
          "ref": "cc9e7b4d-4969-4cd2-a9bd-5a6ae3294bb9",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "5489761a-e213-41a2-a85e-8c54a071073f"
        },
        "item": {
          "id": "f3c82b3f-379c-4772-a117-11c6e7b2f8bb",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "b1397abf-7a55-4f9e-89f0-64db3a1d4d56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 1052
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16661dd2-acaa-4ed1-8ba4-1898cc18ac31",
        "cursor": {
          "ref": "7a02cef9-07a7-4cea-a3fc-a14d69c8ed71",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "791a13ca-f4bf-436a-818a-63914d69b950"
        },
        "item": {
          "id": "16661dd2-acaa-4ed1-8ba4-1898cc18ac31",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "a38a8b9c-78c7-4bf7-9243-6f0f274c5bf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 1054
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6852c71-8a12-4625-8154-ea4ab754f170",
        "cursor": {
          "ref": "764ad7ad-b67e-4df6-ac1c-4cbedf3989f2",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "d4800c1d-71fe-4419-8288-8478f812069d"
        },
        "item": {
          "id": "e6852c71-8a12-4625-8154-ea4ab754f170",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "ac05d350-ba9e-4fef-9846-009268f1e3c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 1052
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6e85f69-807e-4f4e-a739-29ca8430fa23",
        "cursor": {
          "ref": "12ac996f-131f-45d8-8187-1c763e8e15aa",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "dd2ebfca-95be-4e41-85b1-0d6aa5f7ad18"
        },
        "item": {
          "id": "a6e85f69-807e-4f4e-a739-29ca8430fa23",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "9673e6f1-04aa-42ed-8eae-9ac50673423a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 977
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d60b2116-8440-4391-a7a8-5516e3e9bd17",
        "cursor": {
          "ref": "bf895808-25ac-4f6b-a28b-7dbd0f8748ad",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "09e11528-e4d1-4ae5-8b42-7c9b68f3b5ae"
        },
        "item": {
          "id": "d60b2116-8440-4391-a7a8-5516e3e9bd17",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "b4b5412e-644d-47a2-b472-b91cd2cfe643",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76bc0f06-e259-4a7f-b0ee-8f47f1fe6f5b",
        "cursor": {
          "ref": "5259ba40-c843-4e39-a9a0-f183237c7d13",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "4c942500-2370-4fd9-ae41-6d2a5a5efbc4"
        },
        "item": {
          "id": "76bc0f06-e259-4a7f-b0ee-8f47f1fe6f5b",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "40f97aa8-7a8d-4065-96d2-b05f05ea27c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 1406
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc080b6f-afcf-464c-91ad-d49bce42f05b",
        "cursor": {
          "ref": "76978241-0a9d-49c9-98d9-c579d289d6e2",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "51477f5d-9706-43fe-8dab-a67614c21b45"
        },
        "item": {
          "id": "cc080b6f-afcf-464c-91ad-d49bce42f05b",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "4b468977-f7a8-4f8f-918c-1a0662bf2b42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 1403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d07b7ef8-d9ba-41a2-bf6c-e4df3d6b59fd",
        "cursor": {
          "ref": "21085b7b-b8ec-472c-8f63-9d130e1ddddd",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "c2bcbbde-9a15-44a0-9f6d-f683d25a7836"
        },
        "item": {
          "id": "d07b7ef8-d9ba-41a2-bf6c-e4df3d6b59fd",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "b74882a3-ada1-49a3-9c65-8b3af7d2e586",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 1405
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "977b0ce8-7024-42ce-8320-d93241ae24d2",
        "cursor": {
          "ref": "c424bb31-55b4-4938-a05d-58f0e1cd66c5",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "34931bd2-61a8-41c6-bd06-6346a7d9c25c"
        },
        "item": {
          "id": "977b0ce8-7024-42ce-8320-d93241ae24d2",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "2635355b-92dc-4dfb-b740-4428f4913594",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 1808
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3edb06a-0057-4547-87e6-49c431d31925",
        "cursor": {
          "ref": "5254fca6-b423-4b7e-960f-ac5575948404",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "e4e1e1d3-c316-453b-9fa5-fc51eabb5583"
        },
        "item": {
          "id": "c3edb06a-0057-4547-87e6-49c431d31925",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "4d10aac6-f10d-4340-bd44-47f8de9acb2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 869
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad94fb01-98df-4ef7-968a-3557f99bd1b5",
        "cursor": {
          "ref": "30e3e981-5425-4ab7-89ec-d7976b902e65",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "5567c9a4-a8e7-442a-bed5-f2a5c1f8893d"
        },
        "item": {
          "id": "ad94fb01-98df-4ef7-968a-3557f99bd1b5",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "47ee5102-c6af-4aa0-90b2-5578ee6839a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 1436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7679ce09-5ade-489f-967e-72a3e3733c1c",
        "cursor": {
          "ref": "93ac8c64-8661-4a83-86fa-5d0270595b73",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "fa01e778-791c-46c4-ad7d-10e47102efb9"
        },
        "item": {
          "id": "7679ce09-5ade-489f-967e-72a3e3733c1c",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "222dc5c4-48b2-443c-8876-ce4c2f100763",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 1816
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cad91bc-5267-4267-b98c-f1e2d8d8556b",
        "cursor": {
          "ref": "5f8b8ce1-baf6-4f8f-bd64-4f9ed5d18d87",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "eb4a2650-8625-4839-8429-a804e20c3ad5"
        },
        "item": {
          "id": "4cad91bc-5267-4267-b98c-f1e2d8d8556b",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "76007d7a-89f6-4077-a05a-b02f3d1ba159",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 1745
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f5b147b-05be-4230-8274-4ee825d80e23",
        "cursor": {
          "ref": "ec529d31-4601-4899-a61e-863dcd43baf4",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "b8e8329a-d809-4dff-ab14-7b063a9f12ba"
        },
        "item": {
          "id": "7f5b147b-05be-4230-8274-4ee825d80e23",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "16e92c2f-37fd-4ef0-907d-6a2c86bd0f0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fb1dd7e-de03-4987-bf3e-4c493079cdc1",
        "cursor": {
          "ref": "61f1312a-097c-42ad-b126-47f31679b626",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "a8bfaa58-2d4f-4997-aefe-53167ab9d4c6"
        },
        "item": {
          "id": "7fb1dd7e-de03-4987-bf3e-4c493079cdc1",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "d3ee7706-6c3e-4a69-9264-c69d9eff7047",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 1744
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc76cf47-1061-405d-adb4-537e16a7256a",
        "cursor": {
          "ref": "4b68792f-c752-44a4-9073-42d3b4f253cd",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "3fdb3338-a4dd-4889-b087-69c48139b265"
        },
        "item": {
          "id": "dc76cf47-1061-405d-adb4-537e16a7256a",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "cfff79c6-e339-439d-8491-409d8501d432",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 238,
          "responseSize": 2147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44f833f1-5b6d-4e72-a0e6-a239ae820be1",
        "cursor": {
          "ref": "0e2a7113-bedd-45df-b9a2-43fe6c5fc018",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "8c0a03fc-15a1-4a3f-b65d-e74a27afa9f4"
        },
        "item": {
          "id": "44f833f1-5b6d-4e72-a0e6-a239ae820be1",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "6b5ce1f8-4ea8-42d0-9830-fe355ffe0832",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91f142a7-afea-44ea-bd97-a9cc8d1c8a7e",
        "cursor": {
          "ref": "784e28b3-f502-4f3c-8319-f8bafb037e11",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "1861b373-12bf-43b2-b51a-9b30ae36457f"
        },
        "item": {
          "id": "91f142a7-afea-44ea-bd97-a9cc8d1c8a7e",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "862f73a0-3d97-4a87-a775-bc3dc41d9979",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 1035
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfb3cd36-0dda-480e-907e-186f1b737374",
        "cursor": {
          "ref": "e6d2ed2a-7fa9-43c4-a0a1-76ab7cbbaaa0",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "f7c6769d-01be-484a-9124-b2781cb2d58d"
        },
        "item": {
          "id": "dfb3cd36-0dda-480e-907e-186f1b737374",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "99e270ca-9c6f-4a73-9428-f8f2a5c78948",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 1059
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af8d72a7-73ba-4183-9fb2-9034f46253ce",
        "cursor": {
          "ref": "d0ace4ac-34d6-4f3b-bd01-8becd712893d",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "4ec63a51-d39d-4d93-83b8-00ce7a2f96eb"
        },
        "item": {
          "id": "af8d72a7-73ba-4183-9fb2-9034f46253ce",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "2e1719d6-1052-4692-b2b6-8893ef1869bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 1040
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfd98fbf-9428-4154-a8a8-feceb37c765c",
        "cursor": {
          "ref": "f6cf5c8c-d347-4a95-bf3a-914b37e3cc7c",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "5a11f313-e46b-4e07-9dff-faa4b362fa0d"
        },
        "item": {
          "id": "dfd98fbf-9428-4154-a8a8-feceb37c765c",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "eec87b0c-725a-4bd6-8965-7759ad0c8f25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd34ce8c-1e4d-4119-819b-d2ea96bd4ffe",
        "cursor": {
          "ref": "cb8d099d-f459-4cf9-953f-18ac6f9d8504",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "1388b023-261f-400b-b063-ec68254669b2"
        },
        "item": {
          "id": "bd34ce8c-1e4d-4119-819b-d2ea96bd4ffe",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "d5cf0cf6-9dad-4ae4-af88-fe78d9eaa853",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 1039
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08900e34-bf18-4bf0-89fc-5ef7fa516b71",
        "cursor": {
          "ref": "1d23d3ef-fd80-4c22-b5ab-9e311ec4da08",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "6f9b36f7-0601-4ceb-96d4-77af8de785a4"
        },
        "item": {
          "id": "08900e34-bf18-4bf0-89fc-5ef7fa516b71",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "1f2f29b3-d04a-4f12-8fcf-791d3d879fe1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a4b0701-bb38-40ba-aca9-a996bac5f625",
        "cursor": {
          "ref": "a63bbd93-d93b-46f9-9570-b19a3cb11db6",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "40cc735b-6dd5-4d50-b013-e0a055b67c2f"
        },
        "item": {
          "id": "3a4b0701-bb38-40ba-aca9-a996bac5f625",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "943a4a88-9e9d-4064-8ce3-5117c4a0ef7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 1090
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80f26bd1-f919-4ecd-bb0c-5e8454285bb2",
        "cursor": {
          "ref": "ae626dff-6f14-4a72-be92-a65f1a264a4b",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "b9fd8646-84b7-4d8c-812f-c6290a920655"
        },
        "item": {
          "id": "80f26bd1-f919-4ecd-bb0c-5e8454285bb2",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "06b64493-1004-4f76-a361-ea59bab9dacb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86a986df-5f9d-46ed-bd98-18bd2b6646be",
        "cursor": {
          "ref": "17e8df47-75d9-4e22-908d-5d8acc222936",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "79563763-726e-4e55-90a4-c0f852a0e447"
        },
        "item": {
          "id": "86a986df-5f9d-46ed-bd98-18bd2b6646be",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "a84ef891-0da8-4743-9502-79f615b63ab0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "382273b8-362d-43dd-b40e-7e10a0f99431",
        "cursor": {
          "ref": "603e1182-accb-4387-9211-461a7ba50d49",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "4de30667-0657-40b2-acd9-d1348cbcba45"
        },
        "item": {
          "id": "382273b8-362d-43dd-b40e-7e10a0f99431",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "0a866327-6942-42d7-82fe-f3e0b1bb2176",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7fe2da2-d3df-4b8b-852f-dce2dd4a1051",
        "cursor": {
          "ref": "dbd7d2c8-e4ab-4929-b730-21bb527ff4cc",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "1e597485-45c9-4ad7-84ec-f5fbc12b6b52"
        },
        "item": {
          "id": "b7fe2da2-d3df-4b8b-852f-dce2dd4a1051",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "61eacf1b-c0db-4b26-ba09-87a0ba1f454d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "256c3f19-47bd-4f28-8029-4729ab5ffcb0",
        "cursor": {
          "ref": "264c16c4-eb81-4501-b7c9-719401758477",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "a9d3ae92-72a7-4896-8853-79660c15ed86"
        },
        "item": {
          "id": "256c3f19-47bd-4f28-8029-4729ab5ffcb0",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "b971cbe4-9e1f-49da-84db-2fb89c5db4e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d0d0141-aaeb-43b6-9362-8970f8abde68",
        "cursor": {
          "ref": "ba9c2c39-ea71-476e-a415-44c1e7dc48fd",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "a804b17c-a08c-4c89-9459-369a18c13748"
        },
        "item": {
          "id": "7d0d0141-aaeb-43b6-9362-8970f8abde68",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "5200bc30-1534-45c3-a741-e66a9945a0ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be72bba4-ebd9-47d5-9672-5cff35ce7a75",
        "cursor": {
          "ref": "99ba40aa-b067-452e-91f8-163f58bc7498",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "fdbf54e2-9209-4297-b1a8-b0ffb0c345b9"
        },
        "item": {
          "id": "be72bba4-ebd9-47d5-9672-5cff35ce7a75",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "485dfa71-3569-47fa-bc0e-b9743924d0d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 236,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daaedc37-0125-4d1d-9ba3-39cee23478f2",
        "cursor": {
          "ref": "afdd95c2-dd72-4028-a0ee-1fcb1365e615",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "8c396281-316f-47df-93f2-c0f8e73bdeb2"
        },
        "item": {
          "id": "daaedc37-0125-4d1d-9ba3-39cee23478f2",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "77a5b84d-0e55-4112-90a3-82709f5595b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f915a43-2b21-41e8-8007-36d9aef325e9",
        "cursor": {
          "ref": "1d818afb-0651-4ee7-8547-2ec4631e20f5",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "95874201-6e5e-4127-be5a-b081d2bbde6b"
        },
        "item": {
          "id": "6f915a43-2b21-41e8-8007-36d9aef325e9",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "501cf7fe-9dbb-475d-bf0e-a8df95218539",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06e7dcdc-968f-47bd-a329-797765dfaa51",
        "cursor": {
          "ref": "db2f4b03-362d-45d9-bcc3-7558ac6d1d64",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "b0468e96-bea6-4d3f-9b55-919a982f168b"
        },
        "item": {
          "id": "06e7dcdc-968f-47bd-a329-797765dfaa51",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "70f1e1df-00eb-44cb-9ada-8a1c68c430b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d0dd375-fd77-4f6c-ae8c-e8b960890021",
        "cursor": {
          "ref": "162eb92c-995c-4dae-bfd8-9c4b4caefee5",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "f58c7d8c-dfb5-4707-a9f1-9a43cf43d204"
        },
        "item": {
          "id": "3d0dd375-fd77-4f6c-ae8c-e8b960890021",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "b2e275de-5695-46ac-8643-802d700a0257",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71319db5-c125-4259-9000-70c406795471",
        "cursor": {
          "ref": "02e5fb64-0659-4dc1-80cb-fed66b09e635",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "b42e9105-d8d7-40d3-bc14-19cfb0c39e08"
        },
        "item": {
          "id": "71319db5-c125-4259-9000-70c406795471",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "c04fc100-5bab-4a5f-bb6c-95959300fb8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 1010
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7964fee-beb1-4c15-a528-ef4f48fbaf21",
        "cursor": {
          "ref": "ed6829ef-5021-4198-9e4f-8e9e1598b2e4",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "92ce514c-5f5f-4e04-9565-504ce845d5de"
        },
        "item": {
          "id": "a7964fee-beb1-4c15-a528-ef4f48fbaf21",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "02f1908e-91f0-4c05-8bc5-f307111792ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 988
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7f0a7e6-902f-456f-9244-f968ea36c6a0",
        "cursor": {
          "ref": "b89b2070-d56c-4a4d-ab43-8145d4e94af8",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "1bfd030f-7a24-427e-a137-666343c4e220"
        },
        "item": {
          "id": "f7f0a7e6-902f-456f-9244-f968ea36c6a0",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "a9575f48-8502-4e5d-921e-81f35afe2883",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 991
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b087d1fb-a71d-4e73-b3bc-131a34f9e10a",
        "cursor": {
          "ref": "895c590d-068a-478f-9573-f4ee1af938b8",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "4aeab6ae-7727-4187-b146-10708404c6af"
        },
        "item": {
          "id": "b087d1fb-a71d-4e73-b3bc-131a34f9e10a",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "456e7154-e09e-44e5-a3b5-a0f269a5658b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 988
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6243430c-571c-4a47-b3a4-c8be5b3fb918",
        "cursor": {
          "ref": "a641e8c7-8e83-4cee-82ca-a4a95fab6171",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "18faad02-e0e5-4aae-9cc2-29900cdf3330"
        },
        "item": {
          "id": "6243430c-571c-4a47-b3a4-c8be5b3fb918",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "8752b62b-1710-4151-9a50-31f48e63b841",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 990
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b10d7b9-eb60-4d1b-9507-dc32da5ca0b6",
        "cursor": {
          "ref": "91327e16-1661-4d5e-870c-795616bd86a1",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "0eba2bab-3804-40f8-a6a5-f40eb952518d"
        },
        "item": {
          "id": "1b10d7b9-eb60-4d1b-9507-dc32da5ca0b6",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "6b4d5ff2-1257-4ee7-970d-68eaf9a27f87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 988
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3aca8799-7329-4932-8c4b-e94578ccda0f",
        "cursor": {
          "ref": "75e758fa-b3ab-4c06-874d-8b7753867794",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "8ae03fb0-0617-4ae4-93ab-ac72b66cced2"
        },
        "item": {
          "id": "3aca8799-7329-4932-8c4b-e94578ccda0f",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "c07c1fa5-1900-47c6-b4cc-8ef220dcfa84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 1025
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03be60ab-ff5c-4387-8ce9-7be7ddeafda6",
        "cursor": {
          "ref": "1e2492aa-4e86-479f-b037-4ae1df53c726",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "64622fbd-85d8-487d-971a-8e7238a74f6c"
        },
        "item": {
          "id": "03be60ab-ff5c-4387-8ce9-7be7ddeafda6",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "ab06ce6c-1518-43de-916d-b0810fc0ea63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 1267
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf8186be-cac6-49aa-b8ca-c3c402c1edd8",
        "cursor": {
          "ref": "b4678405-04a7-4ea7-89f4-e301c221c919",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "26c51c62-bf20-4834-a3cb-320503f51464"
        },
        "item": {
          "id": "cf8186be-cac6-49aa-b8ca-c3c402c1edd8",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "773585c1-dd24-4237-b433-e103c2028f08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 1248
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6db6e273-564f-40f2-8097-3b664db6805c",
        "cursor": {
          "ref": "4dbe1444-2561-4162-96d1-41a817971aa6",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "48bdd9f2-979f-45a8-a964-8cc84806aa65"
        },
        "item": {
          "id": "6db6e273-564f-40f2-8097-3b664db6805c",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "98e504e0-ed9f-4777-a3d9-cfdd0f93b5be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 1245
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31e99e9b-6395-45cc-8c40-b159cdfac0d4",
        "cursor": {
          "ref": "88738f50-a7d8-40e9-a469-45524fc75614",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "2a2c2731-3a90-41b5-ad14-fd62d96b14a9"
        },
        "item": {
          "id": "31e99e9b-6395-45cc-8c40-b159cdfac0d4",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "84f6affa-cca3-4752-9a1f-b187a14ec976",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0271bc5-7a23-49e4-942d-0e19287e80e2",
        "cursor": {
          "ref": "b6b1df9b-1e13-4f1b-ad3d-4d34ef81dbdf",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "fb68072f-4550-46b8-9e92-6e251025da25"
        },
        "item": {
          "id": "d0271bc5-7a23-49e4-942d-0e19287e80e2",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "f22cf7fd-75a2-4f33-b336-33dc657f825c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 1245
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "114d7262-8086-43c6-85a0-d1a33723877d",
        "cursor": {
          "ref": "562d41f9-4309-48e7-a269-1e155ca92a73",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "f36a9cde-c55a-4365-b3d0-8d4ec13331d6"
        },
        "item": {
          "id": "114d7262-8086-43c6-85a0-d1a33723877d",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "1f0f1bfe-08df-435e-b78a-9cd1fb02b685",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 1116
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7c90fa9-1a55-498a-8717-73b23d01a8e5",
        "cursor": {
          "ref": "8a2f1daf-fa56-41dd-8509-c37cc7117d4a",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "a7e0ea0c-215e-4f8c-a892-8705f372490e"
        },
        "item": {
          "id": "f7c90fa9-1a55-498a-8717-73b23d01a8e5",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "4c55202d-5ef6-41df-95b4-18bda0f052ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 1084
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77fdc913-ff45-406e-9bf4-d7080ae73e7b",
        "cursor": {
          "ref": "8871fe95-2a7d-451b-91b9-43b500962d08",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "635a86e6-0042-4116-87d6-bd0527c7d14b"
        },
        "item": {
          "id": "77fdc913-ff45-406e-9bf4-d7080ae73e7b",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "59b93876-fbb6-42f9-936c-9c774c6198a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 1065
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f66fcfc-fd5b-4fea-9d9c-aa725e8dd493",
        "cursor": {
          "ref": "3509c8e5-5c34-42cd-8c8e-8e93c7711c1a",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "53ccdd1a-e109-4afa-871d-b6d0b3687ffc"
        },
        "item": {
          "id": "7f66fcfc-fd5b-4fea-9d9c-aa725e8dd493",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "cb59742f-e0ea-4764-8fdb-b14cb6da7751",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 1062
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "537f7f09-d435-4717-9aaf-e337787dcba3",
        "cursor": {
          "ref": "69733b0f-7bcd-4830-95b0-d33093ffb354",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "eb32b2ef-9107-4bb7-9178-a74eae251976"
        },
        "item": {
          "id": "537f7f09-d435-4717-9aaf-e337787dcba3",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "fef7fc96-9b42-4471-93bb-b9ccecf3cff7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 237,
          "responseSize": 1064
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "010fdc4c-3800-4851-a59d-54349144aaa6",
        "cursor": {
          "ref": "e3ee5398-ec5b-40ee-beb3-7f378774fe64",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "e9cc00e5-9838-428a-9018-3fbed86fed6f"
        },
        "item": {
          "id": "010fdc4c-3800-4851-a59d-54349144aaa6",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "70ae5e8e-1119-4937-bec7-d72cc0d5cbea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 1062
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7966561a-bdb5-41f3-a7fe-7121b982ebba",
        "cursor": {
          "ref": "8a67ecad-7f0f-400a-a174-1717e51ede6c",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "f7265da8-1c92-490d-81dd-a84ee9f8f112"
        },
        "item": {
          "id": "7966561a-bdb5-41f3-a7fe-7121b982ebba",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "99b01bc7-1a63-4b76-9957-4d72b3d018e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 1115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99c72a39-6f64-4666-b33c-930ab487a085",
        "cursor": {
          "ref": "dacaf520-ddb3-4cad-9091-ef341542efaf",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "a035ea6c-513e-4f71-a3ea-6adc11bdcf7b"
        },
        "item": {
          "id": "99c72a39-6f64-4666-b33c-930ab487a085",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "ec1da434-32bd-400d-8680-857420f988af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 233,
          "responseSize": 1105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6600304f-66f0-457a-bd8a-9682013b6b7e",
        "cursor": {
          "ref": "49627a5c-5bd4-4140-a1a6-c5a0cb2e2b17",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "8072c7b5-c3ed-4989-96c7-0444515398f3"
        },
        "item": {
          "id": "6600304f-66f0-457a-bd8a-9682013b6b7e",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "0921aff5-ac66-4af5-a098-d2722dd006e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 1087
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1686c944-0200-476b-8b69-7b97d657dd98",
        "cursor": {
          "ref": "bcd414e2-c452-487e-949c-11d4fe5a10fd",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "0a290bb6-7692-4632-9914-4edab7cbc276"
        },
        "item": {
          "id": "1686c944-0200-476b-8b69-7b97d657dd98",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "34a511ac-acad-464e-b750-04e88347fbea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 1084
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08cae9f6-9bda-4ed9-bd7e-1ce2810066f2",
        "cursor": {
          "ref": "08501cf3-d795-4909-b108-92a50bb8b194",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "dac9485f-2f5a-476f-bb99-a2268ed4b6c4"
        },
        "item": {
          "id": "08cae9f6-9bda-4ed9-bd7e-1ce2810066f2",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "ede2b974-0194-49f2-a2ab-a5e821149796",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 1086
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f71e039a-7466-4743-90ac-68c9df692fc2",
        "cursor": {
          "ref": "507ae63a-bf51-4f2e-8bd3-d71c706cb90f",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "28fbf8ee-5d26-4eea-b92b-1fbd789cd574"
        },
        "item": {
          "id": "f71e039a-7466-4743-90ac-68c9df692fc2",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "91d38f54-6797-4fb8-ab5b-bd83c534f404",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 1103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf7c4370-77e8-4e6f-8c36-2f6a4666967c",
        "cursor": {
          "ref": "62716dc4-f4bf-494b-af78-c6be1ddc9957",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "50ca78df-8d65-4db3-a8c3-34f15ce2f0d6"
        },
        "item": {
          "id": "bf7c4370-77e8-4e6f-8c36-2f6a4666967c",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "18687a19-b8e5-45d6-b621-b6ae9ce51612",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 1121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "425fd85c-c57d-4dec-8d2d-33f41df242e6",
        "cursor": {
          "ref": "6c30ec98-8b09-48b1-ab39-1866f4cfa5ba",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "f4db50e2-0adc-4e67-9758-ddaedd70a9a1"
        },
        "item": {
          "id": "425fd85c-c57d-4dec-8d2d-33f41df242e6",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "3f736953-9b2a-46df-a5e3-aedd4c95cc1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 1379
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c4f46a1-652d-49ae-89b8-ee4678ec5d7e",
        "cursor": {
          "ref": "1cf575a0-708c-4c76-9c27-f3f7f9e7c7bc",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "c1118f11-8d82-4e0a-bc4b-d3f33b8cca71"
        },
        "item": {
          "id": "2c4f46a1-652d-49ae-89b8-ee4678ec5d7e",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "6ebb5e2c-9bfa-4502-9c91-62a87fa032cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 1361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cfa47d2-dac1-49de-8f71-5a961344b3ac",
        "cursor": {
          "ref": "a935fbfb-2aa6-4002-b4c8-91563eec03df",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "d007474b-0014-4d7f-b9c5-cc8886b552d9"
        },
        "item": {
          "id": "4cfa47d2-dac1-49de-8f71-5a961344b3ac",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "8f5041eb-7b05-475f-9d1e-547bbf5ef316",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 1358
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b35deb2-21a4-434e-9659-cc9d782b9104",
        "cursor": {
          "ref": "402e7c50-fc13-4d7e-ab54-1cc98f7c26f3",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "5318fd41-4cf6-43c7-be7e-c9beedfbfc71"
        },
        "item": {
          "id": "3b35deb2-21a4-434e-9659-cc9d782b9104",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "0e522408-9aac-49d9-ab41-8e56e6c4093c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 1360
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e18837b-4873-4284-b4fc-b4501fe151cb",
        "cursor": {
          "ref": "5b8cd684-583a-4b7a-b612-703394218dcd",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "32a16083-8913-4f7f-932e-77eadf11e539"
        },
        "item": {
          "id": "3e18837b-4873-4284-b4fc-b4501fe151cb",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "551fb19c-9672-4559-a94c-a1af63f60c8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 1358
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6be6d1fc-15da-4566-8006-bce3bfada66c",
        "cursor": {
          "ref": "aff62596-e893-4baf-8d41-5860b6c6cd8c",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "f3394a81-6c41-42cb-956e-bc768c5a0d18"
        },
        "item": {
          "id": "6be6d1fc-15da-4566-8006-bce3bfada66c",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "450490cc-e55c-4931-950f-19fe7fcbbe47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 1184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72897581-5b8f-4c52-aa18-a9d8381e3fc7",
        "cursor": {
          "ref": "d9f13d88-3199-4687-bb9e-7d3871592ced",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "f1e7645c-c8ff-4f16-88ed-5328849430bf"
        },
        "item": {
          "id": "72897581-5b8f-4c52-aa18-a9d8381e3fc7",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "1a679246-2cf5-4f02-b226-47ba5bc3399e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 45,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43eadf4d-7c9a-4108-aaff-52a16886b88f",
        "cursor": {
          "ref": "fbb8b29f-f526-4138-aa0b-1bc77395ab7b",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "dc353370-a004-40ad-a038-4897bd1ecff1"
        },
        "item": {
          "id": "43eadf4d-7c9a-4108-aaff-52a16886b88f",
          "name": "credentials_issue"
        },
        "response": {
          "id": "5ae6a40d-f1f0-41db-8c03-6004240636ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:102)"
            }
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response credentialSubject matches request credential.credentialSubject",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:102)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:102)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 5,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:6:102)"
            }
          }
        ]
      },
      {
        "id": "5d2caf83-b3cb-4f93-9f05-f7e7ae58e753",
        "cursor": {
          "ref": "4105a96f-66c0-401e-88c2-8a9125f4c158",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "1031d1f6-6d8d-4787-8047-7de3bfc85b7f"
        },
        "item": {
          "id": "5d2caf83-b3cb-4f93-9f05-f7e7ae58e753",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "1c3a1fa6-184f-4507-9e4d-bb8b60e2bd40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 237,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:103)"
            }
          }
        ]
      },
      {
        "id": "00b5ccea-d230-483d-a7eb-d65338addadd",
        "cursor": {
          "ref": "17d1ec6d-ae56-4a86-b4d5-a65bbb65def5",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "6ca64b49-425c-4c5a-b0a7-85bd4796b15d"
        },
        "item": {
          "id": "00b5ccea-d230-483d-a7eb-d65338addadd",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "c7c19bfb-4636-4bea-a75e-7f7061cd91a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 903
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "b8d6c382-cdf9-4859-8261-bd0e05d39375",
        "cursor": {
          "ref": "5741d7b0-0db8-4dc5-985f-5ce3f7884494",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "397bc6d1-c268-4ac8-a1b3-a0757f2dde37"
        },
        "item": {
          "id": "b8d6c382-cdf9-4859-8261-bd0e05d39375",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "afd25708-3302-432c-bca2-f3b074f92493",
          "status": "Created",
          "code": 201,
          "responseTime": 6641,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "8eca32e8-43cf-4908-860d-f1b71973a213",
        "cursor": {
          "ref": "a83d2896-4392-41a1-9ebf-0b231a4217d4",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "00d3590b-146b-4ebd-84c5-0a0c5ef8e446"
        },
        "item": {
          "id": "8eca32e8-43cf-4908-860d-f1b71973a213",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "33ea7476-832c-4ee6-8f8d-d2ed6601663f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "e526cd18-d82c-4a0c-9691-b73da929d173",
        "cursor": {
          "ref": "0ca5b8f8-20a0-4d8a-a207-c3269fab1909",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "9df13814-a86e-4b52-babb-7929820985e7"
        },
        "item": {
          "id": "e526cd18-d82c-4a0c-9691-b73da929d173",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "01feaa89-c9bd-4060-9675-042a87a586e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 1190
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "3e05adbd-2aa2-465c-a0da-6665cdeb2ae8",
        "cursor": {
          "ref": "24cbe2d9-b9cd-4c74-ac53-0cebe9734097",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "fc1bbae9-74d7-4c15-919f-caac56badf29"
        },
        "item": {
          "id": "3e05adbd-2aa2-465c-a0da-6665cdeb2ae8",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "c10ea002-8807-4be9-8d2f-7a70cff9a843",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b78df397-d93d-4bbe-a3fb-fc88133591e7",
        "cursor": {
          "ref": "43f5765f-eff0-4e74-8965-595c7ac90555",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "33b598f7-8958-4451-ac9d-6dc7834544b4"
        },
        "item": {
          "id": "b78df397-d93d-4bbe-a3fb-fc88133591e7",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "ef23aecc-411b-467e-817d-fd97e20bb2d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbab1eaa-3bbc-436f-9209-d3ee9c951b25",
        "cursor": {
          "ref": "41934f94-09ee-497c-a062-d606a1950ad1",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "f3cd29d9-d879-4d02-81b1-e56abf4a2c6f"
        },
        "item": {
          "id": "cbab1eaa-3bbc-436f-9209-d3ee9c951b25",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "72e58725-a86f-4399-ae9a-f2fe153bf827",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 234,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db766154-b441-483c-97d1-16f7224cbf05",
        "cursor": {
          "ref": "a6cdd681-ecbf-492c-b66e-2ff9181736c7",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "ecb2e258-af33-4705-ac60-5181f197d31b"
        },
        "item": {
          "id": "db766154-b441-483c-97d1-16f7224cbf05",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "af099976-687b-4a73-a2e9-d7b6066e4340",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33381693-e52c-447a-9038-092d6c7b055e",
        "cursor": {
          "ref": "d9a1b08d-46d4-4f86-bd86-a8316e023fd7",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "cb1ef882-a37b-4f56-b616-3c248244ca6b"
        },
        "item": {
          "id": "33381693-e52c-447a-9038-092d6c7b055e",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "d75f84ae-4769-4946-90b0-83e5958cdc7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8be67066-bab3-446a-9e90-a74b159e6b32",
        "cursor": {
          "ref": "615ed12c-8fb3-4991-939c-ee8d0526c323",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "0b494b19-0873-4912-af42-dcc10c301d87"
        },
        "item": {
          "id": "8be67066-bab3-446a-9e90-a74b159e6b32",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "028d8b4b-dcf5-4881-87bf-62c557df577f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e348d86-1a52-46b0-8fff-b1f5b9ceea8e",
        "cursor": {
          "ref": "c7bf8f28-9cc0-4062-809b-6cc000cf5b7e",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "10749761-b849-4350-8e35-6ea2d55e9855"
        },
        "item": {
          "id": "5e348d86-1a52-46b0-8fff-b1f5b9ceea8e",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "71acb691-4902-4636-a74e-6c19df7f1104",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbf6dd5e-5fe2-4084-91f6-5243113fd1c8",
        "cursor": {
          "ref": "a26609e2-8085-4e2b-854e-928c4ab90fed",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "c274221f-8b60-4f42-98d7-e9d1e6d1fd8e"
        },
        "item": {
          "id": "fbf6dd5e-5fe2-4084-91f6-5243113fd1c8",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "514e2d5b-8e87-497c-bf72-d87c42fb35f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9d1b83a-b026-41c1-85fd-dd1c310bd916",
        "cursor": {
          "ref": "31e98daa-0435-4cf2-b0c3-c8050ca46437",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "3fbe3cf8-bd29-44d4-aad4-8861b54d8ea3"
        },
        "item": {
          "id": "e9d1b83a-b026-41c1-85fd-dd1c310bd916",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "1bb88791-dccf-431d-a02f-a85e74b28754",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91368f5d-e39d-4749-a21e-5e670eeb1bdf",
        "cursor": {
          "ref": "5e9d76c3-2b5c-474c-bb44-c04b3fec501d",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "02d4b8fc-c3b5-4d6d-b650-fe4bee5c080c"
        },
        "item": {
          "id": "91368f5d-e39d-4749-a21e-5e670eeb1bdf",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "d109ef6d-ca6f-4f75-ab0c-979051778d22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04a07d2b-961e-4703-983e-7c95cc4129df",
        "cursor": {
          "ref": "70fa3d78-3a77-4685-9b7a-2b3853587724",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "a62f2123-7804-4716-9152-b3e2826d0916"
        },
        "item": {
          "id": "04a07d2b-961e-4703-983e-7c95cc4129df",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "8f747676-cea1-4633-a441-b313ae159542",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "389e99a5-8b66-44f5-977e-2ac65fb1ac8e",
        "cursor": {
          "ref": "d0731381-597b-4b07-aef1-cb112fb5546c",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "bb885514-5aa7-4e50-9a8b-ed47257d1e14"
        },
        "item": {
          "id": "389e99a5-8b66-44f5-977e-2ac65fb1ac8e",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "b0f6cdc8-d990-4e16-9e03-9892b61f359a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d09efdd-33a0-412d-9846-9b0584ce782f",
        "cursor": {
          "ref": "bd922780-134e-483e-9599-644165d09335",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "e9a7ca28-9ffb-406e-8735-f2532d720b29"
        },
        "item": {
          "id": "0d09efdd-33a0-412d-9846-9b0584ce782f",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "94b41ff7-588a-4282-add9-94a1c3ca8e04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c484a749-eae2-4a37-91e8-77111feb632a",
        "cursor": {
          "ref": "688165ac-9ef0-49bb-9fcf-faf2bb36bb16",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "f8c31e98-878e-434f-9d31-99ee4a2cb27c"
        },
        "item": {
          "id": "c484a749-eae2-4a37-91e8-77111feb632a",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "0f48f336-37fe-4782-9b90-33a858b960f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fc22676-a714-419c-8cac-3c34969d7c7e",
        "cursor": {
          "ref": "07094638-8fb7-4841-a013-de772b434557",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "9b238f6e-be85-49a9-af3d-5b392ffedb32"
        },
        "item": {
          "id": "0fc22676-a714-419c-8cac-3c34969d7c7e",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "e0b67099-2e25-4a03-b3f0-0138ec9c8665",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19c63826-896e-45a1-a273-6ad826f4850e",
        "cursor": {
          "ref": "1e996a9a-1b4d-460f-b9ae-07a4fa2f0cf3",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "0f647b18-01b6-4104-ac2a-d96cebc3ef2c"
        },
        "item": {
          "id": "19c63826-896e-45a1-a273-6ad826f4850e",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "b0bbdaa0-cabb-4ea2-a39a-e13760498994",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef4eacad-3cc7-4d6e-9a37-6e9631e21120",
        "cursor": {
          "ref": "65bd14dc-7b1e-480b-b794-c6e1268cd422",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "1eeb6a13-6a39-4ce3-8c70-ac493b371702"
        },
        "item": {
          "id": "ef4eacad-3cc7-4d6e-9a37-6e9631e21120",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "3d99854c-e066-4059-b14e-529505bebc8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 238,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0de7050d-fba4-4e6f-9c2c-64c2a5052e9e",
        "cursor": {
          "ref": "2439c163-270c-4154-94c6-8c31f7f5af28",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "3291423c-9df9-4ec5-a88a-ff081678bc1f"
        },
        "item": {
          "id": "0de7050d-fba4-4e6f-9c2c-64c2a5052e9e",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "ea64d261-0915-4211-8d54-a9c1e7db15c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a27b67aa-412c-4c6a-8e95-df8271602f21",
        "cursor": {
          "ref": "59c466f4-9ee0-41c4-a196-abc7a509fe08",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "138f9d37-fbae-432c-9b1f-d48e14f2dc1a"
        },
        "item": {
          "id": "a27b67aa-412c-4c6a-8e95-df8271602f21",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "8ef3ee64-fd7d-4c64-bff9-2df07a04b265",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 234,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6090d4dc-0e3a-4070-8d5b-97f2542f492c",
        "cursor": {
          "ref": "a2f14177-adbe-44a4-b51c-0916557a2357",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "672278a5-f4f4-4b1a-8b25-8f6b15c1708e"
        },
        "item": {
          "id": "6090d4dc-0e3a-4070-8d5b-97f2542f492c",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "041a66c5-b526-4ef2-bf3e-4f918a76c67c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2746a54b-136b-49c6-9fc1-7448c1eb08f2",
        "cursor": {
          "ref": "16fff956-439f-4e9b-947f-4e5c3cd7d9a9",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "7a8ea6e6-2e33-4e5f-8c24-b91f3f0ff8a0"
        },
        "item": {
          "id": "2746a54b-136b-49c6-9fc1-7448c1eb08f2",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "e13294fb-ad9b-4950-b7a8-bc54dab17f5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "191fe2ec-e8a3-4f63-9754-46573ff820e4",
        "cursor": {
          "ref": "fcfd0016-16f6-4f8b-af86-e24d5d788618",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "6ebc0ac7-c96c-457b-95e8-ac2402f01e58"
        },
        "item": {
          "id": "191fe2ec-e8a3-4f63-9754-46573ff820e4",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "18cb6b90-5e7e-4a5e-ac8d-eb4dab0d3993",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 234,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ea6d4f7-a844-4e5a-bbac-8b08ffeb5c53",
        "cursor": {
          "ref": "b3f7e581-7001-4852-976e-b71d7fe62c44",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "29b03a14-c070-48b7-b0b0-c8213b3f7b76"
        },
        "item": {
          "id": "2ea6d4f7-a844-4e5a-bbac-8b08ffeb5c53",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "c79b908f-53ed-4320-aa2e-17cd3e140af1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3d64aff-f7e6-469a-9e16-1f8f4a84a1aa",
        "cursor": {
          "ref": "ee8331ae-bb1a-4249-9b26-ae00a8923345",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "f9cf9a8f-2e02-4563-a988-332809e1eb0a"
        },
        "item": {
          "id": "b3d64aff-f7e6-469a-9e16-1f8f4a84a1aa",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "5fd229b5-30bb-4452-a00d-2038f1242c59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f6cdb34-6a03-446e-92f7-49559378a70d",
        "cursor": {
          "ref": "446ee619-1fcc-4805-be81-ba442f5192e9",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "b019e4a8-d8cf-48c7-984b-3e329ee9819e"
        },
        "item": {
          "id": "1f6cdb34-6a03-446e-92f7-49559378a70d",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "b4d3b7f1-e0c2-43f5-a0fd-0443021e4fec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2256d72a-1ea8-43b1-b871-ff7b51b4e22d",
        "cursor": {
          "ref": "8f2f1377-c7d8-41b6-bdd4-7fd146560715",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "83da4860-3cb9-4d2a-b1e9-93de9f07537a"
        },
        "item": {
          "id": "2256d72a-1ea8-43b1-b871-ff7b51b4e22d",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "6a06c585-a46d-4896-b1cd-62906ad84bbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35203027-5f12-44ce-a0cc-6d6c7b66b506",
        "cursor": {
          "ref": "645802b4-ab34-4557-89db-b8daa776536c",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "9230078d-21e6-49f0-84f2-a19f11ce8da2"
        },
        "item": {
          "id": "35203027-5f12-44ce-a0cc-6d6c7b66b506",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "08941b33-d291-478a-8fda-380b0963da3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 447,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7698ce39-5aa0-499d-ba6e-f4a5f4cecc59",
        "cursor": {
          "ref": "e0042a34-005c-41ad-a716-0283edb01d05",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "a031f3ad-b6e9-428b-a9dc-1761bf74f517"
        },
        "item": {
          "id": "7698ce39-5aa0-499d-ba6e-f4a5f4cecc59",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "a35b05b9-51da-4833-ba9e-d897dba03a57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 238,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb9a342f-c374-4582-8419-04ebfcffe7b8",
        "cursor": {
          "ref": "2a594379-0476-4acb-a6c4-c9d464f443b8",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "b90c1661-347f-4b23-879c-b9d1f9c832d0"
        },
        "item": {
          "id": "fb9a342f-c374-4582-8419-04ebfcffe7b8",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "a2cb9a7f-3210-4e0c-936f-7b0462ff5e1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b879c49-1da3-49eb-93a2-7e8d97d31945",
        "cursor": {
          "ref": "26232116-a9c7-490d-97cf-09f263d2f3c3",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "b603b5a9-c7f6-42c6-9f26-7ee49af831b9"
        },
        "item": {
          "id": "1b879c49-1da3-49eb-93a2-7e8d97d31945",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "23eca702-1b30-457a-b453-0b54d18f7c09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 237,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14e35dc1-b9ff-401b-b0a8-a4b0a0eb4183",
        "cursor": {
          "ref": "21bae3d4-331a-409b-a0d2-ad96d4b2c62b",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "fd1e9863-5c2b-4c2d-b4d5-fb33312b3ff7"
        },
        "item": {
          "id": "14e35dc1-b9ff-401b-b0a8-a4b0a0eb4183",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "a338cebc-3dc4-4206-bd04-a10f862d67da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b445eae7-6d7c-4e0d-9d7f-92d642666eb3",
        "cursor": {
          "ref": "6d7db569-b7d9-4816-a93e-39d0344e9072",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "7af55019-f712-40c9-add4-4afe764cbb19"
        },
        "item": {
          "id": "b445eae7-6d7c-4e0d-9d7f-92d642666eb3",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "c3aac348-ea7c-41f9-9a74-5b4b5317472e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45eea31d-0d96-492a-bca4-62dbae4a2328",
        "cursor": {
          "ref": "df93bf6a-3c23-4eda-997d-1ddabcdd7b85",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "86a36dde-3290-4d63-8a05-f0e36e9e2f6c"
        },
        "item": {
          "id": "45eea31d-0d96-492a-bca4-62dbae4a2328",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "362aa4da-a0c0-4e4a-86ff-27d7d6d54eea",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 43,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16fa8f51-da3e-430c-96e5-9f91560d10a4",
        "cursor": {
          "ref": "5da1c3ac-97f0-4caf-b227-a04445757284",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "2837ab92-c728-4e51-b249-16ebaea71df0"
        },
        "item": {
          "id": "16fa8f51-da3e-430c-96e5-9f91560d10a4",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "714bcfa0-6cd1-47f5-90d1-3f3e030c0269",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 236,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "268497b5-fa61-40b9-8a40-d1e69823a233",
        "cursor": {
          "ref": "5c5a9b47-3690-4b67-ba8a-0fed88d1393f",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "614c8dea-2d35-46d7-939b-60484253f79f"
        },
        "item": {
          "id": "268497b5-fa61-40b9-8a40-d1e69823a233",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "294f7235-86ec-4f11-8743-1eed33b48a05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3fd7108-2321-4424-a91a-4309e6046689",
        "cursor": {
          "ref": "1606fc09-f3cd-49b8-b612-fbfd050a8788",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "71053bdc-6aa2-4ce4-bbfb-0310d6da0eac"
        },
        "item": {
          "id": "b3fd7108-2321-4424-a91a-4309e6046689",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "951e4629-1ea8-4828-be96-2000758d1db7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67e4c7a5-64ea-4fc1-b53d-27c116eb722e",
        "cursor": {
          "ref": "94a0ae5c-6b07-4fde-ba82-d29dabd2a6ea",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "784c63c3-9a30-4d4e-8de5-218e8ec1da59"
        },
        "item": {
          "id": "67e4c7a5-64ea-4fc1-b53d-27c116eb722e",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "ebe6fb94-653f-483f-a237-9fba4d4ff147",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5b47a97-2c9f-4465-802f-409c5c28f61e",
        "cursor": {
          "ref": "1bae5b67-3078-47a3-8a63-8ed96db5dacd",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "77e34cf9-0d5a-4e18-91d0-5f70059ab289"
        },
        "item": {
          "id": "d5b47a97-2c9f-4465-802f-409c5c28f61e",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "5c2e6508-9bca-463f-a578-bb24a4a0ba65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19cdd076-ebc3-40b9-90b2-31795f6df86c",
        "cursor": {
          "ref": "d106a1ac-4c11-4da1-9a9d-eed5b5c2c44e",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "1c33eeaf-c448-4fe2-ad50-4c27ee9e71a1"
        },
        "item": {
          "id": "19cdd076-ebc3-40b9-90b2-31795f6df86c",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "c153d064-9acd-467d-b6af-f49805430b2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 237,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a88651e9-c43c-4867-89a6-8f76a66aa57c",
        "cursor": {
          "ref": "775d4dca-737e-4ed1-8a94-445b95ab7565",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "60bb842a-4802-4434-acf8-d51f94fbb27d"
        },
        "item": {
          "id": "a88651e9-c43c-4867-89a6-8f76a66aa57c",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "9133648e-45ef-451d-96df-bff20aa4445a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08c890d4-4231-4bac-97f1-16a5cf451366",
        "cursor": {
          "ref": "cfc0f9b7-e3b4-4326-9c5f-81a995293cd4",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "3e394080-da97-49d6-8f1d-92f068364930"
        },
        "item": {
          "id": "08c890d4-4231-4bac-97f1-16a5cf451366",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "a93aac28-0edb-447e-89e7-1ef01dc5fe50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2011f322-fcce-4ad5-804e-e4b494b3f0a6",
        "cursor": {
          "ref": "f90ac157-a785-4dfa-92af-9de42c72ddc5",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "2b72a098-0efe-4fa2-8d8e-f60926019482"
        },
        "item": {
          "id": "2011f322-fcce-4ad5-804e-e4b494b3f0a6",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "aea854af-cbf9-4bc5-80ad-ea9c7d459469",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4c411b3-5620-4251-957f-8eb285ed3d07",
        "cursor": {
          "ref": "c330ab63-61e0-4f0a-8216-e79b2732e58d",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "585398d2-124a-4094-9928-f8bcf89708a8"
        },
        "item": {
          "id": "c4c411b3-5620-4251-957f-8eb285ed3d07",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "69a5fea5-8540-44ee-a9d5-3f8e51cc217e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a533c710-7b83-4616-b0f8-089bf8f36d4c",
        "cursor": {
          "ref": "d3f31776-4d8b-4d52-ab1a-25ad941aa791",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "b0b77fda-6aeb-465d-9aa0-935a1d632fb3"
        },
        "item": {
          "id": "a533c710-7b83-4616-b0f8-089bf8f36d4c",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "c1ad336f-15d8-4db4-8ae7-4abde03075b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30b2d6f9-5745-474a-a1ee-41e2895e3066",
        "cursor": {
          "ref": "fe97e475-7372-4661-97ef-6cafd6071b86",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "bf5b8b42-001e-4198-8646-d90c7312d938"
        },
        "item": {
          "id": "30b2d6f9-5745-474a-a1ee-41e2895e3066",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "1f90f6ed-0b0a-4517-979f-cc2357d581eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3aa25d7c-ca54-48fe-b634-248e48707417",
        "cursor": {
          "ref": "7c1372fa-92a1-4dc0-b8bd-9f26054ed699",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "37933fd5-6682-48ae-84e3-ffc7b507a083"
        },
        "item": {
          "id": "3aa25d7c-ca54-48fe-b634-248e48707417",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "859aada9-653e-4d36-802a-e7f789b64fa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a403736f-ab9c-4940-80dd-d7abb3a3f4fa",
        "cursor": {
          "ref": "fa02cd8a-a7d9-4a72-a351-a8fb9a49ce79",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "69acc0f0-cba1-4ded-b48e-18d7c9a63244"
        },
        "item": {
          "id": "a403736f-ab9c-4940-80dd-d7abb3a3f4fa",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "6cef8e16-c9c9-4a20-bf31-9bf73ee578c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae6b1097-c7c3-4a1c-bf29-9882674cad7b",
        "cursor": {
          "ref": "b96c51d8-06e4-474f-9094-31d521a0b96f",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "0837e967-2b77-4ebb-b5b4-a4d27569869c"
        },
        "item": {
          "id": "ae6b1097-c7c3-4a1c-bf29-9882674cad7b",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "9958499d-8926-4f3b-84e0-4f19a2ee8520",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41b9ba18-c241-4e24-abca-971543d563e8",
        "cursor": {
          "ref": "558cae4a-d969-468f-92f3-9c2f0304325c",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "8a5d0bb8-1594-42f2-85a8-cfbc643dd1c1"
        },
        "item": {
          "id": "41b9ba18-c241-4e24-abca-971543d563e8",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "78f669ba-3330-4b86-badf-50c7af70797c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27c5ba27-a940-43bf-ab3f-609e9c0c501e",
        "cursor": {
          "ref": "fe753221-76f7-4ffd-9a32-ea10bf981eb2",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "ea0611ee-528b-4851-82f2-ba21b26bde6b"
        },
        "item": {
          "id": "27c5ba27-a940-43bf-ab3f-609e9c0c501e",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "db1b6ab0-cc83-4595-8671-ce3cbdf295a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50ba4835-ac02-4de0-946e-c319852a1dc6",
        "cursor": {
          "ref": "32e110b8-236c-461b-946d-defc8b09f170",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "e7518550-37cd-4093-94bf-ddd1f8e331c8"
        },
        "item": {
          "id": "50ba4835-ac02-4de0-946e-c319852a1dc6",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "ea5fc775-1aa7-49d1-b6dc-5fecc8439c58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4048fbf3-12ac-48aa-9604-6ef16164a7b6",
        "cursor": {
          "ref": "ada92c70-1021-4756-9737-dc62b1859621",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "381e628c-912a-4452-922c-deb14e8e449b"
        },
        "item": {
          "id": "4048fbf3-12ac-48aa-9604-6ef16164a7b6",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "bb3ac4c7-3ee8-40eb-bb30-4148a8ff28ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 236,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c733ebb-185c-4b71-a2b4-6aea2b8c3530",
        "cursor": {
          "ref": "fb13874f-dd69-411e-ad06-c67defb0e174",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "5c0b1d83-9e2b-4fe9-9d09-642d1c1f230e"
        },
        "item": {
          "id": "0c733ebb-185c-4b71-a2b4-6aea2b8c3530",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "7592c13a-2b47-405f-9acb-8a5e2dbbc029",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25bc243e-ae75-4a60-a413-015d8914f9bb",
        "cursor": {
          "ref": "5945f136-70c4-4537-b10b-0f2e192a48ad",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "43eb6ddb-6853-4d9a-a9b7-57ab44c49257"
        },
        "item": {
          "id": "25bc243e-ae75-4a60-a413-015d8914f9bb",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "8bb0bee7-a43d-46d1-8882-2f58dc1cdd42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 237,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffccbd9c-fcd6-4e37-842d-511885d749d1",
        "cursor": {
          "ref": "f9da0b40-3f48-46d1-a9e5-af7ac8bd82ab",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "85d7705b-dc53-4f4f-8cfa-805bfc81130d"
        },
        "item": {
          "id": "ffccbd9c-fcd6-4e37-842d-511885d749d1",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "706b949e-74f8-4222-9e91-3778637202bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91ae416d-ab15-4637-80d9-46a985410597",
        "cursor": {
          "ref": "85cce0b7-2ea8-457e-b678-3a97e8acae57",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "b5369c9d-dcd8-4d2d-ae81-16abf546a500"
        },
        "item": {
          "id": "91ae416d-ab15-4637-80d9-46a985410597",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "e8de4e96-f963-4d2a-846c-1c81e02f87d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 232,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27aa15de-84ed-48c7-96d2-c843f11979a8",
        "cursor": {
          "ref": "7e1683f9-a37f-4cf9-aa34-caff9749948f",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "9e733699-4c01-4e3d-a680-ed16e35247bd"
        },
        "item": {
          "id": "27aa15de-84ed-48c7-96d2-c843f11979a8",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "2b6b6797-554d-47b0-ab88-07a390d1631c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 233,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7be10bf7-0db5-4ae9-8fb9-c71f944029c9",
        "cursor": {
          "ref": "2fd2bd91-6c37-434f-8582-9b74e8471b94",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "9d0f46fa-3857-41de-98d6-4ea49057d960"
        },
        "item": {
          "id": "7be10bf7-0db5-4ae9-8fb9-c71f944029c9",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "c48e1292-0216-43a6-9692-9325a5824ea4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2726b709-f80e-45c3-8407-daefae1fc8dd",
        "cursor": {
          "ref": "ff954627-a533-49b0-a70a-8edb53c7af02",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "45a35806-6ee5-4254-a569-25f4bec5b2cb"
        },
        "item": {
          "id": "2726b709-f80e-45c3-8407-daefae1fc8dd",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "bd32520e-e101-4d15-8112-c3e78ba28f53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52429524-3a6c-4902-9097-6d1ae7dc6c5d",
        "cursor": {
          "ref": "74a70f3c-1e24-4cae-8785-a4479b42adfe",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "3bf4974b-f244-4fc2-81e4-8b9ed7cce7a9"
        },
        "item": {
          "id": "52429524-3a6c-4902-9097-6d1ae7dc6c5d",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "1d29bcfd-87a7-4a7c-bf88-73d8556c1c6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba71b341-443b-49a4-b992-1e42a7204686",
        "cursor": {
          "ref": "66d69b3d-f2b8-4d1f-827b-3ef8e244a666",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "d1d958e0-803e-4100-b38b-d9c5ea2e2f77"
        },
        "item": {
          "id": "ba71b341-443b-49a4-b992-1e42a7204686",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "6be01f0f-6b30-4fb5-b25c-d7c084a65047",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 237,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "397314fc-014e-4175-9ea0-2a5efb2fd8e6",
        "cursor": {
          "ref": "73cc4eba-df3f-422f-9ba1-fae8ef62d470",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "4aa84244-0473-43e0-a85d-923d7b9da4ba"
        },
        "item": {
          "id": "397314fc-014e-4175-9ea0-2a5efb2fd8e6",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "c979df1b-2ce5-4709-ac4c-16878997d47e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "163e45fe-e5b2-4d2a-93f6-e6a7546b7d09",
        "cursor": {
          "ref": "2d01810c-f22c-4ddb-99d0-d0ab34ad325c",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "15c90e0b-e20c-4e58-a522-5ccfe9accd45"
        },
        "item": {
          "id": "163e45fe-e5b2-4d2a-93f6-e6a7546b7d09",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "8240a325-cb90-4b10-a33d-a3f7cb89a2d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "409a96d6-eb6b-4310-9006-9d660576c40d",
        "cursor": {
          "ref": "db8df730-ec31-4ef6-9293-9431787df1e4",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "a4db9cb7-19bc-43e9-8d68-2ed3ea2f3c87"
        },
        "item": {
          "id": "409a96d6-eb6b-4310-9006-9d660576c40d",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "25700d24-1ae8-43d9-b270-9da6864dc0e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 236,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6942f4e6-b8d7-4137-af04-572df979e2d8",
        "cursor": {
          "ref": "449a198d-e3ba-44d3-b057-60e2bee4bea8",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "e2c3de65-d053-43c4-bd5c-d28adb265628"
        },
        "item": {
          "id": "6942f4e6-b8d7-4137-af04-572df979e2d8",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "30fa0935-a882-42e0-a15d-d9a03e795a5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37a0b193-6edb-4497-aae1-43ad8a4e6a5b",
        "cursor": {
          "ref": "c71db9ba-c896-4487-a367-cb50ecb0a62b",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "0a204bee-0321-422a-ae0d-496dd02cee1a"
        },
        "item": {
          "id": "37a0b193-6edb-4497-aae1-43ad8a4e6a5b",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "6ddfb36e-fb18-4940-bf8b-67569c86de7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68035523-1ca9-4352-be6b-f7fe2f0cd8f6",
        "cursor": {
          "ref": "82caa344-5050-41e3-9c69-5b35c72850c2",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "bf93fd8b-6dfe-4432-b05d-faf14e547552"
        },
        "item": {
          "id": "68035523-1ca9-4352-be6b-f7fe2f0cd8f6",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "56bbfdf2-f533-4cd0-83b5-1f1029374275",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8626ee98-9b6a-4434-9e90-46cc36ac2bf0",
        "cursor": {
          "ref": "18b6004b-0ef7-4211-ba7a-8c97e5c052e7",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "3d5921f9-b27a-4e55-80cd-64d11d1dac80"
        },
        "item": {
          "id": "8626ee98-9b6a-4434-9e90-46cc36ac2bf0",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "22dfc59d-9620-404a-90c0-097d43458bb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e765871f-8187-4440-81f6-7e61e8005b7f",
        "cursor": {
          "ref": "ec7c5e88-99cd-4217-9531-747bca0e3e02",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "1d8c8d5b-4d27-4282-8f97-91e66e95c5f6"
        },
        "item": {
          "id": "e765871f-8187-4440-81f6-7e61e8005b7f",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "532680d2-8985-463b-bb26-b2a06c775958",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfb53343-db2e-4d16-b6e0-131d6b990627",
        "cursor": {
          "ref": "754b95a6-536e-40b5-a16b-80dcd99166c2",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "6104d84e-d4f3-4cd0-b46c-ea1d763ce913"
        },
        "item": {
          "id": "bfb53343-db2e-4d16-b6e0-131d6b990627",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "f329c772-4337-4924-87b3-972ca1be4c2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 235,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9de966e0-7479-4c99-a3e2-7dd86c519405",
        "cursor": {
          "ref": "2633a035-97a1-4c13-8c24-69203db603d6",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "1d2aa450-e5bd-4d83-9926-cf9d58a75cc0"
        },
        "item": {
          "id": "9de966e0-7479-4c99-a3e2-7dd86c519405",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "1dd27566-8716-4392-9497-6ded5b7aefd9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 45,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9cf6518-f28f-4eff-853a-344cea031e8a",
        "cursor": {
          "ref": "d0800074-5be1-4eb7-b7db-5f51de6d0008",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "e234163c-20e6-4c54-9d6c-42fd7791b1a9"
        },
        "item": {
          "id": "d9cf6518-f28f-4eff-853a-344cea031e8a",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "6aa70a60-7487-41f1-af19-62c771067455",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38c103e8-20e2-475b-b823-26c1b1276978",
        "cursor": {
          "ref": "1f3ac11f-1ae5-481f-88bd-04ababa39fe0",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "a793ee7b-79e2-4968-a47f-27fb7813f3f9"
        },
        "item": {
          "id": "38c103e8-20e2-475b-b823-26c1b1276978",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "73f7e4ef-5182-491d-a861-a627bcc93c2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85c8d9fc-fcc7-4fef-ae8a-0403f8a4e831",
        "cursor": {
          "ref": "725327da-2b4e-41cc-af52-c44f995a5632",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "39afc983-e60c-4ea0-bdac-193de987c330"
        },
        "item": {
          "id": "85c8d9fc-fcc7-4fef-ae8a-0403f8a4e831",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "6e7b0487-36a5-447c-84dc-2312c0b4c1c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14eaa0e5-8a97-41d4-a22c-eb25f4f6272b",
        "cursor": {
          "ref": "14c6614d-ba3b-4a89-bb6d-91c97efd15b8",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "ff800f41-c556-4ea8-8fb6-5fe1c00be334"
        },
        "item": {
          "id": "14eaa0e5-8a97-41d4-a22c-eb25f4f6272b",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "c5c63092-096d-4742-98d3-804577622320",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22cb4371-cb43-4d3f-be11-d32a20f57288",
        "cursor": {
          "ref": "bacee831-966f-4dc2-a09c-11d784c26fc7",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "4439fafa-db56-44ac-8da5-0d57cfed508c"
        },
        "item": {
          "id": "22cb4371-cb43-4d3f-be11-d32a20f57288",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "b66603e6-91ae-4635-9962-259a5b90b969",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbc8dd79-3c43-4676-b288-8cdcc6117817",
        "cursor": {
          "ref": "070a3f83-6f6d-4ecc-b1ae-5785a53cdc94",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "5ddf5753-7f89-4275-b96e-f29c63b1f0f2"
        },
        "item": {
          "id": "bbc8dd79-3c43-4676-b288-8cdcc6117817",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "9334be32-7e58-4d05-8b6c-6bb27e6aca35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e68465d-c3a2-4797-8fdb-4baacb35d86f",
        "cursor": {
          "ref": "0f057d1c-fcaa-4d5e-bdac-f12207308835",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "ad1528b3-5298-44b3-97b9-38d35a2b2cd0"
        },
        "item": {
          "id": "0e68465d-c3a2-4797-8fdb-4baacb35d86f",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "3d811891-a3ac-4f4c-aa80-ad69d21cdcd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8ba8a4f-e97f-4224-b569-04ca2633966f",
        "cursor": {
          "ref": "e111c821-337f-47a6-93f1-8b834f44ab47",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "882116d3-caeb-4820-924a-c6dc65369165"
        },
        "item": {
          "id": "a8ba8a4f-e97f-4224-b569-04ca2633966f",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "1a06310e-744a-4494-b6b1-c3ab5e2b2d1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eda8277f-8082-48f0-880a-640b89a01e67",
        "cursor": {
          "ref": "d97feb40-9ece-4f0a-80eb-f4c55ec8bcd8",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "c5eb0e23-969f-48c9-9cf6-963ba1f47e5e"
        },
        "item": {
          "id": "eda8277f-8082-48f0-880a-640b89a01e67",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "cde5bc5a-f0e6-494f-9ef3-34318983cf31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f8deaf9-b69d-421d-b41b-035c91bfba6f",
        "cursor": {
          "ref": "25d7a6ef-ff0c-48ad-a535-45daea7ffaa1",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "2aa4c285-1642-45b2-9db9-6f0dae67cfb3"
        },
        "item": {
          "id": "7f8deaf9-b69d-421d-b41b-035c91bfba6f",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "95d896f7-9b66-4d66-ba46-5e21cc6a8d51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c55b5bba-765c-4131-8100-b340f43482cb",
        "cursor": {
          "ref": "f6ddc0c9-bcad-4c5b-b07b-fa8a3bd2c0ac",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "8255d1fd-78da-4a0e-8d38-ef36b970ea26"
        },
        "item": {
          "id": "c55b5bba-765c-4131-8100-b340f43482cb",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "e6e420ce-75ad-4793-b33e-3ebfea5c2c2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2faa0250-d31d-45ba-a939-0261d54923b3",
        "cursor": {
          "ref": "86b8aa4f-e8cb-475e-a83d-8745c5d8ef06",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "8258804b-861d-4619-ace0-30050e61f47b"
        },
        "item": {
          "id": "2faa0250-d31d-45ba-a939-0261d54923b3",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "1e73d99c-6649-42dd-8af4-0d612a21f325",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4de3cd8-87b4-44de-8498-d2f9cf317500",
        "cursor": {
          "ref": "c71de907-cc77-4089-81d3-5975a6b51f44",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "48eec206-396d-4645-b60a-01c758619400"
        },
        "item": {
          "id": "d4de3cd8-87b4-44de-8498-d2f9cf317500",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "6fbc6561-aa5a-4abe-a6a1-d46fd7a275d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bee13ccc-7167-44f5-b361-ce4cbeef485a",
        "cursor": {
          "ref": "2d6e9019-8938-46ca-b15b-f2b03fa6bd57",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "e675a560-beff-4324-8574-b67fa56b6449"
        },
        "item": {
          "id": "bee13ccc-7167-44f5-b361-ce4cbeef485a",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "6a5f02bf-a434-4d58-a25e-a4f60e0da626",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "030d722b-fdcb-4ef1-a24e-7f7d624a9ed5",
        "cursor": {
          "ref": "96eb6c77-1251-43a6-82e6-63804fb5ebdf",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "489bfb61-0434-47bc-9936-6fd2bcf63717"
        },
        "item": {
          "id": "030d722b-fdcb-4ef1-a24e-7f7d624a9ed5",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "8a2c75be-63a9-4fe1-995a-b995d02afdca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a986fadd-337c-4a6f-baf1-2c1575b4f6bf",
        "cursor": {
          "ref": "9917a9cb-e954-441a-8a74-91d0ad683ea4",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "a318b2c5-0400-4616-b5ad-f0f36ef1ec44"
        },
        "item": {
          "id": "a986fadd-337c-4a6f-baf1-2c1575b4f6bf",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "c98602bd-0647-4102-b8d5-508c70104f9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a374a669-0ef7-4b9b-90c4-ca5ab4a3cea0",
        "cursor": {
          "ref": "fa2e6fcc-0a2b-4333-850b-8f6044889c2d",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "afc6b593-68d2-492b-b90a-1179f73a98e8"
        },
        "item": {
          "id": "a374a669-0ef7-4b9b-90c4-ca5ab4a3cea0",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "ff458cb8-1166-47b2-a52a-8b860f99def1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f1de8c5-69f1-46df-b731-ee5e62d4a6ff",
        "cursor": {
          "ref": "8888dcf6-18fb-4dff-a25b-82b007f2bff8",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "bbc25c9f-37ce-434b-bc05-0d8545ddbe3c"
        },
        "item": {
          "id": "9f1de8c5-69f1-46df-b731-ee5e62d4a6ff",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "543dbc36-786f-40f0-bf7e-28cbf1552d19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39d3293f-85c7-471a-8049-b7e31c30ff13",
        "cursor": {
          "ref": "dd3b7035-3b45-4a3c-8218-025aaa1e3e1f",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "fbd486de-2e69-4f46-9085-0e870a37ea42"
        },
        "item": {
          "id": "39d3293f-85c7-471a-8049-b7e31c30ff13",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "01282cbc-2ae4-4720-aab0-7e81de03aa06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "844b6be0-4d1b-48d6-b57c-91328666795a",
        "cursor": {
          "ref": "fb79b844-8bcb-4fb2-b103-4e5f1085a643",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "4b2b5b19-2773-48aa-9c0d-60f64f1671fd"
        },
        "item": {
          "id": "844b6be0-4d1b-48d6-b57c-91328666795a",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "228c0515-78e0-4f4b-ab3e-24b63b29c957",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbdd4faa-f997-4ade-af7b-e12a662c5145",
        "cursor": {
          "ref": "c7dd20e7-10c1-4b53-81cd-46d5d56d1d35",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "366335dd-4351-4a0f-9014-a1dba96a7bcc"
        },
        "item": {
          "id": "dbdd4faa-f997-4ade-af7b-e12a662c5145",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "5ce6e5a9-91fc-41e8-836d-272f81db9195",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d194177e-f19c-46bd-a2af-aceb54e8d8b2",
        "cursor": {
          "ref": "c6948654-678a-40b6-8913-b8c0bd68b218",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "d60ce735-964e-40b8-9a5f-3b0ddc607646"
        },
        "item": {
          "id": "d194177e-f19c-46bd-a2af-aceb54e8d8b2",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "ceef67aa-71c3-459c-a508-f52927761480",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45ed66a9-bed1-4eb2-b744-0962a1662946",
        "cursor": {
          "ref": "14d76d73-694e-4c2f-b627-b31922fe3aa4",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "bf56f378-5ef4-4d94-95cc-e7433a0c7e18"
        },
        "item": {
          "id": "45ed66a9-bed1-4eb2-b744-0962a1662946",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "b7690676-50ef-4d6e-8c0e-570dec47cc1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecaed715-156b-48a7-b349-7861ffd8885e",
        "cursor": {
          "ref": "53483a81-7ebe-4d97-b5d3-0796d70c53df",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "9651dbe3-81ff-4155-9a1b-e670fb0f8a9a"
        },
        "item": {
          "id": "ecaed715-156b-48a7-b349-7861ffd8885e",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "7a9f27f4-06e5-44fe-a6fa-303f4c7ce577",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1625e18-ca0c-4a0d-be84-e3e2e1594553",
        "cursor": {
          "ref": "e6bb4e4b-53f8-4dd6-a3c9-4b7df66e48f1",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "c791bd97-1193-4fbc-8488-c7f3b8592457"
        },
        "item": {
          "id": "a1625e18-ca0c-4a0d-be84-e3e2e1594553",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "1ccb2080-e335-4c5b-a654-5914080d69f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b7b0c1e-4b93-4242-8bc3-05310d85ba17",
        "cursor": {
          "ref": "209b2a4d-3a74-4247-b028-b4833cb8122c",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "ca2d0024-7229-4f4d-a151-7ce1f056231a"
        },
        "item": {
          "id": "9b7b0c1e-4b93-4242-8bc3-05310d85ba17",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "6881e415-3a99-4695-ae32-379677867f02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed2517fa-7ef8-4cb3-9a52-8669034078da",
        "cursor": {
          "ref": "3543a038-714e-4a0a-bdd4-bbc58eb49fc9",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "a76e1a4e-516b-46fc-9061-3a8832318ce0"
        },
        "item": {
          "id": "ed2517fa-7ef8-4cb3-9a52-8669034078da",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "d4518991-2420-48b2-b54b-3f392a231040",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12a2e7c8-8806-4db6-b21f-5bb4931b5a7a",
        "cursor": {
          "ref": "37cdd1a1-e948-425d-8ea8-879e94cab64f",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "18711412-09ad-4b6e-a9c2-c47f337233ec"
        },
        "item": {
          "id": "12a2e7c8-8806-4db6-b21f-5bb4931b5a7a",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "bcafe943-7908-4290-8849-016f04e8504b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "090e2259-43eb-4add-ac4b-254e24301ccf",
        "cursor": {
          "ref": "7a0d3ff4-8668-4750-9b1c-56c831c7e872",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "250dfa8f-6b16-4a28-9ede-58a1c425fa63"
        },
        "item": {
          "id": "090e2259-43eb-4add-ac4b-254e24301ccf",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "82e2e422-a405-48c5-b8fb-2ce7328157a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cab01ba5-8ab5-4368-b4ea-f802b71f64c8",
        "cursor": {
          "ref": "84adc70d-80a4-42f8-b420-f77ce4558288",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "1ce76072-2766-4982-bd75-19e8b4bd2e25"
        },
        "item": {
          "id": "cab01ba5-8ab5-4368-b4ea-f802b71f64c8",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "f6b264e0-23b3-48f7-85ae-c87c2ac6b210",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22ca792c-6a50-4c57-b98b-e86b63eb4ae2",
        "cursor": {
          "ref": "0ae9e937-2bfb-4fa2-8f00-d85799c99161",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "3a28b981-84b6-41d7-a2f7-55ccd7dfc789"
        },
        "item": {
          "id": "22ca792c-6a50-4c57-b98b-e86b63eb4ae2",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "b8cbd62c-0877-47d4-bb0e-d90080ffa20b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d96c47a3-1e13-4431-ad03-1e06228414a0",
        "cursor": {
          "ref": "1951fa41-e651-47b2-a913-33c33398f3a9",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "26812db8-1116-4938-a5d4-c9a04886c1da"
        },
        "item": {
          "id": "d96c47a3-1e13-4431-ad03-1e06228414a0",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "2f9a30eb-0465-4689-b788-675d1a9bdaae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16381358-2b9d-4f5f-b978-4485d0ddaece",
        "cursor": {
          "ref": "8fa14651-d908-464b-94da-9c98fced730d",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "e19765db-27b6-40be-b07e-6d3737ff59ac"
        },
        "item": {
          "id": "16381358-2b9d-4f5f-b978-4485d0ddaece",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "219169d4-ed83-4fca-83a9-bd876503a6b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a9a5637-09db-43a6-8362-511958ae73a2",
        "cursor": {
          "ref": "baa86d1e-9a49-4a0b-a1d9-31704db2a07c",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "4fbbc2f7-647e-4163-887b-49f550aba9b7"
        },
        "item": {
          "id": "2a9a5637-09db-43a6-8362-511958ae73a2",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "7d058988-56ff-404c-a239-4b54fc9db908",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b435a499-bc96-4f54-80c9-83f46b325317",
        "cursor": {
          "ref": "c2d8d988-f5a1-41fd-b44b-c5b6bcc67ad1",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "b9c57e51-cc56-428b-a950-c5614f201ec4"
        },
        "item": {
          "id": "b435a499-bc96-4f54-80c9-83f46b325317",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "923750ef-0a38-41fc-9f22-bc14de1cf636",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84780d03-8bb2-4a6a-821b-2e5a1508723b",
        "cursor": {
          "ref": "cbf7a99b-43c3-4402-9352-f442b8f77a58",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "d6311ce1-e180-4f0e-afae-0112aaad1bcd"
        },
        "item": {
          "id": "84780d03-8bb2-4a6a-821b-2e5a1508723b",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "55913779-d49e-4caf-b60f-0e5e4de8ac08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f96d6198-25fe-4424-ba9f-f974a71a96ea",
        "cursor": {
          "ref": "3438c4cd-67f9-44fd-bad6-2c444d380cd4",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "3c4e778f-9252-481e-8e5b-26b919e086d0"
        },
        "item": {
          "id": "f96d6198-25fe-4424-ba9f-f974a71a96ea",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "cc9e4676-05ef-4485-8762-1dc2bcec074d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b388646-4275-41a8-9ae7-6e95d5d55828",
        "cursor": {
          "ref": "2e0b94ca-82c1-43af-9cd1-3b0c6d571380",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "231f5869-360f-46a8-8bfc-dcb32d1be231"
        },
        "item": {
          "id": "2b388646-4275-41a8-9ae7-6e95d5d55828",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "27de3dd0-a3df-4f25-8728-f971ce334131",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "156a9e48-0f49-4443-be83-d783bc1de28f",
        "cursor": {
          "ref": "c5102d17-b209-4fb7-a158-ae5ada2ef3b0",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "993b7566-eac9-4e2b-a04e-7e9ec603dc29"
        },
        "item": {
          "id": "156a9e48-0f49-4443-be83-d783bc1de28f",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "9cb579de-1dca-403f-98ae-584ff6e87018",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c87ca1d-3f02-4960-b7a1-ffba6e2a49c2",
        "cursor": {
          "ref": "a4ba9af4-233c-478e-ae52-28afda78fb09",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "1fc3a257-0149-4d3a-8c7b-a40348b424ed"
        },
        "item": {
          "id": "9c87ca1d-3f02-4960-b7a1-ffba6e2a49c2",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "0a879a9c-e0e1-4b5c-855e-c5e31d9319be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e023f63-3937-4185-8725-dda625f221eb",
        "cursor": {
          "ref": "0509ea34-52b8-42ba-aa88-8f9b12005b32",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "efe70940-0ba7-4907-aa44-af9fddae2dd3"
        },
        "item": {
          "id": "8e023f63-3937-4185-8725-dda625f221eb",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "5f8cfad7-82a6-471a-8142-3772def3d3dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3c7917b-9cd9-4eee-9deb-0111b5500d2d",
        "cursor": {
          "ref": "199da6a0-ece4-40a3-8817-7d21b2fe540e",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "1feebd23-2d47-4c59-9fa7-f4e4f6e504c4"
        },
        "item": {
          "id": "b3c7917b-9cd9-4eee-9deb-0111b5500d2d",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "29dbc786-a772-47e6-9e0e-56dcf01df64a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a47044f-7342-49ac-94e2-d6025d9a4045",
        "cursor": {
          "ref": "48ee9e2c-90a6-43a2-98b5-7d3c2ce6bc76",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "62c34fa4-17d0-4823-8553-0058f5cedb6d"
        },
        "item": {
          "id": "0a47044f-7342-49ac-94e2-d6025d9a4045",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "5b47cb44-2dc5-4bd3-86ce-a7744f5e1bfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3dd8f2f-7b53-4245-985a-ef878859e277",
        "cursor": {
          "ref": "8822eb8d-7d33-414b-9cb4-d4ae6d57abd3",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "d5112d37-5dab-48ff-855a-72fe489830e7"
        },
        "item": {
          "id": "f3dd8f2f-7b53-4245-985a-ef878859e277",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "9da1c367-bc2c-4e92-b473-26947797a70f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40517fe3-c83f-48d2-8081-581473ea0df5",
        "cursor": {
          "ref": "69317878-b46a-4b31-956f-1676ff86c004",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "37c4a885-707f-47fb-a654-2587fe59e298"
        },
        "item": {
          "id": "40517fe3-c83f-48d2-8081-581473ea0df5",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "fad9f2d6-51d8-453e-b66d-d9c087e55ce0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0bd8e26-2d0c-4e4c-b9b0-f5f4790ef418",
        "cursor": {
          "ref": "57640505-6bd9-4d84-bdf1-92c573cfb5f6",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "0e804d3e-4122-418f-bd8d-f1fb0053f0a2"
        },
        "item": {
          "id": "c0bd8e26-2d0c-4e4c-b9b0-f5f4790ef418",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "15e51c0c-efd0-4d9b-814d-3e98a811aeb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3a1401f-8281-4662-971e-e2828c451d38",
        "cursor": {
          "ref": "5d9a94ee-17dc-4aba-831b-30b86e0651ba",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "3eee27f1-dd03-486b-a0e7-aac2bebeb6b4"
        },
        "item": {
          "id": "d3a1401f-8281-4662-971e-e2828c451d38",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "a9a7e2b7-82df-4e59-95e6-445bcb13e56c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c13c7ae0-1c20-490a-9b58-e9f9a6f5ed52",
        "cursor": {
          "ref": "c6cc6435-6b8e-4b9e-ba00-4b35dc4de5f1",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "58f8e7d6-d8ce-445f-94a8-c7f6b324e272"
        },
        "item": {
          "id": "c13c7ae0-1c20-490a-9b58-e9f9a6f5ed52",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "af81dc09-c40e-4b2b-8b5b-8db28770ccb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9ef0e3c-5087-4b97-8c54-af80e992d026",
        "cursor": {
          "ref": "a5ecb606-7a0b-44da-bc22-d2fa1df070e6",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "36167810-fe18-48cf-b182-09d3f7bd2bbc"
        },
        "item": {
          "id": "a9ef0e3c-5087-4b97-8c54-af80e992d026",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "158ff12f-e97a-41b2-a6e9-4b9b9b3da75f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d996c076-1662-4ab8-bbfe-85926d6a53e2",
        "cursor": {
          "ref": "255c1f4c-89d1-4862-9c61-458918cc674b",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "a0d01aaf-1c86-44b5-9d33-2961abf96c10"
        },
        "item": {
          "id": "d996c076-1662-4ab8-bbfe-85926d6a53e2",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "5a93a1e8-8274-4c2e-9943-d00c1ece899e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "353d03c1-d289-432b-ad78-9b041440d1e7",
        "cursor": {
          "ref": "5dfee88c-ed65-4fe4-8a95-b72aa7259caa",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "135353c8-7517-477b-b135-bbad12f6e791"
        },
        "item": {
          "id": "353d03c1-d289-432b-ad78-9b041440d1e7",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "d5c79d8e-6fe1-4bdb-8469-6fcc8a647306",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e2541ed-47ab-4bd5-9c49-ae92de1258c0",
        "cursor": {
          "ref": "9f9ddd2a-35d3-4ab0-8f35-cb7d359e7a95",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "ae890be1-f232-4c3c-a234-a484b9c8d2b9"
        },
        "item": {
          "id": "5e2541ed-47ab-4bd5-9c49-ae92de1258c0",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "e9dd0025-f50f-4900-9173-faf0233e87e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2fcee1f-0c58-40be-ac20-97c39f7b255d",
        "cursor": {
          "ref": "9f90b85c-4e06-427d-b7cf-97a44f3e838e",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "30cba02b-6cfb-4b10-8301-3239689e20f6"
        },
        "item": {
          "id": "a2fcee1f-0c58-40be-ac20-97c39f7b255d",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "a9f4e93a-4d42-40c2-b189-28e74ddca60d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2b24554-bc5d-4e2b-bd33-0dace531df7f",
        "cursor": {
          "ref": "058d5a8b-a4e0-4355-b4b6-0c26884c8a7f",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "ce3786be-d75b-40fe-b165-c48abb09d1a5"
        },
        "item": {
          "id": "c2b24554-bc5d-4e2b-bd33-0dace531df7f",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "1a997f3c-048f-40c0-93a4-af0ac3ec817f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24005e7e-fe4a-4a97-97ac-b7e6d6a71d60",
        "cursor": {
          "ref": "380bb1e7-db36-43f7-bd71-313b3c72793d",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "9374a02e-8018-4ad8-bfff-f6953cce57ad"
        },
        "item": {
          "id": "24005e7e-fe4a-4a97-97ac-b7e6d6a71d60",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "88ca1053-ab06-4e05-b292-687c436501c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a0be381-3be0-483b-8986-2443f8c3f6cb",
        "cursor": {
          "ref": "983e004b-6051-4402-99ff-606df0be8729",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "d43dd27d-59cc-44ec-b0c1-32f052205809"
        },
        "item": {
          "id": "2a0be381-3be0-483b-8986-2443f8c3f6cb",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "8679f366-d8d4-4b3a-9ed1-57106c2d2612",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e0310b1-2a9e-455a-a188-b9941b73e65b",
        "cursor": {
          "ref": "54299176-d75f-44a2-a8eb-6a3a8072bc43",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "7f030dbf-6fdc-4d0b-bccc-8044f684b3a1"
        },
        "item": {
          "id": "2e0310b1-2a9e-455a-a188-b9941b73e65b",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "2fc353ea-e011-40fd-b767-6b2008f18235",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11102958-dbf6-485f-b0e8-7450c3317627",
        "cursor": {
          "ref": "d0b5aaae-2d72-466e-aed0-640f14120a81",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "d5c49621-2a31-4c77-8a64-21d852dc4220"
        },
        "item": {
          "id": "11102958-dbf6-485f-b0e8-7450c3317627",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "64c35ab1-94a8-48e6-bf47-88d47fb61f16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "968cfb00-246d-4681-996a-3d43ca8331db",
        "cursor": {
          "ref": "d2b32545-f61b-43d0-8d73-5a9934e7c7e4",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "2d9e2ace-5326-4fb7-a4d0-df36e8be6d23"
        },
        "item": {
          "id": "968cfb00-246d-4681-996a-3d43ca8331db",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "5de44110-81ba-40e7-8e0b-dc922a65aeb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "162436ae-1f16-4c51-b75f-17f94995d5ce",
        "cursor": {
          "ref": "3a9bca3e-e59b-4489-aaa1-92f3c1356562",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "23279d4d-27c0-4a6f-bf6d-3b4535291a5a"
        },
        "item": {
          "id": "162436ae-1f16-4c51-b75f-17f94995d5ce",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "f33ce6fc-b082-4fb8-bbcf-8d180f291134",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "811a132e-3295-469d-ba92-1282387f7016",
        "cursor": {
          "ref": "96f094ed-df7a-4f1a-95d8-af14cd99532d",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "90591276-4ac5-40f4-8ad5-d232fa4680fc"
        },
        "item": {
          "id": "811a132e-3295-469d-ba92-1282387f7016",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "907df86f-0dab-4078-8f94-93a39aface0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "348ac48f-a3d9-407f-8c02-4be3635fc589",
        "cursor": {
          "ref": "22b04bdf-5ec2-4afa-b595-9bc317e1ed6e",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "2379652a-bf50-444d-9cef-e0b627ac9a9f"
        },
        "item": {
          "id": "348ac48f-a3d9-407f-8c02-4be3635fc589",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "f27de61d-4ac2-40d9-b2d7-0edc4431e73b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffcf0700-33b4-402d-b4d7-a3957178090e",
        "cursor": {
          "ref": "72912144-3db8-4edf-8540-6622284f21cb",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "15a2bf1b-d366-410b-b587-b80c8db27f62"
        },
        "item": {
          "id": "ffcf0700-33b4-402d-b4d7-a3957178090e",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "3b73fff2-6d6a-4f6a-9efe-9e1d175f1a6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5df49d95-bc09-4c8c-9e89-0d3a45782c26",
        "cursor": {
          "ref": "e581e4a7-3d15-4ab8-9867-e4b6fcc3ae75",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "6baf5ea6-151c-4ed6-bad6-305ad219db93"
        },
        "item": {
          "id": "5df49d95-bc09-4c8c-9e89-0d3a45782c26",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "1a7b6ef3-b6cc-419e-8a5e-219537750b7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9734eac-71cf-413d-ab43-f6d8f5ea449b",
        "cursor": {
          "ref": "0ddb44b1-5210-482c-996e-ef06f0397306",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "d3a0b138-51ba-4209-9bd0-95d417b98f41"
        },
        "item": {
          "id": "f9734eac-71cf-413d-ab43-f6d8f5ea449b",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "1d7d81e2-ec49-4143-8ba7-fa3c65e1731a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a45591a0-bf43-42cf-be5d-4520e9c4df46",
        "cursor": {
          "ref": "8f33145b-c94d-47ce-8309-e859e42819fa",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "40bad4c4-a834-47f7-a5c0-d2a13aaaa795"
        },
        "item": {
          "id": "a45591a0-bf43-42cf-be5d-4520e9c4df46",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "255c590f-25fa-4ddc-89e1-87f90a9f159b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a95c96db-3016-43e4-a458-41efafa88469",
        "cursor": {
          "ref": "b212d78b-0ea1-4277-9cf1-aaf53213bbe8",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "b20bee85-5ca4-455a-be46-72bd18cedf72"
        },
        "item": {
          "id": "a95c96db-3016-43e4-a458-41efafa88469",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "e7102bc9-14f8-438d-83a7-c2c4bde996d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "911e9563-4b32-4be5-84ee-0c5329b473bf",
        "cursor": {
          "ref": "b14aeddd-086f-4134-8776-58f54906b32f",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "f796ff02-9b73-43ed-bc75-cd88146eab7d"
        },
        "item": {
          "id": "911e9563-4b32-4be5-84ee-0c5329b473bf",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "ba699cc1-fecd-4f55-ac29-d19ade644bfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9b6a82e-54f1-4767-b5fd-17013593c4a3",
        "cursor": {
          "ref": "01a0fe18-a273-40ed-a7d4-2e1c9ea7f386",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "acd503b3-e339-4d77-a414-79cfb87fbf65"
        },
        "item": {
          "id": "a9b6a82e-54f1-4767-b5fd-17013593c4a3",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "431120d5-77d5-4ef5-975e-2928f086d4b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9136d84-a7d4-423b-9692-d115e9dd17db",
        "cursor": {
          "ref": "50c20f96-dccd-47d4-9cd9-c35541e8a5cd",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "e79930bb-cbc1-4978-9165-c47e6bb275dc"
        },
        "item": {
          "id": "f9136d84-a7d4-423b-9692-d115e9dd17db",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "56d64f87-1e2c-4352-92e4-18a777375a90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a7b9990-ebe8-4673-9c15-740cabc5dd80",
        "cursor": {
          "ref": "72f342d5-185d-4cfc-b66a-5fb46c4f9e7e",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "10a045cd-8c55-40d5-867a-24beb33e2d23"
        },
        "item": {
          "id": "6a7b9990-ebe8-4673-9c15-740cabc5dd80",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "fa0349d2-5b03-4ee7-9786-8259ff456885",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93fca7e6-d1c8-453d-933a-d2d70ee59c63",
        "cursor": {
          "ref": "8056f1ad-4026-42d7-968a-613abcf95471",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "1d2d2c4a-091e-48ae-88ca-65b4d5937444"
        },
        "item": {
          "id": "93fca7e6-d1c8-453d-933a-d2d70ee59c63",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "6e458c3c-406b-4463-9b44-45eaf629dad0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d123b139-5bc1-41ec-891b-3d3abbaa5b8c",
        "cursor": {
          "ref": "478989a3-f2d7-43b2-9995-b9f2dca2066f",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "11dc1b32-e385-45bc-b066-cb286a6363e1"
        },
        "item": {
          "id": "d123b139-5bc1-41ec-891b-3d3abbaa5b8c",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "92312b15-a251-470d-b94c-c78e465021a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94c4ed5a-3e4c-40de-9b20-3c5c1c6b27a5",
        "cursor": {
          "ref": "faf3804a-8d20-409c-ab44-1cc6d806593d",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "f54206be-e6c8-40a3-9837-5c16d625741f"
        },
        "item": {
          "id": "94c4ed5a-3e4c-40de-9b20-3c5c1c6b27a5",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "e355b5e5-e519-4c3d-80ac-8de447dc84c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cda3130-0d91-4c10-af0c-574109e3ba0a",
        "cursor": {
          "ref": "2cdacf6e-7a91-41f4-8491-122afb821c7f",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "04902bf0-53bd-4823-9d33-94840aa622ef"
        },
        "item": {
          "id": "8cda3130-0d91-4c10-af0c-574109e3ba0a",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "2709e037-2a1a-4744-a7d8-fa3b57d936b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "790d6240-874c-47cf-bcc4-a787633ae399",
        "cursor": {
          "ref": "c633f5d9-705f-4f45-82c9-792ff9e7d99c",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "c860b31b-593a-4b9a-b5b9-ae0837d86b0c"
        },
        "item": {
          "id": "790d6240-874c-47cf-bcc4-a787633ae399",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "5cdca667-ad64-4ba1-96c8-e4e56d9c6903",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "203a8dd0-0ac2-4fe1-b01f-c0b3f250d67b",
        "cursor": {
          "ref": "f3180358-ae73-4dd9-b9c2-e7641fa7ae8e",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "da2472a9-4ad0-47df-ae04-cd1d2dd6e6eb"
        },
        "item": {
          "id": "203a8dd0-0ac2-4fe1-b01f-c0b3f250d67b",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "8da88cca-8963-40a2-812b-51b21ea0ebb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40318cc7-8beb-4678-90d8-1e32fc06f409",
        "cursor": {
          "ref": "c985e001-87ce-444b-8110-f02f3143b04c",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "a8a2c772-2ce8-4949-a319-21dd4e95b471"
        },
        "item": {
          "id": "40318cc7-8beb-4678-90d8-1e32fc06f409",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "d7b8c22a-ef59-48df-9e34-3f2866e4ff68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c579ae64-41dd-4368-a1f5-6207bce307d8",
        "cursor": {
          "ref": "2f0b1a11-9edf-44db-99d1-efcc2cb82413",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "46b7baf4-4047-487a-a5d8-53251a022d87"
        },
        "item": {
          "id": "c579ae64-41dd-4368-a1f5-6207bce307d8",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "712b4c48-0ef8-4b84-9a3d-730aa78bcdba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f673b67-00c1-48d9-a357-ca493e85025c",
        "cursor": {
          "ref": "1052d28f-a14c-47eb-afcf-851d85ab6aff",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "2899de2f-771f-4482-82ea-644c9a1b1368"
        },
        "item": {
          "id": "1f673b67-00c1-48d9-a357-ca493e85025c",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "3d425657-be7d-4d77-93f9-70407a92dfb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d0df099-383c-4498-a8a5-d003fdc10cc3",
        "cursor": {
          "ref": "dbc3537c-b8df-4745-8292-3a0a93bfa0d0",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "a430fcd7-466f-4c55-879b-8461ab6bef7b"
        },
        "item": {
          "id": "0d0df099-383c-4498-a8a5-d003fdc10cc3",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "d2c8c512-024e-4a5e-bc3e-705260ea2e97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b90788f7-897e-45f4-9463-6a38080c8cf5",
        "cursor": {
          "ref": "6b0b89f7-73ee-4720-b2fa-0ab087798d4f",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "9a5b35ce-e936-4493-bafa-26f9bd562d92"
        },
        "item": {
          "id": "b90788f7-897e-45f4-9463-6a38080c8cf5",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "41b95322-2c43-49ec-a9c5-40937db22a2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b57a4db-474f-42f6-be8d-7c7d726686fd",
        "cursor": {
          "ref": "db374e3a-d293-45d5-a16c-f16b84a72fec",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "cc406e5a-9014-48c5-90d5-2a231eb38026"
        },
        "item": {
          "id": "4b57a4db-474f-42f6-be8d-7c7d726686fd",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "57c481a5-5235-4d7b-9348-aabbc73c4741",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bf14418-704f-4dcd-aa82-d5b27ee0f5e1",
        "cursor": {
          "ref": "33ae8837-cf41-4cd0-9f74-08220715fb3f",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "b88ba4eb-95e7-4c1a-866f-0c7f6a812318"
        },
        "item": {
          "id": "0bf14418-704f-4dcd-aa82-d5b27ee0f5e1",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "7f8ccd5d-cccb-43d5-b0c7-53a3797ad58f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36c02f57-cf56-492e-b266-e3b45433776e",
        "cursor": {
          "ref": "abafdb3b-693a-4267-a0c8-b552109f61ec",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "2fa8e031-5cbe-4b50-97d3-f75dba9b033a"
        },
        "item": {
          "id": "36c02f57-cf56-492e-b266-e3b45433776e",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "3103de81-1ccb-4b59-bd55-c987271aec4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02a955f9-dd62-4ded-9d32-6204e3bbac31",
        "cursor": {
          "ref": "3b054264-8dec-4918-a046-e25c189c216c",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "51d22623-034e-4e7a-9930-a7dadbe3bee5"
        },
        "item": {
          "id": "02a955f9-dd62-4ded-9d32-6204e3bbac31",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "059ad9bb-e993-48f4-b8df-9a0b5b2571eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b7acd24-23f8-43ee-a0b0-b92a3ed0ce6f",
        "cursor": {
          "ref": "4c8435f2-7d2b-4a7c-ae35-d9af3191a706",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "58cfa024-e32d-41e4-99a8-e8433549e3c5"
        },
        "item": {
          "id": "7b7acd24-23f8-43ee-a0b0-b92a3ed0ce6f",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "9917754c-b753-4fa0-ac20-c68fd833d535",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c71f367b-dba9-4e0f-b04e-530872e323a6",
        "cursor": {
          "ref": "0aca785e-73c6-4c9c-9b94-83560fee8066",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "d5d9a1df-d80d-45ef-905c-4077c75c2064"
        },
        "item": {
          "id": "c71f367b-dba9-4e0f-b04e-530872e323a6",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "5b884760-c38e-4168-aae9-7e7c730768d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58538cc2-dd7e-4a37-8f44-b8b22a7b646c",
        "cursor": {
          "ref": "274a67bd-70a6-4175-9a32-99e28fb6e853",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "f6f19b69-f6d2-40b9-b847-bab0537180e9"
        },
        "item": {
          "id": "58538cc2-dd7e-4a37-8f44-b8b22a7b646c",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "529b236b-d8c8-403e-98c6-9a96cdcfabe1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78ee5d49-140d-4568-bba0-16671e3cfd8c",
        "cursor": {
          "ref": "2a8e550b-4c6d-4949-812a-8c54e0f4e764",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "408cc141-3ec1-4086-b695-1d5e7db29d3e"
        },
        "item": {
          "id": "78ee5d49-140d-4568-bba0-16671e3cfd8c",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "5454f3d3-658f-49b1-853b-e6fe85ad6cb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22b9f9e6-1e1f-41b8-b796-da75b5518e94",
        "cursor": {
          "ref": "99af82be-9db7-4c39-bc2a-ac19c5ab1886",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "508d9650-823e-42c4-85f9-d3b5b6a2d111"
        },
        "item": {
          "id": "22b9f9e6-1e1f-41b8-b796-da75b5518e94",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "1ae53c53-cb68-40b1-8a82-352cf7286099",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92367fae-60fc-48a6-9177-6f3b30fd1717",
        "cursor": {
          "ref": "d91a56bb-939f-4ffc-99cc-e6baed05f832",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "1c50ff6d-609f-40ed-b9b8-8b1fb890de14"
        },
        "item": {
          "id": "92367fae-60fc-48a6-9177-6f3b30fd1717",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "0d759ea5-c6b5-4487-9a9c-b80ced345257",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91ccdcee-f400-4b5c-9b20-1cdde47a317a",
        "cursor": {
          "ref": "87667f32-ea98-45b2-a5e9-313c5b516b50",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "96f6e590-0ae3-4d41-a86b-d035f7036790"
        },
        "item": {
          "id": "91ccdcee-f400-4b5c-9b20-1cdde47a317a",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "86cb3645-9236-4bc2-ad42-8ae2ffec6867",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c16e0ae-5bfc-4c46-8505-d82975d99b6a",
        "cursor": {
          "ref": "59e9afd0-3946-4a03-8151-d9c045ed8360",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "b16cf1bf-35da-4e75-bb90-ca4272d3d885"
        },
        "item": {
          "id": "3c16e0ae-5bfc-4c46-8505-d82975d99b6a",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "efb1bc3f-528b-4ea8-83f2-fcbc25180f8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00b9c83f-e39f-44c4-90cc-bae5834b532e",
        "cursor": {
          "ref": "0c94760b-fcae-4c3e-98f8-fc6658f36bc3",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "ba23bcfe-da05-4927-8289-3c1402d04b1e"
        },
        "item": {
          "id": "00b9c83f-e39f-44c4-90cc-bae5834b532e",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "9a499d9d-14d9-4135-94d5-c4b4e9c758b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b9c3f85-4364-4694-b749-e5a8830b6bfb",
        "cursor": {
          "ref": "d354fd8a-ac46-4ff1-81ed-af417a00f25a",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "83986393-8ccd-4480-a09b-49be4084c863"
        },
        "item": {
          "id": "9b9c3f85-4364-4694-b749-e5a8830b6bfb",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "caae95ea-5c8f-495f-b4b8-7056ecd680e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d5d0711-1054-4453-a02b-0ca1e37b93c7",
        "cursor": {
          "ref": "31f31373-75e8-44b2-b8db-9f44d7156598",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "2302f328-2d9f-4838-9916-fac8026499c1"
        },
        "item": {
          "id": "5d5d0711-1054-4453-a02b-0ca1e37b93c7",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "f54716b2-1ce5-4f0b-ad3c-485eb4274904",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5073687b-7622-4ee0-81d6-f76e93d2aa9e",
        "cursor": {
          "ref": "1b01d162-d14d-4e33-ad85-fef720d07da5",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "c427e774-e6f5-49d1-822a-da203edf7a48"
        },
        "item": {
          "id": "5073687b-7622-4ee0-81d6-f76e93d2aa9e",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "a82f0b6e-0f31-45f1-a194-e00cd2de6a30",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 60,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d6f9432-422b-42c4-ae01-57e852c2386a",
        "cursor": {
          "ref": "cba5af1c-a77a-468c-b492-65cefef17fc8",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "7b1f768d-82e4-4da7-8d34-adbf84f0d1fa"
        },
        "item": {
          "id": "3d6f9432-422b-42c4-ae01-57e852c2386a",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "b85f2d80-77b6-4579-b1f5-fe61e83d2ed9",
          "status": "OK",
          "code": 200,
          "responseTime": 86,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d4d00eb-0e77-4625-8e4a-5c30efe4ef78",
        "cursor": {
          "ref": "1ce79ad8-ea3d-48b4-a6a1-d61eb21240ed",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "dc948c73-49ab-42e5-9186-e8d4e5555d47"
        },
        "item": {
          "id": "7d4d00eb-0e77-4625-8e4a-5c30efe4ef78",
          "name": "credentials_verify"
        },
        "response": {
          "id": "d01bb8f0-037d-49a7-9394-7267ee1c91e5",
          "status": "OK",
          "code": 200,
          "responseTime": 1529,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c969b44-ce0d-4299-a05e-ca0c15406ac8",
        "cursor": {
          "ref": "9466a2ac-2cf2-4b20-a58b-ec47d483b1fa",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "c44eee5a-e28c-41e7-95f2-64d1cc37be7e"
        },
        "item": {
          "id": "7c969b44-ce0d-4299-a05e-ca0c15406ac8",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "fbc4076a-3b08-41c7-b7be-dcbb9fe8e8b5",
          "status": "OK",
          "code": 200,
          "responseTime": 1888,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "010a59fb-d4ef-480b-a54a-32f1167f06a8",
        "cursor": {
          "ref": "16a3f20e-ae87-421d-9a52-8100827c67b1",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "a43c7acc-83e7-4b0d-83af-073155b7fa93"
        },
        "item": {
          "id": "010a59fb-d4ef-480b-a54a-32f1167f06a8",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "8429d40d-547f-46d1-9c9c-73f496906ecb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 46,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "010a59fb-d4ef-480b-a54a-32f1167f06a8",
        "cursor": {
          "ref": "16a3f20e-ae87-421d-9a52-8100827c67b1",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "a43c7acc-83e7-4b0d-83af-073155b7fa93"
        },
        "item": {
          "id": "010a59fb-d4ef-480b-a54a-32f1167f06a8",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "8429d40d-547f-46d1-9c9c-73f496906ecb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 46,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6717cd44-5903-4625-9090-2306998ec10e",
        "cursor": {
          "ref": "349c4e7d-611c-4d97-883a-edab021cf424",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "018b02e0-7656-43c4-9367-6441204e6559"
        },
        "item": {
          "id": "6717cd44-5903-4625-9090-2306998ec10e",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "6fa73b6a-d5ce-45e6-9528-40ec19442698",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "557a286f-4583-4e8f-a054-e5ee9a68a9d8",
        "cursor": {
          "ref": "2a518661-53bd-4068-a422-27ffea1116cc",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "e13678b5-0dd0-4179-93fc-eac0cbaf0c6b"
        },
        "item": {
          "id": "557a286f-4583-4e8f-a054-e5ee9a68a9d8",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "da14e25c-21bc-482e-be49-cc08c915cb56",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 46,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}