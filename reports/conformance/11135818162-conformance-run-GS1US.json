{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "34c3172d-249c-4214-adff-5e7dfaf74d83",
        "name": "Clear Cache",
        "item": [
          {
            "id": "750e6fa5-3089-4d90-bf2a-7e81afe3c736",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "cae77a8b-605f-4f37-aa92-81bd180a2705",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "727aa1f6-6051-4c5f-9c1c-8e7f881c5199"
                }
              }
            ]
          },
          {
            "id": "b53d663e-0305-4d02-852a-28062c134d3f",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1babc940-bded-4f00-bb8c-1122fbaf691a",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "7a8ac04d-49a7-45e0-9e42-b87f42ab3ea9"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "3268f9a0-2c76-431a-beb9-9965033bb71a",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "a362de12-9167-4351-9210-b780628c09c6",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d938e5f6-da7e-4d65-8532-898623e52450",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ba4501c0-08fd-43ac-8faf-48df2a5328a6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "07f63042-1459-435f-957e-6b19ab3f84cd"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5d1deda5-e18b-4d0a-be0a-85af878c7f29",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2cf618bc-e288-405f-87d7-e27a67b0c9d2"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b431e6f9-4a17-4536-8252-b618dd15a293",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7d7983a9-4c51-41bf-acc8-1e062e76b731"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "eb6c758f-4f3b-48e3-b2e2-ed51285febf4",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "2c06e48c-c25e-4d18-bb28-32c315987c75"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "913f441c-32c8-4e36-b0c5-6767e2862592",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "85942e5a-9441-4f81-b957-acbd6d1bc0dc"
            }
          }
        ]
      },
      {
        "id": "0b1b98fd-2db2-4508-a504-5023d12c535e",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "9c34d028-5665-4dfe-808e-b886423fbf12",
            "name": "Negative Testing",
            "item": [
              {
                "id": "20c9b4c7-8f84-4a41-8844-29940d67997e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d938e72a-b2e2-4a6d-ad58-c958552b1f28",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99cec076-683a-4d7e-a88a-0a256067b4df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e0ca41b8-2085-479f-89c1-e46736a7cc67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72bddf77-b16c-443a-ae47-5b4af1523da5",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0da9b80b-e4d0-45d1-8bc1-4c6f1d5467cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "263d04c7-9480-4812-9afd-86a217dd39f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7ce9a27-2ea4-494f-b029-32e5c4e2dad1",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1464c6ae-2bbd-4be7-b5fd-e8533a48e843",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5ffe4a2b-266d-4df0-b486-4e6473521bf4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6f00880f-6ccb-435e-941a-6c9669cb1e56",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b2001d77-0b4a-4418-95db-371f9f974f9c",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b593098a-4faa-49e0-b24b-4e102f6d06e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "df09767b-839d-42f9-a0fd-ee171d253715"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2c11da7-49f3-41d2-8dfd-54b3a3b60be4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1a25c46-e9d6-4797-a375-28163bc2eddf"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "1d7ec561-67f8-40f8-beb4-3c413c8e10cf",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f9662ebe-9cc9-4951-8aa4-e0d7fc08d56a",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c8565573-00b5-498b-9798-5b14e32399e5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "d4b100a6-2e60-4300-8ae6-bcb32e21e693"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "850a34a6-c0db-42e2-8995-731d30d4011c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "40ffb7e3-dcb1-4234-ae93-f7d8442fcfdc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "61b560e9-4610-42f6-8252-0ff7bd55e551",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0592de30-430d-4b06-a252-7414974479ab"
            }
          }
        ]
      },
      {
        "id": "ddbdcb3c-4706-40c3-8476-1c170d99c9df",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "2a2a4b9a-1d66-47bd-9ae9-d18cff0a2d42",
            "name": "Negative Testing",
            "item": [
              {
                "id": "dacd18e3-6557-4c22-9611-1a1d71ab6bb1",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "2f128787-046c-4997-add1-1c542a466ecf",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d60087ad-da89-4828-b51b-b293366a2c0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52fd1a32-d6c8-445c-b50a-160e234c64a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "778d4cbf-126c-4706-ab8d-3fbec899ca9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b7d96895-5f95-46cc-9bf1-88d7064fb699"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa36a342-319d-4299-959f-dfd55496a8f3",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85f6f0f2-330b-4340-89e3-b6135d1bc6dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d9ba011-5109-46c5-a8f8-a59026691c3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "436b7579-55ef-4b4d-8274-6400fddad98c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e5238364-d0a8-4140-b4a3-063835d2c30e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a25e9aeb-40c4-45c1-8fc2-aaa5df69797e",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddf734c4-c182-4c56-be1d-26931f036e12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4262bb2c-8981-4362-af11-25e103bb5a65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e53763b-3a8f-4d7d-b923-93ccc0611a80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "94df7159-6eb7-4b17-816b-89d5564a5eac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05b7f04e-cf89-4614-ac44-d0e21a3479f4",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32d7c6ca-349c-4ee2-bee7-717952ab8755",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b699c4b1-7e76-4dd3-8696-882590ffd50f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d4528c4-524b-4abb-a393-7084a1ccf19b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d8fb2b0f-a0b8-4bdc-9476-bd90af6ef936"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d37d319b-cfa3-4d51-92f4-d9cf0d734277",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b200aa7-277c-4fe1-975b-fad0686b5b8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc2d222f-99e5-4edd-98c5-cf72963e1656"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8159fb85-8534-4865-a0cb-4120d4062def",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eecd59cb-9030-4c1b-a2e7-9a03bc852e3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99c84b5d-9cfe-4b4f-9959-6316431bc633",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1ca4133-ad35-40c4-9965-8f8bdff2fc39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e8d3b58-43d6-4aaf-848f-5fafdca389d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc1eeb26-892e-4711-bf5f-e989edfe9247",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "509c9aae-4b3b-43c5-ae15-72e549d52731"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6395cb39-6eb9-4286-948c-8ad3bff4b1e1",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00ecccd6-7f0c-4607-8db0-db40ea3a8040",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41d3e458-e7b7-4b44-a077-fd19559a7c70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f2c81a1-34cf-44c2-9ecc-58711df9d18e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "22f9af97-13c1-4976-bc2a-d1628b5b2a9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "531d056c-fffd-4d6e-9792-0e065a36ce21",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84e1fba8-62e5-45a6-a7bb-bffef2fea6e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac460584-574d-4efc-833c-07e78df1459f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eeaf37c8-9991-463f-99ad-730c1183e4a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f59916de-c5bd-44a5-8800-d540e6b6bad7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7120a88a-77f9-40e0-a8e8-3024eb55d9ae",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65b2cb72-5b63-451a-a6ee-e311c1c205ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4d98daf-bd6d-461e-9f5c-8570db546fee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2be6bc4-2844-4220-95dd-df5727262ec2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0bfb4293-3b9c-4442-9616-4c3b8b3c5b54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95e5ab37-5c5a-4f31-abd5-60a1d3da5d47",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5e0ed53-502d-42f1-933f-8e7da8e47ae4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c81410dd-3a7c-40f6-8137-794432cd400b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52c16188-d7cc-47b8-b9ec-cfd3f28fa682",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d3484119-fc55-4d91-bc3f-72b2d15063fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4695f94-0160-4849-b9eb-bd77c178516a",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1bb52d7-44e2-4bf2-9897-e1e8a3e678e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38b854a7-1514-43f8-b589-36ab6df375ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cc7a0d5-c59f-4106-a5e6-27e9d4be8f66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "73187b98-1313-427b-b214-363e530262f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc239de0-419c-4ae1-90a8-05e047261481",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb014fa8-e0fd-45af-b8d7-07f6a0076579",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37ad6e89-84d2-45cf-bfbe-54cfac5c367a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89582802-459d-4141-b297-f08a26f05570",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "05e1bcd5-6923-47c5-842d-0598154b3133"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5391b8c7-7d96-40ba-bb6e-2259e29eaea6",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b914b3d-c261-491e-96bd-8e18571a87b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b0d54b7-fb77-4efe-a86c-fec1dcbf9b66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50384531-972d-40f3-8805-6bebf79aab12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "efbd8ea9-b731-44b7-be3b-86a15e107f42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9535bbe-5dfd-42bf-ba80-6641c28ee87d",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e20149b0-d233-4294-9022-c625929a33e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43d13981-237f-4028-8301-96e2a9292b63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9205e43-4832-4ac2-a3b1-a8d83b98e334",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bdf179cb-2675-422b-a877-13550f324ba5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b75aa21-5f1b-4f39-8ccb-aa3b6ecc6f81",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d321fb1e-7caf-4a30-9b8e-048d7da765cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c0ab95d-d7ad-46db-850b-75483e487271"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2528cfef-fffe-4eeb-bd1a-0a53345cdeaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bd49c985-9e5a-4ee3-aac7-37a3568cb2e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cde15ca4-f8e5-489b-bf3e-698971b604b9",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3700ee46-1632-4c03-80c9-5fbdb72cc05e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "850f81ae-dc3e-477a-92ac-46915068f3eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c12a81f8-9edc-4d42-b82a-4907c4d07776",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "873a2d64-606a-44fa-b32e-095aec18fce0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc8dd91e-0acb-4f40-9b08-9581c3fe8a3e",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ca58e22-369e-47de-976a-44e87e90ec8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "181896eb-81e9-4e7f-ad01-a3b9b87d914b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "397bfbbc-ddc3-42dd-a8f0-ed226c06c0be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "19b356ee-509b-4efe-93a9-3260ff4fe6d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edc9d4c5-d51c-4c76-9dc4-84c923ce324b",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acfeeed6-4118-416a-95d5-27b870ee1275",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c699ae6-7464-4ae6-b7d0-24dd2410cfdb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c5f3d85-9c40-4f7f-a7be-e8d0eda5adbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "8013b131-3d25-4ce3-84a2-1db86545cb8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea917c43-c71e-43a8-b747-73bf2e2ded32",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9949cd31-9163-4285-9aaf-1baf8389d80d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1387ff7-84ba-4cc3-9ffe-f26ee0230e34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36474718-cf3f-4b83-aa68-e5ea485da7ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f28eebcb-682b-47b3-b83e-172f247046e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4343c63-d89f-4716-8098-7edb884d863d",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da2b7ade-aa78-4cfc-8ad6-8e51ddf9d9a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9eecffd0-f48e-49e5-89af-9dfefcc21d9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29f38852-238b-4e64-833e-73b778a55951",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "91348d41-8faf-4a93-90ae-ff1c886b0533"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71a55ece-fa1a-4d30-b59e-0d128a0779dd",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b7b2993-2cac-48cc-94d5-30e7b6ae4ad0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c7c9736-3617-41d4-8c7c-ffb08865077b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cc15475-7548-4a73-987a-7ef8960293bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3b18b848-ae8a-4316-982e-188d5102ee08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac0a8d6e-e450-409c-9f09-18fa10d6bb78",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34ee7974-1a8b-46ec-aaed-782a4d8059ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f1649de-046b-446a-baf5-e89d14692ce7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78420e38-05b7-42eb-8fb8-c9352d63ca11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "13a8c849-ae11-4a6a-b235-7010093286fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75ce50d0-985b-4849-849b-051eb3477535",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c3bc21b-c11c-454d-84f1-a3e2222e1f03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16e979cc-3d1d-42b6-8980-f223a7e4f1e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab5c112a-2bed-4d49-b2f0-5280f04dc3f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1ccd6b52-dc14-461f-a129-39a0d1e1f091"
                        }
                      }
                    ]
                  },
                  {
                    "id": "905e4626-ff67-4259-9cfc-a6ada14787e7",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48a7a292-e41b-4d4b-9b98-dd1b3b5ece18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "998ba76a-c62b-4653-9a6d-f0c36116ec28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c8f8d56-3cbb-4ac1-9d0c-f5818265cc89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "62721935-b7a3-4cd2-97cb-df40d872b721"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8af27c69-839d-438d-9e40-48aa9b7eefef",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7028b889-2aa1-4f2e-8730-25d8a7d020e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd774bef-4820-467b-a5e7-e24775e5c11c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98002be1-ea87-43f2-95e8-d78378514f01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "197e0419-0d26-4125-9890-370b0a059f11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0b664c8-28cf-459d-827c-59e368ee1d7b",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03cb3c0d-86c4-4088-b7dd-58e1139e8ba3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b55e5c56-28f4-4631-b4b8-4ed67e0c644c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21a01479-9daf-491c-9df9-8f00767afc58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f5a37cc3-b917-4130-a183-e9a214c88e7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54705f78-344f-4ca9-aef3-6c9ff6a5fb1c",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf898736-7a52-44b7-9843-21ec734c4fab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be048417-4e0d-4f36-81eb-f750b7bc7235"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebc60fa3-b12a-4f2a-9149-101fc8779be6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b0489fe9-cf4f-45cd-8094-493b2c8bc3b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3db2bda-e64c-421a-8fc5-85fe4ec7cdab",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf1e2814-d7b6-4c1e-bc4d-d2970fcf42c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f898397c-b7e2-4d4a-8f75-2271a89596cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64ec3f4a-072c-4d89-8817-3cb7210ad7cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "396f22ea-7771-434c-a790-9f0799885c73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2937456-d26e-41e0-ad29-346187e3c07e",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4f9d9b5-0b72-4731-a9af-6efbe3ae6480",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02593be8-d8e7-42ee-ad1a-0d6ce4f34ca4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03afbd05-de01-4cf7-a187-292636cb2df8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "cf7d599c-f5c7-4acd-8397-d58ebb2de414"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c682cc4-d808-483c-baaa-04bd09ae2c41",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1150547-57e3-44bd-8bbf-b1417d00a642",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02260b61-1648-4980-a797-f014909b514e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bfb466f-ed0a-42c6-ab39-bd81dd37255c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "be00abe9-a3b2-4866-9011-4046a42ab290"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5c27f4f-7b37-45b8-8a75-061bd9daf00a",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71575820-fbbe-4ae8-b734-f58d523310ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e713a74-015e-4002-a55b-416c68186920"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0e591b3-784f-45a4-98dc-0fab77856c4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "83cd07ab-1a83-4e4b-b21d-e3c0dc13a460"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53fa3af5-fcd1-428c-bbde-e46a67291242",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38acea4b-9563-49a3-91a2-dba43499942a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74906b16-cc43-4b25-aa57-79c82ebf5059"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "025ad74d-811d-47ce-8450-6fa37a17b9f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a708bc6b-8fd7-4747-b060-1bdd0333e885"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ae35e76-db7d-4b0d-897f-ca9ccf768aec",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20dcd009-bc8d-4071-8119-593c47c988c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f47449a2-9551-4c3b-b745-4268c95c1c3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ab8ce1c-a627-426f-8e5d-45cb32637566",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ef018186-f409-414d-a037-047f9e3ec40b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5306fd6c-9538-4fa2-b7ee-37b15b797880",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "affb072d-435e-4169-ad65-2f1728267351",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e54de1be-a6fd-428c-80af-ed0e1d5a504a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9c29697-19fd-4a4a-83ff-866a65a22b46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "21d0815c-038f-4d84-b4d1-b8e6bfe86711"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad10f8b7-34af-4ee0-8402-b0ff64586145",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88e8a5d1-23e7-446f-8e46-6aef7f951261",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3eca768-c6ed-4447-ac9b-19e364b33dcd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1543d9f8-34d5-4d3f-8fd1-72b54540f199",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "2fb0d9e3-cff3-4fcf-b6ad-f344ca80282a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d01d1a3-ca7b-42d8-a149-e0b5aa8483b9",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c95c8379-771e-4b20-a622-a5022dc99474",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9ac81dc3-bf1a-4ab3-a720-b88d3113d7f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ded70948-dfcd-4ca6-8776-d64c8d655e60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3090fd47-36e6-494c-8d25-14e713a95913"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcadf78b-4d1b-4cdc-beb6-ccd394e1f9d0",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fdb8abd-e9fb-4509-a168-7d72d01e6897",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4c1d832-7c50-4453-815b-ddc20cd633be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1adfcfb2-bcda-477c-af65-3ad336e4aa16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6fdfe117-b7d9-4c5e-a1aa-7fdcd1d83d89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15739ade-2f96-44e2-93aa-13046c817fd6",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e287313-b96b-44dc-a70f-8df84e3d242b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d10d30b4-8e1a-4a8d-9922-36d8558f1f42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0141f7e-39b0-4eae-a758-8fa6f2fcf929",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "96198f19-2ae0-4ef0-b405-cb5211ba6592"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d443589f-6d37-484d-8f9c-b2342b9be963",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19c13e7e-6a4a-4e9f-9c8b-da97fc84d769",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3705125a-be9e-4fd4-a6b1-1c9dc9b975ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fde4aa42-d610-4ae7-a9ce-0fae8ca65258",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "dfe5ca4b-074a-4d57-98e9-4bdec5c08401"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b520b7a-1df8-4d1c-8dae-facb1222e0c3",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7de127a2-ef9b-42f9-9fa4-fcaff991b336",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf7f96bb-46d3-4386-995f-083168b63409"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2481bf50-aeb7-4109-b286-a7da2948e8b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "973c8ea9-837e-4e86-98b5-3f76e95d3dfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc1ad661-f012-43b7-9ede-946b487d430f",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58a42f0b-396d-474c-9b9b-3ed059e51343",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99290e54-0088-4875-8622-c47aa4f72521"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa9ad402-42d5-496b-90e6-f60a97bb1340",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c3e3a12f-1858-445c-b051-cffcc16b1006"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dcefa76-070f-424a-90f3-24a42921173e",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b36a4f9-afe9-4d11-8825-aee47a153147",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b0781b9-9dfc-408a-978e-b046d45ceb24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fba67cc-d056-4480-ab28-7028d2526de5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "d16d6d86-5a02-4436-a99c-61a8cf57b511"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db2ee690-6f0f-4a2d-8366-a206cdf4f345",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "097116c9-115d-4853-8fc2-1d6169535391",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c407f5f7-234c-472e-8ae4-4eafed9e85a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18da7824-260a-459a-a4a5-264d3beb39ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "3cbb46cc-ef0c-44b4-9f5a-151bab816da3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc5d7611-b857-47f8-aa92-77ef03e4eedd",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2545577-1125-4f81-89dc-1362a1953511",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52de4a26-fb88-4396-b14e-cce12cdd5c11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e11d4ac1-9e65-476a-b111-7e6ba0a4f867",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "f9fd387c-aabe-4297-9882-b878e966eeb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f25766f-0990-431a-89f9-2ff56e87aaab",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8c6e0ca-7823-44c2-a5f3-ed48a48a7a06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cbe12fa-34dd-46f1-9955-252642681b55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2c95554-0cbb-46f1-92c3-c49464db4bca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7ec34de9-bdef-4b11-b8fb-f1bd806da5c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dafab851-1153-4bc3-aa73-cc6febc657b4",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "283baa37-ea20-46fc-9af7-1d50681d3a6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e67d0d40-ddd1-4ca3-9528-9c0298f1c717"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c06797c-98e7-4619-bc71-bb2d0f212a0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5dbb01ef-8c94-4948-a6c2-3e2fe0087eae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f29c22aa-f897-4cef-acef-0201ed74eb11",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98357ded-70d3-4c89-aec1-19c41714b63b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "171be6c0-d00f-4410-b46d-b4f8664c891e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f67f37b6-a632-44ca-b731-e2e1e36f08a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "944ba9e4-76b2-4e4c-b8be-da49c76f1cf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f14d131-3b5b-4186-8c8b-d9328d75ff2c",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fac447bb-abf7-48fc-98c8-da6d4623fc60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "023b5047-e005-4913-b451-94bc975e4c44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a44c0b5-cd95-41e3-a6e5-9817b38ba9c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "16dd3ef6-436a-49af-82d3-f8d3e3406dd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1047bdb9-5a22-431c-8a16-765bab4aca1a",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c16f4c9c-de26-4605-ae80-f831f922ecea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef64d09c-748b-4d89-83df-34cb4bdbc5a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6eb151ab-889b-4e62-b1f5-9ca49ee19764",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1b9776fb-1234-4113-9215-eddf4f1f7620"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4967cb8-6ef1-4a46-8ec7-295ecfdc5574",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f80f683-6975-4ad8-bb5f-c39edae68ae3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a2c5ac2-e545-4bd8-8fcf-7c246d4c2176"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0263f407-1ca6-47fe-bb43-9f8b677e0171",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9312b584-5caf-4f6d-8e4b-2a826f2eeb57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4288e00-64de-43b5-a163-619cf34e4b9b",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cec0fa70-5510-476d-873d-2166f71c5f19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e4bd304-3fa4-4567-a2fa-3a969f8c1b03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a22f66b8-7b4e-4062-bf48-d4a908d52773",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "d11d387b-e1b4-4d65-9f95-7370020545ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9208f63e-5b8b-4a3b-b36f-4f95c9954b62",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b2d2898-5027-45ed-a808-951030d941e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c89667e-f1a7-477c-81b4-e4e33238eec0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42acf336-627e-4081-98c2-489017f458a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0e0187b5-3e8f-482f-b3fb-cec7f9ca52b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d38d1e4b-7b22-4135-86b9-3d0cc5f69d2e",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a1b6b4b-7866-4704-a58c-a3587c94d867",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80b000ae-14a1-4365-92a4-59dc729ed399"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb0c8082-b1be-427b-b577-91db82e32368",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9ed159d1-3c12-40bb-b80f-77864507eb79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b545b87-6bc5-402a-800e-7d7797318a3b",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c30585b-7faf-45fe-b423-3495276254be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6024ac4-69a3-42d7-94ac-aa54bb0de4c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6e35ab9-d3f0-42b8-82e5-5c0ae75797fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4f11b2ad-109d-4f36-b413-65ca50e2a82b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be10e5f2-c0ad-4529-b92c-5c88e72bc4c2",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2d806c7-b027-4414-b8a8-ca6520c023b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83265f17-4a44-4a79-b0ff-760f71e2b572"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "892f8d16-5767-42d1-b63a-156c5193a55d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8a9ddee4-a5a1-4acb-ba81-7e88a51966fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c391b321-773f-48da-af17-c92cc4b5535f",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e480fa7d-ae7c-4ebb-b745-736dbc0e3f08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8fc8cbe-6fb8-485e-95bf-49a7f94c84b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d90d2371-3b41-42ab-92fe-f9df5626aa4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "a2646289-a155-47a1-9bf5-8868628e7395"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acb06744-39d9-4d41-a1ed-c601975c311a",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccd74431-1bfd-458e-a376-0f4b1441d657",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e828a215-77a9-48ae-b7f9-54e539c4a1c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8a1f159-55f7-4779-863b-133bf34bf915",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "879c808d-2828-4c52-a547-2236f6d184b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b7d8d0f-2672-423b-b99b-edf224e6ff7d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3994c727-cdb7-48e1-8743-a5c82bbfff20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99cba5d3-d584-46b1-a64a-4581f0ac0243"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bea4c95d-0f03-40d1-bae6-0137ce710db7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "967bae8b-18fb-4e8a-b505-4a99a969729e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57675d85-bdd5-4bb6-af72-6d60ef5a7dcf",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "519a44ad-550a-480d-b81d-b51ee120a6eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56af6f28-b9a4-4539-bdaf-75d7c9d8dc36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86c4f009-ec42-46f3-ae4d-8e636a982134",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b5dd743c-01b9-4792-a6f7-7b6bd7d03159"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9b360b0-3be2-4fab-9731-f7c70a05ac1e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2f6b3c3-5c2c-497e-bf30-ae4f30511cf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9969b7cc-5323-40a8-8a0e-403a40a63313"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68319629-cbe8-419a-9778-3a9c3e59579b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "229653ca-3f7a-45c1-973d-8509ef589d5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adfc6b47-08a7-4073-93ef-17a1479a8b74",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b419edc-d60a-4cc5-99bf-434a149fd960",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc9ed47a-56cc-44f7-a230-c7751305a878"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c668414c-271f-44d5-97ec-481fe4835568",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "294d5f8a-60e3-4e6e-a241-b880b197ebda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4ed876f-1131-4990-bb09-c202ac80bfa8",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79dfd0e1-5dda-4fd4-a587-21e9003800eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce344a56-1a72-49e0-a931-3a20c3bb4dcf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cd643dc-8a33-4897-8257-4f345f11204b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "8a9ae0bf-0cc5-428a-a95b-3c81ab3760f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "064469cd-ce65-4d92-8db3-745812a58a77",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9053f928-6b74-45f5-885d-dd4d94265bba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eea17f56-7284-47be-b678-2153b69eea58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d67a622c-2db8-4e94-8a25-614b368ba460",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f2a5c1f-73d7-4638-9448-99bba5db7982"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16c0e200-49ed-45f9-a0ad-5016e4d2e3e5",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91daa52a-445b-44f6-9afd-1246f7454142",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0eb04f5f-d199-4c5c-bb77-a6ca20815dff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e081a279-def7-48f0-89cb-8c2985842dae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "eb4c0c53-d196-4e6c-8bc6-d7bca764aec8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ee18b41-a9ee-421b-b067-a5869efe4d3e",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1f58c4f-494a-4819-999c-9b2c83b1e04c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "693681dc-7c06-46d8-ac46-afec6723fbf8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be01b93b-491b-46d5-8d7c-70508b7e6aa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b95bc96b-a503-4fe5-9a7d-5752d346b35c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "048bbfe2-7500-4daa-821d-652726cef414",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6509b99f-b0b6-4a25-a1e6-a3ac14feb5c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "716232db-d3dd-4f07-8be9-d2279eb1d53b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3ba24b0-3a7b-4680-8441-0c734a208552",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "710fd052-50e9-4363-9a0a-49eabc72ca83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06e3fe1d-cc0e-48f1-9468-e54836257cf2",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1933ab7b-3f9e-4549-ab16-65c35636dd03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7d313f4-8d30-487b-ada3-05d8379fad1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76eb9da5-f16b-4110-bac9-f1a4555e4292",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "971065e8-3cd7-4b4f-857a-2fb3c100e739"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0fde5a0-ecb9-4aae-9aeb-4387f2d0451d",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3045eb8c-fa9e-4333-af36-12d4ff2023d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c58c994e-9386-45ee-b306-610547992599"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0b40030-bcbf-420e-9594-3bd79a28bd0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "851a75f8-7bcb-4e1b-8bfc-c158bd25f907"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e25cd53a-c7d9-4087-8b93-a8c672c7f93b",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "098241e1-0046-4fdf-a5f9-db4ee4612b44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c89f4e6b-3d58-469f-ae3a-7aa6d7cb4b58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac373696-bc11-42a6-bbec-8ffe44e01bf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b036dd3-269b-4ff9-8890-b350195eef27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "585f0928-1e11-420b-9688-abee47791aa8",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b711ca2-6b84-438a-8983-40be4878a12b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc1cac6f-dd4f-4a21-bfb0-d06faa5b266e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50ffef41-29e5-442f-9dea-87f94810870b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "25522cf5-4504-49f8-b2be-c7ffea4c18a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e217373a-4164-4dde-bba6-18616d501364",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7ef9077-4aff-4e1a-8954-5c68c8eaae77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f6a543f-6ffc-45e3-8635-f51effb9f95a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c1a5a11-0f4f-4d0d-b107-348cb995fb73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "66e832cd-be68-4ea7-b068-e1e2b58ab422"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5eb9147f-fbf6-4ebc-92a7-8788cfa8a573",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bd39409-64da-430f-9610-9eb18a85e592",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffd71f16-5956-4d74-b14a-a3870d374032"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "086c45a0-1f1d-42a6-9ece-4d83ae4ae041",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "25feee95-bd2b-4fb1-8dbe-485e58a9ea76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8cf5dc2-b364-4504-b5c6-93b8af1925c4",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5502c25f-b0e8-496d-9e24-8456a7dae8fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9212a34-bab9-4e11-9115-20e012f68c16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba1982e1-abba-449f-a62d-308d5c376ac6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e7f28e65-9fa1-4782-8349-88e1b19ec1fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26e3e96e-3d38-404c-a46d-e046c8947713",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41fea278-dcb9-46aa-a8c2-a541e8c9e00f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7b97806-9a81-4859-8fb4-0660d5cda088"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0ef3237-5f6d-4b65-8f4d-1bd4bf7c37a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2787f614-8589-4d44-8d03-fbfb30385dce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a60ff3ba-162b-4522-a3c6-9e04ef816252",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dab5c053-46dc-4774-a9af-d315a821c364",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "851bc437-0929-4ec5-9b60-74a2f7431fab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e68da2b4-0258-44e4-b9da-15813262490d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7d4a43df-ad20-47e0-b87c-5284d52b363c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d413a96a-92a0-48f0-a3fb-d12afbeadaeb",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c80a6d06-1751-415e-afbf-ae3ef36ac069",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6cd9864-0763-464d-bcba-168fa5048130"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b9647b2-1bc8-4314-b40c-f921d2c5c7d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0e56b9b5-b956-47b9-90e1-400633005b16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bed55a4c-9dbe-4642-907a-62cfe0c84353",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77ab12ff-e34b-4e9c-b1a0-4e331dcaad85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39eb7372-664a-43f6-b753-65a59a541237"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3484b299-0241-45ee-9518-2cb80d8881f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "17120fa6-31a8-4ca0-9a15-dc8285c6e973"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8aecc135-83ae-46f3-9e03-873513629cec",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5adce39-6d44-4da7-bcab-c858383f5d22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45700c5e-a54a-4f11-9a02-9d5f4b56f185"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efc72ff9-b62d-41bf-b5ef-9f643f123625",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "62817eb6-1335-4ade-abee-58d0f706104b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90d1f014-715f-4c36-bd17-9111cad1609a",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6bc5101-7ae2-4137-a305-e79375cd975d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0a637dd-6bbd-460f-8a55-55dfac06efec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f12519b2-cb12-49c3-9e76-dc24fc21a8f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "04896223-c252-4402-8b18-590c94ef1a30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9872ec0c-4b25-453c-9dfc-5e7780926dae",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b016ebd-3774-49ad-acf5-ecbdfc42c342",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f51b379-d193-4abd-a083-8b8a2c4a6569"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c4e1983-f033-45bd-a0ed-2b7c9a20fce8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bf2c9b16-3445-4143-b50b-80603746bc58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4e6863d-a44e-47d8-af1e-474b402fc2b9",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95b8d901-3cae-4ad1-801b-9406a68dc55e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e7a07e0-3e1c-4f91-b3b6-f633b14d84f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23380f5a-da85-483a-b3ac-2363f02f93da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d788bcb8-ef47-4fae-ab4e-7d89b3a97c44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f98a0e67-adb1-4b06-af77-c9e90b540f00",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bea2cb2-cf85-4661-973e-526416a58826",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f095ec33-605e-4fd4-a1c7-e9aaae8405d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "739aa6f3-4d9f-420e-a571-3d25bdc30c96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "16c1ff86-50cc-4cf5-86da-c3b18a4af7a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fde2f223-a88a-46cf-a7f6-c74d6d82d169",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc417401-300e-4695-9e3b-d4473ee7211a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f455c0f-0d2c-42e8-8958-7046dd814f2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58155d55-8b8e-4565-9f16-7081ac5872a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d8caf212-3bab-4275-9e52-d6d9a8cd7685"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca2bf82c-bb7c-4b3d-84e8-28b9767de13a",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff2986cd-1381-4a2b-8795-875789ee8f6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80222774-2737-44f9-943e-a1a5c8c95146"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e0e6262-e5db-4f8f-b27d-be391ff93b3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "25796aa6-1427-4dbc-b92c-ac68bad787e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96ff13d3-224a-4bfe-b645-e7d6b6e09819",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bf110df-8125-4abb-bd1a-ba5a8832276c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ed0f836-3afe-42da-8be4-d8fa895b0828"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71d5eb6c-d86d-4a87-8624-54a0658cf33e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bfbfb2e7-36e5-43b5-80f9-76e7908a16f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8ad78cf-08ee-4468-be9b-bfea06a8c330",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "561bcef9-1409-4cea-bd7b-518e37e51bb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c08610c4-ec82-4b1f-9d38-114501bf74d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27f52ba7-e86d-4704-88a3-d84bc32e3ba1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "38b2f0e4-602f-474e-b11b-2b3a70101aba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faec08ef-0ffa-45bf-9c7d-993fecde1e38",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fc039cb-3811-44be-bf75-0c509c170bcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f49890a-cd39-43e5-aae0-4d5840296191"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d6922ba-8fab-4f7a-8683-d9988c203aea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "881b51da-6d28-4caf-ba75-6e6b992a047b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb43e9f1-051c-44ef-b214-d861cdb0bab0",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1ef46f2-7d91-4184-8996-a3c2722c6d8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdc7da2d-1345-4547-b80d-616f3e4b3354"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcf9f48b-f07b-4f7c-803f-9ac58108eafb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e18a536f-96b3-44cb-85f9-bec848887d65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e379ed3-0e7e-445b-8c6b-3cf204a2a9a4",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d432c6e9-8149-422c-af68-0057e8be70dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22d068c1-0fbb-4ffc-bec4-40ab6c9cec7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "328a7e86-ca2c-400c-be18-50540451c6df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "77b9848a-97c2-4d75-a95e-d17345f6d5be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4255f87-17e5-47ef-8708-a6d447dac55f",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f889b8f-4c40-4e8f-a4e9-7dfcabda10d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "128709dc-95ac-46a9-81e2-7c0bdbab0d40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a6fc92f-eba5-4a91-b4ee-cdae148aed98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c98a8e5e-4c00-4a5c-af9c-5a22575274ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea588d5a-4315-4887-8797-4438303b37fe",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e32d0333-f825-4170-82e3-0ab1e06107a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dddb60f7-8127-4299-bd96-b9ef60b2bd26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73b0b9c1-0276-41c1-89d7-fc6ace6ab9c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "0b97b282-b58a-4de4-9734-22ce8d1558e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bd0c037-2e1a-4c2b-8685-ddc36fdbab5f",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47252ba4-49a5-44f1-9632-52979bfa6147",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "902e89ec-b3e8-4021-85ee-c4c7cd477160"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2b9d747-3fe3-47de-bf7e-12df8ea58fd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "9ed9db7e-e9d2-43ca-81ce-ef9fb6264510"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6b50cb58-115a-48cd-81a4-01667928ca6d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a072d56a-b594-4601-98e5-d2a2751db693",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea0b43a2-fc1a-4b01-94bf-fee077c8c6b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "97e928e7-728a-40eb-9c07-65d5381e5c0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02ae4b1b-5730-4276-98b4-94b7b16a418c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aaabdca6-8ff5-48fb-81df-67bd30189e44"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f6a1ca7e-c6fd-43f2-bf19-61df947928b8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "38c68d44-2c17-4af4-8a3e-5cd518ab03aa"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6645aba5-ddbb-485c-9f57-a65073a753d5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ca7fe770-ff4b-4e88-8dbb-c474bda17eb2"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d314e3d9-2fc4-497c-b4ff-ff938fcbef05",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5515f267-f37e-4047-90fb-9da71b2ddcef"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "6eddd04a-21fb-44c5-b6cb-156f46b3de84",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8c4f5019-7a33-4dc4-b838-662affe68f24"
                }
              }
            ]
          },
          {
            "id": "5585ae83-ef82-4a77-b3a1-d1633094209a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b3862ca8-b175-4abe-aa54-5260d7880678",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "9833eb3f-d66e-4d6c-bbbf-bf54b6336876",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b51d02fa-05f8-47a3-9855-17f5f4defe10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "13e741c0-2a8e-4920-bd22-3b8f095bf99b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2858051-9a86-490a-ba13-f08762073199",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98c23ff2-59e9-49f7-afb7-cfd026b1d776"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "2b12a7b3-a9d5-4338-a42a-c50cae8103ef",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9ffd2f7f-279a-4a41-b699-affc0e9cef76",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "abecf796-d5a4-4820-a9c6-99f63a4c7f32"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5c1be3e2-b6d4-4dcb-bc75-ae1200ad1d14",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b27c9cac-0b59-4e65-875b-02551d2a594f"
                    }
                  }
                ]
              },
              {
                "id": "356d7e83-0296-484f-9585-ec08511d0b97",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a57511e5-d36b-4f4a-ac33-a822094de109",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5a53a1b8-e70c-4a0b-88b6-6468f323bfc5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "588bbcd5-db76-4694-8fb9-b51c14de42b8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "15607886-c36b-4dec-9f7c-631b2a2c3757"
                    }
                  }
                ]
              },
              {
                "id": "6f80f28e-7fda-4d8e-b7bd-5faa553dd0a6",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "24c43c4f-2446-4cae-a912-c17f6b52218d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "71284303-a2e0-4636-9e3d-53e7b38446da"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e8954a36-07aa-4a67-bd50-5d8619a5f384",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a2d1832d-536f-45cb-b655-9eb05344902e"
                    }
                  }
                ]
              },
              {
                "id": "707350b4-9c9e-4726-a919-cc8cf1ea6b93",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "91d43ffa-3ef4-440d-ba93-2c1d4d39a145",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "98cc27c3-70f7-4c21-b61f-06a334237312"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "45ccbd3b-edcf-419b-ba5e-5b32ade26ed0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "9c9e4bd8-ceb1-45b4-bea1-4fe7fd994428"
                    }
                  }
                ]
              },
              {
                "id": "80abaa36-568f-45fc-a207-04a5a184edc6",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6787cba8-548f-4519-8ede-b0bcdf9f72ca",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1c7beb73-9ce4-4bd2-ab6e-75bb6e548629"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b7d53d08-53ad-4173-8db2-1da98340b642",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "7a2841c6-82be-4e79-a515-1f8144b16e0d"
                    }
                  }
                ]
              },
              {
                "id": "2f2dcdc7-dd61-4745-901f-ab4e905347f6",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "83c1c204-5199-4ae5-99a6-ddfae93d2dd3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "49c9c24e-69dc-4529-abdf-8f03f5b0d236"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bb86043d-2e8a-4f3f-80f7-9599d96417cb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "46e9f449-32ee-4e94-9da2-0744ebf711fa"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4bd1ece1-efed-4ffd-9c3c-1641c6b9c491",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a142dc3a-05e0-4ca6-91bb-fd5ce2647f6b"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "aa934a15-5c83-4f7c-b324-09dda9333eeb",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "13f54d0a-c6e3-45bd-9ad1-9cd77092dbe1"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ab9889bc-089a-4105-91f3-43a4ffe8dc83",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "f2125c9d-8af9-487f-b1cd-6e5ebd66ecc2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f5b8b063-7fa6-4f5c-8156-b89ae5737877",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0ac63e65-20ee-4d78-9ac5-15cd75a1eec9"
            }
          }
        ]
      },
      {
        "id": "0be6687e-33ec-4724-9357-9c65d5779f24",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "b4f19601-5153-44d4-8c3e-7bfaa55bb7e2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e936e187-ff73-4c2a-af72-c02c1a2a3ed4",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "235a3435-7eb9-445a-bdce-aa3e17c25866",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82d7b40b-7411-4654-b579-2615b74fddbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a21d3239-c3c1-4c87-934d-25cf1c442b76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bac6b19-8ba3-4c42-8b81-8f2f5be19d9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "45f3a9d8-3856-4a34-8f94-5b75550649d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72fe6998-48b3-48f5-875b-ed1c72f33d18",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a636e975-22df-4b57-bb35-0be8727d8784",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66920fbb-51e4-48e4-a1c8-52b0f897b23e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76b4c790-6c49-4985-8fbe-9d6ea618994e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "87c1f8d3-348e-4501-bb7a-19764a50b207"
                        }
                      }
                    ]
                  },
                  {
                    "id": "646c5e16-00b6-4af0-a8fe-6935b6746d0d",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13a44e2e-98b6-4e28-bef0-a18f9212e4d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "511e31c9-526c-49c2-bd5f-ae5fe762e91e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f88c3bc-e647-4247-8402-d367ae6674a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "03303ccd-b953-4a9b-b785-33d0101b4f4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "360b08cf-bc77-4ea2-a69c-5caf4ab329b9",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "767f404b-5b7e-4ffa-a160-4869b66e12d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a54f5bc-d61c-4f82-94f7-a523f619d911"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6e22dea-b7be-4d32-9821-f6f0c694b784",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b25760e0-d8e1-4336-b964-c807995903b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3c91787-75a0-4f28-8bfa-3739188b64d1",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f70ad54-3756-4ecd-876a-ff5282143986",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3554d9df-a2e2-494f-af2d-9ab7735f8368"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "680b0d87-a6fc-4027-a49c-7f34f4fecb1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "311a6985-5a2b-45ac-88d9-53022f57513d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc8c8d02-9bfd-4679-8c55-226b414fa119",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ba9ca97-370a-4a11-bc4e-1de7162ae4b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53c2d405-37d4-4d19-bd7d-620938c3b838"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b4c5c67-3e85-40fa-b9fc-027a71457a18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c663ba77-fc64-4b27-87ab-6f4ac7080736"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f39b60d9-3aa6-464c-8d51-04c66ea25a85",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f521eac1-4d30-45e3-8290-71d8790c2857",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eca5d63d-0964-46b0-bb47-e16ee26db38e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a20e8416-d805-44d3-82e4-acdb18a69a91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "6e878791-3790-45a9-9cbc-80a0537e23b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c40585c-4ea8-4ed6-8e0e-f4c5a9156653",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2cb07b9-b1b1-4b9a-a0fd-cbb56feb2ff9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "154def85-280f-49f1-8fbe-a5519a6c87c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4eb7175-0d84-45d7-aa7c-dbef381c5271",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2c66c55b-f831-41dd-bb40-b2c18bbed25f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1755af1-e7f1-4360-a5d6-b81992e7a581",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "885ef259-908d-4753-9983-66d77c758e5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1183963-ce9d-47ab-95de-66dfd6c0674f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdb0a731-948c-464e-b6ed-8f02aefa6b51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fc25ea3b-a310-473a-a6f0-586c7c1e94dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b86c3704-7035-4f8c-8d9a-93b4b1cba08c",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "163e9110-eaab-4175-a326-46e0b2f7c505",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f76b1712-6fef-4c95-b2f0-3686bfb811d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cff2dcd-ea42-4a01-80c6-7a9e2fd59df3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b8da8dcd-f42d-43fa-b07f-8596e4d9bad0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "466bc6e9-4a68-4c8b-a021-36a114a4d0c5",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4fb8ad8-6411-4049-8cb8-d1849951c621",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2987b82-65ce-4fe2-a559-f4abcd646af6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20e1d56a-a8c6-4ad0-8fcb-b12c2521763e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "47ab420c-75c3-4718-aac1-de5237373e4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eafdbaef-4cf4-45be-b1f3-afdcd733a8c1",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "571f077a-04c9-4883-a2d8-c4f2b1193493",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61b43c2a-644d-473e-a7c0-94b7fc555d46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0699bb0b-820a-4838-938a-f9b7f9bfa0d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c1653a78-b7de-48ca-800f-6ab33ff7e83c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cf6cd1e-a201-46bc-b441-df7f386af910",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0871ce52-62cd-4158-ac69-7fb5cd8de0d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "122edb17-2651-4a8c-a19c-5b0dfd209295"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd292e80-096f-45c0-b4fc-4e8143a6b0f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b1901e8-0cca-437e-b7d8-2fdece90465e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faeff510-1825-4d61-a430-2687dcf0b20d",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e952977-65cf-45fd-89f7-61478d6c8553",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af0ab437-d9bd-4829-afb8-0884b0c5fd50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc4bdd4b-8fdb-4338-a44d-99ed2f1f7832",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb80cd9c-b7af-486f-b6fc-4b4a3c800362"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28b607e4-4380-4817-a364-4115dd1d0e0f",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "982a0708-a0b0-40b5-957a-ac8b5652391a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eed51b53-a3de-4008-be46-952fd47a99b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f63afc4a-c720-4548-a113-fbebc3133740",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "7be9ae9d-8ee2-4f1d-882e-0d2aa0ef8ef0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ccf7c70-dd47-4ced-acba-9aeb8159cb10",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95fc7a57-cbde-4353-b3f2-dc24d45e1805",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d726f24-60a8-4012-9833-85fba88fa5ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a3e13f1-d02d-4e3c-9ccc-b71bd10634a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "e5c4a42c-5f6a-4160-acb8-6250cfb7086d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "654c1dbb-2a17-423b-8b3c-fbd5da3f317e",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "247f14c3-6063-4e91-ad81-0da9a9e13580",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49259e9a-f346-4244-a619-2ebd920eb770"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71aafeea-6125-4b2c-b26e-782259709f85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "93f25acc-9dee-4317-abf5-f56605476b85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "073668b0-64c5-4906-b25f-efcb45e0192a",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4283f15-a17b-4015-bb96-b8a2ad015e02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d678b259-e6fc-45ab-922e-eaf59e47493d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f64bc67-61d1-4975-aada-0de9585432df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d95ceefb-2d29-49ba-bde4-c276c21ab6fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be800b17-748f-44ad-a0d6-6c1532b7c416",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f061c89e-eca1-4d52-86ad-35dfebd91f79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a057c44-d8fb-4c34-b2ee-60ed09463014"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5edf445c-4aea-43d8-8146-42b8d04d20d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4c5bbe8b-f603-4c21-8408-a009ddb0ee51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19361b2f-faae-491c-b0f0-12fba7fdbb07",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a17db77e-495f-4e9f-92de-f0a0672bb823",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "caf95e47-e460-40c5-a625-a96438dd705c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42996279-b3f7-40e7-8fec-9253d22974ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e77ab4af-4799-42df-a0af-7368117952f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05cb1f90-cc43-4413-be69-7fa443b5fb2b",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcd3ce0c-2e54-4fc9-b715-3b94f11784ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b981dfb2-7fee-48a9-9aba-c66b16fc6a7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ab5cffd-d041-49b7-8501-ce73ef79a1f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "35fdbdbc-6ccc-4f24-afd1-08a31af28473"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8975b28-5bd6-40d9-96a4-de081df52a51",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84e3eca8-fd78-4996-a16a-4949afd0a3e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9d4f1c2-6019-4b5e-865f-dde918d2117e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea79e8d7-db22-4d5c-a33e-6b253dd3ccef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6c85e56e-047e-45ac-a31b-4a244bb3fbd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34f981ad-b5d0-4126-af8f-94eea55fe97e",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3da04aa6-f40e-4703-bc7f-a0aebdf4298c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20452836-3f6c-40a6-80c6-ef8f74c986eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d150fddc-0802-4b9e-aae2-e1a0e1febcee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "57415d54-b3bd-4fb5-92b2-9b88eb8a7a08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6b3ccdf-d228-4f98-b3d6-b36f4e76d3b6",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "257507c4-ec1d-423c-910a-1b79166f19af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d9e0ff3-1a89-4d92-b745-80b1b3c7d701"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5280d11c-219a-4406-9c39-26349343da6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d2eb6cd1-44ab-4678-a780-0f4706f1eb0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea6b4359-fa50-40e1-92d9-9e154c649ef6",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f528fc0e-df62-4869-ad88-6614b63b25b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77319bd7-615f-4594-9788-70054fa86238"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f472fbc8-3b39-4d15-a299-aa079e7fc034",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0c6c0cc8-bf2b-4754-9c46-03db184d4e24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b544338e-a627-4203-ba64-a857637ceb64",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5d14a95-6861-46e6-b9e3-6790438b67da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0de74de9-bdaa-4bb4-affe-3385eae26f2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f762268-61be-4a15-ac34-170a908b9bfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f7885427-8ec4-4aa7-aa99-6d2f029de9c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eeba66bc-a455-4b20-a749-ff5384245166",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a18dc9e-e750-4ff4-a677-615b85e88518",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fd52d57-4d9c-46d5-bbc1-ddfa63c94563"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ccea889-10f6-4c4c-af88-4b2e90245893",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f761684-3286-45f5-b55d-a45b8636d465"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c5aa15c-e9bc-4ba0-afb0-f882a9731aee",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed228d73-e838-48a6-a40a-20ffce079213",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db32bee4-931b-4f71-bdb7-a8150e4449d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30918786-ba4e-4321-9fa6-fee37d5d16c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fea4d576-f49e-4c30-a20c-8d76186b56a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb3b94b3-9cfc-41fa-8219-253f1a62a251",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10e8fadc-879d-44f8-a357-a2c4b3a06022",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79b7fe65-58bf-4995-bc62-9af6a38c8100"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f3cd49a-fbda-41f8-ac5f-1f35f4681faa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3cecc5e3-1652-4d3a-84da-5189d9fd9b4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d84f4f1-cd2d-4c0c-8a61-3fd8ccdfec76",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5682598f-a96d-4a72-a769-c4b7d93af4a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c23ec9ea-3b24-40c9-bb43-9a024b6763db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d221540f-00ed-436d-896e-8d7e89904e63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b5b9fa69-f03c-4afd-b75c-b3d2d0fa534c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7928d594-8fce-42e1-90c4-78f56ddd93a3",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e86a3314-6d7b-4748-8fa5-423537fb39c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "784a7b1f-c4d3-473f-b67d-ba29c5854552"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fdb503b-e4a8-4782-bed3-00936c848e60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f8d5d7b0-e726-4842-bf2e-c0568e470d5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df2251d4-6afd-4595-a841-84ac10136a3e",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b61e075c-441d-4849-a667-17a963c4fee5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2705b97-9164-4d4b-b110-730f590cb97f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a815ef3-1653-4096-8fed-4af1f72f7b11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c45c804-7200-4b2f-a2c2-5922749168bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c28a4633-e94e-4e11-acc6-cfba632a197e",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10e8a19e-791b-4eb4-9233-6ddf8fe8edc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14d2dbc0-723d-4881-9116-0e8082f924fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "465b736c-0bbd-4191-b1f0-1052c58869aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3581c8c4-8fa1-4e25-ac0b-905f10562ba5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dcd0256-c079-4024-afdb-d4fe4f57860f",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8de9d46-367a-4298-8a17-9eb2ff20d04a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b1f93d6-ea32-439c-990e-b57183176a65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a910b9be-bf41-417b-8e8b-bb2e4fd310e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c2ffd37c-c106-4fb2-bf23-78fe34e12ddd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13d730a8-0b96-4766-9738-e5b222aecc8f",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dc15d67-2bcb-4ba1-8a84-e762668047bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a03ea2c-a5ac-44ae-8527-5a970c563c80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b52c0e27-1f76-429d-8fab-4e579c8437aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ae161f1-3db7-4d27-b41c-60be429aaafc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d93318df-64f2-4530-a16c-99b930468ef8",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4d35a3e-3ef7-4d7d-bab5-12eb19911e11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d7e88a7-b5cb-482b-81bb-992e6a8b2a4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7997a319-c841-423b-a789-3ac383bb8fd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "efa1ac3b-e2fd-4007-93a8-1dea936b2362"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61bfca79-77ca-4809-b98c-2bd4700bf7b6",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c56e63a3-32ce-48c5-80cf-a036ee105b22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8e649e5-7059-4eca-9f9e-9573a22b57cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34195abe-7ea6-4f0a-adcc-210e585624d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8132200c-ed5c-40c2-a8aa-a373080ccec5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1156ca10-61dc-4f4d-ba7f-6b49bb5ae46e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9e254b6d-66b7-4296-bb47-7012e5b3c04f",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "740f2f06-31c7-4404-8d20-10190c8a8b67",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "e9ac1c56-7195-4b7d-aca3-f72143d74957"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66fda71d-d2bb-4ab5-9247-92c8a6ebfa0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d8473ed2-9e14-4953-a1f1-1344bd06e777"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d24e0dcf-ef85-4555-b2e5-a50316bb4a8f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8a5a19ee-4b56-4cb3-971c-1833d5e2f5b3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cad80b5e-c52a-4b8f-9f85-3ef6f5fc92ba",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8924ddc6-08b7-402c-9896-c1319e8c561a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cafb374a-1da2-419e-8761-6f549b7b6926",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "75094eba-982a-4f22-9523-435a9e39f00e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7558bdc6-0c62-4500-8df5-612c7d9221dc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6a10987d-7be4-45fc-9f91-8acca15644b4"
            }
          }
        ]
      },
      {
        "id": "8d886f81-03a5-4185-8f6a-d6e5d04afec9",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "027f743e-ab72-4136-831f-94022608171b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "09938000-2c0c-4464-a7fe-0a490ca56084",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b62cd6fa-cf2a-47ae-a5c2-bc68bf9321ab",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aead8ccb-f2aa-43fd-b73b-2e70c537cff8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a46416e-e608-4dbb-9b23-d76a0b2321be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63dd6b12-a0a8-46b0-8e18-bf5efee34ef1",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37468ce9-699f-473d-8145-a2defdc5b9a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c92401b-81f3-43a1-9f17-b2b359add9cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff6a21bc-0fc5-4e42-90c7-29733d4c0de7",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a9ac4cd-81d4-4b2e-825a-8030e2b3e87c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae1627aa-8ec9-4a29-a902-8b3a467aff40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a095eab-ced8-440d-b743-d55366c3cc72",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ee768c6-6827-4909-bacb-60a520ddcc13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "339a82df-ea3f-45e6-948a-aa0462bde051"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5c97d19-002e-40ab-be8b-a9dde7c5b96d",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d17ed959-d6e4-4e2c-9425-7a498c97e4d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e2b1daf-1648-4de4-ad7c-7b2717930c09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaf20c20-2ac3-4928-9e8d-73227b2eedf8",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e52e9617-75fc-4fc4-8fb4-bace74239489",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e9ef224-89c6-4cd3-8d1c-849c57d4e194"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd44eee2-e0f6-440f-9533-67d8c67b7435",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea06ca88-7e62-485b-841d-d4192f59a81d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5033d41-ed27-4e34-9135-e4ee50bed00a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "798d99ad-d684-449a-bd4e-d076e8e432bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acb669d3-f742-44ef-abe0-93acbc8065ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7c06b33-4b71-46d0-a85c-973a3fc2ab4f",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b86d383-50cf-46a3-8d11-65d236898879",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eba75f8d-26c9-4603-af08-5586d0fcbee0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d1e35ad-9d21-4450-a62a-c3c3a55cc648",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed2f7095-fd76-4593-94e0-0c70551f8a28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b431fb1-d38c-4fd1-8447-46191bc56c6e",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bd76710-4776-4c0e-b476-a762487c89da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f2662d1-8abd-4b6c-988c-92caca096d81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8773cf96-7b0f-4f81-9f2a-af185e88d71e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3752b3b-bc0c-4e63-b40c-261dae3391ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2510e99e-4ba2-4c52-81f6-8316b8dfeabf",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f69bbdb8-0cca-41cb-86fc-90083fddba72",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb2e8325-4788-4ddc-a6f3-376fb032bb70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fec7fcb8-dba0-4030-bab5-97ae724bf305",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "017c41e2-73bd-46e6-9ba5-c410c0cdec03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "036f985a-bd39-47c8-8dda-cbdf8f19013d",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ee4d328-ed93-4124-9ac1-b7130204626f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16e8c9df-cb7d-4919-9458-db49f0740ab8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bede2fc-71f4-443a-9c57-2f724254d860",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a82a4e5-813c-460e-b669-e16bb087908d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d2a96db-e6b9-4727-b308-bd0da227155f",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cf163db-1f3c-443a-b54c-6488aeb4c439",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e09ca4e0-389d-4a54-ae51-975de20fa990"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3640945d-998e-4725-a46c-952cb481c889",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8f61d69-bfb7-432d-b419-397bb9067268"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10ed0ae0-10f9-41a9-85e9-9d8c240fd41e",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "100f29b3-6d0e-4222-85b1-23264ab4fbae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "20720634-2415-49eb-88c5-b3c546dde57e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe2b12a2-ee75-4005-8870-9db36fcee536",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83e4ffec-6082-4e13-8554-d3ef6c7d5db9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "929f1b18-5bbc-4822-a888-71c13c81e53c",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea0da6eb-2b03-4608-964d-b42ab4c269d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1da83d31-063c-466c-8997-7d3417742ccb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e365040-46a0-4023-8624-8634a28694e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ab6728a-3e53-461b-93f6-d12a80f6c51c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03a9a556-999d-4fba-9362-b3488f454a7c",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a01a4c24-a5da-436d-9d4c-2cf9aeb41a38",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8ca447e4-e950-4dee-93e0-0ed7e2754b90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8eb901b7-b2ab-42e5-a9d1-598654ab399a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50645eee-ea75-4485-bad3-57240af5e51e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49c66de9-814e-4278-9149-34241d307ab4",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbf16d11-a24d-4e2f-bcaf-3769f05066cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "96c87895-41d6-444f-82cf-5079d6a90076"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33c16db7-4830-46d1-b4f9-562c57c4b34f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22b6d9d5-e98c-4df1-b846-4958ad552861"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e74f2bf-d5b0-43ed-bc62-7012a3dbb1ad",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c4e5bfb-a1f7-46ff-8f9b-3f94fd0f4378",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec40d029-9ad9-4523-9788-4a396d25fe49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8be09143-c500-4b2a-a17a-34d0f7997f91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76717a4d-831c-4e3a-bf11-a5c564a78fa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ede21992-0f9d-485d-b220-03cd3618bbe4",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af8d5394-8bc5-4ac0-85d1-126c30076d2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a6973e1-fc36-4633-9988-aaff9dbc0af1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc9f2596-3850-4df0-aa94-9e6567fae9a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f838aaa-eac6-4949-988b-b0b5be2b85e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "564f4629-f64d-457b-acc8-bd0d6e188eb3",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "117678e7-5167-4ad8-a4b8-2bde8fe95c5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c8db4a4-9abb-441b-a1ad-e473a4b349d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4706bd51-b998-420a-9454-d2c212e4dd72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b17bffb-ed5b-4921-a06e-768cbd871a01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc79e6c8-3d48-4d87-8484-08b2d0dc9da4",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33d678aa-12b4-4108-abf0-35122bba594a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18fc6ea5-550f-4c6f-8adf-8b36adfce307"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1143df59-5fbf-488a-8286-bd26d3436131",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5116143-0b00-4024-ac30-8818a05db405"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15cd4bb1-7a95-406d-8155-8d449cd0e751",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54f1a334-8d19-45fe-97a8-339da648bb34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aac29f87-ee12-4406-a764-d4c3a0b963bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e450566f-4254-4d90-92b4-cd487ce1d55f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25fd87d6-9375-443f-b87e-5d73a86c5dad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d56fb5d-684c-474e-8734-089064300e99",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "780a7b0e-6b9a-4541-b9bd-044b8e41db0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ea6271b-a854-4e01-8311-d7e8136473ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1b6514c-05d3-4d73-ad7b-f4a7323d1e1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "829362d7-e952-4f61-b5d8-7b70ae112079"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc642bb2-0f13-477a-9e93-00e306748939",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "175e84bf-aa18-4a55-ac9a-ab1aeaea674e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f6f3833-3bbe-4267-b0c5-5af11ca16d6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f73373da-6b9c-498f-a541-186591cd12dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d35f477-62d7-445a-ab59-54dff85175bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e2857e7-38e3-47e3-9f43-9735b4e8c8e0",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76f2cafd-639e-4504-9a4e-1ce925ea7bbd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "39e52e0d-77a6-4f3f-8b31-3e661303e1be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb2874b5-d8b1-4c48-9c5d-c16525f25324",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf16f50a-a6d6-4e14-8192-03b2424f73bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a364fda-a23a-4af1-952d-5f891f612e44",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aab9a5e6-7a10-45df-ad52-e9a9cb2102af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b6afc6f-671e-4926-b8e6-049079a78d18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b853824b-880a-4a84-b88c-7f37912fbf6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "784c57da-b729-4086-b32e-fa66b03e49bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67c8b082-823a-4c74-9e3f-13b980c9fa8c",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dc8fee4-6469-4747-8222-edcf4505147a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2bc585a6-a2d5-418e-8edd-2bc844b694f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1b9c66a-438a-4a85-8ad6-3ff70fc44da9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aaf4aa53-ea9e-4f97-8d06-b0bcefe302bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3455455-1dee-4087-96a5-4920c8f159c3",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b18d0cf-b720-4b0d-8c51-8d45955283bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a2baece1-daa7-43fd-a58e-3c483b386e90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b8d303b-379d-4115-bce8-7a4c6ec5ad34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "341aa1de-1ddb-4b84-a941-eb490df3591b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f020180-9959-4d4a-8b11-d13c2fc56476",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31a80f8e-a89c-4c56-8e9e-c470aa0f8b7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98f91ff4-4702-4c93-a2dd-139be34bcc78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a918d695-6135-4cc7-8307-9b5e8df4c6d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cadcc22-fe87-402e-8bb6-cb90d8eace4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6cb6504-cd5c-4f33-8432-1dd371d3b252",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "472bb2e3-b0b3-4a55-8315-bfdb4198327a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e2d8883f-0742-4746-8a81-527de5a3cade"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "094f6df3-2b4f-44c1-91fe-99d88385f590",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73f3ac5a-cb58-4030-9489-90b9a75774a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5effa070-c8b6-4b61-95f4-e749eecb6680",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "790453c8-a1e3-4cac-ad81-742cf16354c5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0fbbd942-a3d4-42a2-bc82-bbec61b00440"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09355209-8853-4f87-a312-50374d511e94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56cc5973-63a1-4f6e-a213-4830881fb495"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6936039d-93be-4d6f-ad3b-7b52269652a8",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "252466d6-6511-440a-b8d5-eb85564d542a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f5d3163b-6e2e-402b-aafe-d5255937a8ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af095556-6bab-41e7-b405-ec443f3c52cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39630e0d-9a45-43e6-8612-c5854e90d4f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f259baa5-401d-4af4-9af8-1d43d330abb0",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5449e8d-aa63-4868-9087-e6ad2fc13c60",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "80f331ba-20dc-4290-8730-e90626fac5c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1ec2e0c-1932-42c9-9e17-921fb62b92ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5282847d-59ce-4326-a532-56dd5a5cfec8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0afbc6c-0882-4a94-8a06-5ed611cede1e",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f8d03c6-ee07-4073-a15c-5f62033637a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a8f9b38-07e2-4162-9b5b-6b4c53b8a84a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f82f3c01-7658-4118-aefd-2f64e4762770",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6be662b2-4a76-402f-b3dd-ef1eadba8e6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06759557-46ab-4e40-8fb4-53affb69e4b0",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd06dbc6-ba84-43f2-be07-7ddaa05c4125",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f67d6cc6-d1c4-41f5-8303-0d030cf77132"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9e00ab5-b672-4c71-9b02-d645db73407f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a22d9bb2-4f1b-4e7e-b33a-9a3ec51c2f51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3e436de-89b6-4519-93f4-8c072ec0b79f",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "229a0d40-71a7-44de-9fe7-1786f4809029",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9696e71c-0387-47c9-b7a1-e39df6de36eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "080eb407-02f2-4c9a-9b4c-750638181bb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1357685d-f011-4008-b7ea-200f01afd1b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15be052b-93c9-4303-bb66-ae9108498b49",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21d54060-bb6e-45e2-92aa-f595b25812cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "517e0a70-9c19-476d-ba95-49d1f4e2acf9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29ffb941-d51b-45da-ba57-fefad87679ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "131c3e2a-b3b8-422d-a5a2-a5fb5d15b971"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08b7339a-cfae-456b-97cb-5a41b4c44ad9",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9415763d-52e8-407d-994d-33fbda9d9ac5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6946df5a-397e-4654-bfb6-d026fe78841a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b86a0ac-bf52-4f68-9767-d88f662599ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "717ae7ba-b288-4b14-a58a-634b0234b354"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d39f07ac-d444-4e32-a425-df7432c26411",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9485a5b6-37f1-4773-a97e-62d48eb0a587",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eaf239f1-d037-479a-acbc-9f2c368c696e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d006c534-a9dd-44f8-a3c8-66f7ce3207e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edc9d51e-6840-45e8-99ac-033b5baf8296"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d1f5859-4950-427e-8c44-53e9329388b3",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c007aa5-51ea-4bfa-a730-2aa1834a3239",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38e29f83-27fe-4d5d-9854-7a1d2cccebcf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dc225b2-21a8-486f-a61c-60d070d03612",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36e9213d-9e6f-4353-b4a6-fffe1c219155"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b05ac90c-7a5d-41a3-9bf8-0eb942f0a43b",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21031653-21d2-47e9-ac14-11f3fc963041",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "109e6972-8e88-4c45-a0bc-02b665b1224f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3ac4802-f8b1-4274-a1c3-7084e39ce9aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edde3556-b65a-4e59-b766-e2332d63e928"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff4cd02e-7124-4cb2-abdd-934e96be1597",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f65149d3-c38f-464b-80bd-724b9b23c953",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b811508-f7e1-432c-aeda-55d9d919140a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "758cae4d-7d65-4324-b2cf-e056e0c6ea55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d59eeb7-ee08-47ac-98f0-93246f6444dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c97cf8a3-87ff-49fd-9772-1da4185aa0dd",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7a42839-7076-4865-8b63-6657b58ea7f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c27d1b17-3c1d-47b5-9862-7acc5bb7cdc3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59937eb2-841e-453e-9a11-d461386827b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "855202de-4fc8-41c3-b206-14e077d1ca58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2c5fdb8-37da-4f55-a334-b37a7aef10fc",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58fdffcc-dde2-4353-a123-a9779ceca948",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46b402fe-8f68-456c-be1e-2fe4dab15ad4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53a28279-e904-4c18-b065-68ec9f13584e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4047bf36-ae9f-45e6-b25b-5da54ff211b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "403b5ded-3a8a-48e1-a049-4c162f5a2f38",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a71d5109-e016-49bb-9c0a-c43987d519db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa910677-2dc7-46db-98e7-40518bd5856d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "055794cd-62b5-4769-894e-733de4c3b9a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45597a7f-6a71-4d00-98d2-19c47c86e25c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbe45f41-e5a4-47f7-a1be-ebfedb8c452a",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d0bb438-8f34-44cf-a9ed-81853e78b2b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4069aa61-eb28-4f6d-a0ca-93a50f4a9105"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cc57b8f-353f-4e7f-ad03-39022415b5ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c08b4ad-efe2-424f-92ac-7a614c9da303"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24d095b0-b430-489f-86ba-1c19a3e79a85",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64fab956-08e7-4de9-8661-ada9ab501805",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c170212-25ef-4298-88e0-7fbcabfb8e9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c99a98c-5f31-4ecb-92eb-05ea2ff4a4bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71879112-8e39-42ba-ba91-55c48f4c8de2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c396311-456e-4c4b-b88f-0a8237f9fcda",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6d9761d-f855-42eb-9b92-95b860adbd4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2399afbb-e94c-42de-9014-0e40337c8a1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29bfb9aa-4c4f-4b46-99a9-33a65507e667",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ded81f92-5f9f-46e5-80b5-64149baae417"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf3a0b6f-258a-4735-8bf2-b3c0c8925377",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c86aadc2-cb44-474f-a781-2f8fe882146e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8b0de07-381d-45b8-a7a7-cd4c81ddc73b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d293f84d-7651-4e8d-bcea-6b2d9348aedf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8f6d1ef-ab84-473e-906c-e5e112f7510a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3846994e-2aa9-4c3c-a4b7-19e5db8b4bf0",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dc2145a-18aa-40f3-90ae-1617fd379386",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8748ee4-7f34-466d-87ea-d60ad29f4ec5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d8adb83-21f3-42c0-b84c-081fc57596ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77bc35a5-8b88-433c-97b0-24e23b3e2133"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13a880ae-2878-4032-8a66-e2675d869686",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7cc15e4-82ec-4eaf-8405-9545df95b8c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce4ff753-8645-466d-907b-64fcba5dc5de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e444494d-a22f-4f5d-9c89-d867d8e4665e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e922037a-a215-4ff8-bb14-b63199d58486"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97604c3d-afd8-4f49-93fd-7f2c65e2f36a",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11482c0a-7cb2-4690-8fa6-b2a6bb651c7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7abaf9d9-842a-414a-a803-ce6853d7cf61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16e3420a-7f0d-4eb8-b1d7-24168e24c1c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ada51fc-30f5-4442-a29b-60dc92219e16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5601627e-caf6-4dd9-95fc-460ba594f4f7",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34362bbb-bb1a-4730-aab5-27d7fabd9561",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f60e56ae-c363-4e4a-8d47-8dc4fb220bba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc2bf955-4a83-488f-9d74-b6e4503b3131",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "632e2334-ccbb-468c-a813-654cfa440448"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33cbc951-0dd9-4a74-a08a-203cfac363d3",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20861ebd-b634-4499-9eaf-2a122f383c18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3427a53b-f835-49e5-b5cd-99b00d6c82e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51b43cfa-2db4-42f4-833d-7c8d769d03eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2bd1f55-8d0b-4bda-a6c3-3263be2c69ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c131cd18-0d87-435f-adc3-7cc5399ab3f9",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4985bade-0eef-4e00-af83-b44609db0927",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9093f433-0c39-4c15-9faf-b3c8e9127382"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a05ee9cf-9e51-4ed7-8a07-e2244ee87b4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7cee78b-f541-4680-a818-f2118e1b5e0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c933d92-348d-4eee-8d83-997aafd62879",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "197cad02-c0a6-4bbe-8f59-893dabddefe6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b3c4235-3e5d-4092-a28f-91f60f1c1f30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9c8923b-1faf-431c-b569-141cdbfb229e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "399de328-dc62-47b8-82cf-e58a8b7cd67c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "570e0a4b-a3c7-4248-b9ea-df9dcd8e9bd3",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2608ab3-d0aa-4ca3-adb1-8d006ada1048",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f4ca1d6-e0cc-4fb0-8103-4e3577acc32e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab7e6639-4603-4d1d-b35e-17c48905bb14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6802ad22-b382-46c1-bef3-1cfb53640ead"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93cf6a3a-60d9-4a42-8b83-66e4be6d36f7",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4aefbdb8-da70-48d9-aaa1-8659c32acb33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffaaea34-1cc4-4ab6-9d61-62605796c8cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c84a59cf-5fde-48a8-a4b4-c4eb3e9bab67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22327093-5ba8-4ae4-9a8a-56af685feac2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5814c3f8-4425-427e-87a9-74c35c03aacf",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51cf954a-19a2-4dd2-a191-11bc37b7f8c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f62536b-428b-47d8-915b-7e68a1bf1846"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f48e4424-dde3-420a-8c87-317f4ba83230",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cc185f1-16e6-4ce2-a011-b0e014db29d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d692417-2f3e-4f52-8c39-ab5a908f1b26",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "741fdc50-977f-480e-b4b7-4259fbf42c99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bea48b1-be79-4eae-aadf-e4b2c97ed8f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f90d2ad1-4bfe-462c-b85b-45c056677213",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10649eed-1756-4801-a9fc-0000005c74cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "153eae7d-a546-4f2b-a5b6-059f1dca5b49",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6da73355-3197-42d4-a902-7500d2a79a0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7edf8f1d-92fb-4b0d-a1f7-a68a6fcf48c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e429010-9a11-4fca-94c4-537033a1fef7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "289cd130-6acd-4eab-b962-f61e93bebc58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdcfe0ad-6935-483b-be29-2a97771d4f20",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e7e4da5-6b16-43f9-9e0f-adcaa68ed650",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c95321e-04b1-4e44-94ee-1809e0efffbd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fceb13db-044d-4085-b2b8-514a05b9be95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2810cff3-99fc-4539-a28e-6e97c3282fff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "facdffa5-678d-4cc6-8f5b-10fe3d7eebd9",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "802ec31f-a9ae-4171-985e-4b6b1c81eaf8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35e10eb3-b74e-490a-b443-6650a6f9b0e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8600564-36dc-4934-a19f-b9f5bb424413",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abbb4d1b-ff36-467b-b65c-10b766c404f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8f9a3b6-35a8-4a26-83f9-4e2586ca3f18",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a4f2ee4-90cf-49a6-9c56-5b85341eaabc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47d8c511-3a1e-4560-9181-dfb9819864f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4e385b3-c14a-4a19-8c6a-baa7f81d9169",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8dc069a8-34d3-4eb3-a5e7-4e0337e44642"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3e4dc2b-986c-41fe-bf71-c54558d51166",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f3eef13-04d8-4bf0-92a9-c69395cc0bc4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ddb12ab9-8b33-4ec7-a925-d1e7cdfaf85d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22900785-4a2d-4765-a2bd-1af75ae69ba0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c157526a-2e21-4adb-acba-794767d1e3e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c891229-5443-46ab-8cac-df844f15228c",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "600e729b-03da-4961-940f-7502ede4bcec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "92f17452-c4ae-4c91-b91d-b72bbfb2be7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c56ebd57-3935-41a1-ab08-f1b8755bfdb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bd4368c-8342-4276-acbe-309ca98a4c3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a47e4da-4c57-4fcb-97d7-009612e18ce3",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b683ae7-73ff-4345-bc5a-66f09b38e254",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b77c405a-15f9-439c-9215-0420390be947"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7fadd1b-3c63-4c4d-bc37-db4ae5b64fc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f573d0f-9e4c-4bf8-8ec2-8b95500b6b08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd0718ee-b5f0-4ae2-9b51-255a4b377f8a",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0996a76d-c56d-477a-826b-7d45303ecff6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aeadb739-9cf8-4ea2-b71c-e29705449ce0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3555a88c-4b7f-487b-8565-ea3aa7a25e72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "290afaaf-b4a6-4c8b-9618-6ace4cb46a4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d0e4956-48e5-451e-9b44-0645c4380e88",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "872a0b0a-e6dd-4e74-8c60-f71c2b7af945",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de2ecb44-39d4-4ec4-807b-750765f70695"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34de4a6f-ca1c-4eab-a0d2-913b1c691706",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cabb4b1a-696d-4f11-9980-a164df054de6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43b83c90-aaf3-4878-8f0f-7435555a1324",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79b7615f-5fb6-4483-84d0-270ae8c55520",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "68e4be91-1732-42c4-8871-512132f5a844"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d8ab342-762b-474e-bb68-3eaf4ae4c596",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddf3c610-e122-4126-9dba-d4588231b272"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b6aed90-b070-4602-9320-ef19ae63940a",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b174509-dd39-49d2-aaf3-c7600dc08ff6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b6143569-1c16-483f-acfc-0b2276f606ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdbaef42-f44f-403c-b12d-d4c5aa0a9c45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11db44e4-3313-445c-a6c9-bf967764967c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e91c8c8d-69ff-468f-9193-d27a4a1352cc",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38dde0cb-7b73-4f14-b39e-2c00bb20c779",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "09865852-31a5-4cbc-85f0-ace49b5e2fcd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85ff73b3-74d0-49b1-b7ae-960443efc6c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "649b8c2f-badf-4537-85de-239377e20a38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "974d4deb-ee26-48a7-b7d4-3051f82b3d7a",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68161d17-420a-4504-9ed2-d7d73e603234",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f9f505b-2e45-426d-ba96-852010fc80a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5d2bedf-25ea-42cb-9836-e861d46a414a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2755409-af1f-4cbb-9723-d62d04b66e1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd24175a-4e8f-449e-ac70-c99aecd928b3",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b790f03-ef72-42a1-b1be-cf1102d3bb28",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f850b038-6a0d-406a-b79a-7bc54eef955b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3087d03c-c0bf-43a7-89ca-bcaf8a4c8c4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb1b7a91-0f43-4426-b61d-f053e0763fa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73bc0ba6-9d72-442c-beb6-2d6092011024",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be3f101d-ea09-433c-879c-094c8a4bb3c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "03158981-f394-4799-a64d-9ca4d6a194ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "238b4e38-c1ec-4fc3-9a20-e93587446341",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25e9f660-8e3d-4d54-a5da-261e293a680a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14003a89-12c7-4ee0-b618-65d237485f8f",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c04ff47-02bd-43c6-8ee7-ed9c1089f821",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "11a7c697-b467-4d66-a573-ba414006a1af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6188042-28d3-42a5-abc7-ec77941ddaad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2accb292-fd0a-46b0-a68c-30039b5b7372"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65fc6870-0983-4c74-b5d9-3b7bf3aec450",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cecb125-d568-4e52-b7e9-984e9b5ef9ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5173039b-f4e6-4e43-bad3-f7927cceef08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b7256ed-1120-442b-a758-6dab29d4cf57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eba1f6c0-0109-4d41-ab7f-51822a6cd054"
                        }
                      }
                    ]
                  },
                  {
                    "id": "927a9ba6-cf23-4c4d-96db-a3deec678849",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b886fabd-ad91-4c41-a847-e899e417d90e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef4a56f3-6fd8-4c0b-b030-7dec1d1ed631"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e76dead9-ffef-4ce9-ac0e-a7f7b8376dae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a42541a-49dc-45b1-bb09-2a8fae662d49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ab0b287-f6f5-4872-adbf-89f2a1ba1bea",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ed48087-e7ef-4eb4-b616-bc5784293a85",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5410aca-7a55-499b-86ea-82bc61b59b65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18f180ba-85f7-4d32-8167-dc6a7ca32ff4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d7fcce3-b0d0-4b35-b317-f87850ad365e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "098fed9f-da96-4d17-8a7f-600bc133a478",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "446502b8-7b5d-4a63-8985-c193a9b737b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "66321fd7-c13f-43ee-85bd-c7a840f929c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61ba7363-9410-4bd6-be76-7ca3d05a97b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5af018a9-4261-4904-8007-00a547825f68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "907f113a-0c52-4188-9d04-130d63ee8cb2",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f22e8d73-8a96-487f-baf5-14b1e1653e5b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7039bfed-ee43-4cd9-8ee5-91ccd26135fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3034173-2f10-4941-8e6f-47558b9d4c51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14cd8481-63e3-44a9-80a5-ebedf052049d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "385628c8-65c8-4a1d-b160-d81e681701f7",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5640e7c-beb3-4f06-b1ec-28c5eaf216d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b01bc68-2ded-4731-8c42-a6969d9ea048"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b10f5bd6-98a6-446a-9336-5e3ca2a6fd3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "baf7e50e-faf3-4f0c-88f6-6032f8d42dbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2055eaab-9999-4fb9-aa0c-0c385fdf8790",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20215695-a0cc-4c44-bafb-9e38f6a78f98",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ffce5b29-209d-4e9d-9a03-0b84fe925595"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "747f353b-9b69-4430-9142-7258de0591ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c81f950f-a2a4-41b2-bd16-edba366dc888"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43fd53b8-6e48-4d4c-b9e9-34bc0f8321c9",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "651190a0-628d-4450-9a71-77249b56cfbd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d2f8b058-b41b-4afc-913c-95338d928074"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c21d527-bf99-4b00-b051-4cf5de161713",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e0e77aa-0769-41bf-91d0-0ef8794f10a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35cc0eb9-29b5-436b-a4f1-ec4e0611d841",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02b20fe6-09c2-4cab-9b32-6c9c2cbfa0c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "943c5f3a-d842-4b43-b237-cc248f1a5dce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ece3c02-941d-424a-b59c-c87c51e50633",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67e0d6ec-a169-44f9-a9b3-2c9d631aca87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c77ae66-022b-462b-a61d-05bb09f26718",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd9f692c-6738-44e0-b8a5-e8e6775ad4de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "42dfda19-1ba9-48f3-b03c-5f4a87278a6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9da5430b-d4f5-4448-bca5-64756ba0c547",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6a948b4-21a6-4f45-b137-0e08d54822d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dda932d-55ba-4eda-a237-34211a47b180",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7112d3c-9d74-44bd-81a6-049b58e54f8b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5eeeb54d-79ed-4887-9b41-4f553dcade1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e259e2e3-cd5b-4626-a965-5eb71ae38b0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3add3976-0714-4a79-b0b9-520432c2279f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6b47472-a891-4049-a55c-0d689ac308ad",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f96a4a49-32c8-47ff-ab65-04d2e01517d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "60b2f9e8-ab22-4a46-a095-9eea9de47586"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4f0d146-6ba2-4740-9007-d960bb8ea8cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db4bcc58-f1ad-4059-8f57-eafe846bbc0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13a1ba49-64b4-4c58-a004-6bc8e1ee33c2",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74cb34f6-61a4-48ac-a150-fb16b9677f28",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4987ec0e-0d06-4ae7-b272-4f1c2bc4d580"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d8cdb92-4ab6-43b0-a3b6-1514720fee7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57aaa0a6-5592-4fda-8149-bfd34e5165ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0523da0a-9b9b-4652-90a8-efdb4d7904ac",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2ced0a8-fe2c-4ede-9c47-358530142eb2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "87d5fded-76c0-4a6e-8de9-cd5f3b2afe07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fd84f4a-7e35-47f1-bbb1-d54d7759a45f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f57f327-56ab-4c34-a513-72007a00aafc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7ee86a0-f1ee-4727-a737-2219f472e109",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7c86705-b0f9-49fd-a7c9-becbb4637386",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "59351876-2b34-4b48-bca7-d92f786732f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "608c9bcd-5ea5-4164-9a10-2127fee1f396",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fe67a08-4e95-4ed2-ad35-4479e1de202f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fdbfa4f-8b6f-4058-b701-bcf276ca2d68",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dce0b9e7-9784-4ae3-bad2-7f2f00b0bc63",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e82d3bcd-8dd8-4c5f-9f40-8d3d433e8784"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b638a65-a7ae-4027-ae7e-b72c24eb2e66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b64f84a-747d-4c38-b7d4-1c16747b8dcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46cf3c5b-c4ae-4ad3-bcf7-d358b107dba2",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a75726e0-dd98-4cee-a3c5-0b4490f315cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "26263208-a3e1-4f6d-aa37-e162015cb06f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e38a3b07-4ef9-4d15-9edd-fa4dbb4f99f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e0a7889-d64f-4178-88e3-c58bc1da6310"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5489ce59-f67f-424b-8c65-962a4926dee0",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d22d50f-6b86-42f2-abde-a692a4e9cc3b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "21296811-e986-49e3-8c1c-b8aad3433ce5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fa7e3e8-fe96-4459-8cde-2ce5d2e4d510",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bf42909-9b5b-414c-9e67-e84343d187d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c105fde-fade-4e30-b5e0-d05114ccb24b",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1c85225-f4ec-4f0a-8c52-b8b3699d38f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e156ba2-ae62-430f-abdd-c77c88058846"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "efe86856-d78a-458a-8acc-3c1e7c10b61a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee4642f2-d05e-49c4-8bed-af341f631ac8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81ac1096-fad7-4ac3-aab3-51e82b1dc85c",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "080aae63-f2d7-45b3-9489-7b3925945c94",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b83c750-18d3-4680-a335-23d56f225bcf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4da88868-8eeb-4f14-8f37-576886c6516f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f3e01ff-dde6-417f-b653-d7da75cf4676"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d46901bc-df79-4012-8106-868f0d618630",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a899a06c-903b-47a3-9421-2e28d0163674",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8eedf6e6-bce2-4cc6-907e-304ff20a656b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54f68f75-6da9-47c6-9430-80ad146b866d",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8323911d-adbb-4929-b0ab-ff40a95553d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c8deec8-db3f-427a-99ba-c351e44de9e5",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1addc839-2e0b-4503-a5d8-acea59dabd67",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b4608dce-c53f-46b3-b291-e5c11a070b4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3534053-f4ce-4220-9ebe-29fa76702127",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e4b424f-ad82-4796-91ef-5e42bb270929"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e96200f8-2be6-40b3-8342-d4ff968c5188",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a9d88e31-4831-47ae-ac15-4d1ff5cc0398"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "80bab7a7-ee98-4a74-b597-fdb53079ca03",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0ee5315b-dc5e-48ed-8812-d20d1fe8f176"
                    }
                  }
                ]
              },
              {
                "id": "21925e4b-f240-4bfe-8765-8804587a4305",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2b340023-5cb4-4dad-9853-1c808a94de12",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "092cd59d-6e71-44b5-999e-d8c872d3e750",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "20cdb110-2627-41d7-acd0-9740a098e41d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9ef8b53-2188-490c-a0fd-d0cbf68741a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "39cd200e-621a-47dd-b509-fef32406f894"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "85f2e753-10c0-4946-90e0-cb8e6094dcc2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "477a8a21-91b6-4479-8c0c-953f021b0f48"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2bb1c4b9-e25e-438d-82af-2889773aa781",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2b7eac53-c7e8-47ee-9dd7-8432d18973ee"
                    }
                  }
                ]
              },
              {
                "id": "21f08e7b-5c82-4000-8020-36a8ea903de4",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "d2707643-34fc-48e8-9a2b-4d0ec7ae0874",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55e0468b-dd15-4790-b885-47bcd03c5f33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "5bfbe624-acb1-4bf3-8c3e-97de05efe64d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b441b52-504b-4d55-9924-adc78a6118b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6c2100e-7108-4dc6-8bc5-b21a6ef11209"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "e9dcb225-5314-4d0d-a023-0ea69d575afd",
            "name": "Positive Testing",
            "item": [
              {
                "id": "501c9088-58cf-47e4-a7e3-09f4659ec25a",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fa2b0e34-357d-4f55-aaed-18b017a1229f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "8c8fc781-35ac-47c9-a78c-1810fc2a979f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "77849f82-8c3c-40fe-a9e0-3578d1aec490",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a520f790-3610-4f20-86a2-49837284d360"
                    }
                  }
                ]
              },
              {
                "id": "5c270be0-50c0-42a1-b6d1-a43ea13d3b6b",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "75962cd5-e9f4-4f3d-b1b8-d441dc571490",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "927897ff-e8bf-49e4-a47e-8e8336e9a3ad"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "38abf9bf-6455-465b-8766-9b48e4eea34b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "76e114e8-d920-42ce-b7a0-51f2868deae8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "96dbf701-0816-44ac-ae06-ccafa7beea8d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "68561bf5-3235-444a-b422-550c6a3e34b0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "084fa4c5-6d4d-4211-be72-44fcd45e00ad",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3c89ed66-be2d-440e-b482-6eee0ad50d67"
            }
          }
        ]
      },
      {
        "id": "c0d1cc7a-ac2f-494b-aa42-94e09fbf2201",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "7c149510-68bf-4dda-b6b1-f99153dc481d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c2514a25-7006-4322-bddf-a7234fd6114e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "73ce23eb-7e56-4e91-a29b-2b475f7a39ce",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af76e104-0718-4b48-b855-837a2bfa1407",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "0d8da2a4-b9c8-4366-bbe8-1173926f88a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5d47c0d-a9c1-45c6-aaae-5d48362d4fd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "312bb24b-8a65-4934-aea8-07f8e2e01b4b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cca86952-adcd-4a2b-bf84-01f967af8fa6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "91d36386-2ec9-4fb7-ab89-186e7110ef13"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1a06f8de-14a3-4964-8178-a619460e030d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ae970ef5-5377-4bdb-ab44-317061dee596"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "640f9343-9e66-4aec-b8aa-351e48e8dfcc",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "d320f5d5-a857-4885-b839-5797adbb4227"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a5d42a21-dcc7-4101-b3db-6ed78518efed",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cc0f0faf-efd9-4698-a285-e51cf931c2da"
            }
          }
        ]
      },
      {
        "id": "376feda1-9379-4152-a390-a078b662a936",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "f73c3670-4673-4ba1-aae4-192d9b0eefa6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0b74541c-93b6-4c4a-85d1-798b3a7da978",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d55ae336-26ed-4d8c-b610-3a25d3ec2092",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "732bfadc-8f7a-4b81-a715-a93f10f72fd2",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6d6edfb7-d0ad-4227-8fa2-50f11fe0ecfa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13f99b58-4fde-48c0-8a63-d3b07cebbfa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "69fc0451-1dcf-486e-923f-97370ed3678a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c36aa43a-37d1-44cf-8760-574e5675ab9a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e658ce73-88db-45ae-af59-5a955a245801"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5b99c61f-868f-4e5e-bed0-0a43ce6681a8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "da73138c-c6d3-4d62-87df-c9e2b15f865e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "90546662-8147-42aa-bf60-80fdbfdc5323",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "cebd1860-96e5-41d8-b3f1-6083d2238b61"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "82610cd4-65a5-4544-a038-fc7bf0fc6494",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f1c38951-b202-4066-a5b5-832cabf1bb33"
            }
          }
        ]
      },
      {
        "id": "9d9bac68-52e5-4388-b98d-8bebad0452f8",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "b49b61eb-7164-4a6c-a8ce-089f5d89f211",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3980012c-dd2d-4aa3-b024-a1e3ef36f660",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9d8671e1-60b8-43b2-a8c8-dc30cd60c328",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70320f8d-fe9e-49bf-b371-e16ef6efdf7e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f7c9eb8b-340b-4f32-81ee-4753e0478a43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e713000-2e86-4395-9c50-aff99037ecaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "af625e2f-52dd-423a-904c-2a6c37ac3110"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6fadf855-24d1-4564-af70-986838c940f9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ca78b330-7d21-4416-8fc6-3b1a10ee4c12"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "be685758-6158-4046-9043-1812129e78fb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cb98349f-0cba-4edc-9cf2-f1ab281876e2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b25adf6b-5eb5-469a-851b-d1ab1b8d611f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "85e59270-4dd9-4fa4-bf32-49a2feda6924"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "400232b9-eb9e-4754-b629-e47523dc2d7e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2dce01eb-d67d-4d81-9588-537b8163d157"
            }
          }
        ]
      },
      {
        "id": "ddc9f00a-4e09-40f4-bfe9-a99b8597fa1e",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2dbdf186-3d79-4c65-99fe-566d475f4bee",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "703470b4-5182-4ecf-9705-8690efbe1247",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "58cf79ff-f85d-47e1-b0b9-ca5e63465631",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "db435669-5d01-4722-9563-2915da88341e",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0caa454f-7b25-4181-ba3f-9ea55d59b625",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 37
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 159.58730158730168,
      "responseMin": 21,
      "responseMax": 10167,
      "responseSd": 746.018466193862,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1727829913753,
      "completed": 1727829962428
    },
    "executions": [
      {
        "id": "750e6fa5-3089-4d90-bf2a-7e81afe3c736",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "3366db5d-656e-437f-8164-c33179781026",
          "httpRequestId": "76863f25-61a9-44d3-a798-78f6eae852c9"
        },
        "item": {
          "id": "750e6fa5-3089-4d90-bf2a-7e81afe3c736",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "450cfb0c-0edd-40df-ad54-a0679cd46e7c",
          "status": "OK",
          "code": 200,
          "responseTime": 66,
          "responseSize": 0
        }
      },
      {
        "id": "b53d663e-0305-4d02-852a-28062c134d3f",
        "cursor": {
          "ref": "914865ca-124d-4f4e-b889-217fe8765fe6",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "cb4a6806-3952-4390-a88f-db4f46c2b960"
        },
        "item": {
          "id": "b53d663e-0305-4d02-852a-28062c134d3f",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "31b73152-3945-4c52-83a0-14269730f72d",
          "status": "OK",
          "code": 200,
          "responseTime": 21,
          "responseSize": 0
        }
      },
      {
        "id": "d938e5f6-da7e-4d65-8532-898623e52450",
        "cursor": {
          "ref": "d30ae578-2418-4dcd-afa7-88b2aaacc528",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "343f2358-e448-4b9a-bdb0-aef7147ec349"
        },
        "item": {
          "id": "d938e5f6-da7e-4d65-8532-898623e52450",
          "name": "did_json"
        },
        "response": {
          "id": "d5603cb0-c1f6-4bd8-9845-74093d2a6251",
          "status": "OK",
          "code": 200,
          "responseTime": 496,
          "responseSize": 3607
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d938e72a-b2e2-4a6d-ad58-c958552b1f28",
        "cursor": {
          "ref": "4b0b2099-80e2-4327-af8e-5207a7555252",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "c882a47f-93c7-4b21-8abb-485614df9722"
        },
        "item": {
          "id": "d938e72a-b2e2-4a6d-ad58-c958552b1f28",
          "name": "did:invalid"
        },
        "response": {
          "id": "68623ddd-0805-4179-9b48-f951d23ccf71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 486,
          "responseSize": 89
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d938e72a-b2e2-4a6d-ad58-c958552b1f28",
        "cursor": {
          "ref": "4b0b2099-80e2-4327-af8e-5207a7555252",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "c882a47f-93c7-4b21-8abb-485614df9722"
        },
        "item": {
          "id": "d938e72a-b2e2-4a6d-ad58-c958552b1f28",
          "name": "did:invalid"
        },
        "response": {
          "id": "68623ddd-0805-4179-9b48-f951d23ccf71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 486,
          "responseSize": 89
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72bddf77-b16c-443a-ae47-5b4af1523da5",
        "cursor": {
          "ref": "79c0b8cd-ba15-4a5f-ad68-e7135a2ae2c4",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "b9ab544f-19f0-4d3d-94ee-93a305e04d0b"
        },
        "item": {
          "id": "72bddf77-b16c-443a-ae47-5b4af1523da5",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "c5a021b4-9b80-46e9-89ef-3dca190522b9",
          "status": "Not Found",
          "code": 404,
          "responseTime": 81,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7ce9a27-2ea4-494f-b029-32e5c4e2dad1",
        "cursor": {
          "ref": "c10a82da-4b69-4460-8b08-b0dc9233d95c",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "c129f789-8bca-4968-8b65-a47a392a0888"
        },
        "item": {
          "id": "b7ce9a27-2ea4-494f-b029-32e5c4e2dad1",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "6f22bbc3-3619-4292-be60-2bf95566590d",
          "status": "Not Found",
          "code": 404,
          "responseTime": 70,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2001d77-0b4a-4418-95db-371f9f974f9c",
        "cursor": {
          "ref": "2670fce5-adc5-4f0a-97f1-5273140b5056",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "b69db33f-fa90-4b63-961e-fee20786d773"
        },
        "item": {
          "id": "b2001d77-0b4a-4418-95db-371f9f974f9c",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "3be73bd7-3b41-4a12-8288-fb273693b003",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 56,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9662ebe-9cc9-4951-8aa4-e0d7fc08d56a",
        "cursor": {
          "ref": "6bd6edda-afbc-46e3-9106-2e6c9cf04e7c",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "c3ca1031-faf8-4bf3-a546-ec6e89b118db"
        },
        "item": {
          "id": "f9662ebe-9cc9-4951-8aa4-e0d7fc08d56a",
          "name": "identifiers"
        },
        "response": {
          "id": "67dbbbe9-6e3a-4811-bc0b-303736054370",
          "status": "OK",
          "code": 200,
          "responseTime": 70,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f128787-046c-4997-add1-1c542a466ecf",
        "cursor": {
          "ref": "d558b775-5cec-43d1-82a8-d4866f8f5754",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "d42c20b0-ca3d-4cbf-bbd7-a6f89a0487fd"
        },
        "item": {
          "id": "2f128787-046c-4997-add1-1c542a466ecf",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "860e2f52-cb17-4e79-b4b7-cb2ff4ed8741",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa36a342-319d-4299-959f-dfd55496a8f3",
        "cursor": {
          "ref": "15b3e9c3-957f-45c0-926f-46d0bcd725ce",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "16931f2b-4ae0-4d77-80d2-3e0b51182897"
        },
        "item": {
          "id": "fa36a342-319d-4299-959f-dfd55496a8f3",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "53b48f29-ceed-4823-ba38-feeae311bb33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a25e9aeb-40c4-45c1-8fc2-aaa5df69797e",
        "cursor": {
          "ref": "ad769b4f-834f-4ea4-8897-1690df10f7ef",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "91040127-380d-4034-9b2a-98cb682ce7bb"
        },
        "item": {
          "id": "a25e9aeb-40c4-45c1-8fc2-aaa5df69797e",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "586e0fbf-c5fd-4b52-88ad-2c872752dc5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05b7f04e-cf89-4614-ac44-d0e21a3479f4",
        "cursor": {
          "ref": "7c54a739-86c6-4254-8686-6bb3e6f6fc40",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "597f05d5-9b0d-408c-8ea5-a1c87d4a26a9"
        },
        "item": {
          "id": "05b7f04e-cf89-4614-ac44-d0e21a3479f4",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "3749113f-7027-4a63-bb0b-18057b536b18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d37d319b-cfa3-4d51-92f4-d9cf0d734277",
        "cursor": {
          "ref": "3db6005f-66a4-404e-87c9-728553d09dc1",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "77582e4b-853d-482f-8f7b-d6fcfe88ab56"
        },
        "item": {
          "id": "d37d319b-cfa3-4d51-92f4-d9cf0d734277",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "9ab15565-5376-4b12-86b7-7d8b0f530ba3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99c84b5d-9cfe-4b4f-9959-6316431bc633",
        "cursor": {
          "ref": "3f221235-3ee2-4bf5-a447-63521c15752b",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "cfb5314e-a4b7-4426-a161-350df571aa17"
        },
        "item": {
          "id": "99c84b5d-9cfe-4b4f-9959-6316431bc633",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "0adcf8a5-3743-4c34-be46-35016bc975df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 154,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6395cb39-6eb9-4286-948c-8ad3bff4b1e1",
        "cursor": {
          "ref": "050d3c2c-717f-403f-a4b1-d83f01995e0e",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "25dc85b8-426f-41c3-b473-4748e9d9d8c2"
        },
        "item": {
          "id": "6395cb39-6eb9-4286-948c-8ad3bff4b1e1",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "63d3fad8-2c35-45a3-bc90-ee5aaee77643",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "531d056c-fffd-4d6e-9792-0e065a36ce21",
        "cursor": {
          "ref": "e364183c-92c2-4183-996e-7096161ad178",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "1d592eb6-dbe6-40f7-bf84-d2512ed75795"
        },
        "item": {
          "id": "531d056c-fffd-4d6e-9792-0e065a36ce21",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "71833243-e451-4c3f-93cc-988b9293a326",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7120a88a-77f9-40e0-a8e8-3024eb55d9ae",
        "cursor": {
          "ref": "6f97c0e9-a6e6-4bcc-82f2-e20f099942c1",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "a1c92071-b778-4079-b5cf-908c42c06ced"
        },
        "item": {
          "id": "7120a88a-77f9-40e0-a8e8-3024eb55d9ae",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "08f46166-9b9b-4247-b193-9239909571ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95e5ab37-5c5a-4f31-abd5-60a1d3da5d47",
        "cursor": {
          "ref": "f3e09c5d-5bbd-4f77-8da1-cb7194709831",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "5a858007-dfa3-4146-a350-632e15a86d97"
        },
        "item": {
          "id": "95e5ab37-5c5a-4f31-abd5-60a1d3da5d47",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "56ca1483-b16b-457c-ae4c-20ff8b5e45ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4695f94-0160-4849-b9eb-bd77c178516a",
        "cursor": {
          "ref": "b6eedca7-d2b8-4cc4-9ffd-78b0e7128678",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "39e14548-5846-43e4-8299-a26979e6a482"
        },
        "item": {
          "id": "a4695f94-0160-4849-b9eb-bd77c178516a",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "87740e3e-da34-4025-8087-c7488d2b7e2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc239de0-419c-4ae1-90a8-05e047261481",
        "cursor": {
          "ref": "31971ce1-5e34-4347-8ec5-4c83850b1384",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "44a7ae62-4431-438f-b5ec-90f38b30931b"
        },
        "item": {
          "id": "dc239de0-419c-4ae1-90a8-05e047261481",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "43e85511-0b4b-4ae5-8394-6d7029eaab2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 100,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5391b8c7-7d96-40ba-bb6e-2259e29eaea6",
        "cursor": {
          "ref": "6b07db38-c514-4e1a-a714-8958eb59c8d4",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "70918432-cd0a-4cf0-b2a7-9e6941551b13"
        },
        "item": {
          "id": "5391b8c7-7d96-40ba-bb6e-2259e29eaea6",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "77346ed8-1e3a-4bd3-a741-06164a7f5643",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9535bbe-5dfd-42bf-ba80-6641c28ee87d",
        "cursor": {
          "ref": "d2b03f9a-2d8e-4c78-8eab-69c0293030a2",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "11b73845-db49-42bf-a323-95c658b2f6b6"
        },
        "item": {
          "id": "d9535bbe-5dfd-42bf-ba80-6641c28ee87d",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "87a5cfb8-053a-4192-8275-f2f690326754",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b75aa21-5f1b-4f39-8ccb-aa3b6ecc6f81",
        "cursor": {
          "ref": "8f5440e6-4e33-4740-a8e7-4fbc50e88827",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "3856f21b-d4c5-4072-afc1-f667309e630f"
        },
        "item": {
          "id": "4b75aa21-5f1b-4f39-8ccb-aa3b6ecc6f81",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "7a008b64-7c15-46a0-92e6-3d29e7498dce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cde15ca4-f8e5-489b-bf3e-698971b604b9",
        "cursor": {
          "ref": "1bbb9428-de7e-46e8-a90b-3bbfccb13eec",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "fef1051c-52c3-44d4-9517-63d747246bda"
        },
        "item": {
          "id": "cde15ca4-f8e5-489b-bf3e-698971b604b9",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "bf8a91bf-c9aa-48e9-9055-4c13cad5cbbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc8dd91e-0acb-4f40-9b08-9581c3fe8a3e",
        "cursor": {
          "ref": "766e3495-6bed-4e8e-9c24-f04bc5abf336",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "a21c1534-05e7-4cba-b8a9-4d3fe262c914"
        },
        "item": {
          "id": "cc8dd91e-0acb-4f40-9b08-9581c3fe8a3e",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "aa9defb6-65d8-483c-8e54-91f85090c3fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edc9d4c5-d51c-4c76-9dc4-84c923ce324b",
        "cursor": {
          "ref": "2e9155f2-f39b-4aa1-9c52-67fa9bc656b2",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "0fe5b6a4-53e5-4999-a242-8d60b43093fb"
        },
        "item": {
          "id": "edc9d4c5-d51c-4c76-9dc4-84c923ce324b",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "f371ca48-315a-44aa-9610-b0dd973f5154",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea917c43-c71e-43a8-b747-73bf2e2ded32",
        "cursor": {
          "ref": "c20c3a86-0954-44ec-9218-4d65333f005b",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "ddf63e64-774e-409f-b85a-5e81b680e34e"
        },
        "item": {
          "id": "ea917c43-c71e-43a8-b747-73bf2e2ded32",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "5107336c-4f66-4567-a78b-4ab20c2ba7de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4343c63-d89f-4716-8098-7edb884d863d",
        "cursor": {
          "ref": "ad1c8d9b-ce4b-4b97-8038-e752a273bf25",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "9323f9bb-91cb-4b4f-b55d-892196a36c71"
        },
        "item": {
          "id": "c4343c63-d89f-4716-8098-7edb884d863d",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "707f28c2-b811-4723-9346-4ccbfafca6b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71a55ece-fa1a-4d30-b59e-0d128a0779dd",
        "cursor": {
          "ref": "f3a7a8bf-b155-4962-be50-7d12a5f1380b",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "b3d25bd8-84c9-43f8-96e5-86747806acbe"
        },
        "item": {
          "id": "71a55ece-fa1a-4d30-b59e-0d128a0779dd",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "a3ceb31a-f2f8-4878-9e1e-197b997aa298",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac0a8d6e-e450-409c-9f09-18fa10d6bb78",
        "cursor": {
          "ref": "717b2b1e-2463-41c2-b1bb-80f991e02483",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "544e3b07-1fa9-4219-a8ce-5d385afa29e1"
        },
        "item": {
          "id": "ac0a8d6e-e450-409c-9f09-18fa10d6bb78",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "53f06a4c-a24f-4001-9018-dfd2ae802763",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75ce50d0-985b-4849-849b-051eb3477535",
        "cursor": {
          "ref": "431440ee-299f-4771-8b07-2ab0d6e846d5",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "e94a8104-d744-4ceb-8077-ca48a033c4a6"
        },
        "item": {
          "id": "75ce50d0-985b-4849-849b-051eb3477535",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "1545dcd4-39a7-4daa-83a4-4a75d0be66b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "905e4626-ff67-4259-9cfc-a6ada14787e7",
        "cursor": {
          "ref": "cebc0455-6778-4950-bbf8-1645edbd51c2",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "8d4c1013-1b44-4e96-b238-63981a0c6d66"
        },
        "item": {
          "id": "905e4626-ff67-4259-9cfc-a6ada14787e7",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "622046cf-5c17-4305-addc-d9c97fffd6af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8af27c69-839d-438d-9e40-48aa9b7eefef",
        "cursor": {
          "ref": "6ebb78ac-3e02-4f07-8d83-b9da2425f61d",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "edab58c5-9a70-4f72-82ea-06425c5a21cf"
        },
        "item": {
          "id": "8af27c69-839d-438d-9e40-48aa9b7eefef",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "3c78f031-efbc-4420-b683-f88bee3f936d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0b664c8-28cf-459d-827c-59e368ee1d7b",
        "cursor": {
          "ref": "8e2ada43-8388-4cd3-b073-ce757cb0a86f",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "67ec14f3-dcab-4f7a-93b5-40a02347d57b"
        },
        "item": {
          "id": "d0b664c8-28cf-459d-827c-59e368ee1d7b",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "597661f4-56f2-4870-8999-83de87d07246",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54705f78-344f-4ca9-aef3-6c9ff6a5fb1c",
        "cursor": {
          "ref": "bd8462d4-e0d9-4519-a08f-2b37e9ad35d4",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "a9392684-a00b-4664-b86f-d152c8298934"
        },
        "item": {
          "id": "54705f78-344f-4ca9-aef3-6c9ff6a5fb1c",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "e3d91e93-daea-439d-a86c-9ce571e8db2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3db2bda-e64c-421a-8fc5-85fe4ec7cdab",
        "cursor": {
          "ref": "48f303a3-23dc-4851-b406-8fac8b46e738",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "81548450-2fb0-4cb6-8257-58e9fd562c9b"
        },
        "item": {
          "id": "e3db2bda-e64c-421a-8fc5-85fe4ec7cdab",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "61cdb91a-bf39-4bd6-8398-8a71f26e6578",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2937456-d26e-41e0-ad29-346187e3c07e",
        "cursor": {
          "ref": "597f6b8d-bce1-4ca4-a62f-4bfc84e1b559",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "60425af3-a5e6-491c-877d-7f7e6cfa34a5"
        },
        "item": {
          "id": "f2937456-d26e-41e0-ad29-346187e3c07e",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "1a11c376-7804-4c57-8028-6959eddfd525",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c682cc4-d808-483c-baaa-04bd09ae2c41",
        "cursor": {
          "ref": "e1335d43-03fe-4722-abe5-8c9a9e9699c9",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "0854fa4d-445b-40f4-a897-ad2ba52c1319"
        },
        "item": {
          "id": "9c682cc4-d808-483c-baaa-04bd09ae2c41",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "594b0a6d-ca6a-4b2c-8e2d-66c77d011d95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5c27f4f-7b37-45b8-8a75-061bd9daf00a",
        "cursor": {
          "ref": "5d8b095b-328d-40f1-8a79-b99d934fb3df",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "be221cad-1fb5-4a06-9c42-5bb0fcae81a8"
        },
        "item": {
          "id": "f5c27f4f-7b37-45b8-8a75-061bd9daf00a",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "fe8d2a05-2d5b-47c6-91d2-e50d4d0ef8d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53fa3af5-fcd1-428c-bbde-e46a67291242",
        "cursor": {
          "ref": "7edc8c8a-6af7-4c04-8914-652ba097b604",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "f1c10293-e1a0-458e-b000-aa709123c580"
        },
        "item": {
          "id": "53fa3af5-fcd1-428c-bbde-e46a67291242",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "ab4aed59-3b42-4c0b-8799-3b5dfb4d60dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ae35e76-db7d-4b0d-897f-ca9ccf768aec",
        "cursor": {
          "ref": "5211e522-cc18-437d-be04-59738fc5940d",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "194448b3-075c-41a0-84d3-235738d7a94c"
        },
        "item": {
          "id": "7ae35e76-db7d-4b0d-897f-ca9ccf768aec",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "121c403f-15c9-456e-96b6-43eb9fbe1418",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 221,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5306fd6c-9538-4fa2-b7ee-37b15b797880",
        "cursor": {
          "ref": "05d7dd0b-bb3b-489a-b1c3-02de73afcf1d",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "63d16fed-5596-4da1-8bcf-cbff73510c69"
        },
        "item": {
          "id": "5306fd6c-9538-4fa2-b7ee-37b15b797880",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "9dde9d8e-1c53-4be1-a2c2-c923c866034b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 147,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad10f8b7-34af-4ee0-8402-b0ff64586145",
        "cursor": {
          "ref": "91e8cbf0-d155-44fe-9e6c-d7dd005293e5",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "4d2ce788-aff2-4cf2-8ec6-b5fc1791ed4e"
        },
        "item": {
          "id": "ad10f8b7-34af-4ee0-8402-b0ff64586145",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "9d9cb3f6-0e97-46b5-b281-52fb872eafec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d01d1a3-ca7b-42d8-a149-e0b5aa8483b9",
        "cursor": {
          "ref": "76b4e3f6-e993-4075-8203-51bf7966d1ee",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "4a4cd28c-eeda-4874-a503-b9921d22d324"
        },
        "item": {
          "id": "8d01d1a3-ca7b-42d8-a149-e0b5aa8483b9",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "6b5c2b61-3608-4958-a9ca-dc736111e08e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcadf78b-4d1b-4cdc-beb6-ccd394e1f9d0",
        "cursor": {
          "ref": "caed04c0-95da-43e8-8ea1-8fc634f48ba6",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "8c2e7c0e-0b60-4592-b468-2ba6483e5c6f"
        },
        "item": {
          "id": "dcadf78b-4d1b-4cdc-beb6-ccd394e1f9d0",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "26e53e13-cbbe-4d00-8862-b4f7d22e33e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15739ade-2f96-44e2-93aa-13046c817fd6",
        "cursor": {
          "ref": "e16a7996-ecb1-4b51-9204-efb579969ac7",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "a074c188-3e70-4826-9d5f-50f98ea6e1ea"
        },
        "item": {
          "id": "15739ade-2f96-44e2-93aa-13046c817fd6",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "7c5b941b-300f-4e49-b29e-93af32731404",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d443589f-6d37-484d-8f9c-b2342b9be963",
        "cursor": {
          "ref": "a0b93c1c-dca1-44c4-aaa8-18508177a214",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "f4411969-e273-4d39-8d4c-f13076e50c5f"
        },
        "item": {
          "id": "d443589f-6d37-484d-8f9c-b2342b9be963",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "030523c8-0e5c-4cba-b4e0-4dc9f3551950",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b520b7a-1df8-4d1c-8dae-facb1222e0c3",
        "cursor": {
          "ref": "8d69749c-7bf1-4f28-87f1-9f3d9fa87e20",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "c346a889-c9a4-4dc9-a843-b53a526ebbfe"
        },
        "item": {
          "id": "9b520b7a-1df8-4d1c-8dae-facb1222e0c3",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "a1307853-41ff-4379-8ec2-2d33c3f39faf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc1ad661-f012-43b7-9ede-946b487d430f",
        "cursor": {
          "ref": "d679de61-dcf0-434a-8a71-23210ec1bdee",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "6b28fa4c-6665-40b7-ba6c-741d0d77ded3"
        },
        "item": {
          "id": "cc1ad661-f012-43b7-9ede-946b487d430f",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "14d35753-6359-4083-b119-51b90471419b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 142,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dcefa76-070f-424a-90f3-24a42921173e",
        "cursor": {
          "ref": "8f010adb-ada2-4abc-8f43-670ed9e1aad8",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "731af894-2259-441e-bbf4-b9d7bd413382"
        },
        "item": {
          "id": "6dcefa76-070f-424a-90f3-24a42921173e",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "1e115400-fa81-4bdb-8990-33ba8e8ad75c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db2ee690-6f0f-4a2d-8366-a206cdf4f345",
        "cursor": {
          "ref": "50a1a0bb-2508-4736-99d1-dedf69d017c5",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "1b46b284-6381-47ec-a1c2-e2e39b6cc4e9"
        },
        "item": {
          "id": "db2ee690-6f0f-4a2d-8366-a206cdf4f345",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "8cc1c390-ae94-48bd-80c3-f1c25239a085",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc5d7611-b857-47f8-aa92-77ef03e4eedd",
        "cursor": {
          "ref": "55a7a1f0-3182-4d8f-a682-03f89948c768",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "566f3c26-3045-4fbe-afd7-8b32bb425283"
        },
        "item": {
          "id": "dc5d7611-b857-47f8-aa92-77ef03e4eedd",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "6797c4b2-f1d6-40b0-9d6f-e85dbf677e13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f25766f-0990-431a-89f9-2ff56e87aaab",
        "cursor": {
          "ref": "bb2e65b4-aa10-4f45-9255-7ebd0fb02c7a",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "c1d95424-3462-4da5-89bb-dcecc8aae07b"
        },
        "item": {
          "id": "2f25766f-0990-431a-89f9-2ff56e87aaab",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "db31bf19-f06f-40af-a6e6-ab5d7c71faeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dafab851-1153-4bc3-aa73-cc6febc657b4",
        "cursor": {
          "ref": "837b4739-f356-4022-98fd-850d86a44cf2",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "d5699f54-0a1c-49ee-86ce-c0b5bb8ea6b2"
        },
        "item": {
          "id": "dafab851-1153-4bc3-aa73-cc6febc657b4",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "b147be4b-5ec3-4476-893d-0722958b9b82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f29c22aa-f897-4cef-acef-0201ed74eb11",
        "cursor": {
          "ref": "466a2423-a0fe-4dc8-b101-6243c44c8a87",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "ad7dbed1-03c2-4429-92a7-1cfa46bea5a7"
        },
        "item": {
          "id": "f29c22aa-f897-4cef-acef-0201ed74eb11",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "3031add5-087b-41da-96ad-21d49b7cadf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f14d131-3b5b-4186-8c8b-d9328d75ff2c",
        "cursor": {
          "ref": "f6e8ca72-0d42-4dc9-9325-4ac5e1087a32",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "dec4404b-08a0-4d20-b42d-579fda5fc66f"
        },
        "item": {
          "id": "8f14d131-3b5b-4186-8c8b-d9328d75ff2c",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "fd8c27a0-0cd6-4993-92dd-d817e8723753",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1047bdb9-5a22-431c-8a16-765bab4aca1a",
        "cursor": {
          "ref": "c192ecc3-ae3b-487a-b4eb-df78f87db8f9",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "c288c98e-93ff-4d54-8df6-a230fe3b4053"
        },
        "item": {
          "id": "1047bdb9-5a22-431c-8a16-765bab4aca1a",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "20a9f0b7-6c13-4601-a64f-8a9403c87614",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4967cb8-6ef1-4a46-8ec7-295ecfdc5574",
        "cursor": {
          "ref": "dfe0dd80-73d1-41fe-8933-200812abe038",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "aed654de-9bbd-4c89-9130-18c2a1bb16ea"
        },
        "item": {
          "id": "e4967cb8-6ef1-4a46-8ec7-295ecfdc5574",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "1b6c0aeb-5633-4f8e-be82-9d4eb35d6985",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4288e00-64de-43b5-a163-619cf34e4b9b",
        "cursor": {
          "ref": "f16a39d5-9b81-4588-96f3-c2634b7f2a62",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "04fa0d93-2b31-4e67-b3d0-f4d8ff52c44a"
        },
        "item": {
          "id": "d4288e00-64de-43b5-a163-619cf34e4b9b",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "8b2c4d54-5955-4184-b8cc-7aae794404ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9208f63e-5b8b-4a3b-b36f-4f95c9954b62",
        "cursor": {
          "ref": "81f68265-ea6c-4074-900d-6d51a9ae0d5c",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "0f22c997-bf43-44e1-81c8-bdf58108ac9a"
        },
        "item": {
          "id": "9208f63e-5b8b-4a3b-b36f-4f95c9954b62",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "cffe77d4-1825-44bb-a04c-bc9cf83ee52b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d38d1e4b-7b22-4135-86b9-3d0cc5f69d2e",
        "cursor": {
          "ref": "7745fbb9-f891-463b-9eef-c6e1c9477d8e",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "4fb23669-11f4-4042-afec-27c688d0ca87"
        },
        "item": {
          "id": "d38d1e4b-7b22-4135-86b9-3d0cc5f69d2e",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "560c13e6-6a6b-4bc9-a54b-caebbbf6fdf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b545b87-6bc5-402a-800e-7d7797318a3b",
        "cursor": {
          "ref": "0b2b9db1-d915-43bd-ae17-8abbbfe95c74",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "ba69ff20-3db7-4b99-bc21-f5f9b8b1c99c"
        },
        "item": {
          "id": "4b545b87-6bc5-402a-800e-7d7797318a3b",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "67fa97cd-398f-4694-87c8-4c204e7d3200",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be10e5f2-c0ad-4529-b92c-5c88e72bc4c2",
        "cursor": {
          "ref": "7496f660-d451-4ee5-910e-779f9dd2c423",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "e989680b-81f8-40a1-9548-ddc7511c0fd8"
        },
        "item": {
          "id": "be10e5f2-c0ad-4529-b92c-5c88e72bc4c2",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "0e6da204-d778-4af4-aa41-253269111fbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c391b321-773f-48da-af17-c92cc4b5535f",
        "cursor": {
          "ref": "c0da15f3-8f56-4068-9d68-e65d46357a79",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "b6086fcc-3b69-4e34-8908-d757a3b3fa08"
        },
        "item": {
          "id": "c391b321-773f-48da-af17-c92cc4b5535f",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "495b6871-b665-4b78-9b6e-afb1927678c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acb06744-39d9-4d41-a1ed-c601975c311a",
        "cursor": {
          "ref": "a34241f3-5c86-40e7-a677-997e5a5ff9a7",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "7d89f216-19fa-40e3-b889-b634faa2b2b4"
        },
        "item": {
          "id": "acb06744-39d9-4d41-a1ed-c601975c311a",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "8b1597e1-325f-48e0-a8d0-cc10e88bb75e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b7d8d0f-2672-423b-b99b-edf224e6ff7d",
        "cursor": {
          "ref": "39714488-2f28-46c6-8cd6-69229a4b6690",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "593ce47e-9d60-4c1a-bddb-79dfa6909d94"
        },
        "item": {
          "id": "1b7d8d0f-2672-423b-b99b-edf224e6ff7d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "2c4bd861-7887-4277-8a03-b14014e12a49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 102,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57675d85-bdd5-4bb6-af72-6d60ef5a7dcf",
        "cursor": {
          "ref": "7b6ca168-0388-4cd2-be10-c72031dbc968",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "37ac31f0-1ac1-42fc-b6e8-8c2925843276"
        },
        "item": {
          "id": "57675d85-bdd5-4bb6-af72-6d60ef5a7dcf",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "68ff03fa-d885-4cc7-8d7d-bbf0832976b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9b360b0-3be2-4fab-9731-f7c70a05ac1e",
        "cursor": {
          "ref": "c9c8e78f-e720-4c75-8ccf-d44e3d8b60b6",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "11b855c1-c02f-4d28-94a9-2d4f985b8da9"
        },
        "item": {
          "id": "f9b360b0-3be2-4fab-9731-f7c70a05ac1e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "c50e3e7f-17be-4bc5-9047-5d1557cd0206",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adfc6b47-08a7-4073-93ef-17a1479a8b74",
        "cursor": {
          "ref": "57f4497a-e44e-4121-94a7-26a360e3f5c7",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "e7e8b0b4-eff5-4e8d-b053-fe139d44b83d"
        },
        "item": {
          "id": "adfc6b47-08a7-4073-93ef-17a1479a8b74",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "6516775b-bf39-44e9-8a71-d6c566182a3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4ed876f-1131-4990-bb09-c202ac80bfa8",
        "cursor": {
          "ref": "9aaf3fc4-b33f-4a0f-abc1-448afa010c4b",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "6876bc3c-9a3c-49d1-9410-90aa2fe6cb44"
        },
        "item": {
          "id": "a4ed876f-1131-4990-bb09-c202ac80bfa8",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "5e4ff101-fab5-4196-9cc1-c5829f865119",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "064469cd-ce65-4d92-8db3-745812a58a77",
        "cursor": {
          "ref": "fd022dba-9214-49c0-bbbd-57188a35d32d",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "92c40ebb-50e0-4a0f-b43c-8882125ad837"
        },
        "item": {
          "id": "064469cd-ce65-4d92-8db3-745812a58a77",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "7c5f7341-4941-4fe9-aa92-4627b9338270",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16c0e200-49ed-45f9-a0ad-5016e4d2e3e5",
        "cursor": {
          "ref": "432fe6e0-2a65-429c-bda5-3afed8269b8c",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "0243c604-0c6b-4d9d-9984-eb723e9f5455"
        },
        "item": {
          "id": "16c0e200-49ed-45f9-a0ad-5016e4d2e3e5",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "0e488009-dd57-471f-9f6c-8eb542f08298",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ee18b41-a9ee-421b-b067-a5869efe4d3e",
        "cursor": {
          "ref": "ee7fe955-086a-4de7-b39b-b501142912d8",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "bf10e625-f593-4a99-be3e-000f8ffb204c"
        },
        "item": {
          "id": "6ee18b41-a9ee-421b-b067-a5869efe4d3e",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "cedc8219-b2bd-4838-bd27-d1973219227e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "048bbfe2-7500-4daa-821d-652726cef414",
        "cursor": {
          "ref": "50af0f4f-2681-4fa1-b913-3457bf8dd500",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "e4dfb1a1-5e8b-4b3b-861e-d786e8b8025e"
        },
        "item": {
          "id": "048bbfe2-7500-4daa-821d-652726cef414",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "24920882-fefb-4f22-8eb1-1c5678018b6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06e3fe1d-cc0e-48f1-9468-e54836257cf2",
        "cursor": {
          "ref": "661d36c1-00a4-40d4-bdf5-99dcee39c9ab",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "bdf48bfc-9bcb-49c2-b015-5d90f85a5a2d"
        },
        "item": {
          "id": "06e3fe1d-cc0e-48f1-9468-e54836257cf2",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "a4095972-afe0-45c1-8221-02cce39de2dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0fde5a0-ecb9-4aae-9aeb-4387f2d0451d",
        "cursor": {
          "ref": "96c71734-3add-428b-aae7-2454cc076913",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "7bf67540-b75a-4a3e-a2be-1bc41b71f632"
        },
        "item": {
          "id": "a0fde5a0-ecb9-4aae-9aeb-4387f2d0451d",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "a8cde5a0-5523-40ab-8bea-abd091cca7e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e25cd53a-c7d9-4087-8b93-a8c672c7f93b",
        "cursor": {
          "ref": "2ec1c972-3391-4dc6-b638-a422098d07fa",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "b4bfbb0a-a85d-4bd3-8114-f13e1ae4a477"
        },
        "item": {
          "id": "e25cd53a-c7d9-4087-8b93-a8c672c7f93b",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "7188a58c-b293-4356-871e-9450fb2804ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "585f0928-1e11-420b-9688-abee47791aa8",
        "cursor": {
          "ref": "e31baf2e-d17b-4a17-84f8-2339872e6392",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "979453e1-7faf-48a7-bf9a-7210549a3e20"
        },
        "item": {
          "id": "585f0928-1e11-420b-9688-abee47791aa8",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "5f54168b-3dc8-4b48-be83-f34534743e49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e217373a-4164-4dde-bba6-18616d501364",
        "cursor": {
          "ref": "6ba8ca05-313d-4683-9735-a9452546a40e",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "ce52f39c-0c70-4f4b-aa5a-8dc54c2c114d"
        },
        "item": {
          "id": "e217373a-4164-4dde-bba6-18616d501364",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "d8f21246-1ac5-4c6e-bdd1-d59b4c6468e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5eb9147f-fbf6-4ebc-92a7-8788cfa8a573",
        "cursor": {
          "ref": "0ec1d447-3eb2-4aeb-90cf-3ec75e4e00e2",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "a5363a47-c1b9-43e6-a6ae-b6a2721beee1"
        },
        "item": {
          "id": "5eb9147f-fbf6-4ebc-92a7-8788cfa8a573",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "c517a61b-5153-49f9-8e6c-c8f26ea936b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8cf5dc2-b364-4504-b5c6-93b8af1925c4",
        "cursor": {
          "ref": "16aa7cda-53f2-4964-9e17-76b79376aca6",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "41651a26-682d-415e-a0e9-d61051caf686"
        },
        "item": {
          "id": "c8cf5dc2-b364-4504-b5c6-93b8af1925c4",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "1b20d049-9a65-4289-9dba-ef3705c9cfc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26e3e96e-3d38-404c-a46d-e046c8947713",
        "cursor": {
          "ref": "d6097268-62e8-4f2f-a6d1-9de421a75f56",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "450c8988-7e07-42ea-a810-b41229f4102e"
        },
        "item": {
          "id": "26e3e96e-3d38-404c-a46d-e046c8947713",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "b10e40aa-f891-4ef3-93fe-8350c152502f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a60ff3ba-162b-4522-a3c6-9e04ef816252",
        "cursor": {
          "ref": "4c4a2fbf-0410-4d25-bfc2-df8583932562",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "e70c5e63-4cd1-41a9-a1a7-95f2a7e0bff2"
        },
        "item": {
          "id": "a60ff3ba-162b-4522-a3c6-9e04ef816252",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "3e92f4f0-cbb0-4605-babc-cc19d08b7b5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d413a96a-92a0-48f0-a3fb-d12afbeadaeb",
        "cursor": {
          "ref": "6e9bdb3b-efac-45e7-a218-8a8f37a978bc",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "8f914e81-8b56-4416-87f2-d57d2701b012"
        },
        "item": {
          "id": "d413a96a-92a0-48f0-a3fb-d12afbeadaeb",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "2632f3c1-a3eb-4e11-ab12-3aabe718e5ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bed55a4c-9dbe-4642-907a-62cfe0c84353",
        "cursor": {
          "ref": "5a5a2454-1611-4e9b-9d1a-a8409998dad9",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "824a3de6-b5cb-4d03-be24-86d0ac0db7f4"
        },
        "item": {
          "id": "bed55a4c-9dbe-4642-907a-62cfe0c84353",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "223d7ca1-5c3f-462f-b089-c76704363d87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8aecc135-83ae-46f3-9e03-873513629cec",
        "cursor": {
          "ref": "68386caa-7a5a-4cab-8f53-872051cc1a94",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "57e386d3-e088-418a-b16a-09815286e110"
        },
        "item": {
          "id": "8aecc135-83ae-46f3-9e03-873513629cec",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "9a6802ca-6b03-4ffe-9a8f-6dc3154ece03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90d1f014-715f-4c36-bd17-9111cad1609a",
        "cursor": {
          "ref": "f8ed8243-01db-4fbd-b8a8-9050d6390ed3",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "61cc38cc-6970-4dc4-b2bc-d0614111cbf6"
        },
        "item": {
          "id": "90d1f014-715f-4c36-bd17-9111cad1609a",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "c76b2c33-0cde-44cd-bdc1-0ffebbaf16f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9872ec0c-4b25-453c-9dfc-5e7780926dae",
        "cursor": {
          "ref": "6ece08a4-2f44-4404-8dde-e8218a027a9e",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "b13514ce-25c4-4085-bb7c-82f2ea0d0edd"
        },
        "item": {
          "id": "9872ec0c-4b25-453c-9dfc-5e7780926dae",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "87118ed9-466a-49f1-8f18-a6b06f88990c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4e6863d-a44e-47d8-af1e-474b402fc2b9",
        "cursor": {
          "ref": "58cce15c-ee7d-4c42-b186-6d56783478a2",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "aa8aa22d-389b-4f53-8660-ad3d9544b317"
        },
        "item": {
          "id": "b4e6863d-a44e-47d8-af1e-474b402fc2b9",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "a439be3c-d647-4492-b3a9-a893f7c9262b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f98a0e67-adb1-4b06-af77-c9e90b540f00",
        "cursor": {
          "ref": "ae908ac0-6344-450b-812c-ce348470e9a0",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "f5e8e8a2-2c74-49bc-ada6-9d32177078b0"
        },
        "item": {
          "id": "f98a0e67-adb1-4b06-af77-c9e90b540f00",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "21d8efc4-1569-4ddd-9b7c-a9de0f070f17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fde2f223-a88a-46cf-a7f6-c74d6d82d169",
        "cursor": {
          "ref": "405d7f69-104a-4cb7-9d80-7e976b4d5e4d",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "e32e5718-19c4-48a3-8760-bc23dd6f07e4"
        },
        "item": {
          "id": "fde2f223-a88a-46cf-a7f6-c74d6d82d169",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "495714ca-cb73-4a96-a3f2-022298e96cf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca2bf82c-bb7c-4b3d-84e8-28b9767de13a",
        "cursor": {
          "ref": "581a4ba6-9a1a-4920-98d3-6f480fedca09",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "d888c6ed-6cf4-4a0d-8d60-64dbb1287f09"
        },
        "item": {
          "id": "ca2bf82c-bb7c-4b3d-84e8-28b9767de13a",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "06e05b8e-5719-4ec9-b1cf-2890fe2215a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96ff13d3-224a-4bfe-b645-e7d6b6e09819",
        "cursor": {
          "ref": "cc99955e-1aaa-45b6-97da-e68e5aaa48f3",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "81351ecc-cbff-4ff3-a993-0c9c3178b33c"
        },
        "item": {
          "id": "96ff13d3-224a-4bfe-b645-e7d6b6e09819",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "5e529901-fc6c-48ec-90cc-b48ebc12953c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8ad78cf-08ee-4468-be9b-bfea06a8c330",
        "cursor": {
          "ref": "4b9623c7-406c-46a5-99e2-885fd11907a2",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "9473423e-c08f-4795-90ab-22ed327fe7e9"
        },
        "item": {
          "id": "f8ad78cf-08ee-4468-be9b-bfea06a8c330",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "08688ad4-f80c-43f2-a4ad-1a8692b2cd90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faec08ef-0ffa-45bf-9c7d-993fecde1e38",
        "cursor": {
          "ref": "8ef447e4-95b8-4a81-b672-ec6fb6defce0",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "006dfaeb-d9f5-43ef-b378-9c401906547b"
        },
        "item": {
          "id": "faec08ef-0ffa-45bf-9c7d-993fecde1e38",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "0ecac316-1374-4b98-aed8-d3fb23be8212",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb43e9f1-051c-44ef-b214-d861cdb0bab0",
        "cursor": {
          "ref": "0dd2e7f8-490a-42e2-9473-44db52cfbecc",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "b7b248ec-2de9-49af-8c64-afa61f70cbce"
        },
        "item": {
          "id": "cb43e9f1-051c-44ef-b214-d861cdb0bab0",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "76c398a2-398e-4c0e-8055-37ff1185cbab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e379ed3-0e7e-445b-8c6b-3cf204a2a9a4",
        "cursor": {
          "ref": "bdfd697e-57b9-4ce0-9f29-e5df80c2de3b",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "187b945a-3a20-4e31-8e2c-6925a8a173c8"
        },
        "item": {
          "id": "7e379ed3-0e7e-445b-8c6b-3cf204a2a9a4",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "98fb601a-7ca0-4942-aac0-edd0e10af892",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4255f87-17e5-47ef-8708-a6d447dac55f",
        "cursor": {
          "ref": "71a6fbff-da6b-42bc-a4d0-f09747f46b5f",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "602daf41-c65e-4b44-9208-24bd49a22c47"
        },
        "item": {
          "id": "a4255f87-17e5-47ef-8708-a6d447dac55f",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "555b2dc2-2071-4d57-be5f-4dbffddbc33b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea588d5a-4315-4887-8797-4438303b37fe",
        "cursor": {
          "ref": "a51fb766-0db4-4105-838b-33c468740312",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "94305883-edab-4bb0-8c37-e76dcc14a258"
        },
        "item": {
          "id": "ea588d5a-4315-4887-8797-4438303b37fe",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "91140945-8c3f-48a4-a095-8c01ce9a7b2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bd0c037-2e1a-4c2b-8685-ddc36fdbab5f",
        "cursor": {
          "ref": "f2dd373f-b595-4016-a854-c8f62157f9ad",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "39ea9eee-65d2-47e3-80ac-e6838fac6680"
        },
        "item": {
          "id": "6bd0c037-2e1a-4c2b-8685-ddc36fdbab5f",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "c06bcb2a-7121-4145-b724-c2c297258420",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a072d56a-b594-4601-98e5-d2a2751db693",
        "cursor": {
          "ref": "582e9aff-71ce-4c45-89ed-8765dc9d31a4",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "fa080bb5-f917-4e38-87d0-6a4e216ac8c7"
        },
        "item": {
          "id": "a072d56a-b594-4601-98e5-d2a2751db693",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "2e9ec974-c6fa-4215-9f0c-a8ca33f17637",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 56,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9833eb3f-d66e-4d6c-bbbf-bf54b6336876",
        "cursor": {
          "ref": "3b3f801f-a4e2-4d46-a223-b636986a06d4",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "8011471f-8247-4afa-a6dd-eca43d5ebf4f"
        },
        "item": {
          "id": "9833eb3f-d66e-4d6c-bbbf-bf54b6336876",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "910c54f0-3645-4dc3-8e98-fdafb24a3910",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "2b12a7b3-a9d5-4338-a42a-c50cae8103ef",
        "cursor": {
          "ref": "a8f0f8fd-d1c2-40ae-9623-22609da4e7e8",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "1fe87c37-223b-40a7-8cfa-967446957efa"
        },
        "item": {
          "id": "2b12a7b3-a9d5-4338-a42a-c50cae8103ef",
          "name": "credentials_issue"
        },
        "response": {
          "id": "440830cf-5f9f-46e7-a501-0f5dc745e795",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "356d7e83-0296-484f-9585-ec08511d0b97",
        "cursor": {
          "ref": "8b21079a-0da5-489d-a8f8-4bb98473c187",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "64d03888-f779-4bc9-979e-7dc2697151e4"
        },
        "item": {
          "id": "356d7e83-0296-484f-9585-ec08511d0b97",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "df497a3a-0e18-4b3f-ad0f-ef91fddc10c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "6f80f28e-7fda-4d8e-b7bd-5faa553dd0a6",
        "cursor": {
          "ref": "23327a32-275f-4b1a-a573-cea4828f9b3a",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "3f5f2732-b919-4d0b-9edf-b5a810bab5e8"
        },
        "item": {
          "id": "6f80f28e-7fda-4d8e-b7bd-5faa553dd0a6",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "f7900f52-47c7-48c7-a105-13bfc6147493",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "707350b4-9c9e-4726-a919-cc8cf1ea6b93",
        "cursor": {
          "ref": "226990f0-598e-4954-9c8c-854f3d29fe3c",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "2fd187d1-a42d-4cd5-a8ec-ad34a06891a0"
        },
        "item": {
          "id": "707350b4-9c9e-4726-a919-cc8cf1ea6b93",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "dd58affb-ba11-4a82-bb29-641a178c3609",
          "status": "Created",
          "code": 201,
          "responseTime": 10167,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "80abaa36-568f-45fc-a207-04a5a184edc6",
        "cursor": {
          "ref": "6665bca7-ef0b-4bac-8c2e-4ffdafd8f86d",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "d1dde7ae-d75d-40fa-b49b-fc4e8eea79e6"
        },
        "item": {
          "id": "80abaa36-568f-45fc-a207-04a5a184edc6",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "715bd0e7-4663-47bc-8649-7f87893c6584",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 328,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "2f2dcdc7-dd61-4745-901f-ab4e905347f6",
        "cursor": {
          "ref": "d55e6f34-da94-4093-941b-b4ca4eb00ea8",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "a4c28c85-ef46-46ef-97f8-9c0cb8031a94"
        },
        "item": {
          "id": "2f2dcdc7-dd61-4745-901f-ab4e905347f6",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "9dd29db4-6325-489a-a65c-340fb8e310ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "235a3435-7eb9-445a-bdce-aa3e17c25866",
        "cursor": {
          "ref": "61f95a21-9f32-4aae-91e2-afa47ced5770",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "6f51fd45-8819-43db-9129-11c544b27bde"
        },
        "item": {
          "id": "235a3435-7eb9-445a-bdce-aa3e17c25866",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "12fde529-61d4-4e59-94c9-292933a6ebd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 100,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72fe6998-48b3-48f5-875b-ed1c72f33d18",
        "cursor": {
          "ref": "274157f2-4777-4474-9939-24dc53898fa1",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "d4a5855c-c434-42c6-9a7c-028abc00c5c3"
        },
        "item": {
          "id": "72fe6998-48b3-48f5-875b-ed1c72f33d18",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "5a8ce36a-6477-4c10-91db-4da6858a02cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "646c5e16-00b6-4af0-a8fe-6935b6746d0d",
        "cursor": {
          "ref": "faceb77f-fb3d-4610-b4fd-4caddb5e9276",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "02b71ff7-6ade-41d7-ba66-80c1ef159e6b"
        },
        "item": {
          "id": "646c5e16-00b6-4af0-a8fe-6935b6746d0d",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "ca3a425d-c6ab-46e1-8b50-c8df32cdede7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 100,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "360b08cf-bc77-4ea2-a69c-5caf4ab329b9",
        "cursor": {
          "ref": "063f7065-570e-4cb6-b65f-fc46888ae0d3",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "bf2fd8a5-d6cd-40c2-be6b-0950f4258a75"
        },
        "item": {
          "id": "360b08cf-bc77-4ea2-a69c-5caf4ab329b9",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "f3257273-6ed1-4380-81ca-a6e087a748e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3c91787-75a0-4f28-8bfa-3739188b64d1",
        "cursor": {
          "ref": "ebafcb1d-b756-4a27-8800-acf2456a2aaa",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "04775e54-a207-4618-ab54-10647c5397e5"
        },
        "item": {
          "id": "d3c91787-75a0-4f28-8bfa-3739188b64d1",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "2ee17445-0090-4ff0-89c6-7fab07437a0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc8c8d02-9bfd-4679-8c55-226b414fa119",
        "cursor": {
          "ref": "241abcf5-66fb-4f30-9872-ed69117de78b",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "dc4a51cd-79b4-4494-861a-8dd2c5b61021"
        },
        "item": {
          "id": "bc8c8d02-9bfd-4679-8c55-226b414fa119",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "77569410-7985-47f8-90b6-5048b7490782",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f39b60d9-3aa6-464c-8d51-04c66ea25a85",
        "cursor": {
          "ref": "d1508254-36bb-446f-9cf6-eb102829da9b",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "ab436dd0-9912-417a-b09c-eaa09facbd92"
        },
        "item": {
          "id": "f39b60d9-3aa6-464c-8d51-04c66ea25a85",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "ec1bb13c-6ff4-48c4-90e1-5f2340d8a3c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c40585c-4ea8-4ed6-8e0e-f4c5a9156653",
        "cursor": {
          "ref": "c2c2add7-1ffc-409b-9311-13273d931980",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "109b038d-ecd5-47df-84f4-3ca5913e9ddd"
        },
        "item": {
          "id": "3c40585c-4ea8-4ed6-8e0e-f4c5a9156653",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "7f0c24d2-6170-4727-836a-37f7db11b445",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1755af1-e7f1-4360-a5d6-b81992e7a581",
        "cursor": {
          "ref": "68af3168-7a0f-4afc-a5ec-835fbea58fa5",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "fcd80f0e-5fc7-4ad4-8f9d-ecd759fc49d3"
        },
        "item": {
          "id": "f1755af1-e7f1-4360-a5d6-b81992e7a581",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "70eb5ab0-a0d2-4650-8fb9-d783949bfbed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b86c3704-7035-4f8c-8d9a-93b4b1cba08c",
        "cursor": {
          "ref": "f36e395c-5b5f-43ee-8aba-744b20c5da61",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "bc96f66a-97b6-40d9-a81c-9bbd4cfc0a45"
        },
        "item": {
          "id": "b86c3704-7035-4f8c-8d9a-93b4b1cba08c",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "25428f94-0b44-4023-aca4-5229c40e8843",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "466bc6e9-4a68-4c8b-a021-36a114a4d0c5",
        "cursor": {
          "ref": "50ffcff7-a493-4715-a149-1c19fefcaed5",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "f1451b0f-459b-4c08-8263-339f7b239e0d"
        },
        "item": {
          "id": "466bc6e9-4a68-4c8b-a021-36a114a4d0c5",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "e4598b14-21ae-4d9f-8cf2-7926abcd7204",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eafdbaef-4cf4-45be-b1f3-afdcd733a8c1",
        "cursor": {
          "ref": "f22de476-b14d-4707-bec4-ab2a4d46e3de",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "5315b4f1-d619-45a8-89e3-37325a50ff80"
        },
        "item": {
          "id": "eafdbaef-4cf4-45be-b1f3-afdcd733a8c1",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "3511ec7c-6822-425a-9f88-24d78d103952",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cf6cd1e-a201-46bc-b441-df7f386af910",
        "cursor": {
          "ref": "7ae87bcd-9475-4091-9b96-a7f43a55bc39",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "36154133-42a7-49c0-8cdf-91a287330d3e"
        },
        "item": {
          "id": "3cf6cd1e-a201-46bc-b441-df7f386af910",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "00088fa9-6eb1-431e-87fa-785e9b82fa35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faeff510-1825-4d61-a430-2687dcf0b20d",
        "cursor": {
          "ref": "d564b187-e6fb-469c-a4bf-3a5e37913af7",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "40c4d6cd-93a6-4326-b98b-b6717dee6e0d"
        },
        "item": {
          "id": "faeff510-1825-4d61-a430-2687dcf0b20d",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "6b8919a5-c462-4269-96c1-fe7b52a05571",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28b607e4-4380-4817-a364-4115dd1d0e0f",
        "cursor": {
          "ref": "061cb39f-83b5-4312-95cf-c0e72a524bb6",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "cffe6710-cc2f-409d-96c9-a868cd9b765a"
        },
        "item": {
          "id": "28b607e4-4380-4817-a364-4115dd1d0e0f",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "01f9cceb-e030-45aa-9a13-b81e8ad62d4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ccf7c70-dd47-4ced-acba-9aeb8159cb10",
        "cursor": {
          "ref": "9206b725-7654-4764-85e6-f5d11ecc55e9",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "eb3adf32-3a1f-4a6d-8ef6-5fce074f69c4"
        },
        "item": {
          "id": "9ccf7c70-dd47-4ced-acba-9aeb8159cb10",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "2b6c352c-219d-461a-a5a7-25375fee2453",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "654c1dbb-2a17-423b-8b3c-fbd5da3f317e",
        "cursor": {
          "ref": "3d788f21-ea02-4e8c-9f5c-f3a6f5452cbf",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "7f77c618-b30b-44c4-b573-e894482442fe"
        },
        "item": {
          "id": "654c1dbb-2a17-423b-8b3c-fbd5da3f317e",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "0471c333-2fdc-412d-9f2d-1c2c1af0ee92",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 71,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "073668b0-64c5-4906-b25f-efcb45e0192a",
        "cursor": {
          "ref": "c739f425-159a-44d2-8a7e-f7a356ccd1ef",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "086ed311-1ec0-4f06-ab54-0705b7a836a5"
        },
        "item": {
          "id": "073668b0-64c5-4906-b25f-efcb45e0192a",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "0ce2098d-3dc0-4f5c-83f2-dd79eb0812e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be800b17-748f-44ad-a0d6-6c1532b7c416",
        "cursor": {
          "ref": "d38a4666-89f2-463f-a374-e11fad8b6eb0",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "518bd708-b543-411b-8583-b3d1ca29b0ad"
        },
        "item": {
          "id": "be800b17-748f-44ad-a0d6-6c1532b7c416",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "13b94359-9252-4ed1-87fc-abd58fef7ca6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19361b2f-faae-491c-b0f0-12fba7fdbb07",
        "cursor": {
          "ref": "7de4ee75-0615-45e8-88f9-ac451771ea27",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "910a0acf-bb23-452b-9bfb-83d47e611c14"
        },
        "item": {
          "id": "19361b2f-faae-491c-b0f0-12fba7fdbb07",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "7b2f6901-2fe6-43f3-aaa2-9eb88ab7226e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05cb1f90-cc43-4413-be69-7fa443b5fb2b",
        "cursor": {
          "ref": "5ef94612-2ee9-4202-8c2b-ad15f5bbff2f",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "c97361ca-40c2-413d-84de-7bd9fb7d70ab"
        },
        "item": {
          "id": "05cb1f90-cc43-4413-be69-7fa443b5fb2b",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "bd7cae11-e307-44d7-98c0-41510ae797c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8975b28-5bd6-40d9-96a4-de081df52a51",
        "cursor": {
          "ref": "c6059a38-64fd-4702-b662-2d080c25949c",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "819a80ab-fbc7-40d1-b348-c81f5b7712d9"
        },
        "item": {
          "id": "a8975b28-5bd6-40d9-96a4-de081df52a51",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "60e2b99b-5e52-43be-8bda-cb4c03bafbfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34f981ad-b5d0-4126-af8f-94eea55fe97e",
        "cursor": {
          "ref": "1a448ba3-3d34-4d59-882d-6efc4640ff7b",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "e9135dc4-19e5-4a62-962f-f579363d6a69"
        },
        "item": {
          "id": "34f981ad-b5d0-4126-af8f-94eea55fe97e",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "c7552b52-9a7a-4a13-942d-16d2ab7087f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6b3ccdf-d228-4f98-b3d6-b36f4e76d3b6",
        "cursor": {
          "ref": "f9f06be8-492f-4e54-abeb-824b6be21e16",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "8c726859-147c-4aa2-91d8-22f6e59b5229"
        },
        "item": {
          "id": "d6b3ccdf-d228-4f98-b3d6-b36f4e76d3b6",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "e6bc9679-dc7e-4804-9afe-d49178043dc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea6b4359-fa50-40e1-92d9-9e154c649ef6",
        "cursor": {
          "ref": "298a026e-6a4e-484e-8b59-947d2513259b",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "f040c755-161c-4899-a7f9-d7d9bc6e9f17"
        },
        "item": {
          "id": "ea6b4359-fa50-40e1-92d9-9e154c649ef6",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "2359aca1-1e06-4499-a579-04e7822ec357",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 72,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "b544338e-a627-4203-ba64-a857637ceb64",
        "cursor": {
          "ref": "68ff755e-8470-4052-a57e-1ee66c3b44ef",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "c0b90acd-0bd0-47ee-a997-1030c503e278"
        },
        "item": {
          "id": "b544338e-a627-4203-ba64-a857637ceb64",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "02fc8205-b7d9-42a5-abb1-19c9fee95bc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eeba66bc-a455-4b20-a749-ff5384245166",
        "cursor": {
          "ref": "de277491-b6e5-4eae-9a63-08e6fd79269a",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "822883a5-d473-4739-8cb1-d9eed0c99b2a"
        },
        "item": {
          "id": "eeba66bc-a455-4b20-a749-ff5384245166",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "ea37f476-13a1-42ac-b751-d18ac3662623",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c5aa15c-e9bc-4ba0-afb0-f882a9731aee",
        "cursor": {
          "ref": "b97f5ae2-fc41-483a-baea-2df4e01824a0",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "8a427666-e6aa-4094-9ade-529697b15771"
        },
        "item": {
          "id": "4c5aa15c-e9bc-4ba0-afb0-f882a9731aee",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "7d474e58-a261-4b55-a6bf-d715a3a80ef9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb3b94b3-9cfc-41fa-8219-253f1a62a251",
        "cursor": {
          "ref": "0b195694-96db-4343-be00-e66bed6eaecd",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "04b71939-4c5b-43fa-b176-59f574bb7086"
        },
        "item": {
          "id": "bb3b94b3-9cfc-41fa-8219-253f1a62a251",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "c1862d0e-b11e-4710-9ed5-d77553d9bd27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d84f4f1-cd2d-4c0c-8a61-3fd8ccdfec76",
        "cursor": {
          "ref": "2812b20d-5cae-46fa-b69b-f52d3166cf96",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "76256a56-fc7f-4435-bff8-96d9dc35b3a2"
        },
        "item": {
          "id": "9d84f4f1-cd2d-4c0c-8a61-3fd8ccdfec76",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "dd7189b6-c600-46cc-a269-55f06c62aebc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7928d594-8fce-42e1-90c4-78f56ddd93a3",
        "cursor": {
          "ref": "b72425fd-db58-41fd-b904-c75ba49d0110",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "ce139c16-8371-4124-87ae-b52166d2158e"
        },
        "item": {
          "id": "7928d594-8fce-42e1-90c4-78f56ddd93a3",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "91751e9c-2df1-4cf1-a8ef-83a1bf06119a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df2251d4-6afd-4595-a841-84ac10136a3e",
        "cursor": {
          "ref": "08801549-d1bf-4634-896c-ddf0c2b86d67",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "c4d5eee3-19a8-4bec-842c-19d1e407f20b"
        },
        "item": {
          "id": "df2251d4-6afd-4595-a841-84ac10136a3e",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "b4ba4a78-ea50-4025-822e-3d0c3518ca53",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 69,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "c28a4633-e94e-4e11-acc6-cfba632a197e",
        "cursor": {
          "ref": "ff7ef2a1-d123-4c0e-ba2a-e27a3d218493",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "a1cb6f94-635f-401c-a7f6-68433ddc9745"
        },
        "item": {
          "id": "c28a4633-e94e-4e11-acc6-cfba632a197e",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "6bd98ab4-b29a-474d-9c5e-a8416f1e05b6",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 65,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "6dcd0256-c079-4024-afdb-d4fe4f57860f",
        "cursor": {
          "ref": "25c545a9-9b49-42b9-a3c7-93e93df35d52",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "d28d53c2-370e-4e9c-8f44-a2da9939d387"
        },
        "item": {
          "id": "6dcd0256-c079-4024-afdb-d4fe4f57860f",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "f5b97ca0-6b97-4724-9947-531b79ada400",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 70,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "13d730a8-0b96-4766-9738-e5b222aecc8f",
        "cursor": {
          "ref": "4d24e1c4-6a39-4336-99a4-dbb9012588d6",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "97a796da-c1ba-44c4-ae72-381fbe7aa6d4"
        },
        "item": {
          "id": "13d730a8-0b96-4766-9738-e5b222aecc8f",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "56601fa1-ec24-48f8-8466-f2a01bacfb13",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 68,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "d93318df-64f2-4530-a16c-99b930468ef8",
        "cursor": {
          "ref": "4a72b242-6474-4d9c-98aa-0b547d172a66",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "02ccde0a-3af8-46b4-89b8-15a192f8a3c1"
        },
        "item": {
          "id": "d93318df-64f2-4530-a16c-99b930468ef8",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "edfb2254-5908-486c-bd3e-656b6c46f7d2",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 69,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "61bfca79-77ca-4809-b98c-2bd4700bf7b6",
        "cursor": {
          "ref": "b6ff445e-ae8f-4235-a2d8-47af72943e7e",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "702ed2d4-1225-407b-bf37-d93f9adf5754"
        },
        "item": {
          "id": "61bfca79-77ca-4809-b98c-2bd4700bf7b6",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "dbe42338-e151-4ca0-b12d-67281e6dd1ce",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 67,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "9e254b6d-66b7-4296-bb47-7012e5b3c04f",
        "cursor": {
          "ref": "793ea670-6f70-446c-afbb-78f933c0caec",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "c1bf2eaf-7da6-4709-8c33-0e91cd180485"
        },
        "item": {
          "id": "9e254b6d-66b7-4296-bb47-7012e5b3c04f",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "c568c432-7b9e-410e-8f38-a867fbe3a301",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 55,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b62cd6fa-cf2a-47ae-a5c2-bc68bf9321ab",
        "cursor": {
          "ref": "9e4cc709-ba1d-433d-9d29-9691faae48fe",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "55506623-db96-493b-9207-8c9158c09479"
        },
        "item": {
          "id": "b62cd6fa-cf2a-47ae-a5c2-bc68bf9321ab",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "b12084d9-638f-4b2d-b071-f0dd10c6dd34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63dd6b12-a0a8-46b0-8e18-bf5efee34ef1",
        "cursor": {
          "ref": "4dbf0220-dcfd-4690-a14b-69f2fb0cc775",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "14493fdd-d7d0-4856-ba4a-dd76bcacd767"
        },
        "item": {
          "id": "63dd6b12-a0a8-46b0-8e18-bf5efee34ef1",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "9b3fbc3c-561a-4cd5-8ad4-ad48fd515e40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff6a21bc-0fc5-4e42-90c7-29733d4c0de7",
        "cursor": {
          "ref": "17ce46bf-a12a-401c-883e-f8772c1fc2b6",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "33ee9bc6-2f49-457b-8ca0-e1d0e4485036"
        },
        "item": {
          "id": "ff6a21bc-0fc5-4e42-90c7-29733d4c0de7",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "108f1fd7-5d73-431d-a457-5634140aae75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a095eab-ced8-440d-b743-d55366c3cc72",
        "cursor": {
          "ref": "d77ee4e5-d605-49c8-9ff5-1d8a471bd01a",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "7776cdd7-e587-49cf-a611-f4389b16c2e3"
        },
        "item": {
          "id": "0a095eab-ced8-440d-b743-d55366c3cc72",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "4f5cda9b-91b6-4b47-a4b4-84ec1b7c96a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5c97d19-002e-40ab-be8b-a9dde7c5b96d",
        "cursor": {
          "ref": "8cb69ae3-6ad8-40b8-914a-5790026e10c5",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "6d04b65f-78cd-42ff-abd4-b73e1d6e94ce"
        },
        "item": {
          "id": "e5c97d19-002e-40ab-be8b-a9dde7c5b96d",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "e41ab2ff-3b2e-4b52-9895-d0ccf29dabed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaf20c20-2ac3-4928-9e8d-73227b2eedf8",
        "cursor": {
          "ref": "5a8e8049-7829-4202-8d37-2deb88ccbe21",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "8d819eac-015a-4db2-9e0a-e97f24ab6c3b"
        },
        "item": {
          "id": "eaf20c20-2ac3-4928-9e8d-73227b2eedf8",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "7de31be5-70ff-45d1-b31c-e10b33bb1fe5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd44eee2-e0f6-440f-9533-67d8c67b7435",
        "cursor": {
          "ref": "1fc0f231-d8b7-4849-8cde-81f581254327",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "0eff6e88-d19a-4988-b089-05c234075070"
        },
        "item": {
          "id": "bd44eee2-e0f6-440f-9533-67d8c67b7435",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "a9fb39f9-a0cb-4af3-88e1-67c4e0ce11b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7c06b33-4b71-46d0-a85c-973a3fc2ab4f",
        "cursor": {
          "ref": "68d8c7cb-2dd3-4b1b-8512-61483f28f2e8",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "9d639894-0591-414f-9cbd-1b9001d44151"
        },
        "item": {
          "id": "a7c06b33-4b71-46d0-a85c-973a3fc2ab4f",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "92edbfba-08de-4411-ab16-6a8e03169df1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b431fb1-d38c-4fd1-8447-46191bc56c6e",
        "cursor": {
          "ref": "574e1f06-0a08-4935-89d3-b8544ad17c78",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "a55d78c8-cd5c-4be4-b368-e8c45c67007e"
        },
        "item": {
          "id": "7b431fb1-d38c-4fd1-8447-46191bc56c6e",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "3989a6e1-98c9-44e4-b326-9ac57c4e6808",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2510e99e-4ba2-4c52-81f6-8316b8dfeabf",
        "cursor": {
          "ref": "a985a706-2a27-41ab-a6f7-534ec79851af",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "d847594b-1c60-4022-a91e-7b6150f837ce"
        },
        "item": {
          "id": "2510e99e-4ba2-4c52-81f6-8316b8dfeabf",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "5fad1a79-a528-4c43-9ab8-f5461a8fcfec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "036f985a-bd39-47c8-8dda-cbdf8f19013d",
        "cursor": {
          "ref": "e3002869-92b6-44ff-8950-7ce45eda7f6c",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "60aabe2f-ae05-4900-9df9-68e8de4f3131"
        },
        "item": {
          "id": "036f985a-bd39-47c8-8dda-cbdf8f19013d",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "72f6bb91-28bc-4617-b88c-ebe79b963d98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d2a96db-e6b9-4727-b308-bd0da227155f",
        "cursor": {
          "ref": "6180f00e-7239-4b39-a1d4-80feff3f9e6b",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "38865036-c0e4-4f34-874c-5390194b0ffa"
        },
        "item": {
          "id": "3d2a96db-e6b9-4727-b308-bd0da227155f",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "07025d17-f7fc-49b2-b08a-6b8b3c433ed0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10ed0ae0-10f9-41a9-85e9-9d8c240fd41e",
        "cursor": {
          "ref": "ec32ea19-a071-4bd1-9fd8-6805bddcce6c",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "9720715d-fd00-4e86-b11a-d8bf95fdda82"
        },
        "item": {
          "id": "10ed0ae0-10f9-41a9-85e9-9d8c240fd41e",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "c003f6e9-7e67-485b-885d-f47ae2b24754",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "929f1b18-5bbc-4822-a888-71c13c81e53c",
        "cursor": {
          "ref": "a2d4703e-c29f-4d92-a257-18c34d15c05b",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "6d8a34b3-aef9-4e91-a7dc-b02eaf68ea28"
        },
        "item": {
          "id": "929f1b18-5bbc-4822-a888-71c13c81e53c",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "104997ab-9c70-4e92-86c5-d5a1f37e9ff8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03a9a556-999d-4fba-9362-b3488f454a7c",
        "cursor": {
          "ref": "91402216-a337-4608-af09-de255cfd57d6",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "9b65d0a3-05e2-45ce-af65-067bafdd8bcc"
        },
        "item": {
          "id": "03a9a556-999d-4fba-9362-b3488f454a7c",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "eb8b7cfc-1a14-4603-b0c4-85910fe967a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49c66de9-814e-4278-9149-34241d307ab4",
        "cursor": {
          "ref": "f1afc2a6-f8ca-4b01-ac40-8bfcbc6b839e",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "79175347-dde4-4165-8f54-1df8328f326a"
        },
        "item": {
          "id": "49c66de9-814e-4278-9149-34241d307ab4",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "8f72566c-d1de-4709-81eb-cb81738678a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e74f2bf-d5b0-43ed-bc62-7012a3dbb1ad",
        "cursor": {
          "ref": "30895f1b-d741-4935-a9a9-92ff0f6482c6",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "c42a39d8-8d18-4bec-94d1-213681bdab0d"
        },
        "item": {
          "id": "5e74f2bf-d5b0-43ed-bc62-7012a3dbb1ad",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "df58f156-32ca-45d5-8a0e-6953a9de6313",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ede21992-0f9d-485d-b220-03cd3618bbe4",
        "cursor": {
          "ref": "bbb509bc-060c-4ae9-a342-a31796b30450",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "c5fd8a53-40da-4929-bc62-702342427507"
        },
        "item": {
          "id": "ede21992-0f9d-485d-b220-03cd3618bbe4",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "425ec21c-0a5c-4338-b51c-0975ed8ced49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 128,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "564f4629-f64d-457b-acc8-bd0d6e188eb3",
        "cursor": {
          "ref": "48b57323-5b89-4c16-b540-df4b5b99cd4e",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "1f0555e6-7f24-45e0-8e4e-ca1459c49ef0"
        },
        "item": {
          "id": "564f4629-f64d-457b-acc8-bd0d6e188eb3",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "310ab3f7-0f73-4f4e-a958-92420ebea59a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc79e6c8-3d48-4d87-8484-08b2d0dc9da4",
        "cursor": {
          "ref": "c9141f28-3e32-483f-86d2-b3f146b96e36",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "9f78c1ef-cf04-45aa-add3-f6c029d26677"
        },
        "item": {
          "id": "cc79e6c8-3d48-4d87-8484-08b2d0dc9da4",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "ecc9c723-0543-4ae9-9093-25004ad71db9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15cd4bb1-7a95-406d-8155-8d449cd0e751",
        "cursor": {
          "ref": "8dcff21d-89b2-4719-8ea1-d203565e3284",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "d4852e6a-c78d-49b1-8fc5-ca0e82aec400"
        },
        "item": {
          "id": "15cd4bb1-7a95-406d-8155-8d449cd0e751",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "8c88f44e-4a34-4fe4-b4d0-15e9542a0434",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d56fb5d-684c-474e-8734-089064300e99",
        "cursor": {
          "ref": "ce857c04-65e0-41b2-82ff-4bf27a37b384",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "e89253d3-9ab9-4337-af61-9eb40f42465d"
        },
        "item": {
          "id": "1d56fb5d-684c-474e-8734-089064300e99",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "a5870c04-af6f-48ab-babc-83fd1e7c2abb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc642bb2-0f13-477a-9e93-00e306748939",
        "cursor": {
          "ref": "799049ca-0b57-452f-8a09-324b3db01b6e",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "d877b395-5c22-4dac-a944-f2e67125f32c"
        },
        "item": {
          "id": "fc642bb2-0f13-477a-9e93-00e306748939",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "2766a1de-9cae-47d3-9f0a-4bbd51acf0aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e2857e7-38e3-47e3-9f43-9735b4e8c8e0",
        "cursor": {
          "ref": "1d56dbfe-0806-4481-b293-a1d23bfd5b56",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "ad7ef757-9632-4ce1-a016-46bd7e1f68be"
        },
        "item": {
          "id": "9e2857e7-38e3-47e3-9f43-9735b4e8c8e0",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "8c66741b-875f-4eca-b573-d2cfede89a11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a364fda-a23a-4af1-952d-5f891f612e44",
        "cursor": {
          "ref": "6e7bb8d1-1456-40c0-a468-f05cadefa782",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "9ebab59f-60eb-42d3-a0c8-c1a2f827ee96"
        },
        "item": {
          "id": "2a364fda-a23a-4af1-952d-5f891f612e44",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "0a6eaef7-74d7-49a2-950a-1c7d68e54299",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67c8b082-823a-4c74-9e3f-13b980c9fa8c",
        "cursor": {
          "ref": "0084bb16-bc63-4ccd-a99d-84b42b668d8e",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "9794efdb-b77c-4276-abb2-87cac8471177"
        },
        "item": {
          "id": "67c8b082-823a-4c74-9e3f-13b980c9fa8c",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "48c76011-0b63-4d1e-8d02-7197ad3f43ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3455455-1dee-4087-96a5-4920c8f159c3",
        "cursor": {
          "ref": "c321cafa-4057-466f-b4ff-5257af24b574",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "babc7689-a67c-440b-832b-c1cae3fd3e4a"
        },
        "item": {
          "id": "f3455455-1dee-4087-96a5-4920c8f159c3",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "485eb856-59cd-4b60-ab2d-6eccae3fe44e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f020180-9959-4d4a-8b11-d13c2fc56476",
        "cursor": {
          "ref": "3b8a7ab3-7e00-444f-9d7b-f1222cb76bde",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "3166c77d-b009-4cb3-a70a-d34a16597280"
        },
        "item": {
          "id": "5f020180-9959-4d4a-8b11-d13c2fc56476",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "9358cb53-7954-4918-b64d-1eb756555b77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6cb6504-cd5c-4f33-8432-1dd371d3b252",
        "cursor": {
          "ref": "96a3b1b2-1215-4766-952a-b278adc71a3a",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "a9a98b2f-aa39-477d-b0f2-8aea8b71e605"
        },
        "item": {
          "id": "d6cb6504-cd5c-4f33-8432-1dd371d3b252",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "d3b71f18-42d3-406a-b20e-445c08f56e30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5effa070-c8b6-4b61-95f4-e749eecb6680",
        "cursor": {
          "ref": "c6dcaf06-9d4f-4e19-b1ad-4c3f898c89ea",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "3ff7949c-0586-47fe-8a73-2c6a7e7778c0"
        },
        "item": {
          "id": "5effa070-c8b6-4b61-95f4-e749eecb6680",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "7b00f334-f163-4bff-be86-9a38f4e47b20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6936039d-93be-4d6f-ad3b-7b52269652a8",
        "cursor": {
          "ref": "e583d8f2-8550-4956-9298-039a931b6f88",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "99dac931-37b9-4422-b0ba-accc10c502a5"
        },
        "item": {
          "id": "6936039d-93be-4d6f-ad3b-7b52269652a8",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "4535d656-09bb-4324-a127-33b4ccf9f9d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f259baa5-401d-4af4-9af8-1d43d330abb0",
        "cursor": {
          "ref": "caace19f-06fe-4002-91d4-f57586eae1e6",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "f9b95a31-cde3-4b71-80dd-359eb7489963"
        },
        "item": {
          "id": "f259baa5-401d-4af4-9af8-1d43d330abb0",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "d164c389-c914-4378-ab35-29b311cda60f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0afbc6c-0882-4a94-8a06-5ed611cede1e",
        "cursor": {
          "ref": "45a54054-1748-43ca-bc87-3404bee91adb",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "a01272cc-582c-4f22-8f1e-176026cecf4a"
        },
        "item": {
          "id": "f0afbc6c-0882-4a94-8a06-5ed611cede1e",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "d8ecda71-26fc-4453-8b59-94ccaa8e1a05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06759557-46ab-4e40-8fb4-53affb69e4b0",
        "cursor": {
          "ref": "d4710e60-62cb-4d08-941d-1e202b3b858e",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "375383ae-b5da-4973-9101-073553191021"
        },
        "item": {
          "id": "06759557-46ab-4e40-8fb4-53affb69e4b0",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "e82f6160-ed99-4ec8-b490-71514c1c8ea2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3e436de-89b6-4519-93f4-8c072ec0b79f",
        "cursor": {
          "ref": "7974bbf4-bc8c-4274-8b97-a94fc5729b73",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "358a9916-893c-4e78-9e38-319233868680"
        },
        "item": {
          "id": "d3e436de-89b6-4519-93f4-8c072ec0b79f",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "1cb9945e-41b3-4125-81a4-b4fe858cda17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15be052b-93c9-4303-bb66-ae9108498b49",
        "cursor": {
          "ref": "37d43313-fde0-448b-a518-144b262ecc02",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "c997ca8d-c7ff-4f60-985e-50e2d0052209"
        },
        "item": {
          "id": "15be052b-93c9-4303-bb66-ae9108498b49",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "c0438e94-85b9-44f2-a7fe-72eb930651d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08b7339a-cfae-456b-97cb-5a41b4c44ad9",
        "cursor": {
          "ref": "df8e0179-33d2-4e5b-b45d-d305c480780f",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "69412541-9c7f-4140-9cf4-0f5043c7bfce"
        },
        "item": {
          "id": "08b7339a-cfae-456b-97cb-5a41b4c44ad9",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "e2d83d63-1116-4400-a981-be95d5e347ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d39f07ac-d444-4e32-a425-df7432c26411",
        "cursor": {
          "ref": "f73fbafb-1674-4af5-bcc3-82aa1948bc42",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "da1d17bc-66c8-4886-9478-5a9ce7970e21"
        },
        "item": {
          "id": "d39f07ac-d444-4e32-a425-df7432c26411",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "0a686523-18c3-4e98-be58-0e685d8be059",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d1f5859-4950-427e-8c44-53e9329388b3",
        "cursor": {
          "ref": "3b03326f-a68e-46ae-88ec-e236e6559a67",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "4e99aa05-b633-4b88-ab44-ef5726a3d083"
        },
        "item": {
          "id": "0d1f5859-4950-427e-8c44-53e9329388b3",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "7e1ffeac-e35f-4171-8704-ec53b0dbb6ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b05ac90c-7a5d-41a3-9bf8-0eb942f0a43b",
        "cursor": {
          "ref": "8c218fd3-557a-4568-9dac-bf2b198d58f9",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "beabed49-4688-463e-ab8d-1d1e9ae63150"
        },
        "item": {
          "id": "b05ac90c-7a5d-41a3-9bf8-0eb942f0a43b",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "48da3d4f-a84a-4c6d-afb2-17d3a9fcadf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff4cd02e-7124-4cb2-abdd-934e96be1597",
        "cursor": {
          "ref": "e7e1c927-02f4-4cd6-ae40-9277fb25757a",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "a3316fd1-b703-4795-b7ef-892f595c6aed"
        },
        "item": {
          "id": "ff4cd02e-7124-4cb2-abdd-934e96be1597",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "65cab839-5387-4d3d-aee1-755e4568ad9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c97cf8a3-87ff-49fd-9772-1da4185aa0dd",
        "cursor": {
          "ref": "6b2efe41-f5af-463a-828a-e26d0a4e853f",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "423c0b65-e778-440d-a3ec-ec361a28c876"
        },
        "item": {
          "id": "c97cf8a3-87ff-49fd-9772-1da4185aa0dd",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "fc4f3087-1768-4ade-b48c-4444ba47b4c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2c5fdb8-37da-4f55-a334-b37a7aef10fc",
        "cursor": {
          "ref": "58b32977-103c-44e1-822f-f58a0e5e59a5",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "d775d1c0-e78e-4cf8-bf8e-0f68c6c0dc7e"
        },
        "item": {
          "id": "a2c5fdb8-37da-4f55-a334-b37a7aef10fc",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "ec6c7358-0c11-4a05-bdfe-88784739cf2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "403b5ded-3a8a-48e1-a049-4c162f5a2f38",
        "cursor": {
          "ref": "d8166e40-fe1d-411c-ba9c-8bd7dda774cf",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "6d3a10bd-37ab-402b-afa8-fc3b91dbce75"
        },
        "item": {
          "id": "403b5ded-3a8a-48e1-a049-4c162f5a2f38",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "979ee092-4a73-44fe-b4e2-37d1265ffe16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbe45f41-e5a4-47f7-a1be-ebfedb8c452a",
        "cursor": {
          "ref": "b4c2d620-84da-4b4a-8843-d4842e09d8a8",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "0cd1ec37-c3ac-4865-829c-84f0a3d0415c"
        },
        "item": {
          "id": "cbe45f41-e5a4-47f7-a1be-ebfedb8c452a",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "edd67256-ffc0-4035-89a3-c2b3936b4d58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24d095b0-b430-489f-86ba-1c19a3e79a85",
        "cursor": {
          "ref": "2118a33e-7f66-41fd-9fe3-f0bcaaeb9f30",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "23bfb01d-1f82-4006-81e3-d19d75f250c8"
        },
        "item": {
          "id": "24d095b0-b430-489f-86ba-1c19a3e79a85",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "df1e4e3c-1ab0-46af-a3e1-58d09454c4db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 101,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c396311-456e-4c4b-b88f-0a8237f9fcda",
        "cursor": {
          "ref": "bcdec240-c1a6-45fd-9ffb-2a8bda426e51",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "01f0aa77-fb70-481d-a92f-af2a07404206"
        },
        "item": {
          "id": "0c396311-456e-4c4b-b88f-0a8237f9fcda",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "a406b921-ede5-41cc-a6bb-fac44e5416ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf3a0b6f-258a-4735-8bf2-b3c0c8925377",
        "cursor": {
          "ref": "8e736005-ee94-4636-8c9a-3e54c2bcfa00",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "5a9b5bb8-3b03-4085-9060-224af7af134e"
        },
        "item": {
          "id": "bf3a0b6f-258a-4735-8bf2-b3c0c8925377",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "21ec48f2-f2de-4756-acf9-8a57b2e0d170",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3846994e-2aa9-4c3c-a4b7-19e5db8b4bf0",
        "cursor": {
          "ref": "9fdffffe-e990-4270-8c3a-7f1ae87b4435",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "69eb405d-8c6d-4390-ba34-70da54aecb06"
        },
        "item": {
          "id": "3846994e-2aa9-4c3c-a4b7-19e5db8b4bf0",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "35307ea8-5ff6-4b0e-a719-1c4dadb8fe55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13a880ae-2878-4032-8a66-e2675d869686",
        "cursor": {
          "ref": "88cbf881-96f1-4885-96d9-16840d24cc9c",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "790c4617-41a1-41a2-9e4e-0000cb9b76cd"
        },
        "item": {
          "id": "13a880ae-2878-4032-8a66-e2675d869686",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "2b0eafc7-fd81-4614-bf26-34ecf4d3700d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97604c3d-afd8-4f49-93fd-7f2c65e2f36a",
        "cursor": {
          "ref": "0fda4251-9070-4993-a6ca-af424b28adc6",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "d72da76b-6534-4b79-b66d-b8574114cf8b"
        },
        "item": {
          "id": "97604c3d-afd8-4f49-93fd-7f2c65e2f36a",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "01914040-0bac-4cd8-af09-50dfbef7d07f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 174,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5601627e-caf6-4dd9-95fc-460ba594f4f7",
        "cursor": {
          "ref": "f80853be-895f-4dc5-a2c5-6d5d35e4e4d8",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "92eb0221-a1df-4c80-936e-d31282a712f4"
        },
        "item": {
          "id": "5601627e-caf6-4dd9-95fc-460ba594f4f7",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "99c50807-29df-4b55-8918-d048ca3b187c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 136,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33cbc951-0dd9-4a74-a08a-203cfac363d3",
        "cursor": {
          "ref": "843d9c3f-b6f0-4091-8df1-7503ba50d973",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "9f47d919-5907-4996-8821-2b71a9b33022"
        },
        "item": {
          "id": "33cbc951-0dd9-4a74-a08a-203cfac363d3",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "1f73a487-4f1b-42e0-965c-947f69968222",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c131cd18-0d87-435f-adc3-7cc5399ab3f9",
        "cursor": {
          "ref": "512f9790-e256-4714-b46c-0cf3df09fca7",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "9aa7317a-1f80-4b87-ae8b-c398f13b2d16"
        },
        "item": {
          "id": "c131cd18-0d87-435f-adc3-7cc5399ab3f9",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "aa778781-cea1-4458-99a6-0fdf3b239d0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c933d92-348d-4eee-8d83-997aafd62879",
        "cursor": {
          "ref": "43d2ccae-079d-4c6f-9d73-1bc57ded98cc",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "545f2051-c094-491f-93c0-8a58f8e40ab0"
        },
        "item": {
          "id": "5c933d92-348d-4eee-8d83-997aafd62879",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "0e359d04-6337-43c7-bab0-4de7ed9b7e1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "570e0a4b-a3c7-4248-b9ea-df9dcd8e9bd3",
        "cursor": {
          "ref": "93630a44-fba9-4200-8d26-f1a885da8f47",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "4dd8187d-58ca-4f0b-81f5-926a2997c547"
        },
        "item": {
          "id": "570e0a4b-a3c7-4248-b9ea-df9dcd8e9bd3",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "fdff162b-21e9-413f-ba38-c150c51299b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 132,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93cf6a3a-60d9-4a42-8b83-66e4be6d36f7",
        "cursor": {
          "ref": "69e94576-046b-4ddd-988d-995bf81a3c63",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "1a0cc134-13cb-4868-b4c7-852d95cf649e"
        },
        "item": {
          "id": "93cf6a3a-60d9-4a42-8b83-66e4be6d36f7",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "beda1fe1-6ca3-482e-a649-104848887043",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5814c3f8-4425-427e-87a9-74c35c03aacf",
        "cursor": {
          "ref": "cfcd83db-3add-49af-b472-9b2ffb1a7fc9",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "0a9df65c-7381-4f0f-ae95-e4cbc8ab4271"
        },
        "item": {
          "id": "5814c3f8-4425-427e-87a9-74c35c03aacf",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "977b53c2-ab86-4a2f-8618-a7fa3bffb109",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d692417-2f3e-4f52-8c39-ab5a908f1b26",
        "cursor": {
          "ref": "ce2d05a9-0780-4a6a-97a9-4853e24b0c07",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "be73a6e3-d989-440a-86d5-2150ef656f2b"
        },
        "item": {
          "id": "0d692417-2f3e-4f52-8c39-ab5a908f1b26",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "0f9666b0-0a65-4320-adf6-3baeba502db5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 138,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "153eae7d-a546-4f2b-a5b6-059f1dca5b49",
        "cursor": {
          "ref": "a5196e32-1352-4876-a0a3-ecfda8df73fe",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "5f917905-1dcb-4951-9f3b-5471ff3ecacf"
        },
        "item": {
          "id": "153eae7d-a546-4f2b-a5b6-059f1dca5b49",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "339fedad-d3be-4abb-a7ab-1e8107dbf2c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdcfe0ad-6935-483b-be29-2a97771d4f20",
        "cursor": {
          "ref": "fc27d110-cedd-42d1-84b2-b73accf61b12",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "b4ee6258-27e1-492f-b515-74079f26c844"
        },
        "item": {
          "id": "bdcfe0ad-6935-483b-be29-2a97771d4f20",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "98e56817-f42f-4372-af75-eb895c16967a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "facdffa5-678d-4cc6-8f5b-10fe3d7eebd9",
        "cursor": {
          "ref": "9ff52dc3-fca4-47c7-84a9-97024a45fec4",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "78d620ab-82db-45ab-86e2-66bf387b605f"
        },
        "item": {
          "id": "facdffa5-678d-4cc6-8f5b-10fe3d7eebd9",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "39026f23-4cf5-415a-a9ad-f364d8bf4bc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 96,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8f9a3b6-35a8-4a26-83f9-4e2586ca3f18",
        "cursor": {
          "ref": "ca5d5990-9d7c-4201-8306-c8d3ec1d480f",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "07ebe526-c06b-403f-8dcc-0b8ba2ea690c"
        },
        "item": {
          "id": "a8f9a3b6-35a8-4a26-83f9-4e2586ca3f18",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "b00dad66-4aaa-496c-b73d-8af657b163be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3e4dc2b-986c-41fe-bf71-c54558d51166",
        "cursor": {
          "ref": "de47f33d-a5e0-4d46-8480-8f73d50ed46e",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "8edd39e7-48ab-4ace-86e8-6c833e787fbc"
        },
        "item": {
          "id": "f3e4dc2b-986c-41fe-bf71-c54558d51166",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "dffebb04-6024-4464-bdd6-253ae653f686",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c891229-5443-46ab-8cac-df844f15228c",
        "cursor": {
          "ref": "d5e7ac6b-57c5-4343-bb87-329f4198195e",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "86831562-5e91-49f9-a894-bfe605000997"
        },
        "item": {
          "id": "4c891229-5443-46ab-8cac-df844f15228c",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "70f4330d-5f2e-4c67-b6e2-7718dedb974c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a47e4da-4c57-4fcb-97d7-009612e18ce3",
        "cursor": {
          "ref": "6fd8f6ca-e627-411f-b713-de6a5484f5c5",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "f777623f-982f-43c1-83d7-f5a2b6e33a1c"
        },
        "item": {
          "id": "7a47e4da-4c57-4fcb-97d7-009612e18ce3",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "a5406f35-e9fd-4938-8cfe-61090a475f3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd0718ee-b5f0-4ae2-9b51-255a4b377f8a",
        "cursor": {
          "ref": "f43e9bb0-72cd-4a2c-a8ff-a92ec9af79c7",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "5ae3242d-cd49-4550-b456-5f396dce5055"
        },
        "item": {
          "id": "bd0718ee-b5f0-4ae2-9b51-255a4b377f8a",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "879a9608-2934-408a-8697-6549873dcc82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d0e4956-48e5-451e-9b44-0645c4380e88",
        "cursor": {
          "ref": "d9f70365-ce28-49eb-8d1a-6cfb5e31d5ca",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "b50c3f17-4b65-410b-bad3-597a5f4e3a59"
        },
        "item": {
          "id": "9d0e4956-48e5-451e-9b44-0645c4380e88",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "ffa54dd9-a0de-41db-a130-7def53c1613e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 106,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43b83c90-aaf3-4878-8f0f-7435555a1324",
        "cursor": {
          "ref": "b494fd2e-5f6d-4d8b-99af-06150952b0e7",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "d05a16f2-82be-4541-b3a4-490f6e83dca6"
        },
        "item": {
          "id": "43b83c90-aaf3-4878-8f0f-7435555a1324",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "bdad3ac3-052f-45c3-bdbf-db9ff8d86a38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b6aed90-b070-4602-9320-ef19ae63940a",
        "cursor": {
          "ref": "0c1c470f-244b-4abf-b4f3-619ce4997ab5",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "2a97b0d6-b79a-4ff8-a674-c41248ca6d0d"
        },
        "item": {
          "id": "7b6aed90-b070-4602-9320-ef19ae63940a",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "8e6d2362-cbc3-4dde-813c-44db55cd335b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e91c8c8d-69ff-468f-9193-d27a4a1352cc",
        "cursor": {
          "ref": "817a285b-94bb-4464-8708-715586184180",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "bfa290b6-2ad1-409a-a8a7-4b6eb4e5a162"
        },
        "item": {
          "id": "e91c8c8d-69ff-468f-9193-d27a4a1352cc",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "8d6fc483-6051-40ab-85e8-ba771ebe830d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "974d4deb-ee26-48a7-b7d4-3051f82b3d7a",
        "cursor": {
          "ref": "f9f494b7-cd29-4613-94a9-b4a0d3610ca4",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "cb5c808e-f57d-4787-acba-8373f5b0bfbb"
        },
        "item": {
          "id": "974d4deb-ee26-48a7-b7d4-3051f82b3d7a",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "9a2182fc-8fda-4106-998c-68dd59fb6c2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd24175a-4e8f-449e-ac70-c99aecd928b3",
        "cursor": {
          "ref": "20822027-83a9-47f2-93ce-7bdf9b081906",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "0cb49332-0d10-452f-9dfb-5b3cade8bb64"
        },
        "item": {
          "id": "bd24175a-4e8f-449e-ac70-c99aecd928b3",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "52cc4d57-83d8-4512-8d8d-12edfc4bd84b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73bc0ba6-9d72-442c-beb6-2d6092011024",
        "cursor": {
          "ref": "bffd8b94-fb46-40b5-bf94-8f9ff8a46ac6",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "6c8a8329-3257-489b-a795-8bd3a72130e4"
        },
        "item": {
          "id": "73bc0ba6-9d72-442c-beb6-2d6092011024",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "1dae1ea5-0304-4f51-881a-80d8e2b6d706",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 100,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14003a89-12c7-4ee0-b618-65d237485f8f",
        "cursor": {
          "ref": "5aff11c6-da97-434b-971d-6c90f6095816",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "3052000f-23fb-483e-af97-d490feaadbcf"
        },
        "item": {
          "id": "14003a89-12c7-4ee0-b618-65d237485f8f",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "ff17057e-6620-4082-bdec-d20e68a979fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65fc6870-0983-4c74-b5d9-3b7bf3aec450",
        "cursor": {
          "ref": "251683fd-75f4-4a8d-9aa0-5a20df514ae4",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "1bffc106-6a78-477b-bc2b-8448f0261f32"
        },
        "item": {
          "id": "65fc6870-0983-4c74-b5d9-3b7bf3aec450",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "e27650b4-d3b8-41ea-88ce-2c11e054e773",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "927a9ba6-cf23-4c4d-96db-a3deec678849",
        "cursor": {
          "ref": "c4202e96-99c2-4e7e-9c9c-5d2bc33592d8",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "a6ec06fd-14a3-439a-8773-31898f25e2dc"
        },
        "item": {
          "id": "927a9ba6-cf23-4c4d-96db-a3deec678849",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "a476a830-bf4e-40c3-b302-c2dccc4cc2e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ab0b287-f6f5-4872-adbf-89f2a1ba1bea",
        "cursor": {
          "ref": "d2799f5a-17f8-482d-a616-448e94b518b4",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "71291ba3-4bee-4c91-8559-d70f28cfe492"
        },
        "item": {
          "id": "0ab0b287-f6f5-4872-adbf-89f2a1ba1bea",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "7d68c130-256d-47ce-81a5-68aa8b7b38d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "098fed9f-da96-4d17-8a7f-600bc133a478",
        "cursor": {
          "ref": "bfb38f20-d740-4cb0-8b0a-2ce587eb869c",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "79f4ec85-69d1-4b0e-915a-e525938811bf"
        },
        "item": {
          "id": "098fed9f-da96-4d17-8a7f-600bc133a478",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "efac8aab-579a-4dde-a179-f638856ec744",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 135,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "907f113a-0c52-4188-9d04-130d63ee8cb2",
        "cursor": {
          "ref": "4a05d8f2-8f79-46e2-af0a-dc366c8b2e1a",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "58dade32-9c3a-41ac-a3c3-3d0646d21c2a"
        },
        "item": {
          "id": "907f113a-0c52-4188-9d04-130d63ee8cb2",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "efa91474-0c80-4089-b5ca-8e7cd5698cb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "385628c8-65c8-4a1d-b160-d81e681701f7",
        "cursor": {
          "ref": "ef39fd08-9111-4dae-b48c-e7f07dad11c4",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "8cb06f93-2bb2-40c6-9011-6748f5ea151a"
        },
        "item": {
          "id": "385628c8-65c8-4a1d-b160-d81e681701f7",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "ac0031cc-973d-4f67-b9a5-f61e3d66cecc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2055eaab-9999-4fb9-aa0c-0c385fdf8790",
        "cursor": {
          "ref": "9797eb01-b835-4496-9522-3f72bf6a8826",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "eeb48c21-194b-435f-8033-e648f3a1d889"
        },
        "item": {
          "id": "2055eaab-9999-4fb9-aa0c-0c385fdf8790",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "91c6bdbf-e367-483c-aaec-2c41dc4f5bc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43fd53b8-6e48-4d4c-b9e9-34bc0f8321c9",
        "cursor": {
          "ref": "f3ba28c5-1635-4e3a-bde0-321642276caf",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "c1114257-b496-4db0-b59d-b4e680a082ee"
        },
        "item": {
          "id": "43fd53b8-6e48-4d4c-b9e9-34bc0f8321c9",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "beb7b9f5-9aef-4460-badf-27f23983edbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35cc0eb9-29b5-436b-a4f1-ec4e0611d841",
        "cursor": {
          "ref": "4408a182-a1ac-4677-ac85-960bcbabe79b",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "711c5eb6-0b03-4baf-85c8-ddd4e27cb942"
        },
        "item": {
          "id": "35cc0eb9-29b5-436b-a4f1-ec4e0611d841",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "2f12f43b-d425-4587-92ca-519ef5b71329",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 105,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c77ae66-022b-462b-a61d-05bb09f26718",
        "cursor": {
          "ref": "43517e71-b4ed-4fa3-9998-8f17bf74e54d",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "9e860edf-12eb-4307-958b-be4a6aade49a"
        },
        "item": {
          "id": "6c77ae66-022b-462b-a61d-05bb09f26718",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "267300fd-342d-49c1-ade9-8ef90cacb3ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dda932d-55ba-4eda-a237-34211a47b180",
        "cursor": {
          "ref": "946899cb-3c2f-4fc3-85d3-6728c05157d3",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "832b44bc-056c-4188-b056-0bd2e11afc38"
        },
        "item": {
          "id": "3dda932d-55ba-4eda-a237-34211a47b180",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "2095c218-fbd3-4266-8e38-ebb3bea6fd1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6b47472-a891-4049-a55c-0d689ac308ad",
        "cursor": {
          "ref": "da4f1130-60ad-40f4-954f-613775808b57",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "508da504-88f7-4e20-b571-4428c69da56f"
        },
        "item": {
          "id": "d6b47472-a891-4049-a55c-0d689ac308ad",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "daac34aa-6fb0-45ab-93fb-4c0645979deb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13a1ba49-64b4-4c58-a004-6bc8e1ee33c2",
        "cursor": {
          "ref": "02dd50c3-70c4-40be-9614-4a6583a913dc",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "e21d6ce3-f6d3-488d-a50a-069c1a9273b9"
        },
        "item": {
          "id": "13a1ba49-64b4-4c58-a004-6bc8e1ee33c2",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "8c99bfeb-bb6d-4931-af8c-0f70ea1c8aa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0523da0a-9b9b-4652-90a8-efdb4d7904ac",
        "cursor": {
          "ref": "cd3f7cf6-f1ab-44f6-ab1d-1d670ea8ff52",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "e779288e-1a4b-4a01-959e-9ce7d577681f"
        },
        "item": {
          "id": "0523da0a-9b9b-4652-90a8-efdb4d7904ac",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "18cd0336-ec47-49d7-b716-f7f4e10bf3b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 98,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7ee86a0-f1ee-4727-a737-2219f472e109",
        "cursor": {
          "ref": "e2aafdb1-d559-44cb-83b6-8c4eb610fce7",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "f6daa255-eb10-46bd-85b8-8dbc26718a15"
        },
        "item": {
          "id": "b7ee86a0-f1ee-4727-a737-2219f472e109",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "1931b29e-2fbb-4868-964b-a924260e2ca5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fdbfa4f-8b6f-4058-b701-bcf276ca2d68",
        "cursor": {
          "ref": "8f48b170-e7be-48ed-b72a-5f169af55be2",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "0d1423d6-76c6-4a9b-9df4-49c91514b531"
        },
        "item": {
          "id": "1fdbfa4f-8b6f-4058-b701-bcf276ca2d68",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "f2c6c72c-2f58-486b-85ad-ebad08a227cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46cf3c5b-c4ae-4ad3-bcf7-d358b107dba2",
        "cursor": {
          "ref": "0c02dbf0-f337-4705-bc91-8f2c758b30bf",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "817b8c0e-d2ba-4f18-8e19-89e506449641"
        },
        "item": {
          "id": "46cf3c5b-c4ae-4ad3-bcf7-d358b107dba2",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "f6509c6b-ef5f-4b9d-8bfc-117ce708d640",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5489ce59-f67f-424b-8c65-962a4926dee0",
        "cursor": {
          "ref": "c08e38a2-1d49-45d2-a1b4-8538edd236e0",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "3e8c7944-803b-4815-8a91-d9ac5fff2ada"
        },
        "item": {
          "id": "5489ce59-f67f-424b-8c65-962a4926dee0",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "f5d1dc67-ab03-44c2-a624-0fa59c361cb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c105fde-fade-4e30-b5e0-d05114ccb24b",
        "cursor": {
          "ref": "5ecc3202-514d-4335-a126-d4c3d92a39c1",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "91dd3b10-b2e3-4f4f-aebb-b1acdce43507"
        },
        "item": {
          "id": "3c105fde-fade-4e30-b5e0-d05114ccb24b",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "6adeccee-f060-4b1e-b42f-39b7cfc3815e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81ac1096-fad7-4ac3-aab3-51e82b1dc85c",
        "cursor": {
          "ref": "88d5a13b-ac24-4f62-a043-4f70d64224ea",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "e33803e4-b9bb-4146-82ce-f20b5b01bf7f"
        },
        "item": {
          "id": "81ac1096-fad7-4ac3-aab3-51e82b1dc85c",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "cdb4be99-efd9-4f0c-a6a9-2a633d08907e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d46901bc-df79-4012-8106-868f0d618630",
        "cursor": {
          "ref": "5fdc0435-a030-4f46-b02d-dc34e5418bce",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "6f3d1e30-b966-4c2f-b50c-8d82cfa20898"
        },
        "item": {
          "id": "d46901bc-df79-4012-8106-868f0d618630",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "3c03beb4-ddc3-4538-94cc-ee85ba2cc4e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c8deec8-db3f-427a-99ba-c351e44de9e5",
        "cursor": {
          "ref": "2ba4ba91-6a78-439e-b525-29d6c566488d",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "124c79cd-714e-4b5d-8f39-62bcfe901822"
        },
        "item": {
          "id": "1c8deec8-db3f-427a-99ba-c351e44de9e5",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "ce4c76e0-9a28-4d55-9f9a-740a8e5a5d43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b340023-5cb4-4dad-9853-1c808a94de12",
        "cursor": {
          "ref": "c011185b-fc97-4c06-b2e1-b28b783abe28",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "d82787d9-0537-4338-ba6d-0aa2de25fdad"
        },
        "item": {
          "id": "2b340023-5cb4-4dad-9853-1c808a94de12",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "b32ec4b3-6e4b-40a5-8493-770d038623c8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 57,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2707643-34fc-48e8-9a2b-4d0ec7ae0874",
        "cursor": {
          "ref": "d10a9973-9dbe-4aed-a82c-d6b3652daa46",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "fee0a22f-7998-4405-ad33-e41a7a4a042a"
        },
        "item": {
          "id": "d2707643-34fc-48e8-9a2b-4d0ec7ae0874",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "15936df1-7e99-4926-be99-6584e9b32fba",
          "status": "OK",
          "code": 200,
          "responseTime": 101,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "501c9088-58cf-47e4-a7e3-09f4659ec25a",
        "cursor": {
          "ref": "e6c79583-fd55-4fee-aeb0-d70a3f48d291",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "78d694b1-2b1d-488d-b33a-a4fe32abdee7"
        },
        "item": {
          "id": "501c9088-58cf-47e4-a7e3-09f4659ec25a",
          "name": "credentials_verify"
        },
        "response": {
          "id": "7bca7e69-40fe-4b14-a5a1-0e75a55763c4",
          "status": "OK",
          "code": 200,
          "responseTime": 4174,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c270be0-50c0-42a1-b6d1-a43ea13d3b6b",
        "cursor": {
          "ref": "d1623fd7-38ca-4e5f-ab41-bd5571c93674",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "89ac132a-f5b7-45c0-84fa-5023711f66f8"
        },
        "item": {
          "id": "5c270be0-50c0-42a1-b6d1-a43ea13d3b6b",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "c56ff551-5f02-47db-84f1-d8433da6c9e3",
          "status": "OK",
          "code": 200,
          "responseTime": 4733,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "73ce23eb-7e56-4e91-a29b-2b475f7a39ce",
        "cursor": {
          "ref": "0ea6bf60-a06f-4322-9080-efcf1ee1521c",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "7b372b10-1277-401c-9be4-c4016e987984"
        },
        "item": {
          "id": "73ce23eb-7e56-4e91-a29b-2b475f7a39ce",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "08ca8fa3-6f74-4ea0-88b6-0a59a62b37a5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73ce23eb-7e56-4e91-a29b-2b475f7a39ce",
        "cursor": {
          "ref": "0ea6bf60-a06f-4322-9080-efcf1ee1521c",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "7b372b10-1277-401c-9be4-c4016e987984"
        },
        "item": {
          "id": "73ce23eb-7e56-4e91-a29b-2b475f7a39ce",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "08ca8fa3-6f74-4ea0-88b6-0a59a62b37a5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d55ae336-26ed-4d8c-b610-3a25d3ec2092",
        "cursor": {
          "ref": "1181a32c-4472-4cdf-b435-2bd0ae7a1fba",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "b563bd69-4192-4875-bdc9-96a56d6a64af"
        },
        "item": {
          "id": "d55ae336-26ed-4d8c-b610-3a25d3ec2092",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "11947da1-41df-4feb-af99-460e0c1d65f3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 55,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d8671e1-60b8-43b2-a8c8-dc30cd60c328",
        "cursor": {
          "ref": "bc29fbab-b4e9-4fce-b225-07b367a530f6",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "a0e9e8d7-6d68-4720-aade-d11108a91f73"
        },
        "item": {
          "id": "9d8671e1-60b8-43b2-a8c8-dc30cd60c328",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "4bf23ec1-1f2e-435c-bbb1-1604a1859a7e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}