{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "2cc46064-55a2-4516-b3e9-7cfda7907331",
        "name": "Clear Cache",
        "item": [
          {
            "id": "52fd20fc-ea16-4377-b72b-a1cd45fb75c8",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a24ddf93-b4a7-45a8-aed2-678006b5c035",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "e61ebbcd-286a-4a33-a9e2-f700e710574d"
                }
              }
            ]
          },
          {
            "id": "1610a36d-39ef-490e-98fe-131191b558a1",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2937a831-f99d-4cc2-8728-1b0e25e71406",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "67ead22c-4809-486c-aa34-530c239e9c15"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "a40e7e11-c7bf-4411-b549-df682ab0805f",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "b534a633-bd67-41e8-adda-d8b16aa3128c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "fc2b19d1-4a4b-4e39-93b1-5181abb3efdc",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7b51789d-44f6-4d1b-8701-2d1593e91b7c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "30f3d1cc-6039-4155-b085-7460fc0c9e97"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3740154d-2ff6-4cc4-a5a6-f187cd2c55c0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2ab7a63c-a87a-4b1a-b3bc-00173d44800e"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "22c84c7a-5842-4e92-b763-e11129a76298",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6d2ea9ab-58ae-44f1-822f-68dcb3026b6c"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9c822ce5-5050-475a-8c1c-020768ee4331",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "9cbf3ac6-c67d-4c72-922f-d6916421c5d2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2d2c7f7b-afa1-4806-aff2-a2075d8ec81a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4534ca94-0548-4643-a9a4-176ec27852f3"
            }
          }
        ]
      },
      {
        "id": "f677276a-1cae-46cd-9f07-0f95e04c32ad",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "28981fd9-a436-4fed-afd0-1334eab03de5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "cc272f8c-1dd3-406c-a8aa-8bac7a6cf4cf",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "2286ddc9-95ad-4d74-ab4a-be3bf6cb1c13",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9696372-86c0-4a9b-a5f3-3c85c5be56b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "71d45ae3-e600-4172-9f2b-7284aaea6aef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfddba55-040f-4173-95fb-59fd4611a4ba",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12c3d9de-0449-4e9a-b360-9e45b93aa03b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f5c14fd7-bf38-4a9c-a7c4-2ce201c2b967"
                        }
                      }
                    ]
                  },
                  {
                    "id": "690999a4-a95a-4b19-9279-ff39f28afe80",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8de34108-799a-43e1-8ec3-c1f360e69d07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4cc3d13f-6626-4a6c-b928-2b42d8d7cfd7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ee90dc4a-0da2-4413-a822-9f74904f45e2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ba6f1687-1e91-4bb9-9d6b-df92fd3d860b",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "201f9b75-1522-41c0-b900-72e8a1f974cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "787535da-8c94-42a9-9fc5-c83b35bbd4cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e7cbad0-9e46-4976-810c-878a79ea0ac6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11f6cf17-37f9-47d7-9601-a482012b6126"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "7e45684c-ffa2-4a7a-aa40-22734eae39f1",
            "name": "Positive Testing",
            "item": [
              {
                "id": "26473dd9-a5aa-4412-8d3f-422a20e44285",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7d7e64a4-c6dd-4108-9631-c5a79b7261ed",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "5bb21c87-3b51-4909-829a-8e112134dd35"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9e115f0f-fe8b-49fd-abee-9e328fb59fa7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "50392c54-4820-4228-8636-1420f2c86695"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b293fdb3-0f03-44dd-a9e1-d5fd23468af8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "69a8a0d8-a1b2-4a0c-82aa-3eb5e28de30d"
            }
          }
        ]
      },
      {
        "id": "fe42d3f1-b230-411d-8479-604328699d64",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "b489222d-1937-4f2c-98a1-6d6dcfda7938",
            "name": "Negative Testing",
            "item": [
              {
                "id": "47ac994a-ddfb-4277-8859-67bc3fb8a019",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "ced6e928-35f8-4776-91d2-66f551028b93",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffe07ba6-329f-425e-8e75-a53b3fb84734",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "024e9598-517b-48c8-965e-811dcb411849"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2814d60-0df8-4f7a-b079-2b486549032c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "66ed428e-fb08-439e-9dc4-7e772abac8ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3756fc77-50b9-44a8-9553-6f9a7798ceb3",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26e6f24a-7bb0-4a17-afd3-c505502ba299",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44107d10-fef4-45e3-b00d-be4629b88b66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2c4652c-f373-48b7-ae2c-0e048a5e0bd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9a7e7b13-6728-44c4-9e03-a8bae62d3728"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7a152b1-01ca-495d-892a-af11d66c2f88",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed834f95-77a6-4b59-81b5-fb7530b0b86e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62c44590-ea59-4d03-8a43-964087589f20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a5fde39-19e7-4303-a8ac-66b4e0b406b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4cbccac1-3b41-446d-af6c-a05817c3e32c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdabc1c2-8551-4625-8c37-f665e4b1d7ed",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bd8b5ff-1662-45e0-b684-dc248e0f006f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e3eff84-d08d-4435-92fd-49584e3b5d28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e98bb044-c86e-4254-9ea7-5985ba86b869",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "01b6b5f5-f160-48e0-a559-ff8337581971"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91d1eeb6-490d-4a1d-8d5f-a5aabe2b3722",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdad38c4-5466-409c-80b6-9022ce148ae2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8477793-f583-4ccf-a8aa-39c4c8c39ef3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b08059d-ce42-418d-b48f-b8f3726ebe27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "51f78d23-5063-4c43-999e-d8b71b911c11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a949754-e027-49a2-bbc4-6f766fb96b85",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fb37d95-5cd6-464c-9243-6cee3e8266f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "032b2089-e6c1-4747-93b8-2baad748daa9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd3590f6-6d4f-4608-805b-ff8446b832f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "78b4b09c-4ded-446b-b667-d69e91b929f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1337484e-265e-445a-8225-d12dbd177be9",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b24e983-8a19-4177-badb-133e27f3a3ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59c5c912-3ca4-4ac2-8920-ba4344fbd692"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a059729b-a7e2-48ca-93b6-cfaca95c32f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "652e919b-18aa-4bf9-89cc-b9d727c8dc84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6b729bd-6569-4cd1-88a2-bf304820c7e7",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fb16fa4-895c-4b5b-83fd-2c5cc61ce43b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79202cf8-701e-4854-b364-aa4d145ed93d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ade276f-12ec-4365-9cd9-15904292f7a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "045c279f-4c4b-417f-91cd-34f2306ece3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb735963-28fa-4d23-9d9a-0e83cf022bfd",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e828072-35af-452b-8b53-ba22fdd9d5b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a529f0cc-51c1-436e-a0cf-9ce427019715"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb9883a9-948a-4a42-baf9-cf22bb9055b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "386dab28-020b-41b4-9e9e-e4edad4ff159"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7e16c61-8f62-4092-bb5c-58de95dbf297",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1608bc5a-e84e-4a12-8a61-f262cd8bd88f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38ba5829-7431-41d4-a186-21207c6cb17e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e83b211-299f-465e-9578-b61db840aa01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b61b18f1-11b1-4160-9c3e-fbe0af7ae581"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56407db2-0ab3-4238-a546-c5b11f80a3d6",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcb68258-11ee-49d7-94e6-8f58350969be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b43c3b1-32b1-4fb5-a9a4-a6e240f23c2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72929f52-5663-438a-9746-377932bfc78a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "40cefc20-856f-4ce4-817a-02b5df85100d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81011ba9-27e8-44fa-963b-c9fca11cf3cf",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49a80c40-f615-4c9f-a980-2f6b04458b28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf35d716-a6a4-47ea-8d03-7de21d4afe39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaf9c066-ef6a-446f-ac6f-b72128f7ebc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "79cf0db8-b17b-494d-82d9-0d98fb98036a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9756705-60bf-4c5b-8d3f-bef15010bab2",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeaccd02-3466-48d1-8c2b-6c0bbd03f58b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68f39cd8-0a85-46b8-8c66-785884e86329"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bec59d6f-7948-4df4-8045-75bb183c7c15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9d65c271-7188-480c-bbb2-e023ccc3a6d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f2116b9-dab1-47d8-9c28-ee2c3e5e7df0",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3a8226a-6f8f-4f5b-b14f-f623929a5ee1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba34c323-e8a4-48b1-ac93-a0f5a97102b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaa8ae43-bbfe-4da0-a6be-1b5b625f812b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8eb0be11-549c-4d40-bf5e-8595ce0848f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8471665d-401d-46d7-aded-e5bc30eb9cd9",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7011616-364f-4aad-9ade-f42e9f7b6f00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5daff383-c665-402b-b89e-d7fc54923c79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91b0f96a-8e95-4775-9269-d279c71fe9f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4bea86e1-b2bb-4327-971f-fe546f32efb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29d332f3-e0b6-45e4-8e34-8f115aeed351",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a41496dd-9ddb-46fd-bfa6-1e7398a4a60b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1384bd3-db40-461f-865b-991f644615be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0434ca1-8601-4870-9008-fd0c21b35d16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6732e4c4-a267-4a04-acb2-fa3dfce91ff1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13c6ac16-25a2-4a88-ba1d-800360237a6a",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ded1a0a0-5100-4d1c-9c5e-fc1552d67a84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45eab40e-2c7c-4fba-8a8d-ee5549c0bff2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97fc9d61-f317-407f-b103-d9751d0ea5b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f0373a27-de99-4526-8fb3-bc8a06ca1169"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3bac75e-1a45-4920-9b23-c7a25784ba97",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76db5eb9-1e9c-4be8-871b-ec6d98fd8905",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08fcd0e1-1365-4cfe-9918-4c6534bdbaab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3287c3bf-2a3a-45e3-b145-b8fd90124e9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "612c83d7-dea4-4f40-8d55-d490525d1fb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6313084c-7028-4149-b497-d5d1cf34b35d",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3bdabe2-f2ad-4101-b83a-7e728fe1449b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa91ef4a-1e37-4a48-9c22-0572198d8955"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e86debde-564d-4e23-bbaa-ac28b35731e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d915d127-2acc-4b10-97f6-1cb800a1c0dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dc9b606-86c3-45cc-afed-93d4f37c28dc",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8cb3900-0baf-4b6a-a64a-43d4e709dda7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a6c7227-920f-474a-8932-6135fc8cd4d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd62c1b7-a271-4a59-aa21-c282e76da501",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1e475a88-6ee6-4fee-9985-311df6ab800b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "298c6582-c388-401e-a08c-2ef60a041346",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85f7b4fd-d896-4cae-a03d-9b34b9748a4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26950466-626c-4fe2-82b0-905f28aca44e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ef5d54b-d701-4a56-b4a9-ca8dab0a2052",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "75930394-cfba-41b9-aff7-0c7d3bff1426"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66738cc1-8506-4c94-ba52-87c8c4229ddb",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa1c5e84-3a9c-4469-a5d2-17205707ceeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64d1e51a-1451-46fb-b5c4-b92097c89378"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f730549-d580-4988-8450-087e53389945",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "86aa0533-acce-4ffc-9f50-252af9a96cf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "674a20a3-6c75-4a49-82ee-e1480dd9a075",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16677a7a-1285-413a-8d32-0bc71b5c8869",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03637552-f144-4e6c-b91f-8d863210551b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46c4d701-dc77-477a-88f7-e23e4daeaffa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7889a978-5917-4927-bb5b-ae509f58ce9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6005fe9-10f3-4b0f-89b7-a1e01dd4091f",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "538773ec-b50c-4b84-b15e-04e6f08bee6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99829af9-b782-48fb-a3f0-dbe28ce41431"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68e79e07-795a-462b-b4a8-a4252bd7bf89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "056a78af-00ae-4f92-91d7-052e199d8adb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83df3a58-9473-4c22-b4f3-a09b5782cde3",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2f44674-99a4-4f64-af20-48f3e20ddf44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebb14716-ce0f-4a7d-9be4-ed2927490695"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc946c26-62d7-4f14-aa41-f91bfcf8e101",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1d1869f7-edef-49a4-98b3-8710d4b50225"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58c84385-9bdf-4eba-acb4-2db084ddc414",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5856c4f-4bbf-4901-8b2f-7583a595d571",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2ead3a6-fe1a-44ab-bc40-0a586faf8693"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68bcc464-06cf-4fba-94b8-ff8f539cd6ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b735f1c-764b-455b-8edc-48d0bff74f1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdf0b469-691b-41b4-aac4-1a0a36d2949a",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38aae3d2-6f4f-4ad3-bafa-48d02e82e993",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "919d1d78-9b7c-4738-b73d-696191906928"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36911ffe-058e-48ac-b85b-bebe6d63ca2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "20a99f8a-b030-4c13-be17-e8dec490f965"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34d3e1fe-d0a1-423e-a1a1-208036828473",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adbf5f3c-c116-4364-8ac1-2231e112bf71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "997ecbf1-12a2-4521-8c96-6219efba31bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93c219e4-fd28-4d02-bdd8-7ce101a93106",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "10b1a18c-3fb9-4d2b-8c18-de9ef0af8a14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "015e0268-db67-45ba-aa6d-e187cb8ba28a",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7aaf5842-f4ea-4b12-b6f3-98fd17fd20f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07cc5a73-5824-45d7-9dac-9fed5ba05444"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88782270-de68-4236-8799-44de4a289f3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f98dd15b-a296-45b7-b1ca-42e00b40df1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f91d9183-f223-4c7a-8ddd-71ead33257e2",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86430715-95b7-4fa9-bd45-a41ca06f7462",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90dbf6e2-20ef-46a3-b8e7-4271a7513988"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd2e11d5-bb78-4597-9e10-535d95505064",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "ba38f8b1-4a45-4978-a4e0-029875cc6dde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00ef7438-4c20-4d4a-885e-697b04d13d92",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6899090d-eac4-4281-834b-a0003a7d99b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b15ee157-1978-4980-860d-932af76d8569"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06b99e81-5cb1-4fda-88d2-0d6597d86186",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5b6a0db8-8139-4b26-824f-99b16bffd471"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ba2ad72-fbb8-42f1-abec-e60c93406f8f",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb5bad51-78f7-45c0-abca-0febceb07933",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "262c7d3b-5ebe-466a-9581-5221f7d5ec4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "757b2c82-47d9-467e-947f-449df5d1af80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9b623e66-0654-4f3d-b3fb-95a6338041db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f46e2400-6581-4e98-8da8-103bc4fdf96e",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c39d8f1-0c00-4e81-bdb4-6ab98b0082e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "deb784a3-c1d0-4602-84cf-89cf6865a4d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc9cca35-9438-4573-aee6-23b28cdf7f59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6902f790-4a32-49de-8920-2b738dec0779"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47180640-ba98-4fa4-bb67-ba23f98ef7a2",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06b35b68-ed4f-4d29-8edc-6c031e31c93f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bb7b4af-9164-4c9e-ad6a-23dafa934f2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f8757da-a510-483b-aa0e-2ef8e72d9d4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f850412a-fd15-445e-afea-237185a0a03d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "324556a5-1b47-4f4c-97fa-8ce03b842127",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9673db01-e29b-4885-a80c-74f7773f2642",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2010b15d-8c75-40b2-a0fa-81956d20a17c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29d93c98-6a52-4337-9891-8709afb4ba54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "66761598-4a6c-49fa-aa36-63f6730311ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47859ecd-5e24-4c26-ad06-93af618661c9",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17ae9584-9ee5-4e18-88c6-151c9dd8c2b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "54b37d3d-91d2-4d17-a3d1-facadbb951d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ba4ff30-193f-4d58-bfee-b9f7f576d0e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9f01fd69-a48e-4bea-ba61-21938cca85d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c66e8f2-410e-4a0b-b22f-e67e0568b617",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d584b88-33bc-4991-998a-aa88d2bad9ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b6d78f4-37b5-429a-a4f1-7abb8b6fc9f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35027962-98e2-458e-804c-7e954c4cdf52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "13020752-0ff8-4cca-ac38-566960ace27c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baec95d2-cc9d-4642-86d8-8933ce03a345",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "941d77fe-2a3d-4c63-940c-928f6d811a38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b3d9c70-1233-42b2-b122-2c717f331648"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92fef765-ad8c-4f41-b833-5a09233b8724",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "1433e882-3592-4bcb-ad4e-592f94efa80a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ade7513-1724-4364-86a0-5e5bff7ae8c6",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a91b7fb-f252-4708-aa1f-6e4fc6e554c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6dbddb6f-8e33-4a20-9ba3-fbd10ee5813c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ba8d4f5-6146-4c44-8bd6-1549c4c9a825",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "7eb90b2e-aa68-456b-a2e3-c53258f6a2ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3242d2cd-a4b9-49a3-87a3-37af06ce345b",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32322f54-61c8-4a57-8030-01de01bb93b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cb31089-238b-478a-9c9e-9d4c9058f04f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "135e75c6-4782-4699-a88b-d05da23797a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "debbb376-8412-406c-8e2b-f6a9af4a6bef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3abf9a19-7484-40e1-80ce-6ff77540fa78",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76dc4832-18a2-4c47-8eb6-410d54f8ab40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffa2cb55-c7f0-4ec8-9e46-ea5cf8eebe3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb914646-e3df-420c-b337-a1982c69d1ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "4039c0c4-5936-4ebe-942e-f88a9b900a46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b517b8ab-4c81-477b-bbd5-e62bd14042fa",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30d0dcbf-8c9a-4109-aae8-4c2aff4aa082",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "348e6ba2-6c1c-42c0-95d9-2486726b07aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e62a3e59-27cf-4baf-b555-a49e6bab6c1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "96d3e878-3e96-4d23-a5ac-0006082ce2c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "327cabbf-061c-46cd-bbd6-46add98c9aec",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83c05bd2-8311-4078-98ac-65788d7c4d5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f4a09e9-d819-4d84-8457-85832f6b8038"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "186a246a-9b5f-402c-9dc5-c24d34d9bb1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "b0638984-3625-4671-ab2c-8a7faa5f0d40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1db3175d-fbf9-4356-b8d8-845a2d69ad16",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc2207c6-6799-44ca-87cd-7526d8fff79d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e524e464-339f-4fa8-aa33-4c188a8b670c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf4b0600-34c9-454d-975c-170a635c4599",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "a9d180e1-4168-4089-9a16-39f9093396fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbb1b262-b617-45d5-8948-f8a05c0e0d85",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1417762b-b37d-4234-89b7-63c26a22aedb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "951e6681-c9ee-4abe-b154-724267ad8d0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63f7bb39-ef6a-43ef-ad83-41213c641ac3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f58a8ff4-dc47-4e30-b5ed-9100fd96a06a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d99730d-b5d5-453d-b2e5-4a2a03d9dbbf",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb62011b-66d1-45ab-a977-f93f8da1b00c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d27014d-a2ec-4a4c-881f-acd68ed35a0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6facfa62-45f7-4953-b576-74767c7e1ebc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "65ef8fe1-1802-485d-9fc3-6ec5805330b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eeee16cc-710f-4a2e-8a9d-fabb10c4e193",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ceafdd96-85b6-447b-b319-a24fefe982e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00dbdcca-1379-4b59-98b8-567d69bab870"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e427d047-3862-4631-9fba-144ea103911b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "864d6a54-99fc-4e71-a008-1e2fa160a2ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55225d2d-6136-4822-baa1-a741d7a4e3c6",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02826fae-584f-4ed2-8af7-f536efd2c993",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b885bb38-b4e7-4d55-9040-76911871dc3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "227475f5-1837-427e-a9d5-371247681cc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "29baf1b2-05dd-4e72-8efe-13562eaa0840"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e5006fb-76f4-4824-90ba-864b048e6cac",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4c3e558-6b81-4f4b-b914-4f574efb96e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a28f57c0-ad84-421c-bc5f-78b10a603cbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6317f4d1-7157-4fe6-91bf-c7ab7900dbbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "016a404c-4cea-4fec-be8e-f8061e749a6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51bee4fa-7bc7-4333-8b33-9583419f00b0",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e81f9adb-5fa3-4f75-b1f2-b471db7a04e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "627789f0-abc3-44e8-8f04-9b4a79f7b88f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cfe7c2b-e40b-4b64-88c1-9da9c279ea4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "18483f51-570c-4fdf-9412-c61d64815904"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fd471a6-bfb9-4e99-a2d2-dd6ac40fb78e",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da3f5dc3-9c48-45d5-a9b7-d2c70e8bcb79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fea43e6b-5a3d-41d4-aaaf-262995cb4db0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "612b01c9-506a-4423-8a01-725ebdb9612f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "e29bc53a-add7-4782-bae4-d4c299142652"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86bd7323-1486-4299-8edc-dc470cf92250",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b41c74e5-b78c-45c2-a140-821a3ef94cb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "675ae4d7-0f25-4a5a-bf9c-3c715976be6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e38e12b-735d-4c8a-b73e-07bf3529e0b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6244a718-5254-4fdb-ac60-7bc2336739a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09ee6a00-6ebf-434a-9669-700d8d0627b8",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63d578d1-e49e-4143-a913-4b7e31fcd57d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cc665e6-ec7d-4fd7-9c2c-4b5864cb3696"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84ac6216-b321-4800-9671-d543cea72a73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "895c55c6-293e-4407-8195-8ea2b061b3ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1760a27e-b384-43f0-93af-6f5745e9d533",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64313b66-2e9d-489c-8b82-98b29b334022",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0b90336-0af3-4ff4-9070-88db21a991f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35335cb2-fe2e-429e-aa23-51610b695621",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "44b1612d-9ee0-4f2e-a829-134d41b586b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6a572a2-cc3d-43e2-9ab7-2ba28d86693f",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a3292d6-f104-4dc7-9c74-3fd6c970f6a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ab0e8f6-58b8-413b-a552-d29a32d306f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ecb09c3-37c4-4d39-b3a7-0eccaa8d5834",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "993831bf-506b-46b8-bd1f-a23f9712dad0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7e8f6dd-721e-497d-aa0d-9e8c2f63b14d",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0627fd60-076a-4178-b9e0-845eab3ffda0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a923cef4-1e26-420c-a0b8-abb726f8c6bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "560293c1-353e-4344-b634-19cf5cab8be8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "544ce096-69c8-4000-85ad-7e1ce6c46c85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f90e0f0f-f9fd-44ae-9e2b-df19fbf3d4e0",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea50c51d-8482-4b18-9aa8-0c036f3ac138",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "878af5a7-98c7-4be0-978d-6221e0f950c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15b2bc56-4770-4214-bc4f-37380bdcfedd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e5bb7fd4-59ce-42b2-9a89-3f45b2dcf049"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35c2d081-5bf6-419f-bfb0-9967c52880bb",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "119862f0-b450-4a75-aa31-b3807acbdbde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac7c47ee-b0db-4748-b9a9-6197e115afeb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de89afbb-d4e0-4130-b6a0-ccf7232f2297",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f3a5ccbe-1d36-4d5f-af26-48679dd7b37c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2df88cbe-fda4-4351-a3ee-3b3ee2382cdc",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "164eec91-b524-4114-bfaa-c0485bd4d88c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "929d1619-1b1f-4b60-aeab-567b21d43279"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fc457df-af38-4934-8b39-65ad290a3be7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "cb0339a6-8de4-4f22-8ba5-4b1139fa2d9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c0938ab-1ca7-49c2-b8b8-f9d64ec7c136",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cce517b7-2833-4dad-9061-9809082c8029",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2981cfd8-37a9-4b95-9fe2-b420e47a3e8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24b533f8-294b-47b1-93f8-073863e3ed7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "31bc540c-5127-4d4d-be83-d56359321045"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b15ebed5-329e-445e-b6f5-d25f8dac6b3a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d05462a1-1c23-40bd-9028-9762a612a174",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "992cea0f-f410-4460-bc79-613805063bbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b023694-8f8b-418e-af8a-8b92f18f4cc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "868e84ab-f24d-4998-92d9-b293c9a57cfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09196be1-a6b7-4d57-89de-35cfb5f810ea",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c98c491-7d5a-4f8e-93d1-109e810731bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e530831-cda3-433d-b880-3e040fbc3134"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2069b297-0af7-4d1e-8d24-50faf584b725",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "094a409d-f8fd-41db-a5f6-a69f11e97898"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f078990f-d6db-44f5-a696-9cd266de5704",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93b2a51f-7370-40e2-bef8-fc5fe67fcefe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0f82a73-b474-4360-ab29-11643dfbc5f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0de7e0a2-5314-4f25-b410-41332418f56d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "b5243599-6b17-43c6-931d-e4e62c957c43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dbeea35-39f4-47f9-8d48-75cbe1548efc",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27787e23-6c97-4684-bc29-0fb043f934cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be3aa5dd-c605-4b36-87cb-fa9f3ea698bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a8c2b64-9f1a-4c01-a3dd-04fe07a04407",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b144fa96-2343-4567-8d25-b5398b839213"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e9876bf-8968-4483-bb03-606b4403e778",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a529805d-7c16-457e-9c61-04de65b8e1a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab5b4369-e61e-4489-9182-c109900831e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a44dfbf2-ff0f-4e63-a325-418d8ee43542",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "02d4cd2e-1cf2-4c3c-9cfa-71715c0bda6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34ede380-88d1-4af1-9e0e-3e9a4157ae7d",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30f6a3c7-d0c5-430c-a507-8a203c225075",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93387dce-12b2-4001-8d99-9629d8300e95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14e098d8-da9b-4748-8e66-b2a83e4ad0a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e6949bff-d902-4f87-97bc-1da4726c613d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01018f6d-5fd3-4773-b042-c75171c03fe7",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98d5bc4d-f8bd-4535-b2ed-f56b40a19b42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76cb80ed-c892-45c0-ae66-1e23879b66eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7809716-bf37-4cbb-b588-af762ea664db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ed09df45-bb42-4961-9a60-b4f6ab4fbb00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "449e8c1f-40a9-499b-9830-e73cd97b08e8",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47deeeda-5234-447e-8b79-68adc36b0708",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cec80ced-1425-4ba5-a544-e0837e733b30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a1b22b1-cb7a-4cd3-8402-7f8b8ffae83b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "0604cf4b-1bac-481d-8d02-137402026892"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22694a3c-87cb-401c-8c36-4f85d34bdbe4",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50b58b25-c39f-4e27-a6e3-e551e72d238d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc875139-bbfb-4248-aba6-8540fe4e2d2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9990636-5c20-4cbe-a08f-3cc5aef6ab50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "61f54c4d-eb7f-41b4-90ec-21e7f677ea7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96f3599e-ea9d-4f80-ade7-d80cedb211a8",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3ed7b56-cd27-4472-af5b-9398557d77f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac7d6c39-fe12-4ce5-91b8-cb12d0472c0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ee39a68-1ace-4fa3-87a8-e1c84e0692e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "116e4e02-ab5d-4f9f-b31a-9ff9dd230237"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6d5c003-35af-4a37-af50-98414232b854",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c08b4054-73a0-4149-b5ca-2dd29945e5a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d136292-9236-4392-96a7-69c3947c8627"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0859eff7-c653-4e98-b67d-8b7dc4383bf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "42c9bcc0-32f0-40f7-aa4a-2a2e8abd020b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15815ace-41d1-4948-8390-a2568c484b5d",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "650c29d1-976f-4f13-a3f9-1591b86ca667",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1c76d20-c100-4deb-9af3-c959eb63518f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d350d5bb-4947-402a-a78c-160e9d8c8f5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b66fda23-47c6-4d24-9b37-8e1d191bc927"
                        }
                      }
                    ]
                  },
                  {
                    "id": "838a7a83-ca72-4b45-8be9-03c7f9ac7b98",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a77cb5d-36a1-432e-b8bb-85acb7017846",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c189e712-503e-476c-b6b3-10350f96eae7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7ac2f40-b73a-4824-9b41-ec9c7acb5f43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a472768e-6e21-4313-9575-c6cf5cdbf0bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "933b6645-d63c-4fb7-91f1-43ac5b073582",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3087ad6-e221-4d69-987f-6e764a2263ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c37b9d8-c361-410c-8ffa-e241ff292291"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e407561b-00cf-42a7-b462-d224f25028b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2b9262e9-001d-4cbf-9262-1c33e84661f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cbc5f9f-4479-4e58-ace7-c89e70799c0b",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41304851-1dfc-4e47-9ea3-9fa94c423108",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bae4c054-8a66-48b6-b617-eb80d054bd87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43194921-70bb-4115-a28f-ab19c88a2fbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "847cff16-0004-4cd3-ba6e-5e420df497ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86114090-9991-4a5e-a0bd-8b45af3f6759",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ba098b1-7808-46db-88dc-19d9cf7bbda0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b2b7d4f-b8fb-4af9-9b94-0b9e1a00e408"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea209c49-7bfe-409e-a85b-8ee0fc438334",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "47565fa9-2f21-4206-99eb-18e7f06f586c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24f26143-1e38-428b-81ae-213750aeeffd",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5552fe62-93a1-4975-9ca6-2dc1859398d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8632a83-929d-4853-a107-ce978ac91f14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d86a4086-d6cb-4d06-ba5b-e6df2cc615ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "97fd0458-bc95-4c44-9048-2db623cca13b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35f8aeeb-d9a8-4eef-bb69-5efed08be800",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7394bde8-03a1-4582-8c66-7b16bb5bf2c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d397f62-a95c-496a-a9f0-9da28897d31a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a329164-fd1a-4a0a-9a29-bdc2f2a8b3ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bf7152ba-bd11-4ed3-bfeb-5c17601629b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3552e80-4221-462d-a876-dc5cb66f2e8a",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5e978da-09db-4d03-aa94-74201734d435",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfc3a45f-49e0-4501-95af-b4ca1e68be56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5adc931-d90e-4353-8d44-31115e476470",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "744dd1aa-6ca2-442d-8ce5-c6a3ec023915"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b250331-0bd8-40f3-b872-05516554198a",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d10d430-d71f-44f7-9af1-12ef15ea9ff3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2342184-ce1e-41c3-9e1f-b5e0e4401ec1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31ad5f55-bf64-4dae-8df7-1801b990a18e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9b4cc158-b8c7-4d76-aaf0-7a279f5903fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6248c0c-e0d0-4dd5-b036-43825f9a6a96",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2afbc497-b2bd-4194-ab07-7d21ef5faab3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90fa13fd-e15f-4d7a-9cac-018fd0f52085"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec1fee50-4abb-4036-8216-3bfc2822ce67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a69306ab-04a2-42b2-9807-7e89851e8dd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e44d4a85-3f69-4d9a-948b-0ee82790a282",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98a4e2b6-64a1-4134-9ced-11c7ba1be9ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad441f98-3062-47e0-abb3-c3bd74e13b6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c78f6419-ff3d-4513-b40a-4403dde06480",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7d67b6a6-f895-4dc1-a293-ca7087f0b773"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad1741af-0dfd-4801-8c05-3b7a4dcbc697",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e9595ed-bf6e-455b-932c-56959fc2da20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b6695d5-86e9-4ee0-8789-2c18ecda4c05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f828884-678d-4bd7-ab5a-5a922c235972",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "91a77216-66ee-446b-837d-e6bf44451f3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e87bfb3b-0203-4c25-8fb1-4d23145214af",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bc7d0e2-a1fb-4cff-81f2-e938277690ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c3b5ee1-a209-467f-8582-88ce48027f59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67d112ef-3084-4f4b-a3ab-67a891123e6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "40993e20-d015-439a-ba2f-0c5d467aac01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11a6abd8-f9b7-4bbf-bf90-af12a46b5c9a",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98b5e39e-0907-4a9d-a21e-190cad984925",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b50a29aa-f644-4d7a-b580-0a92cf0c8ea7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4fe922f-1244-44cd-8f2f-370f9729a5b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5ea6fd0e-f3b9-4f7e-b744-543c5f6aad61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9562d1e-bb56-4666-90ad-393adaac57cc",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77fffb00-e1bc-43a6-ba95-4f436d3e082a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4c91c11-f775-46fb-b722-48caa6104c01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6cc5ee5-147f-4cf6-99e1-ba11c3a0860c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f7260a2f-20b4-4652-a611-016b68532f8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07b9cdad-498f-4fff-910e-7f8796d372d4",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "984a0ffe-5d2f-47b0-b739-dc6f9498ce94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afe7c3e0-057e-4a83-9c39-9e65255cd9bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea330a18-c524-41fb-b68c-58434486387f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "ff55e075-7c93-4fe6-a015-c9e8b05d0396"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e18de018-da69-40c6-8413-43cfb2c490e6",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16a8a7c8-998e-489b-91c9-7151344c771a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72cee119-1c35-4e1b-8492-a452c3632762"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c906be9-eb1e-4627-8472-dbaff099c201",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "afdb6dd1-5be2-45e8-8c67-8f58e5d97917"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbabe68a-c9f4-4419-b9ec-685dfd8287be",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71ca493e-72b4-4ab8-8079-43d7d64a87f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4b5a2d9-a16f-4203-832d-154481a6b718"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70c634de-bc6b-4f7c-aa57-36d9c40f610d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "282c4aec-de44-41d0-8cca-194c212566e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29b82ed1-deb6-422e-a709-d2d22dfa035d",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8089f61-e519-4315-9b1e-c919dfd16de9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "922986da-08c1-4494-99b6-9c358e9cb352"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25524654-85a7-4121-81d0-d90c9c738a0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "4e80c654-385a-429c-af3a-f7a4ed851b9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "134066a1-9cdc-42d0-bc03-40d570ae4298",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a821eec6-5fa2-4367-971c-cd687ef1c1db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7df5885-3632-4ca7-b8a6-ef909ce54701"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f416fb8-067c-43f4-8fe7-16d0989006e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "d0db011f-3a93-4dfc-bf31-7d2fc4dda168"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f418ca8-1e42-4d71-8eb7-d9be58f8bd64",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4aab856b-b561-4866-9c58-0863eebff07d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "743b302c-c06e-4b77-8702-a29b1db3371a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54c96006-5314-4a36-af1a-4e48e2ad75f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "b8d5a0e1-293a-498e-b770-83a31a200428"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "87bcc114-75cf-470a-a9fd-0896fd59e85d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d15c413a-9902-41cf-876b-bdba54e5812a",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92e05384-84d1-4e0d-9b18-bbafcbd42932",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d3932888-76fc-4d17-acb1-c9738bd98a82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f49bd87c-7551-48f5-bdaf-c31042b1d621",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "341d9c26-0f61-4b69-affb-5f3cda551650"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f2a659a4-f913-4e94-a85b-ace8e75ac74b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "81d5acef-ed75-4b47-92da-d6b95e9af481"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "113cbe49-5c98-488a-9b4b-1de970d23e8a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6a159acc-d5ef-4998-9cb0-ddfaecc4ec30"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8d1e00e9-e439-4b88-be78-5c90d0c5f352",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6250bb50-39f6-4691-b41c-3f11a68d9003"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "6d18ed50-8459-427e-b8a2-c55e9345d632",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0d774d51-386e-4438-b2b2-18801b7d240d"
                }
              }
            ]
          },
          {
            "id": "488cb9dc-7979-4ab4-9c7b-90490c16d38c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "96b2195f-48a3-409f-a0fd-f49ef15d1318",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "e5881271-c713-4b9f-9dc5-a0d8414ca42c",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9491ec1d-41cb-4312-9675-e7820c71fe3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "18d4c5c9-fca9-4b68-9631-08c42afda29f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70d222ea-db1a-4035-9d20-9adea8de44d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f90f594-6b11-4072-b57d-f6a8296ae78b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "8cc224fe-f856-49e1-9437-1ca1b14d674c",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "efcde135-4e4c-42be-9b0a-fb8cf7a8cec3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7c3bb599-bfbd-4044-a932-53a1cd5df512"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5176bfc0-f3db-4d40-8e8f-8657e5020f6b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "569dd456-8b98-4cc1-a5fe-efe3d2b9dfac"
                    }
                  }
                ]
              },
              {
                "id": "16e6be69-75ca-4e4f-9bce-f8c1b98e8902",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b649cfbf-04fa-42e0-9a11-e8ac54ddd9ae",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "609c0569-c9d8-4c32-aafd-399d68856a5d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "95b0348b-fd3b-43c0-b064-1cd247b2c031",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b9764d15-1818-4ae1-81a7-9c3cf3b9e627"
                    }
                  }
                ]
              },
              {
                "id": "9f918d12-34fc-45a1-acab-0ca551a9c32e",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0e23fad5-429c-49c6-8ad8-990f35cf9538",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "dc8a30a5-5457-47fd-949a-a48ccbabaab4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "738ab94e-c6e3-4d3b-8f4c-bb6d25ec3618",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "286a0792-1f1c-46d3-a7ee-c6e71c4c140d"
                    }
                  }
                ]
              },
              {
                "id": "119f9019-c125-4513-9ce5-990d8079e3d0",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "988a7ecb-fcc8-413d-bf7c-597db9c961a3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c7794850-abb2-41ff-90fc-95031fe8e8e9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "91288b42-0dae-4b6c-9fa1-0253b010f2f5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "fca6030f-873c-4233-8587-c9ef6f3e75fe"
                    }
                  }
                ]
              },
              {
                "id": "e3a5e8e8-be03-4c00-afbf-1767f8e69bbc",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0c6ba4e9-75d1-49f6-990a-fb85f1e4343c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9586447d-eb1f-4af3-903b-d1d40e1bb10f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b63606af-3332-4057-b1e2-678a94834ae2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "eb4d4742-3881-45ba-8382-0e5906a46d2a"
                    }
                  }
                ]
              },
              {
                "id": "988899e6-8daa-418c-bb6f-39a09f827fee",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c128f5e5-fd94-4d03-8dfd-15f8a9263a4c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "830eaaf6-4144-4a56-8d01-8829c1f1bd49"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6bc22640-d6ee-4bb9-905d-90f18146cbe6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "480bedd7-f383-4339-bcbc-cb4841c55535"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "088d51d4-6cd2-45a6-b39b-08da18b6a1ec",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "fc0f53c1-b221-4c7e-80fb-d161c56db432"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "1d19fda2-bde1-4e6c-8361-b5fdf4467eb7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "dfaa5d69-e089-45b4-bb63-7cae326289d7"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b089a043-d4eb-4c53-b321-fda44dbbae70",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "7bc6330a-4f1a-466c-b8ff-9ae96bebbe4c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "96aa55d1-1b5d-42f3-8623-99d434f7138e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "98d99c42-674d-4176-9795-10a71e735fdb"
            }
          }
        ]
      },
      {
        "id": "f71c8388-167a-4b9c-b409-78f6b67c5f49",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "5d25f4a0-3a57-41d3-b061-58ddbaa98eee",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f7326823-1ca2-49a9-8a6d-a3a1557dfe8c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d5b702f6-a51b-4992-bc74-6450a864cde3",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00cd7148-1ce0-4ae4-9c7f-b62e01f12944",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5741657d-b327-4531-a687-cc46bcd5a19e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e77be5db-1d74-467d-88c9-6b9b883511ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "de6a84cb-9fe8-493c-a5ce-fc65d7575738"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72f7a54b-addc-4b27-86f4-fb46522428dc",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc835d0c-46c1-46d2-9e92-c65806734a16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "493dd982-699b-4fe4-a116-a9926a4233aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abdb0c38-da6a-4bc2-9ebb-8c082f45cc79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "962f4b64-b3db-4f54-942d-ad0023142445"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faa154f6-9e68-4d2f-b2ab-6d1980173d35",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8d370a6-f664-4129-acaa-37adb07850f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e555666-4244-49b6-b8d9-57adf0b46fc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "700153cc-e776-4620-b470-2ca8c1e95065",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "156aba9c-a6f9-44e0-926b-3b81665fc4a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f1aeb73-30fb-49e6-a760-13f404d73227",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f48dc97-1837-4e8d-be66-cbd734fecab1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c1828e8-0818-49c1-9baf-72a48e00f107"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b61e7e27-2d02-4f46-89a0-9f9ea97466a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3bffba9b-4487-441b-8029-d4842f99a2e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14d37368-c491-42c5-b969-61f31644c9fa",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fc9e887-fe8e-4143-bd6f-60978e8ac063",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a818bed-9a81-48b7-9c49-b193fd73528f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40977036-b62d-4560-8803-ab8dd5986393",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "01c3df65-9183-4a81-8fc4-2d7bc7f58903"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fff8b8b8-056e-4321-9898-b056fdf867c0",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0cee7ac-f7c1-4143-9abb-1febd76b3741",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e639270d-8208-4f47-8f5a-01ad8bd8ccf4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "143b9178-20b7-4391-af8d-a45f85637abf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e458fec7-6406-424f-a619-ccdafc37d899"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57bbe695-50c4-4a08-b0bd-284a69fdd0e4",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c674123-3c3b-48a0-a235-615f66fded68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b60636b-6402-4f77-afd1-06ad6921a08f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78920d06-3cc5-48a7-9cf3-21789742ad9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "0a4b0dd9-2405-44bf-9049-7209eb993687"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1985ce9c-c254-4084-8dc7-0367b5878598",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cdd2947-f53e-4d84-a73f-7bfc11f61880",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64d34f4d-e8f2-4152-8ce0-80588d5d5505"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd4138d9-542f-4c24-9d97-2991fb0d89d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bbe74eb7-36d2-4b3d-ae98-f109846f64ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4eede86-8d5f-48f7-907b-29d08e155fc2",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57bb90f0-40bc-4adf-acde-648d0f5de124",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd8243d2-7e45-4fdb-9601-321c976e3545"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50b2fe7e-bec1-49de-9948-ef01c9fbb423",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "75717e0c-7f78-42e7-94b8-1c3eefdacc2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "529883a7-f870-4700-8aea-7a84cc9d8ec4",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cca2e0f5-e6c5-49db-be69-604b67338c1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d37b492c-2eaa-44d6-9ad2-edb5ab4142c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c834e4f-09ab-4a94-9a82-5c94010fe581",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a67856d4-ffe2-47d7-8450-25a4c1f04f4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf916d81-5e15-4ba9-ac54-b42118d5d23b",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07673e06-831a-486d-b878-b44b289d6dc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "114e992b-15f8-41f8-8ef0-35d37889c96b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81a8a13c-c5a2-4028-9c25-ae5cd626e45d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "7ba904ed-b3a7-4ef9-bfbb-12e9524577c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d2427f5-8349-4581-80c5-75ffcc22cf72",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c958fd7c-b50e-458d-a794-bc5750999991",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "926e120c-2093-4233-a01c-6f8edb4b9c59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd9e29aa-30c1-4190-adfb-bdbf89e481a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "935ef152-9d1c-4607-b567-8254cd0d4d20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83038b25-2461-4946-862a-1fc132dda8eb",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc09ffa8-1d2f-4590-943a-3983e5496ac7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c33295d5-2cf7-4578-83fe-7234ce3880d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21c18475-076f-4267-98cf-01441303a1c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e80819d-7bed-4b71-8b97-2034225fcf54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "105ebc67-f285-40e3-af1a-dac68f824f38",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d4af3f7-3596-44f2-a753-f74ec56adfaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "727c9840-d5ea-4001-ba9c-28138c319cdd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "288b5edb-6e4a-48fb-92d2-73a8e01b398c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "e4317984-9d5d-44dd-b3ac-f73bdcf3a84a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bd19c5f-4973-49ef-975f-792e831c5bc8",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59a33425-b8ca-4d4f-82eb-7f1d751b04f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c125e92-20bf-490c-a83c-765d51dc2bd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d3f3f6f-0f0e-4ab9-ae77-6b6d9641f014",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "20117b0a-9a29-45f9-8b9c-a63b274a3e18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddce1329-0913-4938-8172-a0626e933d87",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e19a11a4-bbeb-460d-9d98-dc5849374e0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2982eb7d-1feb-4182-815b-855bbd5817c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01fef5eb-f0c7-4a9b-b92a-183aacfd478b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "10832802-1b1f-4801-9393-b697385ab473"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e51e67b2-1317-4780-8905-c91f97cb5b31",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "035bd9fe-a242-4b3b-8042-6eff60752896",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62edee13-25ec-45c7-a036-13fb54706a10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec9b857b-74d3-44c2-b623-18f945ddad10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "833cd4fc-22e2-40c1-ac37-969a2cce1723"
                        }
                      }
                    ]
                  },
                  {
                    "id": "405b26fe-53fd-4983-b21a-fac817e58374",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9544aed5-3565-4cd5-850c-d26d6e017e04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3994cf6-d6e7-4b07-a41e-971f0f111c4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8c25180-5489-45e0-9bb6-58a1024a5cc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "1115a5e0-ec07-4700-88f9-4a7817f041cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98025c7e-d5b7-4ffc-8abd-c88a2d2c477a",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f77d77d1-a2da-44e5-9f08-22d75065a907",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1246e28-2f55-4441-ba67-d20cb95d5ad1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe6492dd-73c4-4cf8-a72c-ad5d22737486",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c1e63e1-3823-484d-9d9b-f655bf1cd713"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7b53816-6e85-42bd-bbe2-c5b9b403d0a1",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dc700d0-82b4-4df6-a3d1-8287a8a2450b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ba18965-6807-44d6-a743-5df1063e109e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcfb2b1c-b87a-4315-936a-0006dc47764e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "34a718c5-1ce0-499e-8036-c3f9baf07d55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "173efb6a-ee31-4dfe-82bd-11bf0c761cd8",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5bbe38f-17d1-498c-a83c-d8928a41de98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54f9318b-2439-4e78-b961-44cfe10675c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c983932-7c40-42b5-b0bf-262ff1209647",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5ba13238-c1ab-4fc3-abda-1b025d3aa6da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b4bf9b9-1f9b-4435-b2b7-3b1c182c3bd8",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e908ed9-2dd1-405f-b9af-f89cd6a60f88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82984cc8-b7d9-4797-915a-5360f848e1b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1bf7fd1-6141-420f-8484-1d77fb3496c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5d848446-30de-471c-8262-ce3d27e6a962"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8617f180-6e4e-43c2-a654-24fca1177186",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f91839de-574c-4a86-8277-bd5380f15a4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "601f0690-b580-4291-b418-d34fba82c95e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2c84f1c-9375-4e98-adc0-e5b4c7e2eed0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4574a4c1-4922-4482-8db0-0b1fbf6c4854"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed05484e-908f-4439-9817-dfa6d7953150",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59fedfdd-7f79-4361-8933-42766bdbed84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4eaf6848-100c-4c74-9329-81332595ad66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fcccf71-7ee7-43b2-9dba-969589142f11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "607e5170-e994-40f9-a642-6a3bad2f4b05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa5eee9a-95c3-43ff-9bdd-35449c1bf6f4",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "088258ab-1e09-49b7-9b69-d5f2ac1e288d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "897b2e5f-7671-4743-8afb-6cf1ae523f17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a4318db-a52b-408e-a516-4a80f9335377",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a7bd1ed-141d-4607-b9f1-7f268accf1e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ab00da7-bd66-4c63-b1ab-aa01a810556c",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fe37102-52fd-4279-86e6-a86313f8725f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e39b74a-f62c-4c3d-a119-9eb8fffa80b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f67a7f1f-ccbd-4123-b6c2-3859f05c6b80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d5973a1e-adb4-4dab-bcd8-3209ee7bf5de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91559e07-2480-4b1f-a573-76c4ee6de590",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "338b321b-129b-477c-94d8-fc646849f1af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbdb0bb4-3247-45a0-a8ad-b6e7a20cd889"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "773f6c98-6912-4aa6-a365-144ba0286640",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d0d86c6b-46c4-4d3e-ab93-3939dabc7390"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a0ec4b3-aad1-456c-bc92-27863c6cbda7",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10cc96a1-67cb-43d8-9ee3-835c976589a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "610e8fd9-090d-492c-ae99-3a4503d880af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8c82caa-c566-4139-9544-c2c1fc11cb49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc0898df-db37-4a0f-9b32-7f2cfbba94df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47c719ca-800d-4a70-803b-04db9983b166",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "478df5fd-719f-4d25-8b9a-c6790e8ecff9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1506eb04-ba90-459a-a5a1-3e45ad14e036"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90d46adf-1b3f-4f32-9a2f-94de5fdcd8e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "45d22a12-0eb8-4e79-b1f3-f4214266406c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58a5e439-f280-4bff-9d2b-8cddd5f1e350",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0a71174-e7cb-4b52-b499-dbd66c6f7d2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4f6c6f6-557a-4230-a487-0545f58a2524"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae2261b1-c7ac-402d-8c6f-ec745f97c50d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "456a25d2-298f-41ab-ac15-cfb498e73f8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa6ee3b5-63fb-4709-9de6-3f467b8fad79",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38dcd2ff-dd3f-4e19-98d3-5953cda1b396",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7919ea2c-1e18-497d-9f79-889510b2ad5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d323bcd2-10d6-47d3-84e8-71658f84e961",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b3f25c39-9a19-4a3d-bc60-3fc34b45ee9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e086c62-0fd2-4f31-bb70-116a4918968b",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ccf184f-4dc7-4753-a0c5-fb6c69eba6d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f1fac21-373f-4c20-990b-8da929355728"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c94a18e3-ac48-4d71-8a35-e93b4e301461",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6da24699-6ba9-4a9b-8899-53dd0c4d618f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "358d493e-f125-4366-967f-5dbc33736fcb",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c5ec9e7-63e3-4a6a-8300-3831e4cc94f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fd9322d-d513-45d5-9919-cb4c0ffd0e0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5d5c2b2-3bcd-4bd0-ba47-29bd5462e0d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "db0032d5-9dd4-460a-ad35-cfc599491b16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5617fa94-67d6-4ee6-addc-540c17541541",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f1b70b3-b4e3-4b9c-a73f-ad2c49199d3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b839b5d-918a-46ce-811f-9c3c65e7686a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cecba20-b49d-4895-9c86-b542675dd5e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d2f92f7c-5702-43e0-8c63-eb49ca99b98b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca24079d-e6a9-443b-8876-33c71b3ffaa2",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd354159-3c6a-4f10-909a-7d2a6a5a4700",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b75943f3-1e2e-480f-9ad3-8e20f88114e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ecb8e93-9700-4570-b3fe-77e63160a06c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f4736aff-7d1a-4480-8bee-05f1270a221d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "496becc4-51cf-4518-b8b3-2d9c5162173f",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2c9d159-76ef-424c-9248-966b8cf92ed0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95e53d77-4c43-4643-bb66-7d05e1123b31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21047b86-aacd-4b2e-b62e-acbdbad0e52c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4df493c2-9bcf-42f8-bb26-ad4dd345a603"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22ff3fdb-93e4-4cda-b81e-ca2dcc56962e",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4381ff77-288f-4421-bc22-e1bc5ed8a8df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20c6d663-b5ee-45b7-af6c-c82cc623ddc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b058ff7-2881-4845-9b3a-85edce16c19a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4eea3b66-dae2-476e-86dc-f176b3e9fd3b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "2b970e9c-fd9c-42f3-a93c-ad5046c7aec1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5841160d-4990-4d75-a8f4-7fcbdf75d282",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d08519d-176a-4901-aaba-42ffdec6b34b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "17074d5e-2ec5-43ac-870c-8b6101df0301"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58f75d7b-fe5c-4baa-834c-f2540e4ec9d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fe9e3cba-3e1d-4b69-8983-4c87bb097b5b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "02ab2405-7a39-492d-8c24-b075055518aa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "10b78ba9-170f-4bec-bcb7-d87810b450bf"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "49be7531-2467-4cb4-8a2a-540b24974202",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d80da266-b85b-44fd-b031-db374aa9657a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0b4627c3-bf5e-4c8e-86fb-c7775dcfb293",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "0e1373ef-7646-454e-9ab6-7fe5f4dfe3d1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f959b025-9979-4581-83a3-dcbcf3d522d8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d4cbe9ec-eb94-4f07-b23e-14bcba688c73"
            }
          }
        ]
      },
      {
        "id": "36052424-47bf-49a4-9137-c8915a90a50e",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "b00d2b8f-1521-46d8-a1ba-49d88af93c06",
            "name": "Negative Testing",
            "item": [
              {
                "id": "651d89a0-2507-46bc-924a-65ee644262e8",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "7df9f782-ed12-42b0-ae3b-fdd89071a8c8",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a94be20e-44ce-4c04-80bc-13366432097b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7bed1a7-50da-4a29-b727-1d25c9118ee3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "261485d7-29d9-44bf-b7c7-fa6ffc76adce",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1b79330-b19d-4add-aa6a-5354fe7887aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "239bb431-6889-4f5f-a807-b698cf03d8a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a344a7ea-aa52-44e8-ad41-9919778b6fdf",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5c97170-4c32-49a0-9005-dfb9f48b750d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e40530d2-a7ec-4f08-9097-9d707214c019"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77bb3399-fd5f-4ef2-8cb7-78d11d419ed5",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9c506b4-7f63-4c0a-a22d-d8081cb63505",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78735a0d-6f9a-488e-a62f-77a4973aeffe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e976605-1015-43b7-ba66-c7a1c719d174",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "836d30ea-6760-480f-967a-da6b14d1ba1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3efa26b9-811c-4961-9e62-7985774ffefe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b927575-53a9-48e8-a82b-6fbe0f3dcd34",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8e9feea-1d14-4631-a976-3e0c30817bd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c646e1c4-f564-428f-8dc0-8b2f1b5f6eb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edf794db-a61a-48a9-b30b-cad9fa928e72",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a548007d-ef55-46e9-94a4-24a8b2b6cc08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f1cd306-74ce-47aa-9aac-76d8b227763a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccc90cd4-fe6c-4056-90ca-536fc9ac927c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "311525ce-4d9f-4b79-a30c-ecd2eaae012a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0703302-7c45-4d7f-946d-0c96a3451424",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fa484da-3734-4cc4-8924-efee001266ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9913e795-f9b0-4b61-b61d-566661ad7898"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10db6d16-bfd7-4190-b4a0-fd7bf4e993f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96caf1eb-5ffc-42ee-8d1d-c45934312f90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0278f5a0-74be-4878-8020-1413e4a6110e",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93acbe72-30df-491a-aac8-a59e031dd9bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "911389e6-cbde-41dc-91b5-d26e4c941be0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a73ff661-e594-4c60-8f3a-1090ea26e4ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b085476-f841-47d8-82c7-fa3d02ffadea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2111dc1-898a-4466-86cd-3a03956eed2d",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d85c3ec-fe8f-41ab-a30c-4f59da1138a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8ca5e9b-9b14-4de7-a712-a7f4c60ac9d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96972e2f-8334-4786-b2bf-a997204a4e02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e0f7a93-6474-41d2-95a1-dc86c98d56e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4892d90c-6166-4d85-904a-1a9fc0f1f6ec",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17a7982b-ca84-4fe0-b32a-bd101623db5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e8c3aba-a30c-430f-8716-435c10c23aed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5df530ec-584e-42f9-9c7d-58cb55955044",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35a5ab22-f37f-4019-9723-d70bf2f8f4a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28807f38-e000-4a54-a4d8-b0a5ab8fe002",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdaa6243-3a9e-4711-95e1-925a635699f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c56e62f2-2904-4d0f-8a30-1bc996948ce9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bca071e-fe33-46f2-8ba8-48960d5342c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3ee80d8-e1b8-450f-aad2-596dce613a49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80fba8f7-43e9-44c1-b723-aeb787f5f1f5",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72f18c76-7d2b-4915-a8cb-46563d9446f0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1929d46e-b260-4786-a3c3-62ef9b0cb70d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "316574e7-a76b-441a-88ee-259332c9c9ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0e54fa4-9724-4089-9cb9-f5644f62a6cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "064b41ee-26e3-48b9-bef3-d9a5815942bd",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d9af518-dbf2-4ad8-9b30-1bfff839162b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "439d04da-68c0-476b-912b-44f19a421d99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "955ce559-ac9c-4c1d-8dac-040f99b99c39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f1e4881-56f8-4f3d-bc9b-0469905f67cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecc373cc-e3dc-49c7-bd37-3a864716ea7f",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40b5c50b-dc03-473d-bae1-fe363c7b6d11",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2dfaaa0e-9877-43d2-8a24-9a310de15f2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "570bb3a0-a91e-4be3-b68f-ac028b472a5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84b2548c-acb5-4655-8078-c7dbbaad4d2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fbfbd82-e2b0-40fd-ad24-ef59506b9afb",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7547f1c0-3548-493e-9721-3d1c771ac296",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "84b7cdf5-55f0-4d6b-820a-d04d46c6885d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78b543f1-ffd0-4749-aafc-32ebdf868bee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df4844b2-b18c-491e-b2ff-54311430427d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "383cc5e9-1695-44e6-91f1-4473bd49732e",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58a9cb30-f281-42c2-a40f-1c9749c57e52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a984da2f-ce51-443e-a421-8bcb09060a8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f0db51a-971c-4f7b-b381-2c70ab9a4f7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "227d520c-622a-4a43-b08c-551414f52462"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a7a6835-929a-4dbc-b59f-7a838705252c",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55dd7bf7-23a3-4231-a079-91c5c727dc42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db1dd21b-9fe8-4238-88f4-6d5da94aef67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b038b2ee-179d-4762-b34d-5b9bf71a08b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "309def1c-ee3f-487a-a569-9f0457fd7f1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c01fb7ff-7e14-4611-8b44-2664727f50a9",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3acf8e90-b08a-49a8-bb30-24c0a8617e91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94ddf6c9-c076-4112-968b-409b9c3af0b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aef7642b-c7ef-4b6e-8a68-bcf1fbd52b60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b60efa39-f8ce-4ac3-b3af-8ea81c8212d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7e50580-264a-4575-bf0e-d71e9bc819d7",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a87416b-bc75-43d6-b875-20d4e28a9522",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a14ea188-06ae-486b-8101-13e39357ea90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb11f8b3-de49-4881-b7c4-7f327b6be034",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45c5ffd5-acda-423c-826e-581263f4f6ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "378d9409-5620-4904-900c-c8d42d9c08ce",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dab7d88-797e-48a1-a473-85bb70b4712f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6340a3c5-2674-462b-9611-8c252d587dbd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0174811e-3be0-494f-9885-0b6ba436ef4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73ec76e4-c54a-468c-a11e-c34a60ccb98e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06b162b1-bec6-4338-836f-859af04e7145",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "928c6d76-f40a-4343-9532-db271026f872",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64e7a461-cb57-4c0c-b0c2-42dfb6bcf8b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aed2f868-23ed-4811-be35-ac24b19890d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49560cf6-26d9-47f8-a651-cecd4dc0ac51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19d6a490-3490-47c8-b3e2-eeced70c7c9e",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c820c910-0699-458a-8c5b-68f84cfd278f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59ebfe08-cf92-433e-9f2b-f7da22634430"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ef98142-df7d-49e6-ba49-c9f935da59f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3bbeca2-d98a-4bd8-83be-9ccefc7b6ff7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a971c5dc-9116-460b-80ae-af920e006028",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c02e49c-8924-4468-91a7-0b81d80cd78d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b7af85fe-4306-4299-a537-f77253bea6e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fa84e53-77a9-412d-afdf-b50546a1acc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5386118-2821-44ae-84b4-1d63f3f3b050"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9394ad2-7fbc-40d3-9acb-6d2f07bac057",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13576aea-c865-40dd-ad91-4e6ec086e6c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e8e45b4-3bd6-4bc8-ab5c-3dbe9cc78c4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e655776-07ac-4e54-9d11-f98777b4e381",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de028eb5-d000-4f63-a667-f7bd09798828"
                        }
                      }
                    ]
                  },
                  {
                    "id": "609601aa-9aaf-4f99-985c-5f3c184d136b",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2e5379d-31e0-45d7-a874-8958527707b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "deffe306-5286-4c65-bc35-350814e8e112"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fed792f7-a4c8-40fc-93e3-67a2cf54dce0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63fcc64b-70c1-466b-b049-40f04c1e8f4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7df94a9-4ca7-4dbf-82fc-8859ae846449",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c25bc62-4898-48b7-b690-f677979c11d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "11f0a416-9c77-40fc-8982-95c9b58437c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c271a67-e2ad-4523-b9af-0d0a667131ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3675f3a6-2efe-4277-a0ee-926f0532ded6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29c03f21-b739-4be5-a160-28aa2ada50cc",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79c86590-03a0-46eb-a167-a6cefbae00b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e85285cf-a99d-4a43-8635-d48e539ef433"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61578ce4-f7a1-4f83-88d8-d2df27ac8aa3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0776dbc-01fa-4e41-b6fb-837f235b951b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05850707-e7e1-4665-ba13-4d43580730af",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "451a7ffa-a82e-4563-94a0-4f0eb803e3d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "56b7609c-bafa-4f78-98a5-e7f956f62d3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df699752-23df-4a7a-8366-974489b6f39c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbe3aad4-c98d-4de2-b8a9-f5c752bb8751"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b60c5b9-7426-4e3e-bf33-9c9e0ae19461",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d444b3a-0be8-4057-852e-3dba5b17efbf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d4ce2e95-bf5e-4b0a-8b5e-8154dff53752"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b29f8994-c319-47c4-b7dd-efc89e182d41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "703eb47d-15e0-4a19-9981-7ac46fb871ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b789127-29b1-402a-94da-62b136f3ee37",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d08058ef-c005-43b8-b91e-25601d6450cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb8fce09-8516-4d43-95f3-16282e06f6cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "898f4337-2b0d-42ce-aa42-dbe6d24b7454",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a672f6b4-77cf-4c61-8166-932a478afca5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "105e6207-7216-463a-81de-58b64edfb186",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49b66527-e159-4f88-b4f1-5650cfb32694",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5fd6b875-db6f-4a3c-898a-6f1ed5ebacb4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80cf6e18-e4cf-4582-b135-e515e11ca809",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb49cac4-13d9-4331-bcab-b557d2cd5fb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e28e68c-a6d4-4b0c-b744-fa79a2bf13e2",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38b04f1a-8add-4865-87ee-4a7631da240b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b65e1c6-d875-4618-b055-1fc3f6283c0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "227c241b-446f-4787-acef-184adea98de2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "244506cc-3c7d-46a3-9876-8985f7dae8c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8c134de-f7df-4efc-8a7d-91843c1e0b75",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f66c21c-35f8-4bbd-8cdb-b001f0520f5a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c19be783-29c7-4f5f-bbda-fd53aba962e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52a377ee-2b60-4990-b14a-3c0f3dce8f2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aaada2c5-7713-4e34-a127-5fe1e8423894"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a15fd160-3c9b-4541-bb62-87ddf709451e",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc22afac-766a-4ea6-bfd0-7999774e8b95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "567f0229-2cf3-47e1-9f33-5de00e6f1556"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5da6282-d537-41a6-b8a4-4ff6a4aa350e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1109dd9-37a4-4266-8943-8f05c6f10f38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a4f2906-b203-41fb-a192-9c410ceef82b",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2af67a3d-392b-4d29-bf9c-001f8b980122",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d837144-b2bb-416a-9a42-60a8ea2b8e5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8160baa-9b01-486c-9989-64ad2c493ae2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a57d4241-4f13-4e6a-bdc8-58124077b5cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ce55847-1d4c-4817-b813-46bac5f11c5f",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd6c4137-3d45-458c-a11b-63e8ba21c83e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf1964c3-3568-4d12-be7b-8bb9285dcfd1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca21bf28-9ec4-42d9-a7d6-d77776c157ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71ff646f-1eed-4c51-90a6-c561d0754f6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32b58703-09ee-4522-b7c1-de82424512e9",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32ea3416-1e99-47f6-81c5-734cc8ecae2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39247c25-a3fe-4516-b752-c7750ed810e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "efe6d0a3-14f4-4ca9-8c5a-4c13f111e976",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c593b53b-0448-495a-9991-815e120957bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f060cffe-246b-4585-8351-2b7d0f0ed3f5",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec0b2d72-5434-4d26-a902-0b0c87a91e52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7b1bfd4-6b27-4236-ac23-3640a89a5c1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47dab19f-2db7-4115-9067-dafc22f08ea1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25da780a-ee64-4453-98e4-8df1e16f71ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57a509ab-d503-409a-862a-555cb7526971",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99aa738a-bca4-4f34-b99d-f85edef71c2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "feb5a177-e8fe-43ae-b190-a35053730d47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c48203ca-ed7c-4598-86e7-53d490f94b9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67f569f3-4d94-44a4-91c6-850680a30e8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d9c3a84-ffa7-4818-abaf-65351827c1f8",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68f14ae2-fc82-4e00-8625-4af4b7a0055c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b2e036e-ae9c-464c-b4ad-3eb50d6bdd9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b069cd70-4e6c-4e72-a5cd-c1e66eb55818",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "643cd17b-76ef-45fb-85e6-a0c525c0e090"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e22b0a1-9bf5-47a0-8f05-d74aea1c90b9",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b5db1a2-ead1-4e89-8ec8-94fa74356aeb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60e3e646-1d4c-4ae6-bebe-e44359a88f60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52cc6bfc-9a2c-4cb5-b00a-84676baaf853",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d01d066d-f38c-4ef7-9fec-a47e14954eff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18b3a9ae-6037-4e28-b04d-4a016905ca7c",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4ff2919-17ca-41eb-9d0f-652365c24d7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58332523-7c17-4612-9c3c-24caee3e06f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4146b553-ab86-482e-88be-8d8f04cad7a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9ecaf66-e19d-42dd-8854-3dd4a73b428d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74bbab9d-2c02-423b-97af-a6d240896a7d",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0716a29d-8c7f-4d1e-a6c7-f1e2cd4c519e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1254f3a-8209-46f3-9312-7d0537d29b35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00944c11-05df-473f-b228-24a29368114a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3b5bc25-981c-45f8-b490-24942a98f721"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1ccc4f7-0380-4573-9546-b91d63f81024",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63f1a6a3-f567-4338-8ece-fdac77dd990e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83993fcb-324a-48da-8f17-cef54a35d414"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e21c1c6-8987-4c53-af9f-9eb9c863b569",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfab1444-8947-4303-af14-affd77b8d192"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e09512e-a929-49af-aece-290b4a5f9be4",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c759008-500f-401a-9714-7f904b7f0a41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d3e78da-b311-4f43-a8bc-eb30e77e02a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57e54580-a0ed-4676-9e13-54b3ab3b0228",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6cf1844-fc30-4cca-b859-106207c11dfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b200d080-baa9-4dd8-9d5a-beb1a5e342c4",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "224afe6a-9492-4228-a5e6-8db24bb0087f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fe0502b-a5de-4476-904d-c640577de159"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f90ffe83-36ce-4653-b67c-d0f9c8762330",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c04dee87-4d77-43aa-a13f-649af8ff07c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b06fb232-751d-408d-a496-3b836dbfa751",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b445bef4-b8ef-4b28-a307-9427d1e65045",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31bd599b-6d24-419c-b646-b74bb196df36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fccdb59-0c2f-40ec-9ffd-b1ab936a6efd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1653fa1-c8dd-4f14-b3fd-dc7044faab78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ce5b5fd-3dc9-4961-9263-4b4ef405bbdd",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95bd41ff-e31b-4385-830e-194ac22973d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c0e2c46-9c58-4fbe-bbbb-731fec48f194"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3954b7d2-4c8f-4777-a012-5107d0496ef4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d61f3db5-e05b-4a3f-ad68-8e6d1df1104a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "838c09ac-629d-42d8-b23a-4f23f01ddc96",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bcf5c68-8530-48d3-87fd-4f4cbd2e7cd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "278c9a6f-3b43-4d19-b0fa-e62b7a0cb2f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec707ce9-bfcf-4dce-8ec8-f7ed3c5189ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d6d5904-ab7a-42a1-a7db-3b368fc3eca8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f720c462-c054-4d6d-a03f-ab3a21a9d5d3",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20fab3f3-10c2-45ed-b9a8-77e1e9448f65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b42d57f-ea0a-457c-9eef-e46cf746a552"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1f2f288-560e-43d5-b851-0051e26e2f34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06492143-5a70-4364-bb32-8a61e20cf8a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1f255f6-fc08-4820-9d36-cf5c6feb07b5",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e10a55c4-4d3d-45f0-a0d4-93764b762e33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38bb4c96-293e-428e-9f81-19eaec9d3184"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ca78491-5991-4cb2-93a7-20f188a8f848",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3138764c-3f15-4488-bcde-ff1867cdce41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e7b3aab-2bb9-4365-9d93-842eb743081a",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b086b848-408b-479d-8058-04b2feb4e9c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffe49374-2636-4da1-85da-e6122c7252fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8305247-f638-4493-8175-bdad4b8e8723",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1698c921-c275-4b6b-bf10-7366c21a8219"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bb28891-ffc9-4b27-b1ff-328b461ae2bb",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eee4c549-1b28-40a8-84b7-995d68f1347c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcc4551b-b022-4728-99ee-d301f44149e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e385e7d-8987-44ef-9164-ed64ac5e89e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "321181c8-d2b7-45b0-b4d2-4caf4eeae9cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f6d6c03-b2d2-4544-9f79-c936c38da40b",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33857019-09b0-41cb-8092-0ed2b83b489a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e79dd4ec-2d0d-45df-933f-c4a72307849a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62673fb8-0a9a-4cf0-be95-bd3607eed95f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c3f24b7-0267-4558-b991-ee3a07c6b222"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdca28f7-0afe-4497-9d6c-aa736772179c",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8338ad3d-e5c8-4454-ac43-0c4d4acf0573",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d56ce705-1db9-46cd-bae9-304534d7446c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd287db8-ddc3-4b20-b214-724b88ccb597",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d9bb1ff-58ff-40ec-a579-f2de65a99069"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd378919-306c-4fa4-a976-ca9140810829",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e63fc706-105f-4460-ac3a-c1970b6aa973",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b69ef356-3229-4f9a-ad4c-6c1a37d66b88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f1b9073-f983-4c66-9f20-dcb730f83f52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5ea395b-072c-4766-92dc-d098a03eb05c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3c7b4d5-7fe1-4037-9a5d-87b435f940b3",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f824bc47-d25d-4077-9ee2-9cd0c5820fdd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c141f56-c3ff-485f-bbb2-09e635ea2b4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b10dc39-712c-4e31-bb72-4587a04397c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c31ed3a-b38b-4de7-8a69-315d4e3dfd52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfc491f8-9d83-4546-a2d8-dcb14ce860b4",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b2e12e4-47b2-457e-af83-12ea77f9aefb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cd563c5-7b1c-45e8-9438-f522339de9b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13c66b6f-9ab9-4f2e-adf3-124407a9a9c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e91f4aa-7261-48ca-a1a6-047927ada098"
                        }
                      }
                    ]
                  },
                  {
                    "id": "599151b8-b270-43f8-a8f9-88e5e51c2708",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2594c7a2-87d8-415d-8b8c-16e142315672",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebfcf124-74d8-4bf7-af6b-fff88150e5fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab1dfd06-e107-4d7b-bd6f-06455f45e3e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69e0612b-4a92-4f37-a047-7a72ad7d62fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccdbb317-37fd-47d1-a1e8-ba4d5b865350",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adfb7df5-fdbc-490a-8ee4-aba81889cf1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0514191-dc3a-4d2b-9088-ca885f90f7a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6458204e-7351-4e2c-b9d0-b54c72149e2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3474469a-25d8-489b-b0e0-c53ed88a9a8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ed6d6fc-50e5-42cb-bfb9-b020a28f27a1",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d4a4baa-e661-4a3a-9794-9bb7195fe91f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85cd4d3f-0ddb-4ba1-be96-6a6b5d21a3fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc9be115-6fe7-4140-ac44-c63e897d3cdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffae3514-a48a-4a53-90e3-e3c796c30cf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c780edb4-6f81-4f79-b19e-4f5f4a73ab0a",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f127325e-ee87-497f-b465-368dec089ebc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "808deef6-4b54-4be8-a9bc-5c15f71fbb5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a50ae680-1f24-45fc-80a5-5dd602c8b444",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f67eef3-77b1-41e2-9f73-10450f8fb65c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0effa7b9-f8d6-432f-8bf5-2dc5246ab209",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfd97db2-8e12-4a0a-baa5-0abee5bbf6aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04da7a9e-560e-4b04-b5d9-c9959f36f681"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18753fca-8c9c-4287-aaa8-7683f3aaca00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c0eeb85-efd0-454e-ade4-5daa59615e48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df5889ce-f6ef-4326-98bc-91b623a18281",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a687456-9129-4a1e-8dbf-b023b4ae2d0a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b16b6a6-9e7d-458d-9dc5-eb37a78561c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27ed5031-1753-4a0b-9b09-9773506854b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9e1ecfb-ecc9-42dc-be68-f5b4e73ca622"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d235c93c-f32d-4f39-891d-1e875a8c2e29",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "130eeb48-f459-4b9d-8e0b-d1db912d649a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f7b05012-1e13-4caf-82c4-3a2736e0fe3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bdf242e-55d7-4800-a921-52fb1769d133",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "caae92eb-c459-4eee-b0c0-d163952b44ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebc4818e-92e9-42e9-aef8-da1a7cd001d0",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "750900ba-f597-4db4-adab-ae17d16d6e1c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ddda8a69-6558-4253-83f6-63f5758001b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f45d88b-9363-46ee-af64-e98deff782d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f910bcb-8596-4634-b0d5-2b3a88bac234"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b98de5dc-fa99-4d0e-9fe9-f37c71ef19bd",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09af7927-fdb1-462a-b1f0-b30b04cddc31",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "64113e48-65cb-4333-9751-baf32e6c30a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85c36581-60c0-468f-9822-9d22f852b7fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d18b84f6-c687-4db4-b469-da60740e67a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caca5217-8110-4434-b292-992e690745fb",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1e34f1a-e072-4794-bbe7-cb64f293c52b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bfe9922e-4f5f-44c9-a8ae-ed5da2c0daae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bb2cf64-8210-4aa6-9924-1d900a83abca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50124b77-1aa3-494a-80ae-384e2b99d2c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78ee8dcc-9eee-4690-9ffb-a1758aa21856",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52d03fc1-6b6a-43a5-9960-7e85f1d9d809",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c541cf4e-458a-4eb4-9a5e-ff78cc4ef523"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56e44aa9-baf2-4cbb-82fe-273959506885",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef83e275-d8aa-4454-9163-23b719fd3db2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caec22cd-fbc5-453c-8f84-a932ff59a4e2",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78333ba9-175e-4802-9966-e4ded7762a4e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "76cb1af7-2457-409c-b8b4-758c90119663"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a898e97a-932a-47db-800b-2da775f71cb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67536cee-91a6-44ae-9b9f-fcdecda3f42b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3684b014-24d7-4a4d-bd0d-c025025b8c85",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c10e4a1-17ce-4841-9f1b-f1359a81ac02",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5659b89c-ffbd-4050-bb9a-0a8a1d1883d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ab23d29-026b-4cd4-a86c-2e176f76dbb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72280373-1fbc-441c-96f1-3e0d51daac2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb37d28d-8b68-4207-8149-f7ecd36df2e0",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16957a43-a9fe-486a-8f91-49c1664351ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e95f6ee1-d056-4ab0-9456-cfb96c24101d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0caf777d-27d4-4c2a-a87a-dda45fb1ff97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fc8f6ee-0137-4269-a2a9-96e5b51ce6b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05376c85-4a35-461a-bf8e-0b3ea6c62e75",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc792fd3-2598-4d67-bd9d-923e931866b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c01d16a8-31cc-4192-811e-e426117f907a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a66dc90-9c4e-4d6a-8b5c-4f63acf4dee4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5493c170-2554-41cd-aa46-be512abe55e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c5ccc1c-8f3b-4d39-a4d2-d954396ca066",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27486d1c-d623-4511-a78b-d21d8c1ecd59",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c817748-1e38-4399-a6c5-5912bfcae12f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d57c8d6e-66e0-4620-8075-8dfd7d153cf0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d333400-c65a-44cc-877b-a839468be0f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "508367d0-177f-4cf8-b918-a044ff7f575c",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b75d5e18-27db-40ff-93fd-a906a4a2b8ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce0b6700-752d-4f4c-89c4-ed56e59bfda2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02f4f3b1-d02f-4794-a6ed-04a37541b4ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e2b6430-9ae2-404f-b658-3946ed63b8d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cae88967-3acc-4c05-80fa-6e3b9f929ad0",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caf29247-1da5-4d8e-8270-e4f2ac1a5c86",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "927037c7-e9c5-4af1-9ae7-9ab5b31cae0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77929c02-91f2-453c-b758-29715b9023c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27943b83-de8d-430d-8824-218a47e48730"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41413104-78f0-4627-8728-3a390414ea62",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec1328b8-8b52-4eaf-b417-41b0cc8d2d11",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3832a3b0-2fd1-4948-85f0-c160ef5305a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22c2330f-a54f-4a40-8e5b-c137449e4793",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7538d13e-6f2a-4226-aaea-56fe7768d11c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5093484-849d-46c5-9d35-cfca8632cb3b",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75c6d9e9-b75c-4ba1-a815-498d31ff0ba6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e6bac8d6-d25c-4425-9aa1-016ba54bd302"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83406600-41b0-4e47-a2db-b120f2831261",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f08e0237-a593-4466-8cdc-5063ccf01375"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8d53097-ea6b-4ee1-a446-09e3e1959539",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "297a2c68-a5e0-403d-b6de-83a01ab3a0f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fa1311da-daba-4a27-b65b-a7ff8b06c43d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4902987-6b7d-4290-8b42-ff3fc03d1c26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86113a39-53e4-48b4-a799-a96fcca2ffa1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3c5b169-2d78-473b-b159-7b3e20615871",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "216d70bc-d9ff-4cb1-a1f3-99670b5375a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "08bf5e46-26ef-4557-b1ee-96a6b4a5e9ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76e8b764-61a7-42fd-b1d3-985acb9ceae2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4352b927-99c9-41e2-80a2-6b3cc68b9785"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cded8e5-96a6-45af-8205-b656ebd3ff08",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13df85db-987f-433e-aa26-0fd13a582cde",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "946946fa-9d43-4997-8ff2-76eb25b25956"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5dae645-d095-4748-844c-9d45ab77505e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a1f6e33-cc55-46f4-8827-a90a5e899a61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20adcc75-8756-42bb-afb4-0e34a386567f",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c7eee5c-cd4b-4bb1-a6f3-d547c722b2a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aca7cc42-0900-44b0-b209-c61e539b142c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec1c1541-667d-4e7b-9f9c-2b30f8123950",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05850130-d6db-47e9-9a0f-3bc3d07daaa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22199f7a-81da-47bc-af9f-6c987592f97e",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36227ce4-090d-4265-854d-7bc0299b1565",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8ec30cd3-d9ec-4462-bddf-e9306d3e6a46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9d21491-c2ae-413b-9cb4-864009881ce6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66d5a8b9-d749-4bbc-8eee-ad386ba6cfb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "359ae8d7-d476-425e-9501-862bcc7ec26f",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46b162d8-02aa-4c3a-9091-f3dcee3f7f67",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ac106f9-23e5-427e-ad63-fb6c43f7a0c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "099cef2e-0eeb-4918-a9f3-cd0b71cda13a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "795eca9a-b535-47d3-b666-689522b4d342"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1b42128-e8b6-4315-9a8c-0fd5d6be999d",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8d07afe-9ae5-4983-8a8e-3e945ef34aab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d4e1e276-7d10-46ee-bd0f-e34ce2c30db5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16578ff5-40ba-45b8-a573-e5a38af4d14f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9d2d846-a9cd-4dd8-9eea-65d2d5e0ab67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06e970d0-d446-4b04-b899-8768bda52708",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdd5061e-09bd-473a-be6a-ac72fb58e333",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef4d138e-1f0c-4d2d-b879-28f3654da6d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7804b4f-8814-49cd-b8df-cd9dafbfa7f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53f78cfb-4e5e-4598-852f-f76ebf6e07d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6c01730-86f2-4568-aa78-0614abc8a79d",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2eb79350-2213-4a85-a1b9-b78cdf44af86",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99576b46-1d0e-468c-af42-3745ee1368fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f88e579-920e-4669-943f-eb9715add7f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78059126-8442-45e5-bcbd-672e75d3081a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1395c9a2-1ac9-46c7-bdce-22799bd79f05",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "440bfeba-cd94-4c1b-a60b-74c31a499048",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c69cde4-0cd7-48c2-afd5-68e502582ca3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bad69c26-8045-4514-bd79-19250377ba58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "579a05b7-876a-4c35-b0a7-37cb9a550e99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3dd0d67-7822-4824-8462-d896106dc91a",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f6be5b5-2e75-4de4-b5bd-58fa79679c55",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "16d90dac-5acb-4dda-bddd-26db43f8fa85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76a1f95e-a9cd-4847-a21a-6a77d13bbd75",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f7c032c-a28c-4abc-a8a9-8431741cf30c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b63a305-5af7-455e-8f1a-b1e18e834e7a",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd6056de-04ee-4ff2-8c7f-6b84209c3d0b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "07e15a41-7975-43a2-919b-0fc078dae053"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b60ed86c-102f-45ce-8878-f2bfedb91e30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09073ee2-8b5a-4376-ba41-ee1bba3024c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c967f42e-59f4-402d-80ae-f23e1736f3ef",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7894d8b3-f054-4295-885a-f55626383d4f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0fe3a6fc-2ee6-484d-ae48-5f9fff7ee9cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "211b60e7-596f-4b78-b432-2d279706f086",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de7cc89d-c24b-4a17-96b3-d479f4f998d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97b61cf4-22b6-4159-86de-ded96f3c10b6",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bc943c3-a860-4c94-a6e4-a6ddf16f76ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fce81a8f-501e-45bd-956f-1c68607e0d8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b104bdf3-a603-431c-98eb-8f5358cd6d53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42e6ce3a-342c-4470-bce6-82bb32f19126"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23654ac3-8b64-4a42-8d1b-1f34bf54f054",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "102b324c-c709-4e29-9f62-3791345fc9de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee214cc9-a009-4e0b-a1b7-40af50ef9939"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5239596f-90eb-469b-8152-2381fda8a128",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9046a77f-1cda-446b-b03e-5f354f545728"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d9635f7-a865-4f74-82c1-d36eeb23a473",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de19572a-5cce-4c6e-9120-fb0fb5a59647",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b4648bc-56ee-4065-af6d-b5e06d437e8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7c51b9b-9e4b-4cca-977a-a263ae25ed8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19208abf-db7b-4708-a642-800e3c4963f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b82c623-8a1d-4aba-a704-056cf826f748",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07b3341b-276b-4f20-b87c-6711e45173fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c49354c8-be73-4e78-9a9c-6c06438216e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eab09448-f798-47ec-b435-572231d40352",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e1b5b8e-ef23-4094-b97e-2635ad634ecc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64c73097-ced4-458d-9f81-e9f9562e3b58",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f8f1b9a-30ea-42ec-9b6d-3c422ec5fc3d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4bbd32e7-61b4-482d-b579-633995348229"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afe21878-1ce7-4009-af72-9bd55cf3dd81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b49527f1-16c0-420d-8609-3e83ee5216ff"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8a8bf35b-4148-4541-b311-ab5f2189b0ad",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bf323de5-f167-440f-bf97-b22fec4496a3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4b86e5a3-a64a-4f9d-867d-f94f25a37f81",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0bc5a560-b6be-48c2-a69d-90c1eaa05219"
                    }
                  }
                ]
              },
              {
                "id": "3396949d-5fd2-4429-8baa-c150e6f10a74",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "beba320e-6ad5-4d81-9512-41a172f6d490",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f58de5ca-80dc-45ed-83e5-62cc2d327c76",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "588ecd9f-2ff1-4411-8013-f21dbd6cc762"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9155c16f-129a-48f5-bf3e-e98f2c93d54f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "aed7ca04-6475-4ae5-b84d-f8448ff21d8f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "63f4b766-076e-4103-bb1b-4e3878ea0105",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6b00cafb-73b8-426e-bccb-1354d93f45db"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a86200a8-baf4-45a6-b796-801fdb5c2355",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f011c874-b182-4297-be5a-61875bec5195"
                    }
                  }
                ]
              },
              {
                "id": "bb2517c7-89bb-49af-bf28-500cc8f26a7e",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "0105b431-be72-4bb1-9b9d-2a5ea3913f85",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "309018c5-0f77-43b8-be36-082604ab7944",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "7d9b8c77-d835-4c17-b818-2c84ae807d84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "387817fd-5a90-42ef-9f48-52594231095c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2bcdcb9-776f-45f8-a9cc-197ef1c02f89"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "b48e04ba-58e2-4f0d-9df2-1e02c299ba25",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9f2d8377-0753-456c-b9aa-490baa636692",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "31ebac7c-0e5f-4e57-92e3-204d2cc5f8e3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "d5ef051f-00b6-4e30-ba1b-2366c640f5d1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a94a20e8-8890-42d7-8014-f9bdf6fe12da",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "403b10e4-a6cf-4c40-a073-d9010f12cd2c"
                    }
                  }
                ]
              },
              {
                "id": "80ed6aaf-9612-4e0d-9d8d-7c8c2778a362",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ce89f478-8fe1-4d23-a2d3-4d3e6392fabc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "dfc51468-e2cd-4801-b460-ff25f329490b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2d33728c-1852-4495-b0fb-84bd8cf2b056",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "251485b7-3f29-4316-a5ec-ad0889e7d690"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c6abf1ca-ac70-4e3a-9f57-b20be5c92baf",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "6985e2b6-a030-424f-b7ba-4749140f19b6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c043368a-c00f-4102-bb95-825c55daa8e0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4a2e1125-f679-4e97-b408-343946f89c26"
            }
          }
        ]
      },
      {
        "id": "b36289c6-8c05-4d3a-a801-687228ba0be5",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "67d85ea9-fb50-4563-b146-c4ddc9c08a7f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "02cce467-4c37-4eaf-a157-7704d51fddfd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e481e368-0189-44c7-805a-c6629e3d4fa4",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "380f2cb2-8d3e-446a-a3b1-7e09b84a4194",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "3141932a-c687-422b-9b4d-27d848d0f866"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "beb0f922-90ca-4eed-a2c4-3962bd4855f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d553bd28-ec9f-46f6-88e8-c876135e4c18"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "aae5f2d4-f9a8-4708-937f-bcf11a54cae9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "eab2f4eb-d969-4fef-9da2-e2182390df2a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "139fff71-79cc-4848-9456-b3472b4095f3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "060eba4a-2842-4208-94da-6a9ebf000411"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2d39ef12-749c-4fd5-8069-e77ac86f5cb1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "2e0abb12-4223-488b-8a2e-7d2dae3ca97e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c9034ebd-f5ec-456b-b96a-10ec43bf8197",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d4934946-9a5d-4918-803d-161398b993e4"
            }
          }
        ]
      },
      {
        "id": "7fd86203-64e0-4565-b6fb-e19a5691930e",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "928e03f2-24ce-4bcb-8269-962b4b3dcfe1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d534c0ef-9fa5-4ebe-94e4-1357d4f191e1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "948faa4c-3161-4f42-a0d6-76a1c4a25f74",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "284d1610-f1ba-4c85-9473-44997b712808",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0c755ea3-7dd6-4c2f-9d30-3e2289d8e722"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60ddcdeb-cca7-4945-bfd0-f9eeb4fe3a06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cb32dea2-ae9b-4246-94a3-85500feb344a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5e7c5fcb-9ce7-4d4e-907a-50b2e298171e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "07e0345f-e6d2-431f-9439-8d2e7d95212c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7c56aad7-2218-4389-9d33-917773e76d8b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e417f974-f662-40b0-bbab-7bec30935824"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "514f55cc-3c9b-42ad-ae22-1e7fa615de9b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "a00e2119-b597-4106-b89a-befe47b95d28"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e573e1c8-3e2e-4c72-8f6d-ac35b5b42577",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5dff7543-a746-48c0-a19c-29e7ba0eb72f"
            }
          }
        ]
      },
      {
        "id": "4a3e9f36-754b-4b1a-ada3-40e31e790313",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "9d341a56-cbd3-4d8b-8991-dac4bca36f06",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0a769eda-a695-4dcf-993a-e0497cb979e1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "130d3bbc-6695-452f-861c-2ebf139ce64f",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f8b6257-086b-49e4-b675-529f82da727c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "edfe41b7-5f2d-493a-b2da-f4c3e3136705"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed01e0b4-6e91-4917-bbc2-0fb8226a9ad8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2ec856df-be72-4f16-9aea-f5e6efd484b6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7f0fec46-f68d-400a-8783-56c879f93c67",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "835e9f81-692b-4963-9a77-427984d43746"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "860f5e73-3da0-498b-9440-4dafb4fa0fbf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f530028c-bc34-4c66-9219-731f25e51800"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "26840078-faa4-43c1-a0e0-ba30dd6e3faf",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "1ce628f3-b133-4b23-b6fb-9e4e922812a7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9b882fc8-d85b-4b74-a6f8-9d77e51f0342",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d447f9be-c87c-4a97-822b-8fdf11e6419c"
            }
          }
        ]
      },
      {
        "id": "50e0f935-1c92-49ff-a1bd-caf2a2e48b30",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4e8c7637-39f1-4f47-a4a3-db41a167a97b",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5b0170f6-b0d9-4eb6-97d2-e46dedfadab1",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "e8a3872f-3d1e-4ad5-a3f9-71c46560b080",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ecd0d055-2b91-46f0-a36a-bd1b20eb3218",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f2b981fe-f25a-4787-ac7b-9f2dcb0b10f7",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 37
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 12.67063492063492,
      "responseMin": 5,
      "responseMax": 686,
      "responseSd": 44.10852699382666,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1725237834109,
      "completed": 1725237845207
    },
    "executions": [
      {
        "id": "52fd20fc-ea16-4377-b72b-a1cd45fb75c8",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "3f422f54-a240-4164-8639-5e68455380f9",
          "httpRequestId": "62c0b089-b06c-4074-81ad-286ebf0f0e16"
        },
        "item": {
          "id": "52fd20fc-ea16-4377-b72b-a1cd45fb75c8",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "358f915a-8d84-47ff-8ef9-7506376d7fe8",
          "status": "OK",
          "code": 200,
          "responseTime": 57,
          "responseSize": 0
        }
      },
      {
        "id": "1610a36d-39ef-490e-98fe-131191b558a1",
        "cursor": {
          "ref": "bbbd66a7-b779-42d7-9814-3a1a072fda1a",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "5bdeb0e4-6e0e-4cc8-8c8a-e460cd10a67b"
        },
        "item": {
          "id": "1610a36d-39ef-490e-98fe-131191b558a1",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "1e55f32b-dc13-44c5-b87c-78f262b14a8e",
          "status": "OK",
          "code": 200,
          "responseTime": 5,
          "responseSize": 0
        }
      },
      {
        "id": "fc2b19d1-4a4b-4e39-93b1-5181abb3efdc",
        "cursor": {
          "ref": "d041ed75-891b-473b-a5a3-ca0f1394d681",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "21781d30-8e9a-47ff-a8d2-de3a660c4844"
        },
        "item": {
          "id": "fc2b19d1-4a4b-4e39-93b1-5181abb3efdc",
          "name": "did_json"
        },
        "response": {
          "id": "c248716a-f908-4138-9204-c2e41768ad3d",
          "status": "OK",
          "code": 200,
          "responseTime": 61,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2286ddc9-95ad-4d74-ab4a-be3bf6cb1c13",
        "cursor": {
          "ref": "160e3e30-eb94-4c98-adc4-8104adbc3d07",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "0f5b3c57-a745-4a4b-bfa0-7156886d13aa"
        },
        "item": {
          "id": "2286ddc9-95ad-4d74-ab4a-be3bf6cb1c13",
          "name": "did:invalid"
        },
        "response": {
          "id": "8e88c8b5-c0b0-4dc8-9e53-51fe557b01e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2286ddc9-95ad-4d74-ab4a-be3bf6cb1c13",
        "cursor": {
          "ref": "160e3e30-eb94-4c98-adc4-8104adbc3d07",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "0f5b3c57-a745-4a4b-bfa0-7156886d13aa"
        },
        "item": {
          "id": "2286ddc9-95ad-4d74-ab4a-be3bf6cb1c13",
          "name": "did:invalid"
        },
        "response": {
          "id": "8e88c8b5-c0b0-4dc8-9e53-51fe557b01e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfddba55-040f-4173-95fb-59fd4611a4ba",
        "cursor": {
          "ref": "cf4a398f-8435-40cd-a120-37018a03311f",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "fb6e24f8-dbbf-4e90-a340-71c6db0d68a2"
        },
        "item": {
          "id": "dfddba55-040f-4173-95fb-59fd4611a4ba",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "d5a7e6b4-9599-4344-b8f4-aa79acec6963",
          "status": "Not Found",
          "code": 404,
          "responseTime": 53,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "690999a4-a95a-4b19-9279-ff39f28afe80",
        "cursor": {
          "ref": "f1dee056-a619-4da1-b553-768c766dc96b",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "1514d2ed-5b81-4aeb-9aae-96d0dce6fe74"
        },
        "item": {
          "id": "690999a4-a95a-4b19-9279-ff39f28afe80",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "a846a2d7-b805-4c46-88dd-0b8ef3e11255",
          "status": "Not Found",
          "code": 404,
          "responseTime": 9,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba6f1687-1e91-4bb9-9d6b-df92fd3d860b",
        "cursor": {
          "ref": "a1461f56-7f8a-4f00-8f5f-02544b5048d4",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "574601f1-44ae-43f9-9ee2-74c4f8de5f66"
        },
        "item": {
          "id": "ba6f1687-1e91-4bb9-9d6b-df92fd3d860b",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "6ecbcb94-20e6-499a-9c70-13f7c5fe4590",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26473dd9-a5aa-4412-8d3f-422a20e44285",
        "cursor": {
          "ref": "3c8c3679-9bf4-4f85-a0be-3b55a4d9c9bc",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "1c25aab4-77b6-409f-8b13-fbe5638d59b0"
        },
        "item": {
          "id": "26473dd9-a5aa-4412-8d3f-422a20e44285",
          "name": "identifiers"
        },
        "response": {
          "id": "8dfebab9-83d2-4ee6-a06e-37df19ee8b35",
          "status": "OK",
          "code": 200,
          "responseTime": 173,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ced6e928-35f8-4776-91d2-66f551028b93",
        "cursor": {
          "ref": "234be2cf-93ca-4f59-b8f9-a3fc71c4b071",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "c533411a-f514-413d-a393-f179c5ff1fd9"
        },
        "item": {
          "id": "ced6e928-35f8-4776-91d2-66f551028b93",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "65740224-b72f-487d-bfcc-8ff8129a82e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3756fc77-50b9-44a8-9553-6f9a7798ceb3",
        "cursor": {
          "ref": "f44d5d8a-e534-4b63-9636-d2f8efc64db1",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "1127f091-4500-4858-93f9-b0fda9043721"
        },
        "item": {
          "id": "3756fc77-50b9-44a8-9553-6f9a7798ceb3",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "dbe0730e-f698-4571-8b36-df9828998a1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7a152b1-01ca-495d-892a-af11d66c2f88",
        "cursor": {
          "ref": "7fa22b26-e2b6-49ee-8272-c867bdfd0d38",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "29d795aa-37c8-4a53-a3b3-7c0ae72a9c87"
        },
        "item": {
          "id": "b7a152b1-01ca-495d-892a-af11d66c2f88",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "0822c77d-762f-458d-a99b-b58837562f0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdabc1c2-8551-4625-8c37-f665e4b1d7ed",
        "cursor": {
          "ref": "dbc056fc-5370-4662-aeec-4fc9764718a9",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "899a6e2f-1b88-4a26-8bbd-555eedad7ae7"
        },
        "item": {
          "id": "fdabc1c2-8551-4625-8c37-f665e4b1d7ed",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "c61a3739-5db6-4b2b-8f4e-c77009df58a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91d1eeb6-490d-4a1d-8d5f-a5aabe2b3722",
        "cursor": {
          "ref": "13136ff6-828b-407b-bad2-0c507ffcb3e4",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "37d30828-ac89-4800-85c2-9e42083656ef"
        },
        "item": {
          "id": "91d1eeb6-490d-4a1d-8d5f-a5aabe2b3722",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "a86f8b94-f576-4290-a8b9-5042bb421713",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a949754-e027-49a2-bbc4-6f766fb96b85",
        "cursor": {
          "ref": "792af35b-2c8f-45e3-a1a3-489bdcd9f8eb",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "7f8dd7b2-6c2c-4ab9-87af-495a3a96ed81"
        },
        "item": {
          "id": "4a949754-e027-49a2-bbc4-6f766fb96b85",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "5937592d-e832-4d4e-bbea-37584bc7029a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1337484e-265e-445a-8225-d12dbd177be9",
        "cursor": {
          "ref": "f6a81ba2-5197-434d-bc91-29ce4417d6c8",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "08fa76a6-f666-49ab-b9f2-519eec9b991b"
        },
        "item": {
          "id": "1337484e-265e-445a-8225-d12dbd177be9",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "baead0ca-baae-458e-b9a5-851c612a79b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6b729bd-6569-4cd1-88a2-bf304820c7e7",
        "cursor": {
          "ref": "614aa973-b631-42e6-b17c-1cf7494ea10e",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "af7456c0-c653-49f9-8811-7adf0f27edd2"
        },
        "item": {
          "id": "f6b729bd-6569-4cd1-88a2-bf304820c7e7",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "161e0f0e-b3be-4401-8f3b-bad62baef81a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb735963-28fa-4d23-9d9a-0e83cf022bfd",
        "cursor": {
          "ref": "f1ec5c4a-d7dd-4d47-a2e6-a5fa12092161",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "225f0cbc-e6b9-4708-9361-d76d6d14f4fc"
        },
        "item": {
          "id": "eb735963-28fa-4d23-9d9a-0e83cf022bfd",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "3013cb12-0b58-480e-ad50-5f06c9275297",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7e16c61-8f62-4092-bb5c-58de95dbf297",
        "cursor": {
          "ref": "0e852e79-c05f-45fa-880b-d1e09b58c46d",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "ef04b4a0-f08d-48b2-b04e-6437b6c23a80"
        },
        "item": {
          "id": "b7e16c61-8f62-4092-bb5c-58de95dbf297",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "cad4b887-e748-4589-8589-e19b94b8e74c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56407db2-0ab3-4238-a546-c5b11f80a3d6",
        "cursor": {
          "ref": "5af047b9-3ebb-40d6-9c9b-35f4348f47b3",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "aa077d51-6991-4cd3-b18d-ffa6d7d34d88"
        },
        "item": {
          "id": "56407db2-0ab3-4238-a546-c5b11f80a3d6",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "2d31641b-5732-4373-8444-1532a40061c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81011ba9-27e8-44fa-963b-c9fca11cf3cf",
        "cursor": {
          "ref": "4c5be91a-b660-46ee-ae95-94e805e9a5f4",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "4b3e80b6-b4e2-4221-8a93-7ceb9022d357"
        },
        "item": {
          "id": "81011ba9-27e8-44fa-963b-c9fca11cf3cf",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "06e683a3-bc8c-492b-88cd-ef3045911549",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9756705-60bf-4c5b-8d3f-bef15010bab2",
        "cursor": {
          "ref": "007bd647-c1b5-4cbf-ad95-91d215a0f890",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "e12e9dd9-ebfe-49e0-98f7-b836aa6866e0"
        },
        "item": {
          "id": "c9756705-60bf-4c5b-8d3f-bef15010bab2",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "6d4c0c30-ac67-4479-9f52-260d3a3857c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f2116b9-dab1-47d8-9c28-ee2c3e5e7df0",
        "cursor": {
          "ref": "d138dd5d-d200-465c-a65f-be70f9739c68",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "185790fe-4efa-414d-9e09-ffa6fac5325f"
        },
        "item": {
          "id": "0f2116b9-dab1-47d8-9c28-ee2c3e5e7df0",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "9bc43838-3adf-46ef-9590-66c9b877832c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8471665d-401d-46d7-aded-e5bc30eb9cd9",
        "cursor": {
          "ref": "c79b19fa-6a0d-4807-88c2-252bf66f5734",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "c4c2d0dc-6aa6-4723-aee3-c82a61aa8b7b"
        },
        "item": {
          "id": "8471665d-401d-46d7-aded-e5bc30eb9cd9",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "39d36441-c3cf-4f72-a6a2-cd96500c5c47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29d332f3-e0b6-45e4-8e34-8f115aeed351",
        "cursor": {
          "ref": "ab2ee362-ef66-4ab2-b0aa-9a9be3a95163",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "9b15d88d-1f34-41aa-84f4-5abdc4a007be"
        },
        "item": {
          "id": "29d332f3-e0b6-45e4-8e34-8f115aeed351",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "5efc669b-97d1-4112-889f-dc9d9f6f74a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13c6ac16-25a2-4a88-ba1d-800360237a6a",
        "cursor": {
          "ref": "398225b2-456f-4796-bd90-c22e16c7eba9",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "3f9dcb34-63e4-476c-a017-119e41c49de8"
        },
        "item": {
          "id": "13c6ac16-25a2-4a88-ba1d-800360237a6a",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "473b82cf-3095-4e1f-b3cb-870cd585f89d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3bac75e-1a45-4920-9b23-c7a25784ba97",
        "cursor": {
          "ref": "4ab1ca3e-e1d1-4833-9d1a-930f3c7fd5ee",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "ae26e022-fe26-4b5b-979e-56b91ac6fd00"
        },
        "item": {
          "id": "b3bac75e-1a45-4920-9b23-c7a25784ba97",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "ebe5d7f2-2808-4c86-b36b-e97de8b57d05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6313084c-7028-4149-b497-d5d1cf34b35d",
        "cursor": {
          "ref": "94c7acce-71fe-4747-a44a-9200730133a0",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "463c84c7-f9e9-4038-988d-00271dd846f0"
        },
        "item": {
          "id": "6313084c-7028-4149-b497-d5d1cf34b35d",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "757c078b-245d-4cb6-afb5-bcc06159a270",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dc9b606-86c3-45cc-afed-93d4f37c28dc",
        "cursor": {
          "ref": "e4f9114f-c068-4b9b-9ce5-c4c35da0dc2c",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "4e163db9-6a16-4a40-99bb-1c74bc67e662"
        },
        "item": {
          "id": "1dc9b606-86c3-45cc-afed-93d4f37c28dc",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "19536819-3895-4655-8e0b-b7bc880120be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "298c6582-c388-401e-a08c-2ef60a041346",
        "cursor": {
          "ref": "4093aeb5-1fba-4847-b4d1-b52abe16a391",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "b69aa107-047a-4649-aea1-6a125f6bd88a"
        },
        "item": {
          "id": "298c6582-c388-401e-a08c-2ef60a041346",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "d10b0f4e-6022-4d14-ab5f-a8a61773e8f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66738cc1-8506-4c94-ba52-87c8c4229ddb",
        "cursor": {
          "ref": "53fd4e5a-d106-4001-850d-1b8c500dacc2",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "667bdf69-e85e-4d5c-b49f-2a5a216541ae"
        },
        "item": {
          "id": "66738cc1-8506-4c94-ba52-87c8c4229ddb",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "285c44ab-a950-4285-ad92-0f0652d4261a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "674a20a3-6c75-4a49-82ee-e1480dd9a075",
        "cursor": {
          "ref": "63665106-838c-45c2-b900-f03588eac66e",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "5682d045-4a72-412e-96f3-9f6a8fd050c9"
        },
        "item": {
          "id": "674a20a3-6c75-4a49-82ee-e1480dd9a075",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "06cf9301-6274-46e6-9cde-4dd19d5478ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6005fe9-10f3-4b0f-89b7-a1e01dd4091f",
        "cursor": {
          "ref": "22a1f351-5201-490b-bb95-3cb2f9e7529b",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "5913b272-e722-4d10-a7a7-6da4fa86570d"
        },
        "item": {
          "id": "f6005fe9-10f3-4b0f-89b7-a1e01dd4091f",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "eee11097-7e4b-4850-9ff5-c716561ca606",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83df3a58-9473-4c22-b4f3-a09b5782cde3",
        "cursor": {
          "ref": "ab985a5e-a741-42b5-9706-138cfcbffe76",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "6b0d479f-c6fd-4cbb-968f-bc77f67bc1ec"
        },
        "item": {
          "id": "83df3a58-9473-4c22-b4f3-a09b5782cde3",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "7f56d453-28b0-454c-a1ec-dbf395de6e75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58c84385-9bdf-4eba-acb4-2db084ddc414",
        "cursor": {
          "ref": "5641274d-528a-416c-b9b6-38b170ede504",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "a40ef29c-2ecf-429c-b136-934687b086a3"
        },
        "item": {
          "id": "58c84385-9bdf-4eba-acb4-2db084ddc414",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "733d10ae-d306-42cc-92c0-738f7d5f6d1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdf0b469-691b-41b4-aac4-1a0a36d2949a",
        "cursor": {
          "ref": "e1bede2e-2d19-4363-bfc4-2eccd09b77e0",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "5a510fd4-81a4-45dd-b08f-a5d611c0f92c"
        },
        "item": {
          "id": "cdf0b469-691b-41b4-aac4-1a0a36d2949a",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "7c703617-f523-416d-a7f9-5acfdde080e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34d3e1fe-d0a1-423e-a1a1-208036828473",
        "cursor": {
          "ref": "b7078064-d707-4f48-b3a4-4467979c76f4",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "d6d391d0-4c81-4565-aed8-f6b3510ac130"
        },
        "item": {
          "id": "34d3e1fe-d0a1-423e-a1a1-208036828473",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "adcc00d1-7a1a-4ee0-82bd-eb50c7a1a15b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "015e0268-db67-45ba-aa6d-e187cb8ba28a",
        "cursor": {
          "ref": "a66638d6-0152-4d34-8711-005cd7faea69",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "d522b129-eaaf-4adb-9700-2f5b0bfcac08"
        },
        "item": {
          "id": "015e0268-db67-45ba-aa6d-e187cb8ba28a",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "be91cfaa-6e22-4f4e-b7d0-7a7c3012b5e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f91d9183-f223-4c7a-8ddd-71ead33257e2",
        "cursor": {
          "ref": "ca1a0cb8-9245-4c9e-b771-58ac555fea4b",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "8ac67202-bb1c-4ee0-a89c-dcbfa560e9bb"
        },
        "item": {
          "id": "f91d9183-f223-4c7a-8ddd-71ead33257e2",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "19ec909b-01eb-4590-b798-ad83c91fbf35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00ef7438-4c20-4d4a-885e-697b04d13d92",
        "cursor": {
          "ref": "1e8a5fdf-0a2a-4e71-a4e6-e1ec86ca637c",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "62d99b3d-129d-4f35-bd42-97a4b2b4b9b6"
        },
        "item": {
          "id": "00ef7438-4c20-4d4a-885e-697b04d13d92",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "d0f78991-b57e-4867-9983-b165ca38bfc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ba2ad72-fbb8-42f1-abec-e60c93406f8f",
        "cursor": {
          "ref": "ee44d29f-34cc-497d-b192-2644016d55ba",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "c8632cec-653e-48b8-bd8a-c77223fe755a"
        },
        "item": {
          "id": "8ba2ad72-fbb8-42f1-abec-e60c93406f8f",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "a4a6ec4d-4159-4bae-a880-7cdb77e884ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f46e2400-6581-4e98-8da8-103bc4fdf96e",
        "cursor": {
          "ref": "8e4ef9bc-5b9d-42ed-8af1-9496b6be3ada",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "9ff6a33f-7a07-4704-90de-44fdc7422d20"
        },
        "item": {
          "id": "f46e2400-6581-4e98-8da8-103bc4fdf96e",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "9488d075-d2e5-4ea0-b542-392a8bbb08c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47180640-ba98-4fa4-bb67-ba23f98ef7a2",
        "cursor": {
          "ref": "6f403e7a-ee14-4636-b830-7392c7519efa",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "600604ca-13ad-4379-87cb-a74ca35898cb"
        },
        "item": {
          "id": "47180640-ba98-4fa4-bb67-ba23f98ef7a2",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "94668b5a-b48f-49aa-981f-61f0f63359a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "324556a5-1b47-4f4c-97fa-8ce03b842127",
        "cursor": {
          "ref": "3cae1979-b413-4885-8c12-29fc91223c15",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "5151e425-4014-4254-8a2b-4f22caa334eb"
        },
        "item": {
          "id": "324556a5-1b47-4f4c-97fa-8ce03b842127",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "110b4375-e6ee-4a92-9172-222fc50f7d30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47859ecd-5e24-4c26-ad06-93af618661c9",
        "cursor": {
          "ref": "513c72c9-6842-4638-bba7-74dc151a651c",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "6ea85cec-03fc-4c12-b767-6348696ce4a2"
        },
        "item": {
          "id": "47859ecd-5e24-4c26-ad06-93af618661c9",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "b89ae163-ac26-4f63-9a5f-2d7dca34f9b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c66e8f2-410e-4a0b-b22f-e67e0568b617",
        "cursor": {
          "ref": "c26f6f9c-07ad-4f4a-9521-eae62422ddcf",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "5881d982-13bd-4b93-807f-6c1ff816121f"
        },
        "item": {
          "id": "0c66e8f2-410e-4a0b-b22f-e67e0568b617",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "07551ec1-1821-424e-b0d8-bd9bd7473219",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baec95d2-cc9d-4642-86d8-8933ce03a345",
        "cursor": {
          "ref": "060ce343-c9c9-4aeb-8c09-35fb5db57325",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "cc1632c3-111d-47ea-8616-b5fc629deb65"
        },
        "item": {
          "id": "baec95d2-cc9d-4642-86d8-8933ce03a345",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "4c330603-31b1-4ec5-a5fb-2a0f8e24e55c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ade7513-1724-4364-86a0-5e5bff7ae8c6",
        "cursor": {
          "ref": "e73b0b40-d938-4c0f-afa8-6023e4bcc44d",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "39f9637c-5562-447c-993b-ac7612cc5022"
        },
        "item": {
          "id": "4ade7513-1724-4364-86a0-5e5bff7ae8c6",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "d5582c60-82e6-46b4-8568-1790134ba468",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3242d2cd-a4b9-49a3-87a3-37af06ce345b",
        "cursor": {
          "ref": "41200d2a-d30b-4f78-8010-4454896c8d86",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "12bf34de-9b67-4dd0-a9ed-50876aacfad3"
        },
        "item": {
          "id": "3242d2cd-a4b9-49a3-87a3-37af06ce345b",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "6e326754-1b43-41b5-9cb7-9a732fd3a9a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3abf9a19-7484-40e1-80ce-6ff77540fa78",
        "cursor": {
          "ref": "ebefa6c9-231d-47e5-b038-47aa39e4f8a5",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "ccf7364d-ff37-4e08-b094-75dabcea1b3e"
        },
        "item": {
          "id": "3abf9a19-7484-40e1-80ce-6ff77540fa78",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "f8d0040a-b1f0-49d0-a181-32b5c9c5a09b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b517b8ab-4c81-477b-bbd5-e62bd14042fa",
        "cursor": {
          "ref": "cb4dd9ba-fea8-4493-90ee-c0689c4423a9",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "afa7e06e-6b8e-433e-90f7-0557031afc6d"
        },
        "item": {
          "id": "b517b8ab-4c81-477b-bbd5-e62bd14042fa",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "f5d6fc9b-3b99-420f-a5f0-afa8b2c29a3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "327cabbf-061c-46cd-bbd6-46add98c9aec",
        "cursor": {
          "ref": "86201d68-91f3-4aa8-8708-02d4ee5ccbab",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "a42e7775-4628-4c41-b9f9-68f4a1a29afa"
        },
        "item": {
          "id": "327cabbf-061c-46cd-bbd6-46add98c9aec",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "8a1075cf-0077-418d-b1ee-973d654b0751",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1db3175d-fbf9-4356-b8d8-845a2d69ad16",
        "cursor": {
          "ref": "a213acef-541e-492b-9c64-57848fc534a9",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "f1006680-d353-43c9-87b5-01877ee3e4b3"
        },
        "item": {
          "id": "1db3175d-fbf9-4356-b8d8-845a2d69ad16",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "5eecff30-640b-45a5-a8f2-68c2985b2945",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbb1b262-b617-45d5-8948-f8a05c0e0d85",
        "cursor": {
          "ref": "3551782a-ef64-4e23-b43e-ed2ee793b6fa",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "887fbcad-0398-4095-9c1c-853e3634eab7"
        },
        "item": {
          "id": "cbb1b262-b617-45d5-8948-f8a05c0e0d85",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "30a1016a-ab38-49d4-94a6-c16ff2dc320d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d99730d-b5d5-453d-b2e5-4a2a03d9dbbf",
        "cursor": {
          "ref": "fdb0a804-f063-4453-b55a-97a9873c5820",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "a9ddcf16-4fb0-4961-80c2-f65f3743c7a0"
        },
        "item": {
          "id": "0d99730d-b5d5-453d-b2e5-4a2a03d9dbbf",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "e4673910-6325-4de6-ba6d-11e183b71106",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eeee16cc-710f-4a2e-8a9d-fabb10c4e193",
        "cursor": {
          "ref": "44882454-3f22-4982-ae58-e46816480de8",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "5bc1712f-acc7-4488-a958-4ec2a7cba23f"
        },
        "item": {
          "id": "eeee16cc-710f-4a2e-8a9d-fabb10c4e193",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "56785bec-3754-4e9e-acf9-2871ad5c6d95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55225d2d-6136-4822-baa1-a741d7a4e3c6",
        "cursor": {
          "ref": "cd7cffb0-6f48-4ba7-bcc3-f69808e7aee7",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "7e6767c5-4135-4d5a-8817-742820780dcc"
        },
        "item": {
          "id": "55225d2d-6136-4822-baa1-a741d7a4e3c6",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "c5cf0480-7ca4-49c9-996e-8eb9759925aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e5006fb-76f4-4824-90ba-864b048e6cac",
        "cursor": {
          "ref": "be2adf23-9f69-40e6-bb40-f58ed286fa98",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "d4f4b4f7-b7ff-4771-b441-72fa11f20765"
        },
        "item": {
          "id": "4e5006fb-76f4-4824-90ba-864b048e6cac",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "74f21ad9-3faf-4c61-ad72-9905ec75a87f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51bee4fa-7bc7-4333-8b33-9583419f00b0",
        "cursor": {
          "ref": "8ee8535b-a190-40e4-804a-6c56984ff755",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "3d86b707-3370-4316-a8f7-8864dae49bef"
        },
        "item": {
          "id": "51bee4fa-7bc7-4333-8b33-9583419f00b0",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "7a356a5d-b320-46d7-98f1-e9d0080863f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fd471a6-bfb9-4e99-a2d2-dd6ac40fb78e",
        "cursor": {
          "ref": "4cbd8774-398d-41e2-9558-bbebd32ebb72",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "e43553da-fa44-4c2e-b3cd-9e730b1a65e1"
        },
        "item": {
          "id": "0fd471a6-bfb9-4e99-a2d2-dd6ac40fb78e",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "ae480d69-e55f-43d4-837b-4d9a54d62bb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86bd7323-1486-4299-8edc-dc470cf92250",
        "cursor": {
          "ref": "18023e83-1230-4a7b-9c8b-c58c33ac28a0",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "7ac6fa27-4bdd-4963-a726-ddc770f297ff"
        },
        "item": {
          "id": "86bd7323-1486-4299-8edc-dc470cf92250",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "b81c004b-0a73-43d0-94ca-ee5eb8e02400",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09ee6a00-6ebf-434a-9669-700d8d0627b8",
        "cursor": {
          "ref": "e7fe845b-69da-4229-8e57-1a4328fc0e04",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "e97397e3-7dcb-42d2-9123-d24e9266ea51"
        },
        "item": {
          "id": "09ee6a00-6ebf-434a-9669-700d8d0627b8",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "37a47b74-4c0a-43b6-bf26-f964b9966d1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1760a27e-b384-43f0-93af-6f5745e9d533",
        "cursor": {
          "ref": "b734d80c-7b42-484a-95db-2703a77598d6",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "5713a7fa-9035-4122-9d51-ff7eedf8dd0f"
        },
        "item": {
          "id": "1760a27e-b384-43f0-93af-6f5745e9d533",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "0a9f541d-5dc7-4711-ae98-e5ab03c28621",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6a572a2-cc3d-43e2-9ab7-2ba28d86693f",
        "cursor": {
          "ref": "74fa60f3-5fd8-487c-a665-ce75fa616fe1",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "10017ab7-87b4-4c5a-ad16-cedcc1b70208"
        },
        "item": {
          "id": "c6a572a2-cc3d-43e2-9ab7-2ba28d86693f",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "31984177-f43f-42a3-ba1e-1fba612a8c1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7e8f6dd-721e-497d-aa0d-9e8c2f63b14d",
        "cursor": {
          "ref": "1f4545f9-2425-46d0-8e06-9694da6ee296",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "3e023a65-de3a-4802-ad20-ef98e1606eec"
        },
        "item": {
          "id": "c7e8f6dd-721e-497d-aa0d-9e8c2f63b14d",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "978c1030-f0c8-46be-a9d2-2d27f5dad927",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f90e0f0f-f9fd-44ae-9e2b-df19fbf3d4e0",
        "cursor": {
          "ref": "e3d912e7-5002-4edb-a864-9c8c26a978e5",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "008d71d8-23e8-4544-8c98-f916c0f95793"
        },
        "item": {
          "id": "f90e0f0f-f9fd-44ae-9e2b-df19fbf3d4e0",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "bc6dfecb-95ca-4c61-a646-e6fe0cbf8a5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35c2d081-5bf6-419f-bfb0-9967c52880bb",
        "cursor": {
          "ref": "bb0c2d89-f34a-49ab-b0d9-80c3d3d6aea3",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "e2ed8046-e6e4-49d3-a4f9-10a3c5a058a3"
        },
        "item": {
          "id": "35c2d081-5bf6-419f-bfb0-9967c52880bb",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "17e42633-9bf6-41f2-afae-4f408904cefe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2df88cbe-fda4-4351-a3ee-3b3ee2382cdc",
        "cursor": {
          "ref": "458c183f-0f05-4d08-8f9b-407906e854f2",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "ecf2dfde-eecb-4943-a428-b3a2ac8b97de"
        },
        "item": {
          "id": "2df88cbe-fda4-4351-a3ee-3b3ee2382cdc",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "4a52a4c9-b969-45dd-94c8-a27b3eeeaf67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c0938ab-1ca7-49c2-b8b8-f9d64ec7c136",
        "cursor": {
          "ref": "49a387ee-2fe2-4338-b6a4-a88cb8f4a3a3",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "a7a4ddb2-ba8c-49f3-a2ad-ae1045cb45ed"
        },
        "item": {
          "id": "9c0938ab-1ca7-49c2-b8b8-f9d64ec7c136",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "5b21e67d-7bfc-4ab1-b4b1-d86d0b54b76c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b15ebed5-329e-445e-b6f5-d25f8dac6b3a",
        "cursor": {
          "ref": "48c9abea-b772-45b2-a71a-edc42c8c9122",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "f5bad188-8f4d-47ff-9d1b-750306c10ba0"
        },
        "item": {
          "id": "b15ebed5-329e-445e-b6f5-d25f8dac6b3a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "748f5f6f-28d9-45d8-9cb5-d53eb2453eae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09196be1-a6b7-4d57-89de-35cfb5f810ea",
        "cursor": {
          "ref": "00b7d325-3880-4a96-9635-f6f1ab8ab2ab",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "6d13f4da-3568-4150-96c7-aa2cf7a9072d"
        },
        "item": {
          "id": "09196be1-a6b7-4d57-89de-35cfb5f810ea",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "20e3d018-dbbd-4e34-81ef-307635b814a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f078990f-d6db-44f5-a696-9cd266de5704",
        "cursor": {
          "ref": "0b5039c1-252a-4363-ab2b-c4d404c6372e",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "0a805f88-1441-49be-992c-1625ea6454eb"
        },
        "item": {
          "id": "f078990f-d6db-44f5-a696-9cd266de5704",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "4abfb157-2762-483b-93fd-d6de16dfc2ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dbeea35-39f4-47f9-8d48-75cbe1548efc",
        "cursor": {
          "ref": "62eb5fc9-6f66-45a9-a937-845d246cd7b9",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "72ee7a96-22f4-41b0-aa08-d88baf1ab9db"
        },
        "item": {
          "id": "2dbeea35-39f4-47f9-8d48-75cbe1548efc",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "553fd0fc-c5f7-4912-9226-c6a9044ecb2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e9876bf-8968-4483-bb03-606b4403e778",
        "cursor": {
          "ref": "0647ba4f-e64a-4223-81b5-18a52407e664",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "6d20202d-2547-41e4-8c18-1691f2dc0856"
        },
        "item": {
          "id": "2e9876bf-8968-4483-bb03-606b4403e778",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "5f7d7290-462a-48dc-9eab-b6c001563104",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34ede380-88d1-4af1-9e0e-3e9a4157ae7d",
        "cursor": {
          "ref": "2c1785c3-2794-453e-b84e-4f54bd3f713b",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "2367bada-1168-4834-b5f0-704219d53288"
        },
        "item": {
          "id": "34ede380-88d1-4af1-9e0e-3e9a4157ae7d",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "8158801b-7248-48d8-af88-9eede5bb1dcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01018f6d-5fd3-4773-b042-c75171c03fe7",
        "cursor": {
          "ref": "4c53f67f-b1a9-49f1-92b2-c678b5657b6e",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "97bae5df-7fc2-4d9b-b9c2-32ffb3043694"
        },
        "item": {
          "id": "01018f6d-5fd3-4773-b042-c75171c03fe7",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "8a3bb1c5-1f21-4007-b715-c1719ea54a07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "449e8c1f-40a9-499b-9830-e73cd97b08e8",
        "cursor": {
          "ref": "445c994f-faed-49d0-a4a0-494ec6e195ef",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "7a4a3af3-3fda-47f4-b7d9-e5aff408ab0b"
        },
        "item": {
          "id": "449e8c1f-40a9-499b-9830-e73cd97b08e8",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "091ca929-921b-4548-8fa8-8553c0777d97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22694a3c-87cb-401c-8c36-4f85d34bdbe4",
        "cursor": {
          "ref": "02823d1d-291b-4336-9d94-27de489b9252",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "60f7f4f6-60d4-4877-9a52-ae14b88591c2"
        },
        "item": {
          "id": "22694a3c-87cb-401c-8c36-4f85d34bdbe4",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "f4303f6c-af4b-4734-8d0b-73308c15102c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96f3599e-ea9d-4f80-ade7-d80cedb211a8",
        "cursor": {
          "ref": "51b1d687-13e4-4ae4-8b79-c86c3b715b8c",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "af76ff76-d400-47e6-894b-8f39ee2b50de"
        },
        "item": {
          "id": "96f3599e-ea9d-4f80-ade7-d80cedb211a8",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "e75b9e4f-bf1f-4f09-a523-5589595ff58b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6d5c003-35af-4a37-af50-98414232b854",
        "cursor": {
          "ref": "5d0b1731-c613-4a4d-a0ba-b7cfc686c16f",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "ecfd3220-ce33-4778-bb82-20e1a24ec2f6"
        },
        "item": {
          "id": "e6d5c003-35af-4a37-af50-98414232b854",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "981f854c-74f4-4857-b309-b9ac3c01a2ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15815ace-41d1-4948-8390-a2568c484b5d",
        "cursor": {
          "ref": "287c9882-b1ff-4cfc-9270-f2af1843f530",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "382ca3ba-e84c-47e7-858c-e20190aa15c2"
        },
        "item": {
          "id": "15815ace-41d1-4948-8390-a2568c484b5d",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "73e174da-9366-4fb2-8839-d04fa0582e0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "838a7a83-ca72-4b45-8be9-03c7f9ac7b98",
        "cursor": {
          "ref": "3700658d-6362-485a-8eed-80f443fa70d4",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "42ed9951-9934-4be4-b45b-5f02fda9565b"
        },
        "item": {
          "id": "838a7a83-ca72-4b45-8be9-03c7f9ac7b98",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "4e23f920-210b-4661-bd2c-cc2fa4e6f852",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "933b6645-d63c-4fb7-91f1-43ac5b073582",
        "cursor": {
          "ref": "8303f79d-34dd-4e60-8eb4-7f48b946c619",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "57aa86f9-9b6b-4e90-b9c8-f6892e9c68b4"
        },
        "item": {
          "id": "933b6645-d63c-4fb7-91f1-43ac5b073582",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "f1b130a4-ba51-4da6-b0d6-4b384e6b564c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cbc5f9f-4479-4e58-ace7-c89e70799c0b",
        "cursor": {
          "ref": "aa081bde-5677-4abc-b025-74ec575af48e",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "381db8b4-3fc8-42c0-8aca-edbe628ae0b8"
        },
        "item": {
          "id": "2cbc5f9f-4479-4e58-ace7-c89e70799c0b",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "045018bb-ded3-4ddb-8daa-69ad4bc676e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86114090-9991-4a5e-a0bd-8b45af3f6759",
        "cursor": {
          "ref": "9cec8848-fb77-42be-89ce-96eaee32572d",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "cdbc1f6d-9fbf-45c7-b09e-b0ab5cbd65f7"
        },
        "item": {
          "id": "86114090-9991-4a5e-a0bd-8b45af3f6759",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "33c6bee5-560b-4dbf-822a-d7c54d059dd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24f26143-1e38-428b-81ae-213750aeeffd",
        "cursor": {
          "ref": "9f9cc885-cd29-4dc2-aefd-b397e8957b6a",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "083fc787-72b5-459a-8f71-5aa5f32dcf8d"
        },
        "item": {
          "id": "24f26143-1e38-428b-81ae-213750aeeffd",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "0c6dd15e-6e68-4d6f-b41f-2b9378fd2b74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35f8aeeb-d9a8-4eef-bb69-5efed08be800",
        "cursor": {
          "ref": "eeff4d00-24a0-40c7-a8fc-445078ca24c6",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "f5c41996-efbb-4e04-93ae-ff546fc2d211"
        },
        "item": {
          "id": "35f8aeeb-d9a8-4eef-bb69-5efed08be800",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "a16450f0-b647-4683-a876-f22e867fa135",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3552e80-4221-462d-a876-dc5cb66f2e8a",
        "cursor": {
          "ref": "3172e3dc-7819-4a01-a14d-d74b0cd4fccc",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "689efca5-f528-4244-a44d-4e7d8d94196e"
        },
        "item": {
          "id": "c3552e80-4221-462d-a876-dc5cb66f2e8a",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "5df21a71-706c-42b3-a694-1d3cc9982d57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b250331-0bd8-40f3-b872-05516554198a",
        "cursor": {
          "ref": "b2f288be-756e-44d3-bf9c-37f80dbbdda8",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "124d1b86-6995-48a5-b904-5b1a84c97423"
        },
        "item": {
          "id": "9b250331-0bd8-40f3-b872-05516554198a",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "86ec27a0-e939-4a78-9823-f6137d1f03dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6248c0c-e0d0-4dd5-b036-43825f9a6a96",
        "cursor": {
          "ref": "48aa8aa1-0c80-4b03-bad4-2c3510d58b84",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "1f183c3c-a61a-4460-840a-73aa628852e3"
        },
        "item": {
          "id": "c6248c0c-e0d0-4dd5-b036-43825f9a6a96",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "ed82e09c-7743-46fc-920d-d057d515f3be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e44d4a85-3f69-4d9a-948b-0ee82790a282",
        "cursor": {
          "ref": "6ee2fd15-bebc-41ba-bc58-a0415d09b3a6",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "6ad6281b-e480-43f1-88cb-01082e80e0a5"
        },
        "item": {
          "id": "e44d4a85-3f69-4d9a-948b-0ee82790a282",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "6045f69d-831e-4754-a572-625a57456c94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad1741af-0dfd-4801-8c05-3b7a4dcbc697",
        "cursor": {
          "ref": "693c8e7b-e304-40d6-85e6-a0afb8840efe",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "a69033e2-8ead-47bb-a423-715e9ec2386b"
        },
        "item": {
          "id": "ad1741af-0dfd-4801-8c05-3b7a4dcbc697",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "3906fa14-ab7c-4293-ad34-8ac6e06a56fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e87bfb3b-0203-4c25-8fb1-4d23145214af",
        "cursor": {
          "ref": "115322a6-5549-4401-a784-2b74bad353c2",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "22e75cc1-4e9d-48ef-b040-4b6a21988438"
        },
        "item": {
          "id": "e87bfb3b-0203-4c25-8fb1-4d23145214af",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "c11fdf17-c77b-477f-8ab5-95a05501abc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11a6abd8-f9b7-4bbf-bf90-af12a46b5c9a",
        "cursor": {
          "ref": "9b953475-6a99-4c49-b8a2-67bd6144f4c0",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "3b8b9c4c-0564-435c-a904-d3ecc87c7000"
        },
        "item": {
          "id": "11a6abd8-f9b7-4bbf-bf90-af12a46b5c9a",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "ddaa5759-6bf2-49ee-be6b-9d47ea65b692",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9562d1e-bb56-4666-90ad-393adaac57cc",
        "cursor": {
          "ref": "9b333ac3-3fa4-47a6-b90c-88591da10b71",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "0b90e821-21f3-4d97-8069-17d9044cf36e"
        },
        "item": {
          "id": "d9562d1e-bb56-4666-90ad-393adaac57cc",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "217f562c-0143-46c6-9931-0073895c5e69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07b9cdad-498f-4fff-910e-7f8796d372d4",
        "cursor": {
          "ref": "6e002cc7-b930-4b66-b8be-a10d9e37d4bd",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "2cb42800-7d4c-404d-8c6b-d836dad65d40"
        },
        "item": {
          "id": "07b9cdad-498f-4fff-910e-7f8796d372d4",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "9189d7f4-dbc7-428d-b77b-23213a7b99ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e18de018-da69-40c6-8413-43cfb2c490e6",
        "cursor": {
          "ref": "2b4e11e6-4068-4a4c-9f3c-56444591a918",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "bf87a0c1-1289-49c3-b009-93a4eac23d96"
        },
        "item": {
          "id": "e18de018-da69-40c6-8413-43cfb2c490e6",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "8ebd3df6-add6-4495-88e4-34345796df5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbabe68a-c9f4-4419-b9ec-685dfd8287be",
        "cursor": {
          "ref": "397a9b1c-02f7-4a3f-bdfd-a4fdfb2cc673",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "1d6f6270-7d20-4142-ae78-5d54c4e4ddb4"
        },
        "item": {
          "id": "fbabe68a-c9f4-4419-b9ec-685dfd8287be",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "c96f73da-ae28-44ea-944e-0fe14adc9c52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29b82ed1-deb6-422e-a709-d2d22dfa035d",
        "cursor": {
          "ref": "7489fe81-a1f9-4e5c-927b-700d2cbc5204",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "d6c5fc2d-107f-4121-a5fc-27ea49a12081"
        },
        "item": {
          "id": "29b82ed1-deb6-422e-a709-d2d22dfa035d",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "73abdcf9-e857-4d01-9473-17d7f2983bc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "134066a1-9cdc-42d0-bc03-40d570ae4298",
        "cursor": {
          "ref": "e6e5f8e7-297b-4e73-9e24-0bb40a38bbaf",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "2ea85201-5582-4f7e-93a5-784cc73da747"
        },
        "item": {
          "id": "134066a1-9cdc-42d0-bc03-40d570ae4298",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "515bf9de-9f91-46ad-9669-fd1ece15701e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f418ca8-1e42-4d71-8eb7-d9be58f8bd64",
        "cursor": {
          "ref": "42a86344-0988-47da-b383-3fd0fe07e617",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "f7161afd-9118-4633-ba98-a0a1b5445b83"
        },
        "item": {
          "id": "8f418ca8-1e42-4d71-8eb7-d9be58f8bd64",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "f8aeffbf-8d3d-4af8-a969-43306000efbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d15c413a-9902-41cf-876b-bdba54e5812a",
        "cursor": {
          "ref": "12b8b708-6248-4878-874a-204f18667b85",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "8a858067-2d52-4911-80b3-dfe812e0d725"
        },
        "item": {
          "id": "d15c413a-9902-41cf-876b-bdba54e5812a",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "14fcd58b-8fd1-4074-8fd7-8b6cfaedc105",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:101)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5881271-c713-4b9f-9dc5-a0d8414ca42c",
        "cursor": {
          "ref": "b7d905d9-1069-4573-a267-482c1c05e2c7",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "47398c2a-ea21-4bec-8cb9-90365fcc163b"
        },
        "item": {
          "id": "e5881271-c713-4b9f-9dc5-a0d8414ca42c",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "ddb38f22-2db4-4235-b450-822205f5f2a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "8cc224fe-f856-49e1-9437-1ca1b14d674c",
        "cursor": {
          "ref": "45e67798-1180-4e7b-8d6d-741d58ae6fa6",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "6ff722ab-6053-4376-b72e-e45b0aad0cba"
        },
        "item": {
          "id": "8cc224fe-f856-49e1-9437-1ca1b14d674c",
          "name": "credentials_issue"
        },
        "response": {
          "id": "089fbd04-3497-4725-b904-db2a43587e59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "16e6be69-75ca-4e4f-9bce-f8c1b98e8902",
        "cursor": {
          "ref": "e8c767b1-1cff-4dd0-96a1-51a8205a5248",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "88a6a6c6-d3ad-4545-bbaa-9cf57c9cd71f"
        },
        "item": {
          "id": "16e6be69-75ca-4e4f-9bce-f8c1b98e8902",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "98ca079e-0953-4e95-b2f8-99e0361503ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "9f918d12-34fc-45a1-acab-0ca551a9c32e",
        "cursor": {
          "ref": "0d6a541a-7a40-4d2a-a6e1-9ef47b56e3e9",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "8efc9399-85a3-4610-ac05-73acd8ae149f"
        },
        "item": {
          "id": "9f918d12-34fc-45a1-acab-0ca551a9c32e",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "a4e9b1e5-590a-41a2-8134-cc43dfcdfc2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "119f9019-c125-4513-9ce5-990d8079e3d0",
        "cursor": {
          "ref": "c61beb5d-a169-48a9-ab25-bfc90d27271e",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "6f9ab9ae-956d-4530-993d-66bd6b287dd9"
        },
        "item": {
          "id": "119f9019-c125-4513-9ce5-990d8079e3d0",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "79cab4e6-c673-4696-b8be-bc2c89021629",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "e3a5e8e8-be03-4c00-afbf-1767f8e69bbc",
        "cursor": {
          "ref": "c57d4873-b320-4455-9a86-494b19406ef6",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "ff703428-2951-4e75-97bd-22366baefad2"
        },
        "item": {
          "id": "e3a5e8e8-be03-4c00-afbf-1767f8e69bbc",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "04ff581a-40de-4135-a6a6-357737ed6db0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "988899e6-8daa-418c-bb6f-39a09f827fee",
        "cursor": {
          "ref": "f5f726b7-f199-44ec-a444-962653a7b93b",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "115ff9f9-84de-4bdf-bc86-6496ea3159ff"
        },
        "item": {
          "id": "988899e6-8daa-418c-bb6f-39a09f827fee",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "4b49ffad-87a4-4f51-8a13-f0e3489d4d39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "d5b702f6-a51b-4992-bc74-6450a864cde3",
        "cursor": {
          "ref": "13df7d16-64c1-4b5e-a9f3-f2c4e69a19bc",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "b5991658-c1ea-4368-96ca-ee088be9dbc9"
        },
        "item": {
          "id": "d5b702f6-a51b-4992-bc74-6450a864cde3",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "857959e0-2533-43ec-a332-1d9a39e35221",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72f7a54b-addc-4b27-86f4-fb46522428dc",
        "cursor": {
          "ref": "8ed3c592-32a6-4bf0-8ec6-2e20343afa00",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "d2eec080-ddac-4d62-9c54-186a3a0263a2"
        },
        "item": {
          "id": "72f7a54b-addc-4b27-86f4-fb46522428dc",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "ce53db0a-5b55-4dda-968d-05500d6d993d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faa154f6-9e68-4d2f-b2ab-6d1980173d35",
        "cursor": {
          "ref": "3fe8e68a-93a6-4cfb-b75d-16a745b19d99",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "bbe0eae2-1eaa-4d09-8f8b-d95b87af6616"
        },
        "item": {
          "id": "faa154f6-9e68-4d2f-b2ab-6d1980173d35",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "688c9383-3efe-430b-8c77-3b0a01c19069",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f1aeb73-30fb-49e6-a760-13f404d73227",
        "cursor": {
          "ref": "1053e6bc-52a0-4169-b8c6-d1ca70658f49",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "44f38205-0133-490b-9562-76440a32f6b5"
        },
        "item": {
          "id": "8f1aeb73-30fb-49e6-a760-13f404d73227",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "1374187d-904e-4377-bdf1-549b11ceed75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14d37368-c491-42c5-b969-61f31644c9fa",
        "cursor": {
          "ref": "abc5c0a0-b8bc-4eb5-b014-9fb56a3ffa23",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "3da37a6c-c790-4a21-8fb6-30edb339a431"
        },
        "item": {
          "id": "14d37368-c491-42c5-b969-61f31644c9fa",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "fdc9c5c5-0880-4667-8015-b317fa3ac08c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fff8b8b8-056e-4321-9898-b056fdf867c0",
        "cursor": {
          "ref": "61f9d100-f73d-4206-b3e1-cebc1ac4be2f",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "054db808-2b2f-4247-8203-693f1d1f8188"
        },
        "item": {
          "id": "fff8b8b8-056e-4321-9898-b056fdf867c0",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "6087a888-8ccd-4959-9193-e1c52dd2ff69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57bbe695-50c4-4a08-b0bd-284a69fdd0e4",
        "cursor": {
          "ref": "0b51a01a-67bd-444d-8b66-4ccb844dfc44",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "628387fd-382c-4b4c-ae47-e1fa6aab72db"
        },
        "item": {
          "id": "57bbe695-50c4-4a08-b0bd-284a69fdd0e4",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "358715ec-692f-4598-98bd-0a4f0a112978",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1985ce9c-c254-4084-8dc7-0367b5878598",
        "cursor": {
          "ref": "d47aa0e9-7005-4691-a5d3-9de56e1cc32c",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "4dedaf11-1d94-48bd-b504-961d3b589452"
        },
        "item": {
          "id": "1985ce9c-c254-4084-8dc7-0367b5878598",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "b25318e1-6baa-4fa0-aeda-017a5b7cf9d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4eede86-8d5f-48f7-907b-29d08e155fc2",
        "cursor": {
          "ref": "c9bbb81b-8d8a-445f-b18c-fb1522b5633c",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "6000414c-9e21-4870-85b9-b1791810dfbb"
        },
        "item": {
          "id": "a4eede86-8d5f-48f7-907b-29d08e155fc2",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "021bf681-8aa0-4195-b88f-05b7813c7337",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "529883a7-f870-4700-8aea-7a84cc9d8ec4",
        "cursor": {
          "ref": "fe2b851d-a7d0-43b6-bf09-e3ab2891a728",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "a46954c5-98b0-448b-9772-d8bcef111a1d"
        },
        "item": {
          "id": "529883a7-f870-4700-8aea-7a84cc9d8ec4",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "5d89695e-41b1-4728-8ac4-04cc4397b7ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf916d81-5e15-4ba9-ac54-b42118d5d23b",
        "cursor": {
          "ref": "7fb34ea9-ab94-499f-89b5-02697b1ff54c",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "2c12cf62-58fb-4275-8259-b906221be10a"
        },
        "item": {
          "id": "bf916d81-5e15-4ba9-ac54-b42118d5d23b",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "836845ea-969a-4ea3-b677-2e567f97858b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d2427f5-8349-4581-80c5-75ffcc22cf72",
        "cursor": {
          "ref": "1e6114f7-13f2-46c5-a253-b1fb867e7f7c",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "0ef7a6d0-0893-4693-90c4-cd5c27644a32"
        },
        "item": {
          "id": "1d2427f5-8349-4581-80c5-75ffcc22cf72",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "550c6611-863a-4954-8f5a-7a82bf620c50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83038b25-2461-4946-862a-1fc132dda8eb",
        "cursor": {
          "ref": "9643599e-15ff-40d8-a6d1-5200f0a0f73b",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "4a62f0c7-4761-4b42-a7e8-f8ad50039fb8"
        },
        "item": {
          "id": "83038b25-2461-4946-862a-1fc132dda8eb",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "a4c6ac2f-b673-496c-9ad5-bd04e0ce01c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "105ebc67-f285-40e3-af1a-dac68f824f38",
        "cursor": {
          "ref": "05441d81-4354-4b60-986a-53a58a572897",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "681b4f4d-c092-443c-ba41-5318a90703b9"
        },
        "item": {
          "id": "105ebc67-f285-40e3-af1a-dac68f824f38",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "46fdb62a-d69c-47b4-8384-20308577c2e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bd19c5f-4973-49ef-975f-792e831c5bc8",
        "cursor": {
          "ref": "7497ab16-238c-41df-ab7a-067a70cca4a0",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "1f171a95-0dc3-4425-b403-f74bbd6eec15"
        },
        "item": {
          "id": "5bd19c5f-4973-49ef-975f-792e831c5bc8",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "cb7f4ac2-3f7c-473d-925c-01a4019b0bea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddce1329-0913-4938-8172-a0626e933d87",
        "cursor": {
          "ref": "eac85491-f4ad-448e-9ae1-04d597b474cf",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "53766703-2b11-4437-bd1e-d88ea1ef0db0"
        },
        "item": {
          "id": "ddce1329-0913-4938-8172-a0626e933d87",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "9f3e253b-28ae-4fda-90a8-bf5dbb0c0214",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e51e67b2-1317-4780-8905-c91f97cb5b31",
        "cursor": {
          "ref": "41a18ed9-969a-474c-a473-0d712f4eb5e4",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "59196ed8-05a1-4bd9-b4a2-cd453c219d05"
        },
        "item": {
          "id": "e51e67b2-1317-4780-8905-c91f97cb5b31",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "2a1e6d61-25cb-40d5-9edd-dce847296ee9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "405b26fe-53fd-4983-b21a-fac817e58374",
        "cursor": {
          "ref": "8fdfe249-3f8a-4aa2-8b85-cdd886fb3196",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "79e5bc16-c4be-462f-b1bd-019243b1781b"
        },
        "item": {
          "id": "405b26fe-53fd-4983-b21a-fac817e58374",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "8eef7898-f341-4dfb-8f57-40458bcd129c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98025c7e-d5b7-4ffc-8abd-c88a2d2c477a",
        "cursor": {
          "ref": "9388a29f-0507-4f1d-921f-72fb908db2c0",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "d093e177-1986-46f1-b0ad-6c488d3b28f2"
        },
        "item": {
          "id": "98025c7e-d5b7-4ffc-8abd-c88a2d2c477a",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "1d8fabff-c39c-46d6-9cf2-25de059dc7e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7b53816-6e85-42bd-bbe2-c5b9b403d0a1",
        "cursor": {
          "ref": "9488ba9b-f782-4cfa-ba21-2a6c2f1182c6",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "80d4bdfb-8541-4bae-a3f0-4a48c02a8949"
        },
        "item": {
          "id": "e7b53816-6e85-42bd-bbe2-c5b9b403d0a1",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "a2631337-c213-4605-b82e-e89d5ca7734c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "173efb6a-ee31-4dfe-82bd-11bf0c761cd8",
        "cursor": {
          "ref": "7943ad0d-2a0a-489c-a33d-9f67e3263485",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "212efeee-8fe1-47fb-84bb-0f603e369984"
        },
        "item": {
          "id": "173efb6a-ee31-4dfe-82bd-11bf0c761cd8",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "18c6cb33-8fb9-41b0-8ea4-be1f9fb23b37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b4bf9b9-1f9b-4435-b2b7-3b1c182c3bd8",
        "cursor": {
          "ref": "62e7bc2d-55d2-407f-8fa2-cf2a5b10f6a2",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "8efa1827-bedc-4bfe-ba28-07640d159612"
        },
        "item": {
          "id": "9b4bf9b9-1f9b-4435-b2b7-3b1c182c3bd8",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "31ec10cb-da60-49df-a077-394fe0fe81a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8617f180-6e4e-43c2-a654-24fca1177186",
        "cursor": {
          "ref": "a8e6baae-09f8-4764-97c9-7167ada5ac89",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "86b8c80e-2b8b-4d8f-bc85-0633d6d25694"
        },
        "item": {
          "id": "8617f180-6e4e-43c2-a654-24fca1177186",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "b1c3003f-e08a-4850-9980-58e3735b883e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed05484e-908f-4439-9817-dfa6d7953150",
        "cursor": {
          "ref": "bc0c9fa6-3e7d-4c14-8a08-15c0d0788d41",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "292ca332-f7b5-4056-993a-2995f468b0c6"
        },
        "item": {
          "id": "ed05484e-908f-4439-9817-dfa6d7953150",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "1b0f2692-77ce-45c1-abbb-5bb05b0149f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa5eee9a-95c3-43ff-9bdd-35449c1bf6f4",
        "cursor": {
          "ref": "7a1b9d33-fdb2-45a9-888f-a30f965aa9fb",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "dee0e498-08ba-4cea-922d-f062d72a936b"
        },
        "item": {
          "id": "fa5eee9a-95c3-43ff-9bdd-35449c1bf6f4",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "0f406b66-5f15-4d93-bf51-8df1baaa2df2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ab00da7-bd66-4c63-b1ab-aa01a810556c",
        "cursor": {
          "ref": "42ef8713-2989-4a0b-a61c-c09baa781421",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "d8922b2b-f859-404e-87cc-abfb068577d6"
        },
        "item": {
          "id": "5ab00da7-bd66-4c63-b1ab-aa01a810556c",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "32b9d79e-fb66-44ff-a29e-dce219977b81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91559e07-2480-4b1f-a573-76c4ee6de590",
        "cursor": {
          "ref": "3d70226b-bd1f-4405-8673-e281d7b34949",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "8367d563-4f2f-40c5-ac0e-555b8e6dabe4"
        },
        "item": {
          "id": "91559e07-2480-4b1f-a573-76c4ee6de590",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "3c1c59d2-8b17-424d-ae43-ade1f3bc3cc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a0ec4b3-aad1-456c-bc92-27863c6cbda7",
        "cursor": {
          "ref": "ae8a0c8b-0cb7-4954-808d-f03a857e3193",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "36f428ff-13a5-4b85-a568-b496dacfcf2d"
        },
        "item": {
          "id": "1a0ec4b3-aad1-456c-bc92-27863c6cbda7",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "95babae7-3c15-4e6c-9b70-0feedd2a1809",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47c719ca-800d-4a70-803b-04db9983b166",
        "cursor": {
          "ref": "2b3f9baf-a144-4920-9234-e9013d6be881",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "8a523766-46c2-4df0-b381-84590338cf9f"
        },
        "item": {
          "id": "47c719ca-800d-4a70-803b-04db9983b166",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "8357bcea-c217-4085-a7aa-d93c8bd8a95b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58a5e439-f280-4bff-9d2b-8cddd5f1e350",
        "cursor": {
          "ref": "3300e57b-88aa-4699-b531-ca283e954c84",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "cc3ccb8c-1826-4827-8a11-523d7cc76f19"
        },
        "item": {
          "id": "58a5e439-f280-4bff-9d2b-8cddd5f1e350",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "4289624a-1e6c-41ca-a51c-0a25e5047cc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa6ee3b5-63fb-4709-9de6-3f467b8fad79",
        "cursor": {
          "ref": "c1d5d6c7-a08a-4cb6-a0ab-cf5f9dd153d3",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "6945da07-c5a5-49ad-8d44-a4bab9dd877e"
        },
        "item": {
          "id": "fa6ee3b5-63fb-4709-9de6-3f467b8fad79",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "a9380f6b-1a7a-4fdf-8a1a-26edd1725e94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e086c62-0fd2-4f31-bb70-116a4918968b",
        "cursor": {
          "ref": "68ce75af-c11a-41c2-aefb-5ace3f7e1fde",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "23a11b77-23e9-4970-ba12-8964f5abadca"
        },
        "item": {
          "id": "8e086c62-0fd2-4f31-bb70-116a4918968b",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "63e1dbf0-d668-4e44-84da-c84d13d2fa79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "358d493e-f125-4366-967f-5dbc33736fcb",
        "cursor": {
          "ref": "83aee773-c579-4fe5-85af-988ab3a0e1f4",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "b7007fce-e446-47f2-ba39-9b7c7d8db179"
        },
        "item": {
          "id": "358d493e-f125-4366-967f-5dbc33736fcb",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "81f2962a-1a49-4897-b326-37960b5a496e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5617fa94-67d6-4ee6-addc-540c17541541",
        "cursor": {
          "ref": "ae055e7d-a770-49d9-9949-737b842acb81",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "cad900ed-99dd-4858-a214-17a85beaf74d"
        },
        "item": {
          "id": "5617fa94-67d6-4ee6-addc-540c17541541",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "b26b2bcc-64eb-4bf0-89d5-8483345ecad9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca24079d-e6a9-443b-8876-33c71b3ffaa2",
        "cursor": {
          "ref": "d669b3f1-32f4-4396-9b95-83c487a3fd54",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "b2c5a0e6-ec8d-4041-bfcd-6da5e00dc4f5"
        },
        "item": {
          "id": "ca24079d-e6a9-443b-8876-33c71b3ffaa2",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "047a5101-3d35-4eba-be45-06b54a24aeb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "496becc4-51cf-4518-b8b3-2d9c5162173f",
        "cursor": {
          "ref": "1507930b-be17-4f8d-81e4-d5f72be970c3",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "f8a9cd13-30b6-4e7f-9919-24743e885314"
        },
        "item": {
          "id": "496becc4-51cf-4518-b8b3-2d9c5162173f",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "a8535d59-0643-48be-bc2e-236beab604bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22ff3fdb-93e4-4cda-b81e-ca2dcc56962e",
        "cursor": {
          "ref": "ee44417b-2c43-42df-a82d-3337825999a3",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "b8be1de7-b56f-4a1c-b0d0-13262a3cdf4c"
        },
        "item": {
          "id": "22ff3fdb-93e4-4cda-b81e-ca2dcc56962e",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "3d9f32ed-b302-4d3c-bfce-b75268257f2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5841160d-4990-4d75-a8f4-7fcbdf75d282",
        "cursor": {
          "ref": "edf022c1-2cba-40a8-99be-48ce891681d5",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "497e360f-bbed-4afd-8a02-91976f5fc82c"
        },
        "item": {
          "id": "5841160d-4990-4d75-a8f4-7fcbdf75d282",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "a0b5f870-a1fc-420a-bbe7-081205a00e49",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7df9f782-ed12-42b0-ae3b-fdd89071a8c8",
        "cursor": {
          "ref": "6219daed-0884-4bb6-b262-87a87b9cbe4a",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "026ab2a0-9a4d-4d61-a7de-868b0eb46c6e"
        },
        "item": {
          "id": "7df9f782-ed12-42b0-ae3b-fdd89071a8c8",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "bb74c0c4-cf22-4051-b44a-a91e4edc9199",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "261485d7-29d9-44bf-b7c7-fa6ffc76adce",
        "cursor": {
          "ref": "7aab9d50-0bca-4ada-b113-3d70f5a06c95",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "bc27a0cb-d9a5-440f-a4b1-2d4efdec0fb6"
        },
        "item": {
          "id": "261485d7-29d9-44bf-b7c7-fa6ffc76adce",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "43e4a41d-2f94-46a4-948c-a28b760efa52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a344a7ea-aa52-44e8-ad41-9919778b6fdf",
        "cursor": {
          "ref": "b6553c2c-2531-49dd-8790-388208468e4d",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "482e855d-2915-4544-a194-7fbb0ca763d0"
        },
        "item": {
          "id": "a344a7ea-aa52-44e8-ad41-9919778b6fdf",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "d5842a84-ee8c-4d59-9b85-02f4b9fb2c9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77bb3399-fd5f-4ef2-8cb7-78d11d419ed5",
        "cursor": {
          "ref": "fa25dd08-8909-4836-ae58-556203502c8e",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "c9dc4f3a-c2ae-4575-ac08-7003ddaf7df6"
        },
        "item": {
          "id": "77bb3399-fd5f-4ef2-8cb7-78d11d419ed5",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "59e32c9f-ffd2-44ec-a8ff-99a7ab04c613",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e976605-1015-43b7-ba66-c7a1c719d174",
        "cursor": {
          "ref": "f71e0ccb-0ddd-4926-9f0a-8022223a49f0",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "e1dd0a32-bef5-423c-a160-8a3259c17253"
        },
        "item": {
          "id": "6e976605-1015-43b7-ba66-c7a1c719d174",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "f5a6eabe-a6a7-43b5-831b-e9854defb90b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b927575-53a9-48e8-a82b-6fbe0f3dcd34",
        "cursor": {
          "ref": "00b5d9f2-f6fc-48bd-969e-56a0ce28cc4b",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "19128207-b690-4a1e-80c7-10fa79285200"
        },
        "item": {
          "id": "8b927575-53a9-48e8-a82b-6fbe0f3dcd34",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "33ca1410-027e-4908-92e2-0fcdc668f04f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edf794db-a61a-48a9-b30b-cad9fa928e72",
        "cursor": {
          "ref": "81683ddd-5068-4a0d-8253-9444571ba490",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "b9262989-b83a-4ba2-8e26-126ac45e5ab6"
        },
        "item": {
          "id": "edf794db-a61a-48a9-b30b-cad9fa928e72",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "fb778c06-aa74-4a4c-84b9-224fa8abadb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0703302-7c45-4d7f-946d-0c96a3451424",
        "cursor": {
          "ref": "73589b81-2b52-4cee-9bf8-9ad42ff2123d",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "42b4b147-11a9-4407-9e5e-1a4210db125c"
        },
        "item": {
          "id": "f0703302-7c45-4d7f-946d-0c96a3451424",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "1e8c61ea-0f17-4b00-ab79-c106a194dba1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0278f5a0-74be-4878-8020-1413e4a6110e",
        "cursor": {
          "ref": "c219f811-788d-49b1-a46a-e6b13f18b35a",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "5134eaf7-f9f4-4f96-bf61-c441bf11bd48"
        },
        "item": {
          "id": "0278f5a0-74be-4878-8020-1413e4a6110e",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "f94d7128-4b8f-4513-bf6b-1cbfa2c5fc0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2111dc1-898a-4466-86cd-3a03956eed2d",
        "cursor": {
          "ref": "7c6cf9c9-df2e-462c-a424-0e0cc22cb992",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "1c46c638-7eaf-401a-adf7-cc81aa89727b"
        },
        "item": {
          "id": "a2111dc1-898a-4466-86cd-3a03956eed2d",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "bc724ea4-8902-4fde-92b2-c547d268eeef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4892d90c-6166-4d85-904a-1a9fc0f1f6ec",
        "cursor": {
          "ref": "56514542-a6f0-41e3-8d83-a4fb3ceab193",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "92352ec4-fcab-4f66-9e66-7c3ac43df6e9"
        },
        "item": {
          "id": "4892d90c-6166-4d85-904a-1a9fc0f1f6ec",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "ef1af6e5-3811-48d5-8ba5-cab8c3677475",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28807f38-e000-4a54-a4d8-b0a5ab8fe002",
        "cursor": {
          "ref": "f90f2966-f889-41fe-8d2c-7d25c8ee18d6",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "d27e42a4-714e-4f71-ad73-924123f230b5"
        },
        "item": {
          "id": "28807f38-e000-4a54-a4d8-b0a5ab8fe002",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "104c5b80-092b-4ad6-98e5-64a950ce7b8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80fba8f7-43e9-44c1-b723-aeb787f5f1f5",
        "cursor": {
          "ref": "8ffaa5b4-034a-4fbb-b822-7e2badef3f5b",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "488bd30a-78e3-441d-83e6-31f0b46f13c3"
        },
        "item": {
          "id": "80fba8f7-43e9-44c1-b723-aeb787f5f1f5",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "d1d58d7f-c708-43ba-bc63-ee616aad1bb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "064b41ee-26e3-48b9-bef3-d9a5815942bd",
        "cursor": {
          "ref": "01129fa1-3902-409d-a02a-f17267ac0a73",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "0fdad559-ad84-4455-8135-c3fabc835b8c"
        },
        "item": {
          "id": "064b41ee-26e3-48b9-bef3-d9a5815942bd",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "032af335-c420-4d52-ba25-688e8d9d6961",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecc373cc-e3dc-49c7-bd37-3a864716ea7f",
        "cursor": {
          "ref": "d213c816-2b76-4b4d-a49c-a7f485f7ac7c",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "b4f86abc-0f82-4bd8-9fe8-5a1bc7cafdf7"
        },
        "item": {
          "id": "ecc373cc-e3dc-49c7-bd37-3a864716ea7f",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "b560fed6-a927-41ea-821e-db2c9ce13c15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fbfbd82-e2b0-40fd-ad24-ef59506b9afb",
        "cursor": {
          "ref": "ad49e58c-6fb2-455d-88f3-09d9131319d1",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "b18725cc-854b-4a3c-8b6a-a5767ba7c064"
        },
        "item": {
          "id": "8fbfbd82-e2b0-40fd-ad24-ef59506b9afb",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "a6457fa7-636b-46f0-a237-08594b1774fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "383cc5e9-1695-44e6-91f1-4473bd49732e",
        "cursor": {
          "ref": "812fd914-9906-44e4-9c1e-6a6462ed943b",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "f51714ef-0851-4532-b1e9-827adf610b8a"
        },
        "item": {
          "id": "383cc5e9-1695-44e6-91f1-4473bd49732e",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "547fe8b5-029b-493c-8ffe-7c0842ec44db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a7a6835-929a-4dbc-b59f-7a838705252c",
        "cursor": {
          "ref": "85e0c087-e2f7-4db4-91e1-17093501189b",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "62bc619a-9f30-4e93-940f-c7f6f67a8f13"
        },
        "item": {
          "id": "9a7a6835-929a-4dbc-b59f-7a838705252c",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "bb9db77e-cfaa-431a-a267-f11df3c88f6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c01fb7ff-7e14-4611-8b44-2664727f50a9",
        "cursor": {
          "ref": "cdbfae15-bf84-417f-b6d1-e79ada5bd514",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "946743f4-0496-4ad0-adf9-96497bad7d15"
        },
        "item": {
          "id": "c01fb7ff-7e14-4611-8b44-2664727f50a9",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "e75d8203-050c-422c-99ee-f395f01e4646",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7e50580-264a-4575-bf0e-d71e9bc819d7",
        "cursor": {
          "ref": "f8fc0b48-fa78-437d-9bab-a7fa73afe756",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "188f6be0-b8ff-4dea-a2bf-b03a919d08dd"
        },
        "item": {
          "id": "a7e50580-264a-4575-bf0e-d71e9bc819d7",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "2b7cefd2-0126-4db7-9961-913b27177067",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "378d9409-5620-4904-900c-c8d42d9c08ce",
        "cursor": {
          "ref": "07100f62-2c56-4c2d-a0f6-72aa7a5216b4",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "30cc659e-7b33-4130-a81e-961977e5176e"
        },
        "item": {
          "id": "378d9409-5620-4904-900c-c8d42d9c08ce",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "db426563-0569-483b-a491-95d683432526",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06b162b1-bec6-4338-836f-859af04e7145",
        "cursor": {
          "ref": "4466ab2b-5dc2-43a6-8eff-073e358531d1",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "21bd1f77-610b-428a-b70c-f1382f04fec4"
        },
        "item": {
          "id": "06b162b1-bec6-4338-836f-859af04e7145",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "c12dbc09-015b-4085-b72b-aa2f81e9d3b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19d6a490-3490-47c8-b3e2-eeced70c7c9e",
        "cursor": {
          "ref": "e975c60a-4d4f-46a6-bbde-b64369b1704c",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "9dc8ec3d-63f4-48ed-97f0-6ec94feaba96"
        },
        "item": {
          "id": "19d6a490-3490-47c8-b3e2-eeced70c7c9e",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "fb8ccc06-cb60-4df4-9939-cff6571f369b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a971c5dc-9116-460b-80ae-af920e006028",
        "cursor": {
          "ref": "9c917ffa-370f-4224-bfe8-b81a274b2be2",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "68cdfa22-3717-4525-a578-7dbf3747eb36"
        },
        "item": {
          "id": "a971c5dc-9116-460b-80ae-af920e006028",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "87d50a87-30e3-4255-b346-465aed54ab32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9394ad2-7fbc-40d3-9acb-6d2f07bac057",
        "cursor": {
          "ref": "fb80fbdd-07e9-4f69-b5ad-a03f2b5283e2",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "37ad270a-4043-4bca-8b23-11f790cdd1d4"
        },
        "item": {
          "id": "d9394ad2-7fbc-40d3-9acb-6d2f07bac057",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "9dcbe0c2-0ee7-4727-81dd-7e659da6b5ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "609601aa-9aaf-4f99-985c-5f3c184d136b",
        "cursor": {
          "ref": "3992cf34-b476-4c0f-a87b-d9500f426d63",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "4c50c3d7-81e8-459f-8552-80bec1a82a79"
        },
        "item": {
          "id": "609601aa-9aaf-4f99-985c-5f3c184d136b",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "cc167275-4b5b-4672-a567-c5018e0fc3b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7df94a9-4ca7-4dbf-82fc-8859ae846449",
        "cursor": {
          "ref": "9e628712-80eb-4392-baee-ab758f5808c7",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "f5188805-5f96-4fe6-abba-a75aa96f9e5a"
        },
        "item": {
          "id": "a7df94a9-4ca7-4dbf-82fc-8859ae846449",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "c741acc2-006f-4ba7-b594-e561ffe55eab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29c03f21-b739-4be5-a160-28aa2ada50cc",
        "cursor": {
          "ref": "cb908e63-09cb-4fbc-a800-3b7fea8eba91",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "0462e813-ac43-495e-b28e-981a8732fad5"
        },
        "item": {
          "id": "29c03f21-b739-4be5-a160-28aa2ada50cc",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "7844fa06-a20d-4841-97f5-9eac5c7d214f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05850707-e7e1-4665-ba13-4d43580730af",
        "cursor": {
          "ref": "881a9c02-9332-4646-b5b2-e33b1ed3de1d",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "531dc0c8-d923-42e4-9d8b-b8afe80bf537"
        },
        "item": {
          "id": "05850707-e7e1-4665-ba13-4d43580730af",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "89d4aba1-d83f-42e4-bb04-10a1df2ce656",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b60c5b9-7426-4e3e-bf33-9c9e0ae19461",
        "cursor": {
          "ref": "03cffa7a-c762-41b4-816b-90b5dbb22d60",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "7ec08a1d-988f-4da4-ba1d-21529d90011b"
        },
        "item": {
          "id": "8b60c5b9-7426-4e3e-bf33-9c9e0ae19461",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "bfbbfee4-46a1-4978-ab46-2014c937b10c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b789127-29b1-402a-94da-62b136f3ee37",
        "cursor": {
          "ref": "80007241-6070-4885-8f70-81162dcedf99",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "2f9dd46c-d48b-41ac-baca-2c3eaeed9b39"
        },
        "item": {
          "id": "1b789127-29b1-402a-94da-62b136f3ee37",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "38b391d3-10a2-4b73-8468-95c33a1d3668",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "105e6207-7216-463a-81de-58b64edfb186",
        "cursor": {
          "ref": "47d60789-9ec3-4833-ace6-9ffadb38f3f7",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "88949743-6fbd-4ad2-8895-f6ad1fad6aa9"
        },
        "item": {
          "id": "105e6207-7216-463a-81de-58b64edfb186",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "169c067a-4b0d-45c7-bb06-20d49a9952bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e28e68c-a6d4-4b0c-b744-fa79a2bf13e2",
        "cursor": {
          "ref": "1bdc41a6-81a8-4bee-8724-3a1581d55ae1",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "6d665c52-13ef-4a59-9191-6d41fa28cacd"
        },
        "item": {
          "id": "9e28e68c-a6d4-4b0c-b744-fa79a2bf13e2",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "d77f8b54-67c2-444e-97f9-005342e393bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8c134de-f7df-4efc-8a7d-91843c1e0b75",
        "cursor": {
          "ref": "f14b0fd6-6c5d-41bd-9f96-98bdacbcd8d3",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "5a18bf0b-6a8e-4ad5-885a-e5415d0ec5ab"
        },
        "item": {
          "id": "e8c134de-f7df-4efc-8a7d-91843c1e0b75",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "1df1a23f-6888-4bb5-9577-4f4f712060a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a15fd160-3c9b-4541-bb62-87ddf709451e",
        "cursor": {
          "ref": "6e1b9a76-53d4-448f-b0d8-be5ecaf283cb",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "f4d2dbdf-1e95-41a7-ba66-72d2e40f5c0e"
        },
        "item": {
          "id": "a15fd160-3c9b-4541-bb62-87ddf709451e",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "87b6202c-73b2-4ef4-8406-90065c6d0986",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a4f2906-b203-41fb-a192-9c410ceef82b",
        "cursor": {
          "ref": "52233933-a794-4edb-a7ef-7be29bbea86a",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "0acebf4b-7c5b-4438-a0ef-61108ef761a6"
        },
        "item": {
          "id": "0a4f2906-b203-41fb-a192-9c410ceef82b",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "85eefe2d-8674-4c41-90d6-ebac2c40cf31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ce55847-1d4c-4817-b813-46bac5f11c5f",
        "cursor": {
          "ref": "a8e43314-ed7c-4293-9702-b03819b01cbd",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "3fde30df-5736-4979-8493-553b7e4f8f66"
        },
        "item": {
          "id": "4ce55847-1d4c-4817-b813-46bac5f11c5f",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "4d649d79-3029-4fa6-a10e-123000afb3be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32b58703-09ee-4522-b7c1-de82424512e9",
        "cursor": {
          "ref": "9d393419-c52e-4119-b994-c5055f295a77",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "3957e595-f4f9-4bf3-9195-3595714af4c0"
        },
        "item": {
          "id": "32b58703-09ee-4522-b7c1-de82424512e9",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "d7f665a5-707b-4695-8ac2-74e104fa182d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f060cffe-246b-4585-8351-2b7d0f0ed3f5",
        "cursor": {
          "ref": "71e5672c-8601-454e-b735-dd8bc91e34c3",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "60fb084a-55bb-4626-a50a-1453dd73e9d5"
        },
        "item": {
          "id": "f060cffe-246b-4585-8351-2b7d0f0ed3f5",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "304c0585-8c01-482d-8f1f-ad25cf593e87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57a509ab-d503-409a-862a-555cb7526971",
        "cursor": {
          "ref": "aca0fe18-2c80-40ba-9c48-ec8001ada21a",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "2fa75b00-1d35-4168-88e9-f842a13e6e66"
        },
        "item": {
          "id": "57a509ab-d503-409a-862a-555cb7526971",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "36c54f6e-2824-4f19-a0f1-0b1f62a8c374",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d9c3a84-ffa7-4818-abaf-65351827c1f8",
        "cursor": {
          "ref": "d18328b9-227e-4bcb-99fe-ebfbbfd075e6",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "c4400bee-3f6b-480e-8ecb-ec6557635c98"
        },
        "item": {
          "id": "7d9c3a84-ffa7-4818-abaf-65351827c1f8",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "d5afd9dd-5ce8-42ed-b040-051bd737657a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e22b0a1-9bf5-47a0-8f05-d74aea1c90b9",
        "cursor": {
          "ref": "4deccb97-85f4-4a97-b70d-c32afb0c0178",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "f4560105-810b-4138-a866-0d7b35971a35"
        },
        "item": {
          "id": "9e22b0a1-9bf5-47a0-8f05-d74aea1c90b9",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "7e10399b-774d-41eb-8f74-baa6565a1004",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18b3a9ae-6037-4e28-b04d-4a016905ca7c",
        "cursor": {
          "ref": "a7ac04cc-00ec-4628-b177-77251869529a",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "95924a48-d5e8-4005-8473-abed06aee2fc"
        },
        "item": {
          "id": "18b3a9ae-6037-4e28-b04d-4a016905ca7c",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "2192e77c-b49f-4482-acbf-8c8f2c85dc35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74bbab9d-2c02-423b-97af-a6d240896a7d",
        "cursor": {
          "ref": "22bc9ea0-c17d-4370-846d-184cc15eb072",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "e65b2dab-dd3b-4f70-996f-6b9832d6057c"
        },
        "item": {
          "id": "74bbab9d-2c02-423b-97af-a6d240896a7d",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "01e0aae6-3559-4c9b-a7f4-7b4b320f8d14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1ccc4f7-0380-4573-9546-b91d63f81024",
        "cursor": {
          "ref": "9b7f9241-63fd-4722-8642-940fc125307c",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "0ab9b58b-b022-4036-9fe8-80d706ac2789"
        },
        "item": {
          "id": "a1ccc4f7-0380-4573-9546-b91d63f81024",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "80b108b2-d098-4d27-bbe4-99ada99941f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e09512e-a929-49af-aece-290b4a5f9be4",
        "cursor": {
          "ref": "91aa9152-5e1e-4e60-a171-c62713a3830e",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "85074e30-ca86-4d95-aeec-27bc8cb759d5"
        },
        "item": {
          "id": "5e09512e-a929-49af-aece-290b4a5f9be4",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "ada07814-5b49-4ee8-8daa-4b3810f10278",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b200d080-baa9-4dd8-9d5a-beb1a5e342c4",
        "cursor": {
          "ref": "d890aed7-e4a8-46a0-bf6a-5d4049669347",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "a09f0175-34e6-4282-af8f-e4136409cf40"
        },
        "item": {
          "id": "b200d080-baa9-4dd8-9d5a-beb1a5e342c4",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "0d2f749a-0197-496f-8df6-276e1d8198f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b06fb232-751d-408d-a496-3b836dbfa751",
        "cursor": {
          "ref": "f2e47940-83ee-4098-81d4-eab854956475",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "015d7601-2215-4588-9454-82825bbc4099"
        },
        "item": {
          "id": "b06fb232-751d-408d-a496-3b836dbfa751",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "d9f3f4fd-479e-44bc-a33d-e32238fc3704",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ce5b5fd-3dc9-4961-9263-4b4ef405bbdd",
        "cursor": {
          "ref": "d6d956b7-e382-4f49-9359-a4323dbffda7",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "35e81c66-fe2c-4fec-a5f1-e1e63ed0317e"
        },
        "item": {
          "id": "9ce5b5fd-3dc9-4961-9263-4b4ef405bbdd",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "1784588f-a7ff-49e0-96b5-8c50de2e56ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "838c09ac-629d-42d8-b23a-4f23f01ddc96",
        "cursor": {
          "ref": "35f7ce6e-5c11-43d8-bb95-fd057c05587e",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "fc7dba89-e312-4956-b86e-3e1817596de6"
        },
        "item": {
          "id": "838c09ac-629d-42d8-b23a-4f23f01ddc96",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "b346ed1e-39ce-472c-b0d3-c9648c380604",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f720c462-c054-4d6d-a03f-ab3a21a9d5d3",
        "cursor": {
          "ref": "5f5da081-1243-48a0-993e-2bc646ef3cac",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "b1797f83-c11f-44f0-a0b6-4e43e21bb4cb"
        },
        "item": {
          "id": "f720c462-c054-4d6d-a03f-ab3a21a9d5d3",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "74e98faf-aca6-438e-85c1-ca6ee41fb6cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1f255f6-fc08-4820-9d36-cf5c6feb07b5",
        "cursor": {
          "ref": "52b30138-93f7-49cc-9ae5-ea6f2e7784df",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "c562b700-7049-4acc-9bfa-e74df1ff2146"
        },
        "item": {
          "id": "a1f255f6-fc08-4820-9d36-cf5c6feb07b5",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "1f1cb551-2ec1-4684-94f6-5acaa2476551",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e7b3aab-2bb9-4365-9d93-842eb743081a",
        "cursor": {
          "ref": "b166a077-067a-4f2e-9da5-2ab3b3c9a3d9",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "0e1d9d9d-8b31-4c32-b213-0f606dd9d166"
        },
        "item": {
          "id": "3e7b3aab-2bb9-4365-9d93-842eb743081a",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "edd30957-e42a-42d7-9bf5-32f0e4c7f489",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bb28891-ffc9-4b27-b1ff-328b461ae2bb",
        "cursor": {
          "ref": "e0b80e6b-c7df-4af1-b487-5f55a340c819",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "1eb1402b-71a6-479c-907d-66987aa83af9"
        },
        "item": {
          "id": "5bb28891-ffc9-4b27-b1ff-328b461ae2bb",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "96096e1d-90cc-4209-9316-5742937d2cb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f6d6c03-b2d2-4544-9f79-c936c38da40b",
        "cursor": {
          "ref": "a9cc901a-14d4-45d8-8bfa-8f9b127699c2",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "b338b505-d69d-457a-b8e7-3c9c5a3c28a8"
        },
        "item": {
          "id": "7f6d6c03-b2d2-4544-9f79-c936c38da40b",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "0c4179e3-3702-4117-b353-66a5f31aebb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdca28f7-0afe-4497-9d6c-aa736772179c",
        "cursor": {
          "ref": "d3cf348f-7925-4e7f-8393-93aca59e6e3e",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "4530ab94-284b-4945-9668-3d65a73fc476"
        },
        "item": {
          "id": "cdca28f7-0afe-4497-9d6c-aa736772179c",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "fabfc29e-cf3b-4d40-82ac-98074dd14e51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd378919-306c-4fa4-a976-ca9140810829",
        "cursor": {
          "ref": "2d64fa56-b0ce-4c9a-933b-e973ef5aa8f8",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "6685b4e2-3f9c-4e17-8401-71098debdc84"
        },
        "item": {
          "id": "dd378919-306c-4fa4-a976-ca9140810829",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "d6d8a077-60b6-4db7-97f6-0862ea3fb35c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3c7b4d5-7fe1-4037-9a5d-87b435f940b3",
        "cursor": {
          "ref": "a3c56df5-affd-4b19-8297-855b9ffa8e30",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "26899c8f-6dad-4f35-ae13-b54d0f8d144c"
        },
        "item": {
          "id": "d3c7b4d5-7fe1-4037-9a5d-87b435f940b3",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "fa0a2dac-77c8-4814-8a33-6c36adffc109",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfc491f8-9d83-4546-a2d8-dcb14ce860b4",
        "cursor": {
          "ref": "4477334d-cab4-4cd2-9676-cab546f4aeaf",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "f40b1276-8f12-494f-a841-3dc472a3567a"
        },
        "item": {
          "id": "dfc491f8-9d83-4546-a2d8-dcb14ce860b4",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "ed0882fd-7cdf-4984-8203-5913a87900c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "599151b8-b270-43f8-a8f9-88e5e51c2708",
        "cursor": {
          "ref": "4cf3909b-9339-4101-b4e7-303d5d1fe890",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "4c68b1ec-af79-4baa-9eab-d82ba966770c"
        },
        "item": {
          "id": "599151b8-b270-43f8-a8f9-88e5e51c2708",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "356b3d75-1364-434e-9cc4-185d9d4d3081",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccdbb317-37fd-47d1-a1e8-ba4d5b865350",
        "cursor": {
          "ref": "519a4419-ab8c-4e12-ac9c-afd45365f9d6",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "acb3baf9-7361-43e7-b77a-6dd31db123fe"
        },
        "item": {
          "id": "ccdbb317-37fd-47d1-a1e8-ba4d5b865350",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "4378cdd2-9d6f-4691-a47d-6cc90aa97337",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ed6d6fc-50e5-42cb-bfb9-b020a28f27a1",
        "cursor": {
          "ref": "6f1d9d26-f05c-4473-8fdc-2b7d3e1626a5",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "57403018-7ad4-40be-b4f0-52c2a1e94e20"
        },
        "item": {
          "id": "0ed6d6fc-50e5-42cb-bfb9-b020a28f27a1",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "36c4fae1-0959-46a5-a936-90cc50424b1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c780edb4-6f81-4f79-b19e-4f5f4a73ab0a",
        "cursor": {
          "ref": "7f2612fd-d0c0-44d3-ab38-4ed7ec169caa",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "061528a3-9c94-4448-8077-3c9cc0f62635"
        },
        "item": {
          "id": "c780edb4-6f81-4f79-b19e-4f5f4a73ab0a",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "f8e2dad8-8d1a-47b9-9132-77ed41132176",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0effa7b9-f8d6-432f-8bf5-2dc5246ab209",
        "cursor": {
          "ref": "009e7436-035f-47a2-afd8-f0f1490522cd",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "196a106c-a09b-4f37-86b0-ee7f9d027526"
        },
        "item": {
          "id": "0effa7b9-f8d6-432f-8bf5-2dc5246ab209",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "d110b8ab-8eb5-4fb8-9f1a-3bf421c2e228",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df5889ce-f6ef-4326-98bc-91b623a18281",
        "cursor": {
          "ref": "ece05278-9435-48fb-bead-79f4690789fe",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "0f6394e2-5c95-4768-9a53-e0da987e716f"
        },
        "item": {
          "id": "df5889ce-f6ef-4326-98bc-91b623a18281",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "6f0b2b45-2416-4182-b94b-5f385544bc98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d235c93c-f32d-4f39-891d-1e875a8c2e29",
        "cursor": {
          "ref": "2d6bcfbc-b7f8-4459-b24e-79c9422d25bb",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "bba5ccb8-3a6c-4ae9-b370-1eba704f0407"
        },
        "item": {
          "id": "d235c93c-f32d-4f39-891d-1e875a8c2e29",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "e4579b6c-1ec0-4600-b35c-63f7ffe432e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebc4818e-92e9-42e9-aef8-da1a7cd001d0",
        "cursor": {
          "ref": "6bc5b1e4-3d46-4fa1-b98d-b980ee667dde",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "da42b47b-cbd3-41c5-aa1f-d4780353fc5c"
        },
        "item": {
          "id": "ebc4818e-92e9-42e9-aef8-da1a7cd001d0",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "28025b95-10cc-4f0e-b43b-63b2ee723c3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b98de5dc-fa99-4d0e-9fe9-f37c71ef19bd",
        "cursor": {
          "ref": "d6532750-97df-4835-a84e-015cd67f2c05",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "b80f2c62-04be-4cc0-9c11-16abbecc3139"
        },
        "item": {
          "id": "b98de5dc-fa99-4d0e-9fe9-f37c71ef19bd",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "b03b5981-cd53-4423-bd85-0e5d9120007f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caca5217-8110-4434-b292-992e690745fb",
        "cursor": {
          "ref": "2f44beb7-b3e7-464c-aa61-3fcefdb0bac6",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "4e761b60-8dc8-44fd-b41a-3e5313235063"
        },
        "item": {
          "id": "caca5217-8110-4434-b292-992e690745fb",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "0414b210-9369-47e9-85c7-5ea2f97ffbab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78ee8dcc-9eee-4690-9ffb-a1758aa21856",
        "cursor": {
          "ref": "838593ef-40dc-4462-92b6-e2b058fe10be",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "53f0592f-1e78-4f39-9e0f-01c54404040c"
        },
        "item": {
          "id": "78ee8dcc-9eee-4690-9ffb-a1758aa21856",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "cec399dc-5e49-4dc7-93a7-86e004ac5dee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caec22cd-fbc5-453c-8f84-a932ff59a4e2",
        "cursor": {
          "ref": "5a573236-6a33-4dbb-a9ba-843ecf5df08d",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "264d8a05-be16-4d56-a9f7-77d6d1c45803"
        },
        "item": {
          "id": "caec22cd-fbc5-453c-8f84-a932ff59a4e2",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "694e8757-9a09-4646-b410-840936044930",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3684b014-24d7-4a4d-bd0d-c025025b8c85",
        "cursor": {
          "ref": "d2eb104b-8499-4a22-8cd8-3e5069a11820",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "fcce21ac-f9bb-42a8-b267-fe7c54675ee8"
        },
        "item": {
          "id": "3684b014-24d7-4a4d-bd0d-c025025b8c85",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "1e5b4a11-d01e-4604-aba0-64537ec46894",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb37d28d-8b68-4207-8149-f7ecd36df2e0",
        "cursor": {
          "ref": "55a51b8d-a219-4629-b3f0-4460037120b3",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "d719fe00-4ad3-49df-b761-8577cc43ebbe"
        },
        "item": {
          "id": "cb37d28d-8b68-4207-8149-f7ecd36df2e0",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "a40cb27c-0b5d-4a76-bfcd-90f1ce961e39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05376c85-4a35-461a-bf8e-0b3ea6c62e75",
        "cursor": {
          "ref": "6ab332cb-b44e-4a2e-901a-2303d7064a2d",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "aa4e87ef-8730-4709-b230-ac807273382a"
        },
        "item": {
          "id": "05376c85-4a35-461a-bf8e-0b3ea6c62e75",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "2daf8761-ae0e-49aa-922c-9eff7c64d092",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c5ccc1c-8f3b-4d39-a4d2-d954396ca066",
        "cursor": {
          "ref": "b031ce92-49c5-47a9-8b43-e49fe4505b47",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "6a2fa5f5-2883-4b35-9f36-c1098d85bd58"
        },
        "item": {
          "id": "6c5ccc1c-8f3b-4d39-a4d2-d954396ca066",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "916a8c8a-94f5-47f9-ae87-7f7a91301994",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "508367d0-177f-4cf8-b918-a044ff7f575c",
        "cursor": {
          "ref": "817f9cb6-f3f6-401c-a4b4-007ba137bffa",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "9f333cc1-a6a4-43b9-b883-75fd31dd78b5"
        },
        "item": {
          "id": "508367d0-177f-4cf8-b918-a044ff7f575c",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "38f88ebc-e3d7-48eb-8713-a902035443a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cae88967-3acc-4c05-80fa-6e3b9f929ad0",
        "cursor": {
          "ref": "88a8cf70-8381-4f59-9a7a-157e9961c1bb",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "ee0ea604-9bb1-441b-a6e7-7798c1fa3971"
        },
        "item": {
          "id": "cae88967-3acc-4c05-80fa-6e3b9f929ad0",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "9129985d-d0e5-4e24-abc5-8edf8d44b425",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41413104-78f0-4627-8728-3a390414ea62",
        "cursor": {
          "ref": "1df5a940-12ba-41dd-bf85-8955244f04c5",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "a614d42a-3f5a-4bf9-9aae-b358b1a31382"
        },
        "item": {
          "id": "41413104-78f0-4627-8728-3a390414ea62",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "7a222819-b7a7-4020-a344-57e2dda6665b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5093484-849d-46c5-9d35-cfca8632cb3b",
        "cursor": {
          "ref": "652d267d-76fc-4ca2-aff2-99e034478b99",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "c0ff1eb8-7813-421b-9609-eed68666b19b"
        },
        "item": {
          "id": "b5093484-849d-46c5-9d35-cfca8632cb3b",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "7eb0fea2-c970-4e8c-ab21-2006eb8f834c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8d53097-ea6b-4ee1-a446-09e3e1959539",
        "cursor": {
          "ref": "b424a085-f2ae-445a-a73d-a7880539c39b",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "09051edc-2284-4112-b90c-fa235c014cf4"
        },
        "item": {
          "id": "c8d53097-ea6b-4ee1-a446-09e3e1959539",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "2b551061-a005-4f57-b33c-fb7141e58eb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3c5b169-2d78-473b-b159-7b3e20615871",
        "cursor": {
          "ref": "a8773e11-e79e-4b98-8cf3-3fe1bae3f9f1",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "240518f8-b91d-4ddb-814e-b4a5d1ea2001"
        },
        "item": {
          "id": "e3c5b169-2d78-473b-b159-7b3e20615871",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "10d68872-5e5d-4e7d-9e13-5a288a60b560",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cded8e5-96a6-45af-8205-b656ebd3ff08",
        "cursor": {
          "ref": "403035d9-8b80-46e1-b261-af2cf66f6f86",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "4b53d6cf-9ebf-46a6-93f3-3890ff94cb06"
        },
        "item": {
          "id": "3cded8e5-96a6-45af-8205-b656ebd3ff08",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "13b32b2c-bd04-49b8-a424-e571831d0600",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20adcc75-8756-42bb-afb4-0e34a386567f",
        "cursor": {
          "ref": "f879c626-3786-4d0e-9f6a-8f320ce6afef",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "eca5e9ae-1a2d-47a7-a5d2-658aa617cafe"
        },
        "item": {
          "id": "20adcc75-8756-42bb-afb4-0e34a386567f",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "480feef8-79dd-4700-a958-c3c4093c8ec2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22199f7a-81da-47bc-af9f-6c987592f97e",
        "cursor": {
          "ref": "7ab6369d-50b9-442c-94a2-796f109d7f9f",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "10e3a40a-4586-4d5f-94c9-ead7df99bb83"
        },
        "item": {
          "id": "22199f7a-81da-47bc-af9f-6c987592f97e",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "2427b562-b372-436c-a62d-e1bf6496a4dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "359ae8d7-d476-425e-9501-862bcc7ec26f",
        "cursor": {
          "ref": "081a640c-29bb-42e2-a555-53425c737b03",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "1a128fb5-7e1f-4ec7-9273-e0515eb18203"
        },
        "item": {
          "id": "359ae8d7-d476-425e-9501-862bcc7ec26f",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "7a9825f7-8e07-4be8-ae4c-a7f27296379f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1b42128-e8b6-4315-9a8c-0fd5d6be999d",
        "cursor": {
          "ref": "8900e0a5-2194-45c1-b0ab-05dc73fc36b8",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "b99cc043-869f-405f-b8b9-9fcce6a5b6af"
        },
        "item": {
          "id": "b1b42128-e8b6-4315-9a8c-0fd5d6be999d",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "36376114-1df2-49fd-aa33-0fe9ae105ab4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06e970d0-d446-4b04-b899-8768bda52708",
        "cursor": {
          "ref": "f17d66f7-80c1-42d9-b473-d7b4116738ee",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "11e0a3fe-7c31-409e-a460-2666b6077aa5"
        },
        "item": {
          "id": "06e970d0-d446-4b04-b899-8768bda52708",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "871ae1d3-8e3e-46ff-90c8-afdcf9dd239a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6c01730-86f2-4568-aa78-0614abc8a79d",
        "cursor": {
          "ref": "fdc706d7-3ac2-4574-9f46-293a95d8433f",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "0a7df249-3a06-4ccc-8f7e-beb4a6140e6a"
        },
        "item": {
          "id": "e6c01730-86f2-4568-aa78-0614abc8a79d",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "6567de7a-7c56-49c4-80fa-cb77c4301bc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1395c9a2-1ac9-46c7-bdce-22799bd79f05",
        "cursor": {
          "ref": "a6b5eb45-6baa-4180-b350-8a9849720cbd",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "99d4834b-b0ca-4ffa-8639-7b156c0c49eb"
        },
        "item": {
          "id": "1395c9a2-1ac9-46c7-bdce-22799bd79f05",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "812cf869-d548-4d0b-b38d-004ebe867f52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3dd0d67-7822-4824-8462-d896106dc91a",
        "cursor": {
          "ref": "9d8c6725-0ff7-48bc-a964-bd602210800a",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "bf8125d8-6d8e-4ffd-acb5-e189cfbf2897"
        },
        "item": {
          "id": "e3dd0d67-7822-4824-8462-d896106dc91a",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "04fbf834-8970-4d5c-b0ad-1302bf8375d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b63a305-5af7-455e-8f1a-b1e18e834e7a",
        "cursor": {
          "ref": "a0c75cf9-347c-406e-84ef-1c763f5fc949",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "1fd83e9b-45e8-441f-b786-3e19edb76270"
        },
        "item": {
          "id": "3b63a305-5af7-455e-8f1a-b1e18e834e7a",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "3631b590-6189-4ab6-8a2d-df6bc0da8d62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c967f42e-59f4-402d-80ae-f23e1736f3ef",
        "cursor": {
          "ref": "747a1159-5471-4484-aa9a-5c4c179aae4b",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "0fe2e571-7c8a-4974-a2d5-59219f17ba6a"
        },
        "item": {
          "id": "c967f42e-59f4-402d-80ae-f23e1736f3ef",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "8cf50ae8-41bb-4eb9-a329-ecaf6d29c7ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97b61cf4-22b6-4159-86de-ded96f3c10b6",
        "cursor": {
          "ref": "90cf18fa-4f45-4f46-9d44-8d008506758c",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "47fcde55-f5f0-45db-9a0f-781c4e04143a"
        },
        "item": {
          "id": "97b61cf4-22b6-4159-86de-ded96f3c10b6",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "84b82b16-18fb-4d43-a9c7-9361065329d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23654ac3-8b64-4a42-8d1b-1f34bf54f054",
        "cursor": {
          "ref": "a85684dc-001a-40dd-873c-8a63e3c811d2",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "d50dda7d-381e-4f97-a071-b3f2701b8c7d"
        },
        "item": {
          "id": "23654ac3-8b64-4a42-8d1b-1f34bf54f054",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "b555dca3-028f-4610-86b0-a681bb6da55a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d9635f7-a865-4f74-82c1-d36eeb23a473",
        "cursor": {
          "ref": "73f17a8a-318d-4357-a3b9-cd0ceb296de4",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "1f1b62cd-4af8-4d7c-b48b-5d8b1481f38d"
        },
        "item": {
          "id": "1d9635f7-a865-4f74-82c1-d36eeb23a473",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "b7aa0c8b-f3b8-44ff-a273-89d5e43f499d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b82c623-8a1d-4aba-a704-056cf826f748",
        "cursor": {
          "ref": "08e2c579-6432-4c2e-afc0-b2b60da7e7e9",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "917db133-1030-4f98-a82c-8bffbd631754"
        },
        "item": {
          "id": "3b82c623-8a1d-4aba-a704-056cf826f748",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "84cc68c7-7c6e-4335-866c-5a18b6e4ef23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64c73097-ced4-458d-9f81-e9f9562e3b58",
        "cursor": {
          "ref": "1b91469a-7c0b-4650-a788-3f0d08e8cc9d",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "542d1d29-9eda-4f3b-ad68-4e2557593bae"
        },
        "item": {
          "id": "64c73097-ced4-458d-9f81-e9f9562e3b58",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "791e3292-4982-4fcc-be41-553aebe202da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "beba320e-6ad5-4d81-9512-41a172f6d490",
        "cursor": {
          "ref": "c55f9c5e-0440-4b8d-b7ae-001292c290e4",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "a496e1a5-13d4-4dd0-95a4-4f9ca5cb7418"
        },
        "item": {
          "id": "beba320e-6ad5-4d81-9512-41a172f6d490",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "7a0d1f57-fe74-4c37-ad91-1cfed724b2ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:244)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0105b431-be72-4bb1-9b9d-2a5ea3913f85",
        "cursor": {
          "ref": "69f17fea-40e3-40b7-b7d9-e6ff9db37af4",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "2509db49-98de-4429-8615-103ca55d99db"
        },
        "item": {
          "id": "0105b431-be72-4bb1-9b9d-2a5ea3913f85",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "32222d13-a821-498e-9202-48054b8ba063",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:245)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:245)"
            }
          },
          {
            "assertion": "response verified is false",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is false",
              "message": "expected undefined to be false",
              "stack": "AssertionError: expected undefined to be false\n   at Object.eval sandbox-script.js:3:245)"
            }
          }
        ]
      },
      {
        "id": "9f2d8377-0753-456c-b9aa-490baa636692",
        "cursor": {
          "ref": "6b60e8a9-7c7e-4084-861c-e709c3ee904d",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "be1fec26-a542-4c03-a6f9-6f7e72253f40"
        },
        "item": {
          "id": "9f2d8377-0753-456c-b9aa-490baa636692",
          "name": "credentials_verify"
        },
        "response": {
          "id": "dd73b21d-96b8-4c56-a479-bf03130e99c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:246)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:246)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:246)"
            }
          }
        ]
      },
      {
        "id": "80ed6aaf-9612-4e0d-9d8d-7c8c2778a362",
        "cursor": {
          "ref": "e5946613-2d77-46ff-9ad5-431460ed798d",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "e34ed2b7-1e18-4958-b128-a99958872f85"
        },
        "item": {
          "id": "80ed6aaf-9612-4e0d-9d8d-7c8c2778a362",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "56e102a7-416e-4eb3-9e71-b3e2797ae590",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:247)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:247)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:247)"
            }
          }
        ]
      },
      {
        "id": "e481e368-0189-44c7-805a-c6629e3d4fa4",
        "cursor": {
          "ref": "b6e1f39f-0d2d-4a07-a74f-f0623b0c38c0",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "3a800e57-a129-4c7b-be66-496c17093dad"
        },
        "item": {
          "id": "e481e368-0189-44c7-805a-c6629e3d4fa4",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "40b765cc-100c-4db4-afad-e6fe3f9b7d6a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e481e368-0189-44c7-805a-c6629e3d4fa4",
        "cursor": {
          "ref": "b6e1f39f-0d2d-4a07-a74f-f0623b0c38c0",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "3a800e57-a129-4c7b-be66-496c17093dad"
        },
        "item": {
          "id": "e481e368-0189-44c7-805a-c6629e3d4fa4",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "40b765cc-100c-4db4-afad-e6fe3f9b7d6a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "948faa4c-3161-4f42-a0d6-76a1c4a25f74",
        "cursor": {
          "ref": "7e56f007-0f9e-419f-89a4-a631394faa5c",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "c29b55b9-1fa4-4124-8d17-988b21adda95"
        },
        "item": {
          "id": "948faa4c-3161-4f42-a0d6-76a1c4a25f74",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "5c4caf10-1e77-44ae-adfd-fe064f6c2b6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:249)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "130d3bbc-6695-452f-861c-2ebf139ce64f",
        "cursor": {
          "ref": "a22dd9b9-512d-4901-96a7-bb788ba28f37",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "d6fd4764-006b-4ecd-9a7d-9bd09a5ea73b"
        },
        "item": {
          "id": "130d3bbc-6695-452f-861c-2ebf139ce64f",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "a657a2e8-1050-4718-89c5-dc16044d9cb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:250)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}