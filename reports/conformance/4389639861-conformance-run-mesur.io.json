{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "c3c95993-f112-49b5-8b59-a9fb73d33cd8",
        "name": "Clear Cache",
        "item": [
          {
            "id": "90b64e4c-71b7-42c8-a1e7-5504235256c7",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9b225e9e-db24-4e7f-964e-e0817991daed",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "80ad0c97-9a17-43b7-955c-48df5e68455d"
                }
              }
            ]
          },
          {
            "id": "f91f9486-953e-4646-8891-10d3d52b25b3",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f3c3f678-36da-4c91-99fa-14f694280f3e",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "498b877b-0b12-40f6-bdec-7d41d95a7c5c"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "12a25b6c-15b8-4efe-a5b3-2cae4c286380",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "960b3ac3-8229-4c8f-a2a0-8ba82b4cc318",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e454a969-24cb-4917-a3b5-af4e46c7b2cb",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7c04070a-a38e-406c-8ea4-49ff3064f81d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "61f7b03e-a518-49e7-9847-71b8f1ccd343"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c0668f17-1658-4e9c-88cf-bb8a2761459e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "baa9b4dc-904c-41f5-86f9-0f9b869c54d1"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "93e4b50f-597e-469b-99b2-c3d98031a9b6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a20da1e0-c430-4b0d-ad22-cca76b09ed65"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "aa96f323-0205-42e2-abd6-4a24f5860395",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "4d0732a1-9f27-4368-96a2-323c69fb2ef3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d02ed1ba-57d1-44c5-b7f5-714f12daac3b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ff76465b-8ab0-4def-8ede-3434c6f367b3"
            }
          }
        ]
      },
      {
        "id": "97f0be67-3a10-4a04-947b-52439a58fc83",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "83dff406-c69d-43ce-9b67-5cf584681baa",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4a0a3b70-64e0-4903-a5e9-303301467dbf",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e5882406-5d9a-4d79-999a-9a41b461f766",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad2ca5b1-4ecc-40b0-8f2f-167f0fb2b40a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5e51567b-5ad0-4bd6-812a-e931b3bf2f72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d98c404-ae57-4573-a66b-d71c92dac2a9",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c7c8e73-4fac-425f-bc5d-06e0a03b36d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f773110b-572d-4a04-883a-4196a6a30390"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5d565e9-3a01-498f-b0a1-8951b4d51a58",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46505192-a3ee-4913-abf9-cf5b6ca67387",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e85009e6-f1b8-4a8f-8b98-e280bddfc74b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ec90dba4-7111-4edb-882c-8b66065001ca",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c3b1442c-5650-4816-b9b4-2eec835a0f4e",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a713fc0-d94a-45fb-b79f-9ea480f9a803",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c64f2d00-dab3-4953-9e49-b5b4185c729d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1a9991a-48c4-4878-9fbf-df3a985dbe95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0b3bf7e-bc37-4728-ae5d-fdb03e52a8fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5da87022-9aa8-4746-bd12-c66dc7b640c0",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5a9689d-36db-4f45-b075-6646a5a29c92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3006e64d-c270-4f35-81f3-d2121fd51802"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95618fec-006a-4cec-a70d-4f4d6e4371df",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "ccea2a71-fa4a-48ec-9422-8067838397d5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "28db8730-95dc-4664-8eeb-3ff69c1f2466",
            "name": "Positive Testing",
            "item": [
              {
                "id": "cca8c951-96a2-4390-8813-016dcb893fe1",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "54f02ebd-5fc9-40d0-8049-e0136cde17ce",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "9d673c32-234d-4878-9bd1-57fb928cd353"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b41f3fe8-0744-41a5-9cfa-25efa2ccfee5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "95b30448-dd4f-4341-9a33-c074ac4a9575"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e10be4cb-10a4-4a59-b55d-c6c86391f8b5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5e9ecf29-305f-4eba-ab15-9578ce37b931"
            }
          }
        ]
      },
      {
        "id": "306ab68b-9e86-4c2b-bef4-6e0b593bf93b",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "7dca852f-2f92-45b8-b889-43e1c50b17be",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0e77b387-fe1f-42b3-8373-8f311758ac84",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "e2fc7cb7-7003-4d7e-ae29-0c85459b57a8",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1b4a6ee-60e9-4602-9576-ac90bd842d3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ee804b0-564b-4384-8658-d0735ff0f693"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3a8efed-2cab-443e-903b-10efff5fa37b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "414be467-7aa0-4a0b-bb15-474422684435"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49461dda-1ca1-41f5-9f1e-6528db4f17e5",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "188b3f98-ac07-4551-ae7c-90361d468381",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d66585e-59ed-44c9-98dd-d38c294af650"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35385cc9-fd35-4d1b-a326-8305816cd680",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e86e1ad9-45e5-4d3a-8b22-fef2d2bde61d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b9f83e4-853d-4bab-afef-f1bff99f7c28",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57df5bcf-8e6e-4c08-b6b5-c99cb9ffef0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cae2337-2747-4726-be68-531cce37f4f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c09ef63-1348-4a83-b7fc-3c37c7a56118",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "01d9424c-fd15-468a-93e5-765a39fd656f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0434c21c-61d8-4c3f-aa16-7cf77e76d166",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0627423a-c3fb-4b1b-b394-e50d4d623402",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca6db4fb-3ce8-4760-b2c9-c8e3a2506cf2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc118b5a-2071-4a80-9ea3-c896471d80a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eb5ab339-0abc-40ce-9155-8f23df602432"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1145501e-c385-4908-a80c-988047148a3c",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e46470af-0351-4e19-bcaf-b1bcfa490e9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2a1b387-2360-41c3-b090-57e9bc1026a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "320aedd2-696d-4b20-b2f8-589397a83cf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fc28ca88-7ed8-438a-baec-e7db6c60fc51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e123f15-38a1-426f-bbbe-b38408a3d535",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a23c3d1c-5948-425c-80a7-5dbaee2dad00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba818cf9-b844-427b-8485-cf8a778cc871"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5cbd943-788f-4c32-a8bf-b1a475cd45dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bf7c4eda-f040-4a30-b6fa-d8bd5d6ef93c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9d1eef7-5604-47b6-bb8a-92f496c87778",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92a90b8b-05b7-4344-8443-b714a60fee88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b13c4c1-1944-4f06-b9d0-4019cf6f5fd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff6cd5b4-7348-41af-ad2d-ff3885caa158",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4c72b5b5-a94a-4138-8397-d7b937742ee5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0df724f-7fa6-405c-b74f-65e1f12c7d5b",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9e512b5-faef-42f5-9841-c80b0826e3e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "853c3c6b-8b2f-4401-993f-6e8ea4b7fb03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "629c94fc-95e1-4e42-8403-5d7929b02bd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6bf60713-4f58-4b43-b6b5-488d52e1eff9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4eb8aae-a2ec-4a8f-a86b-a5c99931f8d6",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e2bb14c-bec2-40ed-9fe3-b2e0127edca5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dad458d2-a8cc-47c5-aa39-09ea0de260cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a94cfa0-43a9-4ff5-8325-c027fa2549e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "159df08c-fb77-4b55-abf1-b303743972e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69b06439-f920-4db0-bcaf-9627a0e2c01a",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94e4f0a0-d13b-4326-937d-1d9de1b428eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92458d80-b5e5-4601-aacd-e2b66b34f22a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a4014ac-8f90-4295-9170-3cfade1ab8e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a9593c19-d44f-4686-bed2-785c2e952006"
                        }
                      }
                    ]
                  },
                  {
                    "id": "240a1907-64aa-4fde-9c50-b8b37e0dfbca",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffc800e9-5cf8-4447-a7fe-797f25532423",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f1362e0-2843-4fc2-8be6-819ba66cfbfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "433824ab-4072-4ce1-9f80-26fc5fbc748b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "340e11e1-ec6b-4ab4-8f73-1dc52cbd2cbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05eb7171-5e47-4f5a-8d01-f0995829ff24",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a946c6fe-387d-47f9-8f42-6a737f6b002b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aabc23b2-1631-4d38-a53d-03e34d084f17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "769ffc2e-ebb6-4ab9-858a-dd0b8fc10df4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eeed8bea-10e7-430f-a1f1-e8a8b182f9af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39912812-7b8b-4fbe-9ace-f639301de303",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3339cef-93bd-4cde-b2fe-e0a2f013409f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c674343-8c88-4e9e-93fa-e8cdfa62378e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa82d74a-4b3b-4bd1-bc96-9e352ded54dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9e224971-97d9-488f-9186-e3eafaf0340f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f887f07-5b22-46ff-badb-fae1b5830212",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a555e780-d01d-4fb1-82fc-a75051e58157",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a706bebf-c513-48b9-9d0c-a571de4b9cbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea6293cd-525b-4280-9fa8-2fab5d38b55c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "beef73c3-d0a4-4aa5-9f3f-64fbb578736c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "186f4422-efcf-4c76-9162-23d7d45e5e6e",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20f33f02-9137-45c3-b761-67dddd3c536a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "779d45c9-cd68-43de-8407-2df8c692829b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5892044f-6cff-4736-b6d2-86f02f2232d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "facf7e91-c61e-4cbf-9a7f-1001829be0b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffa3259c-182f-4b55-bad4-2b8038d4f9fd",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd17f217-ba9f-4e62-8b76-1844b89c05af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c1bd910-523c-4cf8-8045-3e4efe1ef45a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a5d24a7-fd2c-40c9-93e6-602f95df545c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1990e02c-348b-43d2-baee-c0da2c8fed83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c16209d-787f-4e05-adbf-4884c81ce6a2",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1374ee3b-68fc-46f1-8567-d53b589e9525",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b7dfa61-9d28-4f7c-8676-80eed83e7c50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a197c560-2a70-432e-8089-65495e3d1e2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "46bcbecd-ce23-4ea4-ab2c-fe8b509acc04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0888213c-6169-4da4-acd5-8a7dd49e6272",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1cefc82-6e1b-4999-b621-7cd359d5d77a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b56abcb-822d-4ba1-abea-4a4aa43ebeb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a4ea780-1e37-4e75-95b0-3a0431958686",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "9a10c4c4-b121-448f-8aed-cd489280b82c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7d8fd64-d660-41d8-b348-2ec1263a8a4b",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27f23fc2-7921-47b4-8695-1a695240b473",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95778ef6-0b4f-415d-87fa-88b7fd70693e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66112182-421e-47ca-8a4b-3361591c0e35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a63d45d9-7930-45c0-8578-4a7b5a5ab2eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06acd26c-cca2-4a39-8528-16a8cabc8b83",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea691df5-c324-4853-a5ef-6be33eec5d6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55fea4e0-14af-4f07-be26-8513dc42e3c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb90c023-fb02-4cbd-a97c-f5ca4129b93e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0aebdcca-5755-4b20-850e-1cbf18a25c11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c12a6a25-6f62-4799-b5f2-12ff03aea904",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa106904-9e89-4519-81e6-bfdabd1e701c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6af16890-a585-45c8-9342-069be7564ff3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6930cf2-948d-4668-9237-72d15dbbf7bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "12bff52f-f616-4a73-a651-c877827d64c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87b5355e-3066-434f-9246-052818ced494",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce88b781-d5cd-4477-bdce-8d1ba67a3131",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1c46340-cd7c-481a-b7d7-f1b3c824f7b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be10eede-f9bd-46f2-a587-9b2a096af8bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "14578573-5c5b-402f-9618-ef133b9f464f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "596a9b29-4406-4945-ab03-e7093809087b",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aacc25ec-1212-4a33-bd2b-7643c9d4df72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ca45379-9333-4470-a21e-7e9289c4a991"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cc0bccf-1dcf-400e-a787-553d0cd16501",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "477507b6-b567-47f6-b82d-3fae3ec23abf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74172e94-6276-47ac-9882-3b06e2cc6cff",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5379a19-8723-417a-ad25-5feb10d81b8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "353bad5e-0163-44cb-a0f6-2d213ccd48d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e939ca3d-6d2c-48e2-80a2-70e4eb5afde7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "3b7f7f18-2e3a-4af9-a828-e33bf835b401"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6efd0d24-6de0-41c2-89ec-6c356c4cf21c",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fded401-e04a-4d6a-8442-a62247afc5b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "150bc64e-7b3a-4f52-8ba9-83fe5783d845"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29949ca0-e7cc-4720-ace3-af4a3bdb33db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "91cc2bea-81f5-4f09-81b7-ebabbea5ad7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a07e10ad-4085-4084-bb9a-f9bc6d4738c8",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba849aba-cd4c-47c7-bdd8-bb44a11b4bda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13277e96-f4f0-4756-ace0-59411d40673d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6f90abb-4608-4d0e-85c5-17d5590cd638",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "468390ba-5fee-4e6f-84f0-401dbdf35284"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d79e302-b808-4af1-a3e6-7b56a5ead521",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bd3cd1f-172a-4d6d-a800-92e17e9fc581",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b51b95f-4cf3-4d54-948a-63b6596bc721"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c8edd58-ef87-45b3-8f35-cba9b4edf9df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "96c2e232-187d-4fcf-905a-d3e6c8020137"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee568d80-890a-4b7c-87a3-da1af6c90f0e",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2412ba01-ef12-40b2-af6b-e7c90c274d67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20abaefd-d30d-47ad-9234-9fab9664076f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b9588f2-8c2a-44b1-9f2d-0aeeb9e3ccbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "29a3332c-3f0e-465f-bc4b-20337fd761fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5cd4cbc-c110-4433-b74f-ea480f3c382a",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9db44c3e-a143-44ed-b820-d68f3401b982",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92b128e2-263c-4d1c-8fac-a92dbba4356c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "964f52c4-4efe-4157-999b-3081c3e54daa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b6d5c94b-eebd-4c3a-bbbd-46c0d1e50a81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3b13b44-611d-41ed-a54b-6e0cdab65c62",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "264f41e8-6357-40d6-9c2c-e8761fc82b34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eabe1d58-61d2-41e4-9272-b215b71dc366"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50b6849f-2e6c-4a2f-9f8a-5946f3aa76b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "6fbde935-aa0d-4699-aa69-490ea8aecad1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6983d44-28c8-4dee-92a7-899360fd6508",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30664214-9512-481f-9f2d-0c51ddb765d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8e68ec8-3de6-4d01-82fe-7c6a7af55735"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30a851aa-0f9f-4d0d-8a7d-b2d1c838fa5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e1b2e21-4635-4d9d-b0df-a2e7fe3315f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d70b5c3-b6b1-413d-a865-79838bcc8557",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8437892f-6b9d-462c-9908-24e3ccdbc2df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f19cc053-e7b2-4b48-b400-f595b184c6f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab910d46-c330-49fe-9519-e814c488fcb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7b470bf5-0848-48a0-b746-9c1bca83dfaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b49cbc3-f49a-4d70-b415-b34a361d138b",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbc69caa-52e5-46fa-958a-7bb0b463df5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea6d4516-ffd1-4e98-81b6-d7870b553150"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "493840c8-107f-43ed-bb74-175b0e51459e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6fbf1014-826a-489e-a436-e4aa6ad33471"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f6d19da-3075-4a45-914a-d59d1faf1873",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e292d07-d776-4fcb-9a0b-cda90a015fa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a15ca3f-e6b3-4a4e-92a4-6f4e4806f059"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c40d26b-825d-41ff-be9b-fb24f2e551ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c3c7a00b-f143-4766-9319-2ae87df98b9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0017ddfd-c538-4872-96a5-a8c2572ee035",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f44254b8-e49a-419d-ba69-ca7f7807c2a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d7aecbc-4bf7-4401-b5be-47fff9894acb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23d27b25-e866-42b1-a567-eec0473296b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "2fcc16f1-db65-49fa-a07e-1494d11052eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4b6ed1f-ccd5-4987-9f70-dca288fc9e4c",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "617268ad-bce8-4317-a13a-206ca55bd876",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2a1dcbb2-df16-4319-94a3-b7b3d3fbe6e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e295791b-558a-453d-85e0-3a766063b509",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1591ac98-ac03-4ab9-929f-ab93040cf0e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00cddfef-7947-4f26-9ab3-5b6117366043",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01e6e9e3-87bd-4438-9334-bc3968b48531",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea2800de-2cbb-4c64-bbf5-21f2455c23ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1b9c18b-1766-409a-b982-86b2e9489418",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5882fb97-0f17-4667-b557-ec2fb6a7ef47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f3c0ec6-8af6-42e3-8231-b2b90684b190",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18ff1023-60f5-4bca-9951-9377b12e02f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a4e1f6b-20d6-4ac9-a5a8-c157eae58266"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bf61363-3758-480c-8488-d985d70c9c17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b60784f9-bbf3-4b71-969e-d4d95d7e7abb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "696db667-71e0-4ad1-ba9f-f37b108bb7b7",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c49cd57a-b98e-4425-81a5-681cd31ec95e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d2c9bb2-3324-41bd-8c78-9942cc07bd35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c11c4f41-74ae-4164-87b2-19d1fbb67dfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "3f8dc4ab-5098-4897-b532-1a72ef8d91aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd68ad53-6729-43d6-a5c2-92c5e4af0edb",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca21a322-fadd-4d38-9ab9-3bf41699f1e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "833374d6-eff0-4396-8e0b-7255e51b49cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aedb4817-c375-4584-ac04-46bc46c5616d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e0183d53-2721-4f92-b853-d3e9fa2f3270"
                        }
                      }
                    ]
                  },
                  {
                    "id": "559c2600-990b-4dfb-86c0-56cb04daf20a",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4875a9a-2de5-4cd1-9d30-f3f14bfd5023",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3361b14f-cde2-4b38-a0de-c3374a2f06c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dbb2b98-74ab-487b-b00b-4a51c1ab403c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "abb52f48-f338-4f45-8b70-0d8e410b8f4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e5daab1-6a05-4088-b26c-299cbc6d2e83",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6ae7292-9533-4ca7-9154-8a97ea25f21a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "109b8509-ba32-4883-a257-e4a55faaa44a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f4d426e-0ef9-413c-8ad1-b487a4450d0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "7a8e7caf-7918-4296-80c5-333bae0d7d8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99767b3d-d69a-41c2-841f-adda9c8b1d7a",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e5dd5e8-f3c7-46a4-a5fd-9db6568f1f3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e44d1c23-6f45-4b6d-b8aa-1c217c3144b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a72fa1f-161b-466f-8c33-47403d26e91d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "22aa74d0-41ff-4290-a695-8f85576edada"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58d6fa28-d4a0-44d1-94fd-bda42f80eecc",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e10054bd-6101-4833-a9c2-f8b442087c49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f4aa80b-988a-4f9b-a3b8-d80b8e7e2a87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6107df3d-dd7b-4d78-9d93-ee05c1c5fd0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "aad5333a-7c0c-46c0-ac8f-a8829c34f511"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a6ed8d8-e33f-476c-85d5-017d86fa1ea5",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "777263c6-0cd5-4b54-8234-5168939e3eaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad3c26f5-d11a-4997-819f-0ef106a4e7af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "394c9edc-0a9c-4010-930f-246f39d40d1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "092b6ba9-9793-4c38-903f-3d7f4c2e54da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa6f9ab8-4929-4b0d-8c9d-8c65f0155099",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1fdec58-cdb1-4e95-a209-9742da66aab3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2b4232c-9bc3-4ed6-ab3a-8edd0a6e13b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7ff88f6-ecb6-4ee7-91cf-5cd2f07e2512",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "216027f6-0c23-49ea-9814-5c900fa50e7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff16db2e-dbc2-43f9-ac22-d02e51037740",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39c84e2b-4e25-4e0b-88d9-53077abe48ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5440122f-b5f0-46fc-8581-1b053e24bfb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "066e14d9-46b5-443a-b4e7-612d2bae6cc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "393bb47e-8849-4a76-8d42-a8f223ab857a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee4d95c2-ad93-4018-83f7-99e346d10b82",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b177412-4f0d-488b-8ac1-2ff84aab8fe6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc40a5d7-57c6-45d0-82df-8f9209daee16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7745629-a38e-40f8-a2c0-49c2edade291",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "56bcc2d6-0c08-440f-b061-ba2396940e2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b87d1a75-8ef9-4cac-8981-9bd84f0e5243",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9c68f48-fed1-4120-96a2-156ca543763c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8967e92d-1b34-4d4c-bdc6-d8eab15a6d45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1742b8cd-ad54-44a6-bf2e-28d9a3f9f891",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d79138bb-d83e-49cf-a8e1-b2e385b52a20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "498762c0-421e-4043-bbf7-3b29647bd620",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b2037d7-07e2-4668-bcff-c2fce0b8b5db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df201f6e-eff0-49a9-898c-54439daf0b98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf1ddc21-3b45-4373-9a97-2527426dc901",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cd54db10-b1ba-4a2b-8563-6829399b7351"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5038c90-4200-422b-9067-6bff049307aa",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcb851dd-f798-407c-a4fe-9171e4ce6542",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47bcb051-25e1-40ad-a57b-05da96166c84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "976d7a4f-b185-4327-b2fd-2b437fb8b243",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "e27b93fb-c60e-4cb3-897e-62b481059ea9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "686cfce3-cea7-491e-9264-369e176a631a",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67035007-7e4a-4c61-a566-c51bc76fc21a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "896320f1-1e7a-4579-b80b-4447c7108fb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c28aaeb2-6ba4-44af-bc98-f97d4ee922aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5bebe541-43fa-4c92-8046-7e588bc9ab86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf18d9df-b212-4ada-839b-d6392ac28891",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "345a94a1-a8d3-48ba-91c2-cc5de729c189",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6113e627-7957-45bf-9889-8ad4c6f157cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cbc3f75-3d8f-44c2-a201-b37ee96ea27b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d1f9dcdd-7bbb-4691-86c5-8e4ef71eb1ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cedcaa3-e4b9-4617-b5fa-0e5b36749bbe",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16d47c43-476f-4625-8809-f21be3cbb2db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb22e5af-aa0c-4cf8-9e14-920a249ec7a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dacdf4b-688c-4cfd-ad12-93a6b58477d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6c9b4d44-04e2-48e3-8c42-ebcc6db10622"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b12e5dec-6687-4c3e-87b4-4581899ecc81",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d74361f6-086f-4e18-8f88-afe6751601bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76f80660-1531-450e-8bd0-90283f0af100"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfc81aa4-1445-4330-acff-968b7b304f3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8d8e1048-2fe6-45c7-8975-7c6bcf0a03f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "077a7e74-56f9-4a67-aa7c-2bab8434f780",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f28ff97-403d-4a44-afbd-e469449fd564",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "001607a6-f361-47d1-b958-d49d66140769"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "401c4adb-4577-49b3-b2dc-0cc7931b4720",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "b85827e4-abc0-4cf3-9182-b5c59076bab5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a2bd180-b215-418a-82b2-8735050c5398",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61c3d4aa-eb7f-4080-81c0-a1190ccbe7f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64cc6a9a-700b-4b1c-9493-1ccae9846313"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b470ab2d-271e-4111-9c60-9c872e5a86de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "a22f8d7d-1ef4-4cf8-b326-02b62b95210f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95633054-edbd-4ab7-a56e-2e7dfdde93c2",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb0353cd-c240-4be2-8a6c-b2cf6b7d05a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fca6b158-c2c9-415b-b9b8-e833d261c31e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63461de3-46e1-404b-8c0e-97d8c9626d42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "3ae79847-a3e5-4067-ad63-a44c512a9844"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6c56878-fff0-4659-a70f-f3f8246def38",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4aef54ce-0d4b-46dc-aeb2-85a7941e35c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c4bad4a-05c6-4201-9703-3a0d06aa26ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3dc5bd5-f756-459d-8c2a-fb1ac2d1a112",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "652dd7d7-2ee1-4e4f-8f3a-8eea034013ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b8291be-8f47-421e-8cb2-8f61baaa1eff",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "648e60d4-b595-4451-8bdf-4e8f818aed30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8a58f67-416b-4a54-ac1a-56adb36d2d88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25670509-abdf-4c11-8fea-0565d06daf3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "023765a4-2135-44d7-8b61-5378d600c8a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b67a3a2-eb18-4b9e-a6f6-56b04a277888",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1acf0859-3eb1-4a2a-8160-bbcdb8315a6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53a08f7b-8053-44d8-a50c-d0db2148bdd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6ce0805-219f-4556-a60b-5f7e94f9fda4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "aa8ce8e4-0061-4a16-8a8a-2598a8f88760"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2051d41-6f2f-4657-8a7f-f22e6a5ef017",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b878d9bf-1752-4e78-bb17-7c4e6b2ee679",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4aa54a5-d5a2-4be5-9c00-7bb3c49bb5f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1777330c-92a8-44a1-83d8-f8c61aba4732",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "3656be1c-488a-4c5e-b3a6-b174db81de3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0c4de5e-324b-4ebf-b399-42f166a2ce79",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdcfc086-83c0-4105-9f9a-ebf10c809f07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3d2c4d9-699f-4d02-b1c7-019a07715daf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "645662be-c8ee-4d06-995a-1a5945dd4419",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "41b73047-f219-40cf-8d13-0112abf2a36e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77071033-0d56-4103-8207-0a6039d43e78",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80c6a001-b7db-4447-8d0a-d665732f23d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86e93a79-7ece-43ed-8806-105d27e653a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0741c429-8598-48f8-9a73-3a11e68791a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9ef52709-7d42-44ce-a127-e7ce20788582"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9f25044-9262-4173-a965-a43fe71d26f5",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40f8c8ef-c55b-4b17-b911-1a67cb05cdb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9eb6bcc-6d06-4296-899b-7386da723518"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03d679d6-83d7-420c-8588-1c2807de0ea0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "17e3df08-3e9e-4062-8ea2-9021ae97d420"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c67a07c-1f3c-47af-a0c8-ac6e149e7e55",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b96096fa-904b-4526-a898-7addc168043c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e012830-ade3-4465-81ed-aa5da95b0872"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9280186a-110e-40ec-8ae1-d6043a2b7452",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2b36917d-5759-42e7-9edc-dc2e69147826"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43aa8a85-42fc-473d-83c7-c305536a7b06",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f31df63-3843-44c0-b2a2-e1c5ce3b0b10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa377a3f-154c-462b-8f3d-5e9ffe4cfb76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1a13c10-3533-4bf5-b7a9-ca5d02698642",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b629c676-5d57-4a9c-94c9-56ecb69dbd3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abfa7333-7b05-4c70-87d8-736ece21f480",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "099a5064-fb8c-4cea-b541-fe882dc923fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4984a2de-8fe3-4613-851d-17f3281491d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82dab7aa-f82c-4749-a3ac-a09e6d2b5446",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "870ad6f8-1851-4f67-8c92-6f084e6a71c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "beae8107-b933-4ba0-842e-25c810ecd397",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82392ee1-f3cc-452b-9aa6-dc5bfc4064e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "544b645b-b5e4-4d49-95ce-fc0a757429ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d45b9ef6-9c90-4a1c-80d7-8f2fab20c932",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "38c2360f-788b-4ee1-abb8-50b1ef3ec413"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09fe3e57-c4b5-4127-bc1c-320943b93c71",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68a6d45c-1297-4528-b3fa-f5bed06fd615",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3fb3df0-ce16-48df-b913-f0b4319930d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec23150d-1e8d-455f-8466-f4c4f200f2d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5c6e8c06-8f85-4043-b6e5-285892d2e564"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9843e983-ae44-4295-92e8-aeab7481e938",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03eb8c58-c46b-45d1-bf5f-e3d6e7d9b779",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de9dcf8d-69da-421f-9186-ca9c8096d350"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0bdff57-9380-404d-9a33-47cf531acdf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "23b213f2-c398-47d2-80b0-472a4c6dce21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3abc5518-19c7-4279-b54f-ac2aedc9a82f",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f76409d3-c540-4e4b-be2b-93d791250ee3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb9270f5-c642-4fcd-8e0d-01f03b0c2be6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50b005d5-329e-463f-84b3-896c33f3c0fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f2d022d5-e4fe-4500-aba8-507ea03b87f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "372a723b-5542-4f11-8a75-1208b5658bf7",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f834b955-5b2b-4ac7-a2dd-6981013dbabe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7aad679c-ae6d-4a7e-9e77-62b82be8774c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce6fac4b-097b-42e0-88a7-3737fa869cc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "65a48327-cd8a-496c-91ae-eaa59282b99f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7625ca00-5133-4f1f-a134-240f0112fb12",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a041b9d8-4786-4786-be15-406e783d91f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c45adfb-703a-4cd8-999f-8e8a293df45c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bca37cfd-7f8f-4caf-b843-dea5d367cf74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8cb32d5e-b488-42e1-bbc5-f40ae987e7b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98091852-c197-4c01-b588-5459198167a1",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c39bbeda-7a28-4848-a133-40e32a91445a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44ca334e-3aff-4219-b109-2fc4bf42f2f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8693b6dd-9d85-4754-b5a8-6119a3502c81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d34cd462-c355-464e-ac88-9057a60ef359"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e072f9e2-0d17-43f8-ad59-44e7f95098d2",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8ca9343-46e9-4cd8-86ff-4102f0f97870",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3753536-8349-49f5-888a-c464bef407b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea27d336-e028-4742-883a-088933caf881",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "34e2349b-ba62-4c62-9f7b-d22f5d678e3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52b83cb0-3c9f-418d-82d5-53d1861b3a39",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "743f2af0-6ef6-4588-acef-b4bc79a7074f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "072d524d-e070-402a-80f9-09581968e345"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1f6ff87-8c56-421a-8b75-0dabb4aed50f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "67019a0b-8e0d-4d4a-83d4-7c9ea508eb2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1a162f7-c194-4e1d-ae88-77e067c437b1",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49bfabf3-bb74-4e3d-b599-3c0c88fcc9b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49eaf140-d076-4f58-b1ff-5b85fbdffe44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28f3af97-66d8-4a69-8f34-946fce6a71db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b7fd33de-ef15-460c-a6d8-73ab6103a077"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bbd628a-a58d-4d2a-8219-7a1f13a9ed46",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b20142c9-e81b-4528-b66e-f3b4ddd2934b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "678ad390-a225-44fe-bc4f-3386c1ec3c24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0209fd19-d585-40d8-89b6-23016b1c7691",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e191ea23-b82e-4998-ad61-ea58b5967023"
                        }
                      }
                    ]
                  },
                  {
                    "id": "befd99d3-80a8-427f-b4bd-792abbd018e2",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "430a6427-dd3f-43b7-afe9-5f09ee88ea63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04412cd0-4a5c-4dad-ab18-cd1e3c65397b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4205e8a0-3d84-4cd7-8a9f-d42c96ceb793",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9bf61119-ecb2-474b-a08b-81a7d7a2b27d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a4f5189-2d63-4622-a3ff-79c0b7e29274",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f763c22f-8d9c-4ab3-82ba-745bd369af92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a66c3ebb-0a1f-4224-a8a6-56880b7f033b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a601b632-a76f-4597-a3cb-028457e3d8bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "fff0b85a-0857-43d5-b4c1-30692e4c8fb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87bf4deb-4a71-44d1-8436-979e5014eed6",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3139a6c7-c7a1-4cdc-81c1-2066fa3076e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c79eaaa-d20c-41c3-8c32-eb6db2a773c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d2e4b22-1b72-4eb1-968a-36d82a2b22dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "40ea34c6-61dd-4cb9-9349-b1a97107f28e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f03bcb0c-f1cd-4374-bff7-27754c989e32",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93513996-fa2e-4f9d-904e-25efa8e3a770",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d5b8e3c-1510-4a56-8cc5-03f01a1f1f9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ca39a22-4a59-4eab-b0ef-1edff4d9fa8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "573a40ef-78d9-4d4a-ad26-1474851c4c18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1476a7ca-a36c-4a7b-9fd1-4bd846b3755e",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c0e6367-77a6-46b6-9d6c-bc186ff39b68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0757a1c7-37ad-4006-985c-0fece9d4c120"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "030896f7-acfd-4e35-99cf-c03a213fe191",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ec3ccede-719e-49b0-afa7-37aa1a1510eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdd611cd-9530-4336-ae96-490bd3360790",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07954a39-87fc-4f72-98d1-ab1cb0105876",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcb53053-3184-4d9d-9cea-6ecfef29db0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42c8c40d-1598-482e-abf8-60a6c0919c8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a5dad923-548f-4c99-8b9d-14f5a5efdfef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e761ea6a-36c2-4c6b-b51b-04b2affd6ec4",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d141b02-f3d4-4291-9b61-ff35bcbc7079",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec889b91-dd70-47ec-9f3b-d126b79a3431"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69977bef-9893-4219-81a6-51772d152c51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7a679f0e-bbc6-49f8-af2d-fc94639cd7bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82d49ad0-589e-4d70-a867-9f412a729317",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2081fc9-1556-445d-8358-1b7e9dfc6245",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11020fa5-17ad-44ce-9f66-126953be2ee8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3aedb7ef-c7f3-4225-b7af-8add832af43a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "0a413423-72cf-4b54-af00-e87a893bc76a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff59b378-f215-4cd7-ac61-b01e0a978af5",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5181cc68-4474-430b-a43b-8fc1dfeebe77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ee6a859-95d0-495a-844b-e794b50f29d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "754fd646-9405-4b38-a1f1-44cb277641df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c9ed63de-fd13-4bb5-8e45-c9caad4442bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17340fb9-8539-4103-8d7c-c178ad126e44",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a523609-68e8-4529-8abc-ae6f6361baec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85916c8b-b420-4465-a4f7-7bd7adecbd1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e3b3245-a120-4894-89ad-856a64aada17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "dcb600ba-ee99-48a3-b585-c7576d7f0d36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5ae2c66-0ab4-4bba-aac4-511eb8c50b3e",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b14a7d09-3952-4ab3-8035-94b9aa726daf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd7bb2af-d696-408c-baff-b685b25789f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be445096-9013-4960-9ce6-c98f172c2674",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "4f976b48-70eb-479a-aed0-0f874c236178"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cbb2333-3148-4989-831b-520f1b7f218a",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "128c6c4c-2bf3-4bdb-a5b0-d46a85e0bf85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75ac7933-64fc-4a41-b063-f8266baece66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "000616f4-69c4-4485-a33e-9a428bac066e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "c036ed7d-f81d-44a3-8287-93a0fb20d80d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c65c0e6-d61e-491f-a0b4-75800c436c02",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5d5c822-17fc-46fa-a596-521b2d5c9b18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "c7bc665a-fcde-4526-811e-221d8cc8773e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fcb78b5-70fc-495f-98c8-1f5a2a413b00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "19cbc3c9-7add-4e6d-bf31-00cb74d8de99"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "12dc830f-b53b-48a8-8fa9-ada637b70b1d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2f3ce8bf-859f-4ade-bf06-cc38cf14166d",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d54fbc98-0288-47eb-aaa4-83f164133561",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "94fe51b2-7425-4f4d-8338-aaa1be30542b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ca16a72-61eb-4678-be9f-78b5724aaa4d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b2e96c3a-d010-43aa-9466-8720f3df1f6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a3e547d-ffd2-41bb-8a68-ec9eb1ea9381",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ec7dff5-1238-46e9-ab4d-c11036ab53ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2d24583a-5a8b-4abb-aad6-647efcb2b0dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56527287-6ba2-410e-897a-707bfc5039d2",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "18da24da-7194-4fd4-9a0a-84e192ac405c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e948a29e-93e5-426f-9a9d-d9314051a7a1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3dd4773c-1ee3-4f35-a5ac-882c9d6b6d53"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "18b8b43c-e993-4e63-a23e-5c9f4ac9e6df",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "333a3b8f-495a-450c-a8cc-dce69c5b7a7d"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "bdda8cb8-3d63-4f0d-a4da-185ad4786c1f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2b1fa344-5b25-4522-825c-3df1524c2f23"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "94aea838-17aa-436f-95df-f098c8b8c9d1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e413b21b-ae19-425b-9431-1f1bc039ad97"
                }
              }
            ]
          },
          {
            "id": "66623a88-4c73-4a4d-a28b-4450aa058d45",
            "name": "Positive Testing",
            "item": [
              {
                "id": "79980b9d-46c0-4e73-bad9-345afb4dba5c",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4124beb0-32fc-4e51-92cf-cf2aeabf946f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3d5144ba-acdc-4619-ae8c-d8519bbaeba5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7649ab06-dec2-47af-ab83-b9ba9dc97735",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b887b51c-40d6-4e75-9982-8f4a8abc0948"
                    }
                  }
                ]
              },
              {
                "id": "da2b1d12-52e0-4e0b-a3df-d3e26dcfa75a",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "86b40202-b351-4109-a67e-7f9afa0b8a01",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ac699888-aae5-4f7d-87bd-fefc4c043307"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6b01dd59-b119-45b9-ae47-fbdd568ebb42",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "77a5f300-e9a6-4f65-8186-6193d531c8db"
                    }
                  }
                ]
              },
              {
                "id": "864a1377-5836-49a8-8058-fec7d77c1de4",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "24644d38-63da-4e7d-ad7d-9eb245a28a97",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4757ca83-8174-43b3-9c37-10e542705756"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "df58f77c-6248-49a8-8583-6e6a3add5978",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "a2130217-68c5-4b21-8466-63ecf8e69316"
                    }
                  }
                ]
              },
              {
                "id": "6c7cac9d-5701-4747-a23d-01d8daf36f9b",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c1cb8f60-bb11-4fcf-826e-489d4eed15f4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0566d0e5-3c83-4aba-a228-d2e32c0cdb8b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bccde8d2-6de4-4158-a95e-b551ef619ad4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "2f6893e5-f575-433b-8806-67c481947bf4"
                    }
                  }
                ]
              },
              {
                "id": "b1510711-07b6-4c80-8341-51dfcbf966b5",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3bba27b6-4ec9-46c4-b9d3-234a4c6475ac",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "71b53f4c-42d7-44ca-9096-4a7d30551066"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "76128ee7-6f17-474d-b920-9e5f35c290a3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "59887256-bf92-4f40-b147-e95e674a6e31"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c80bd089-d9f5-43c4-a133-50723ce591eb",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0bbed22d-f48b-4299-a386-a4523ec87add"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b3adc654-8602-4f03-a69b-a1b87816a205",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b96a32eb-96a1-4f8a-a2ce-662bd23fb8fc"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9c1aa447-68e1-4c70-b8d3-de663e61f0a7",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"id\": pm.variables.get(\"credentialId\"),",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "88ca053c-3abc-47a3-b4aa-166bc961b8f1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9654b9fe-87a7-4744-8f35-e19472450e07",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8abedc8f-cdc4-4a4d-9454-d15d75923315"
            }
          }
        ]
      },
      {
        "id": "79ca29de-ed25-4e16-a3a4-8afb9f245dd5",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "5a8e7d78-ff2a-471d-9a4a-e8d5ddb20639",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5cce1873-8b4b-4fd3-ab1c-8a4ed4fa5dc2",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "71af9626-e7d6-488b-a45e-88391ec34b51",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b7bb280-48db-435b-b62c-11530818b143",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc57e578-6f29-4e26-90a3-fe23e00c59f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3d58c5c-8771-4874-ac3c-df35437db01d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "7ed89d17-92a5-46b0-a81e-e7fbd61795bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4b991cf-07d4-48f2-8877-6b686a77b8f6",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf621841-0a0d-441e-883b-2c38c073dbd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "587132e7-56e2-47e3-ba0c-1a98483d4cc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8114994e-780b-453e-ac4c-3d681ef5405b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b701563-8720-4bde-9b6d-9045cc49b177"
                        }
                      }
                    ]
                  },
                  {
                    "id": "300e1b26-fdee-4071-8f80-89c80604f2a1",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "262541b4-23b3-40f1-9769-8ef77e87000f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28a0d893-df07-470a-aa41-4c749eb66228"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bf730ee-f05e-4bda-b767-4ddf1ffa5575",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9218f6c0-e42e-47fa-a2d1-cf7395334545"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e8e5476-85d5-4992-b7bb-d0dff24f25fd",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70581ad4-b03b-427a-a8ca-82c1b990903d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34a80d3c-fd18-470b-ab37-056cbd572bef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1d57bf1-a45a-48ce-bab8-4f26952cf0b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "abfa0ba5-4273-4251-be6c-d1d4438dc43c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d9d6008-1b94-496a-8964-89dba73a7041",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c680d614-1909-4d26-8d57-69b96bd27749",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "281ee32f-0ee2-4186-8dfd-acf927265b6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e922060-2575-441e-aba0-1793722df340",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8af0420c-03d8-464d-925e-b5b05371737f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63876d74-f48d-48c6-b72d-0920caadd406",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4dfc22b-7922-48b9-83de-8d458f1f3889",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6940ff42-ebf0-4b9d-a8da-1815f8ede0a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dbf1056-fba5-49e6-bbb1-7ef95bc069f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2d8bd446-bd2f-43b6-8560-3922c963ae47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fc0797a-50b5-4207-92c5-c2bf8b92ae3b",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b58c0b0-61d3-4c16-b691-cb7b0259b3fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1eedc4f4-a3a7-4b4b-9ce7-ce6bc02bb5dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f2f26dc-4437-4cd5-822f-6680905d7d1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "11c42812-9f8f-4a0b-9d8b-987c5f1d7816"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b4418cc-77b2-4aa1-a049-5dbb7005a693",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08d2ded8-933d-4ead-8f41-b2ee79e33603",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b86f341-9e35-46f7-9af8-11456ffa7d8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f71a61c-4469-4cef-8dcc-660c3cadf478",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "00f1d469-375d-4c4f-9dce-57589eb68395"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8dad901-8c84-40cd-a702-9a5ee03af32d",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cad0aef-15ba-487d-9d7f-9d358596f4b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "385a520a-79ae-4891-ac2c-def1ee52de62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3dddd88-f9b4-4e1d-be5e-9c8ed54e6f9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "530411c4-d626-4c4c-beeb-e91e503e125b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39d93796-c68e-4e41-b44c-e776f9113475",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a914ac34-5e34-4e58-be2b-302fd31aed2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9b82f1b-fb61-4a2f-b8fd-81a7445c9ce8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f772c7e-fad9-4383-ba7d-b1406591084b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "23a51b2b-8d4f-44a6-b2fb-b7a28a93b49a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f879c925-3474-40f9-a10b-d13b9fee3bf9",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb5ef244-47a6-49ba-ba2e-690ac924848f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8a5f43f-575c-43dc-a26b-8dd53456ef9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21b8e3ee-e081-471b-b94e-4b60ec330e5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "7f09f1d0-9532-4a2d-bc87-f2bfcbd5d035"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ba3d4a8-aa6c-4ab9-a768-6bbaa2f8cccd",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d157d2b7-d13e-4f9e-b7fa-247de8842e9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e94d460d-1c17-4e00-9793-49fd1d8a901d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfe8f6c9-76fa-4e4e-9ce2-32f2bfce4487",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d610df90-3957-4925-be75-71fda28cf636"
                        }
                      }
                    ]
                  },
                  {
                    "id": "373fd9bf-791f-41ad-b6c7-01ba11afe99b",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2a966fe-ca52-4d1e-9cc3-f0981577b1db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bcd5b59-f0d9-4255-a23d-7391ae51b01b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc7abd36-e6c9-4758-80d5-36794aa0c210",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bff072fd-3fcb-4e27-996c-1abfa6e71614"
                        }
                      }
                    ]
                  },
                  {
                    "id": "058bcaf0-3ce5-4c4b-a0af-9073c159f063",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec222f56-dc2a-4741-8d6b-d35fd344db09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d992f5f-a457-4854-9e34-64bb1fc40183"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fbe02cf-e6ec-4985-8f1f-37df8733ed17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "4361bf19-139f-43c7-8321-23ab74843961"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43dbe542-5fe8-4dea-a4ed-37b2ed781bc8",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb1c6f0c-8287-4e06-bcfe-afcdef68b316",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d7b41d7-dbfa-4597-bc4a-8ca9959eb676"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acdb67d5-ac86-471e-89b3-1231c9e44054",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c6335d2-5d76-43f7-9663-b74afd575846"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27f40741-f2a0-47c4-809e-0df2c086959f",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "474260f5-805b-4607-9824-5abad835751b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9059bfb8-a2d7-4fb8-956f-888d9099debc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fbab005-6b28-42a7-bb93-91e2fef6c357",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "e54404d6-bbf5-4f29-aaa0-80551abae2ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e0bac9a-8cd9-4c77-b963-d1fe7eaf70a4",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ff00ce4-c8be-4f0e-8b7d-83fbb7856d1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "304d5036-868f-4766-a84e-22e76bbfd2b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afc99286-a7fd-402e-94e6-3d9fad672df7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "6bc0f3d0-89b9-4a77-b651-2023511fa134"
                        }
                      }
                    ]
                  },
                  {
                    "id": "240dd0d5-d9bf-4d50-817a-f4ebab057a38",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9312c4e-7ec4-44f7-a3f3-c0c5d7b74744",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66eee39a-16fd-434f-a4fd-3a5f50b52784"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de80f752-241b-4bd0-863d-baa62d167d0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "0c8229d7-65eb-4b17-ae47-8b5ad53902e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b341cfe-51d2-4dc6-85fd-c707dc4bdc14",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e63a552-32c2-4729-b594-5607e07be78c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1050dc07-fde8-4664-9e22-9f0953b67edb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6063f4c0-d418-4f3c-a640-6282f5775566",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "59ac72a4-d898-4dff-92a0-2128f9e81782"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c1f461b-1827-4e18-9feb-2a9e7e90edb6",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d442070d-335e-408f-8fbd-3a29b04ff4df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "631aaed9-8e1c-4fec-a7c2-442c5be6aa5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "102bad7e-0c26-4aa4-b8fd-3fbedd397326",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "522f85a0-4fc6-45ea-9512-acca4eaeeb35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82da4b4a-7895-41ec-8b23-985179bca5d7",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c4ebff5-5c04-4877-8971-3c78557e40c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff1e384f-202d-4a1a-b44d-8db185f0ccd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef57958f-b497-4ac5-b86a-00de58a10cc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e25123b3-0179-46bc-9b2d-28c9960e9fb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca3a0054-1868-4ed4-a6c0-32c74595efc0",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a3c22b4-704f-4c8d-994f-d32282a3a868",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80166848-bfe2-4899-be1e-9c5994a39380"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47dc1ca1-affa-473c-820f-4a86f77e247a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "93355d37-c155-4636-8588-9da2653ee267"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23c7e194-50bd-4b9c-bd34-47067377a572",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d536a9a-054f-4661-965a-0239ab41dc97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "323098fe-e1b5-4597-91c3-8b8302644274"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b041610c-b26c-4289-b695-51f86b80959d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4a43533e-99a5-4b35-8c52-1e92f524f150"
                        }
                      }
                    ]
                  },
                  {
                    "id": "100fdf4b-1321-4f75-8c2b-a5d1374c6f9c",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8ee340d-1151-4b7c-927e-08c0b9083ac6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c65987f6-ca99-48a3-9e2d-e4785775b7dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b2c5487-49d2-457b-856d-a489277ec58f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "85e4d03d-f0eb-44d3-8cdf-c742e9b25cac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53030cd4-8c04-448f-9284-269c3eacf3e4",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d77c351-1a50-400b-a1ed-a78271514599",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40013741-1f50-48f4-a168-148e02ca53b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d395ae3e-1b9f-4e92-a8e5-fb5bfceda2a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3129ed67-da45-4df9-bece-1f855cc0284b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5877a76-cb4b-4806-b3ef-ed96290ed5d0",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ffba4e2-1a79-4a92-9b03-e98a26c27e10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34a67103-2e91-4b1e-a4c5-fc8377eaa0d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16472c5c-08f1-4780-a29c-c928b8bdb6b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d8afabba-9328-4bd8-a84a-28bd0361ceb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31d3555d-e97d-4cad-a15c-772be9d0d5bd",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5634fbb-09e0-48a8-baa2-8b3cc77cae76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44b028d7-be05-461e-b0b7-9fd32bde172f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "104083d8-8b86-43c9-bb48-e4dee76f9f2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fcb1a8d1-20dc-4b36-aec4-08625c470813"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c74f27c4-d1fc-4646-b060-2c0f3d1d50d3",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25953c53-d752-490c-a7fb-d245e5ba896a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f69cb516-84f9-4135-8c64-a611f487427f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73851b1b-921d-4496-aabe-81a4cbad879f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "45ce8264-24fc-42bd-b6ed-9e001b08d2cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f31c55a6-cdc0-4ab1-a604-ca90bdad36b6",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab9dfaac-93d7-4ac6-85a2-4ede6ff39953",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcad9bb1-4b6b-4630-a5ce-6cfd665ba615"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f6e5c0c-2fd4-4b70-9942-d7fd12cf7dce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d107763-9a14-448a-aeb0-815677e9d52b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "663dbd88-95b6-42f1-a467-73351110e808",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bd4c424-6041-43c4-b400-b48db6af89f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc9009c2-121a-4cb5-9f86-feed057b56e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df7238b4-0b08-49d3-9a49-ba2d5357d80d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "132187ae-7608-4d50-96ce-dfa0563afa75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39ca2d5f-1104-404f-af00-d33b34ea1c1f",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7ae8b31-e38d-4a57-8028-9ed056aff21c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab33749a-74ec-441d-86e0-40cf4eaa1958"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83d6a769-1048-4721-a53c-9c2fa51e123a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "56186dd6-595e-4961-bead-e7093efda207"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51047ed4-a556-45ac-8c6b-c050c9dd2599",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fe6e064-5980-4642-be44-ae52aecd4cdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22992c7c-3ee5-4717-be87-a26d1a63b33c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b68b33f-ad11-41c9-a44f-0e119e32ae72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d6f1218d-457b-4bd3-9373-b28432ede8b9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "840d3b1c-6bfc-4387-a36d-103d85506cc9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9246f433-856f-49bd-a16a-5c2fb1fcba9b",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5a48d4c-4005-42eb-9e09-7f96d9971507",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "9ed62cd6-cf92-438c-90e0-e83d18dd9f7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25807316-1d25-468c-ade6-cf0921fa80b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "adc81cb0-9e7b-4070-a14f-ec69906e70b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbf22d81-9828-453c-be7c-b5f18eb53367",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "142cf6fe-d165-4ed6-9a2d-2bfc87b9bb0f",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "aa60bd15-11c0-447f-81b9-1133f31554f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77df2b6c-026d-48ee-83eb-bd776fa42295",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "97aa175f-5150-46c7-b321-b284197991b6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6a6564c1-ddda-4d2c-8cbd-373ebfaa1f98",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4b132239-a8b7-4176-9624-5eeca23a97f5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ebca39e4-1831-4378-8ee6-c6db70f5cef5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6cbafd09-9e64-45dd-a2c0-601ea5b95559"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "86c698c1-b191-4b2b-9a89-a85bd9ed0f65",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "7d1b23f4-364b-4296-9218-5eba450ab4dd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5ab0303b-a7a1-4208-a650-7cee2cb6889f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5048a8c9-b936-46f1-96e0-72c39c42320f"
            }
          }
        ]
      },
      {
        "id": "14836d1d-b588-4c33-bb36-a403b03470fc",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "1c0478cb-f56d-4c63-9cd9-db21c15c41f4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fe069219-caa5-4529-8b48-6e187279bc9e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "3ee648cc-1624-4476-bd4a-813e116b1822",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71a3104f-0da7-4715-93fd-b74d496927e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4dc30ac-4993-45bd-9b5e-f813dc15efbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "714477e8-0f9b-4277-bfa9-7411c0cd5820",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b160d7e6-86d4-4d72-824c-54153b63cbbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3a716be-56cd-4f9d-81be-eec0527cc270"
                        }
                      }
                    ]
                  },
                  {
                    "id": "717d76ef-3f14-44d6-91c8-2b54bd75062f",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3083e32c-e8f6-4c4e-b73c-5e075f2dab5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab2751ac-6fac-4e40-8f9e-add42f51efef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bac677ac-3e23-42c0-8b0f-0a5dd6c05f32",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24f4705f-cce4-4b45-94a0-1594a0c9dbad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cda8e44-1ea9-4708-bd20-50c6f7af0d3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "925db34b-a2d9-4fea-8ff2-60852edc8785",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "124e8d5f-ee5b-47c9-92b3-0d099282174f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f44eefb-8003-43bd-8994-6146f95997c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0df62797-f41d-4b83-a39a-a21387dcc83e",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4490ef8-3304-4efb-bd12-2cdd70456efd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba1a70f1-3fee-4882-87c4-ad055fc8f0e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7022b83d-d9e6-4575-941c-41f8ed4e6d73",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "759fc417-9fe2-4af0-9a95-03f64dc4b504",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b3afda7-c4d4-4bac-bfbd-46e1953f3f1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5df260e6-6971-48f4-adee-52498be4054f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c322331a-6d27-4488-bb4e-982da1703857"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c833f03a-d74b-46b5-b8e1-b42764ef0dbe",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e3da82f-29a7-44be-be63-69efe10d3950",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cd14f697-48b0-4edf-ab52-7755bf6c2927"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "709ca1f4-ce9d-4f0f-8e6e-8fb8c31f93da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00938043-bca2-4c8f-91af-513f2944ab02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a579f21-f9b1-4513-82f7-3f45dd62cb9f",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c6403fb-1193-4ca0-95e4-b1470d4827a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c0f603f6-9b1e-4686-9dbd-2b2e257c06c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf8d7948-d060-4ad1-8dec-9d87dd06320f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4513dc09-bc73-410f-b659-0c74db58d99e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ed313ae-8fe9-48b9-b519-debb592e667f",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42dc464c-6ee3-430b-b1d2-38561a16c1c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6ea16a3a-57bb-4c29-b295-710c847346a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7184a25c-8091-48de-b597-3ad1dc09502e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "baae34fc-f747-4f7a-abe9-7075040d85d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dda4b61-917d-4394-a001-287356f191a0",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79f39b55-ef3e-414c-9bd7-12be54107ce6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a102822f-7a03-4bd2-9b39-f1dba590a7c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05e4ccd8-be9b-47b2-86f6-f44d19ee2399",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9eeaa3b9-04db-44ad-b0de-62d41569c286"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a6d4bdc-0eb8-421b-99cb-a539cd2af582",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae8c3305-3e72-4ecf-8de7-427ac22c20a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07e544d8-110e-4f3e-b38e-6ab65b2e4888"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e13fb458-de45-46f2-a664-25982e14bae9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb40aaf7-dc7c-4524-b9b7-f00061aee84d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9f4c291-96f5-44dc-a9b6-14e751fc5617",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "926ec332-b73c-405e-845b-4f13d540398b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d0f2d35c-336d-486d-97cb-51c35ff8533f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be3b5d77-1722-4c07-8786-b2d8dee83184",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "554cdf13-9014-4f70-9dc1-716d365777f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40d0cd5c-2584-4ccd-866a-55f0f8c99ddd",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fb6ac5a-4c4e-46c0-b192-111d8939c950",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "64878f6d-7c0c-40c8-a4e1-e5351c17dc24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e63288b-0f79-4351-a2f3-5bcc60ddd490",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b41559b-e9ed-4399-ac3c-f13106061dbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3695190-6168-4a49-ae72-e1ea3463ef27",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "516501db-c776-4b2a-b6da-89a43bd37515",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c56f3eea-3a26-4828-9762-1c16615161eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0f9dca7-825f-4375-92e8-3da5717c5da8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40be5bb3-155e-41c6-8854-117a99717564"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e282878-262d-415b-ba50-bbb7a208ab43",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75f82c53-ea4c-424b-9432-4f8f898f6df8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "34e90127-24a2-4f14-b2ca-12cdbca2166d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc373d5a-b1ab-4c46-b6cf-398cc969cf7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae8ef63e-8c9c-41d5-8ffe-97984567eee7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25c78096-e94e-4448-beac-a0c265a86d88",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7f332af-c359-49bb-86ae-37598d1c7223",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e562edd-7f58-495d-a8d0-e94d05d3af7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24e82519-25c1-4ac4-b7c7-ea40eb8a792a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d61c622f-3bc4-4974-b21f-b3b396cc27dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43711b27-9e13-4c2b-96d0-2906bd77ad6f",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "428dfb9b-1415-4904-abc4-29700b51112a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "128f6895-4972-4fe4-a2db-7ed6dfe44094"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7cda589-2d0d-47f0-82fe-9cef84ec7521",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "835c4844-95a1-43c1-bc2d-1b7c85fe3a61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2719a607-928c-4b68-865a-610e9c0ddad2",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fafa56aa-821a-4734-8626-79288a9fd421",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "676cf013-431b-44a0-92e8-5a001e2f3bf6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9440cb92-b2bf-4400-93f7-ad3a8fdc6f90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55d4212e-87e7-4c22-8401-7202e34ff77b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04f2e392-dea6-4ba3-a80a-e5e8fb95ddea",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83978f3c-b75a-4a9c-adce-6fd12c24867a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d070f3e-023d-4080-85c1-ee598d09aedc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a21d0cb6-786d-44e5-88a0-503d843ad7f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ceb9cd2f-0448-41e8-8c3c-206119c6d0e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa11e839-f6b4-4601-b200-89f428ddaf39",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21441a45-5219-4f8f-a2d9-7820919de0c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afbad1bd-e769-4fde-b60c-409ab1af9a5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "729063e5-db8c-4445-b5c9-22dbd0c7c374",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb60f6eb-43da-4f2c-9c1a-3c90d76bc632"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55add423-7162-4966-b899-9acf07395eb6",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcd1b411-8cad-4334-9b19-03fc2a12b838",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbb63ab0-0363-4684-9513-e7a059ce574a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6af9d19e-5b09-4a54-9c06-419507d0e675",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd38d701-bc74-47e3-ad45-549159f311b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c45fccf-cb76-4574-8916-8bfaf9d31748",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2be46f5d-c029-442c-b2d3-6a1c46a6b9f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a5258d0-dada-440c-a35b-96117544e410"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16cff4fe-c071-4d30-9caa-b5d3966a5a79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72c6d68c-29cb-4fe5-9be1-a56924587b11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aff8e753-e417-4d04-bc42-7f1fb1ff8973",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14b2c6a8-e3af-434c-9055-5c86083387c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e07bcdfe-20fa-493f-a5ee-801507b0af11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "139b46cb-1488-4944-8779-35d593280336",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8361066-36e2-472b-97b8-60742ae8d11b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b796193c-b675-448a-a113-26655e9c48bb",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "964069f9-0cac-46f1-9cbf-402015d7b787",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad134f6e-f410-4588-bf45-38fdf5c6def4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ada8524f-d045-45b3-855e-9cb5fdbf9516",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b2877f5-9ff5-4866-a514-935dba2402b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f52121cd-8802-4f8c-93c1-39928ba14d3f",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5de37fa-4181-4f12-a35c-5f8750a57b69",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8dd96333-0d7d-4a5e-9061-3ff215e43e53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bb47567-1d53-47a5-a5e5-e73d80d04a6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3246000-69a3-45f4-a958-2cb978fad121"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2f73f08-1e9a-4f7b-9a52-6e8036e0639b",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b716be1-8778-4300-b046-471fe314d68b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "57e65ec6-4d30-41c3-8b9c-cb01fc80bd10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1138db47-5ec3-4574-820f-f99ea9e9338f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "935e80c7-6f99-4217-a8b5-0118afae82d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5525b114-7936-41a8-ae74-a5caabf9c4a9",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "692d3be7-33c5-4462-a146-23755e353194",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10f94fbe-7e22-404f-9ecd-c8a540361376"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d530394-9108-42ac-b5dc-54947414eb2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7e210a5-69d2-4b52-892d-31628d1c1104"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55aa56c1-de5d-46ae-931b-6964c4eed036",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e0b61ec-4c80-4fb8-a1af-663e9ffc0fba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "844b6382-e35b-4856-9de4-37a7b4274d6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a627728-4def-49f1-8beb-cbca21524481",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c0265f5-518a-45e7-b9d7-54869c4ee569"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43715bc9-ae5a-486c-8f18-c8fb6b2661c6",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26c049bd-b768-4f82-a103-819a7a67608d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e08df19-a3d0-4e06-9299-09a82093d65b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ef05018-07fb-40fb-9967-891c8af41d13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cb93cbe-a8e9-4ae6-9101-007e661c2eb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc47cbc1-30b6-4968-a74f-6dd91b6e2dd4",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4368780-a217-47aa-b6bd-f3b46f543dad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "23e24054-b9f2-4fa7-be3b-026a02df0dc5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16045dea-af5b-4419-9e09-058c9fcaf4c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85b53135-4c81-4734-b481-82925eaa7e0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdcc639a-1967-4836-b1d3-ef443341b5fd",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81299133-125c-4eb0-a491-e9ef908f0fc1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a619b89b-ed7c-47e6-bf9e-8345a9992ec1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0e77d3f-323f-4a20-95e4-53b80930c0fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68315801-6c4d-48fe-84f2-4bd91ab5d038"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea62d43a-4d8c-4c27-bd29-8bffc3bac75c",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e8fbf57-6ab9-4973-8c39-40260fdea171",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "340e9262-2750-4241-92a5-01a175bf5bd6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a6caa4a-ddb3-49f6-b6f1-75ec44ce17af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78a8dffa-5a3b-4694-bfdf-4ad27e2a0e10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f768ff9-ae26-48e0-bb91-3e42dbda42a0",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "101c4824-8d89-4779-9680-f51622a53977",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c0f7b040-6465-4061-b278-c76be718074d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a66b1f2c-3811-4034-822c-8bcda7945d04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92cbc146-a583-4e7a-b5cc-b571dbbb3a1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95658ffe-ef35-41e9-8594-2c6587fa70ef",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf23b640-9fd3-4c83-84d5-a54de74ac254",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2523d33-6b73-43df-8f7d-c75a2a3f36da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c58b733c-d05e-4aba-87b2-4df6a5fadfa5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "876e4e95-3afd-49b4-a3cf-e6fd7e7b80b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e1d3237-143f-448b-833f-790527b42508",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7229bd73-6c3c-498e-ad7d-2c21b50cf00a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8691cd5-44ea-4d7b-9598-416b5d51a6de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45d3dab4-c0d4-4406-9db4-53bbda0ff9c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93694f1a-a843-4a29-9458-500e73d74cdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bd0ced4-4c07-4b3b-827e-abf6148fe78c",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e4cef93-edb4-453f-a17a-498ab786e5ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3a9a89b-3c0a-4fa4-bd0b-34705623b495"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18da30eb-9d15-4d88-8616-21297e6e154f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "918617e8-3f16-48e3-a89e-50dd4be15cac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6efbaa4e-85bc-49af-9e72-7c161dcadc6e",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a280e6a-7a2b-4c56-b5b0-0d4c7f1113c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b47118c-4368-4be7-bc12-e9f7f5a91198"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bd43ba9-9792-4961-9693-3e5df725ad37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70f4b5e9-e10a-4536-8fc3-e7a517663fc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfe37ab8-b2d0-4507-b03a-5618719e649f",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fe2cfcc-6283-4b01-868d-cda8b804250f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eaec1f45-0cd3-47a3-ba19-ab3679f84f27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97ef012c-cb98-4110-ad78-9843851696a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cca5ac5-ed16-4064-a81e-0736a0ab4be0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84d02e61-ec16-4e09-a3a3-373a177d5d4f",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ccfa875-5dc5-4ac7-8676-693f0b1a2c79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "385e33e0-6c18-4a9e-8dca-c1812575ff6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "deff4ab7-77e6-463e-b95f-e970b159fddd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b661ec4-dd7c-4502-99a9-f3678605fe17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9092ce12-c099-4493-b93c-283b1c8dfe47",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5645bc45-02c4-47c4-afb3-6fda19055f68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f58092e-9994-43ff-bf4a-87c90fb96189"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8eba26ab-2c64-4231-a1e4-3c42ed2a79c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6ebbd45-d884-408b-a414-58ec4ccab27a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7961dcc7-b859-4c82-b8ad-567b70242d60",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90d8e59d-3752-45f3-b12e-3b8730f0fc62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0335bf8-1c9f-43b7-8225-c38571003109"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8c786c8-6cac-460c-9756-959637c0271a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee5ce8cc-81fe-40b6-9990-950fd40a8b88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0f94fb8-7e1a-4b2b-8891-ea318af8686c",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3db9c401-9040-44dc-bf5e-39d44dc0d678",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae795594-9d59-4a3c-b941-44b945323efa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff7f745d-f90c-48fe-947a-f735edf37938",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "768e3b16-e405-4870-876e-a351a2913ef9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52e7f5b3-279d-473f-b189-2257eaccfa03",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "781fcf85-e525-4b87-a7d6-a979d603e709",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4cac510-4246-4481-b9e9-b13c3adf7947"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b20d8f9a-75dd-407d-843f-b72907972178",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eeb0818d-854a-4113-9e59-84a2a303d808"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d622848a-30c9-4467-82f2-69b02004cee3",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f871b12c-8b73-487a-b9a4-e99088d16d73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b712c59-a4e9-43cd-b549-59bb3b8ea946"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05f8e744-7845-4873-9c04-23e1a6205fd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6df231a1-bb9a-4387-a79b-2bb9ddc11a41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d68d1b82-a6ff-4023-bcf2-67a30a47d69a",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ab6729e-6061-4551-8a54-fffd7df9ad41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9679852-8294-4fa6-a45b-985bab84d6d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "920a9d7a-f3ff-4c85-aeb8-ce45d0193053",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eba966af-c032-4916-b055-aded142d8b8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59b3318d-0f64-4019-9014-05518946a0b9",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dc0c228-603c-454f-9782-8df64640c1c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d33bfed3-a115-425a-8d47-dc1273ce8eb7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98a70ece-4a06-4b5b-998e-9bde3c0e27a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22660732-8491-4ae3-a61b-dc38074c88e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5a67910-cefd-4d0e-90a0-f1a4617c8e91",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2894bbb9-75e5-4332-b922-3595438cc894",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8457c7b7-7667-48ca-857c-5436a0dcdaf9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4290000-ae0c-4bd0-9f60-8c2da7c39d4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb846954-14cf-4981-a841-4263b65a0bdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a87e42b-d2bb-477c-8be2-1c87da895f34",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "678c3185-e69d-468b-bc6d-8e0e6680bbf0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43cc87c9-21bd-4595-a841-346967c6753e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ea3c685-2090-4a29-a496-3a414f0f8400",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca42d084-de8d-4fd6-b5f3-f8c272d63818"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fa025a1-a676-43db-aa74-51ddb1717b8f",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61d0c99a-41d0-4d08-9790-6ebb2bfd61b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8fc0604-264a-4e1d-9827-7c2a4370acb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "363ebcc7-c430-40fd-b13f-104dcb775f5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acb26901-fe1e-4ba2-a905-98fe82a13037"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e44a6c7-662b-4cee-ada4-81cb05324cd6",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a465d2c-ab27-4c21-903a-017b3297aaec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c79040d-b829-4f00-8055-d6d5f09901d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd5fc55d-3c01-417f-afb4-a2e73e29537c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c8430ea-0c7e-4cd9-b194-3e0a8aed1e0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9a5ca6a-9d21-47e5-b6eb-b24a0a2d5428",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "062ac76a-81cc-4372-8a1a-1bf9ffe00143",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90d979eb-e144-439e-af6c-d875a678a922"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "259f17e3-d032-4013-969c-c3d2b63c1f49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb77f59e-6375-4452-be8a-41b3012b1c3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b1e5761-c4a6-4b0c-bf02-11ad7e6af895",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5599a7f2-6a73-4fde-8225-fe2676b5af34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "502f8b49-a71d-44fa-a7e2-13d519490771"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01d2cabe-9d43-4f86-b501-d33a4ff4b7c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da5529f8-9107-46d7-8f3f-a3f15eeaed87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6ed5be8-5757-4f70-941c-cb99cccb5548",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daa01b0c-69b5-4cc7-bc9e-6278c7261b2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49582d73-bfdf-491b-8d1c-f8519344a921"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a63a0ee2-a169-40b3-b10c-35ce2c6f1d14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5e79f65-6074-44a8-af84-d68ac5d8a619"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d455c63-7a1b-4ead-9716-f3a005d6544f",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70c7660d-2585-47f4-9c2b-236fcaecb17c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7624d5a-91ac-436a-8a63-3c60b5bf6fde"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b8435db-68fa-440c-8a5b-18e27b2c2f61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "239db05d-4f43-4bb8-9644-6578bae7f28d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abb2263d-5ac6-4027-9ef9-f6cb0966bb2c",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06ca22fd-4abb-48c3-b35f-b8d5088374d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bd2c9ab-6473-45c3-b83a-228599dbee8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f903ef09-9157-4592-9527-f3a2a8e9adae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05d655aa-7eef-4aea-81a1-cac6a833f7ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09693b59-7379-412c-8d31-25137fd78051",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6c9ad41-e948-4545-92fb-ee3090085ad7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc6c28e6-8d72-4728-9da7-4b68a6394139"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87f9a9e0-ba07-4a5a-a68d-fb4d322898d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5b63bfc-a978-45d8-9807-ca6343296ac6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6c7fc62-7e5e-4740-a78f-c7287a23b076",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1dcdc3f-807d-4a6f-ad2d-f3a4d85c4a7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91fa82ef-457a-408c-ad50-09008358ae00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "845ee2dd-786c-48e5-a350-0671cedd9f57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e6c15a2-2a1b-43e7-8356-f373d7f404eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d359aeb-21b3-4c5f-b4a9-980528b3a3fa",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62f5e6c4-acc3-4deb-91a9-a69806889f2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "211917c4-914b-4273-af55-812bd8a56331"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce87b7cd-67fa-4410-a0ba-07b6d8e3745f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c700333-3ee1-4a55-9997-7ffc0269e24c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "460eab4a-bdba-4d1c-895b-5ce85fe41614",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b54fc705-4e24-4aaa-b173-b503a03c2471",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c69dce5-bee0-4231-9302-904d3075971a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "689fdd10-a018-4d19-a22b-87af717fe5b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6dcd75db-95d3-48ff-b245-d5f7ffa3b3cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3b72507-bcb1-49dc-9df2-24d93d1b37a5",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "162e35bd-5dde-4324-8d56-e23aa10a7b79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40cdf239-1a3f-47f1-ae50-1ea6a5fc0ef2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cfc5b3c-07a5-43c7-9f8b-f7d7af0abeb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a69f31a-5e08-47a0-a6ff-f426bf777ffc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03088956-2b96-4aaa-a9bc-a82cfdcc0f82",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "539f5fbb-c26b-44f2-ada1-111fdbfae8f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "068b8985-88fb-4683-b2f0-e35a2d4daa58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5daac633-8860-47fa-9ee1-ee4f94266a70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b593ae16-c952-4c21-a292-729b058aabd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6318fdf-0385-492a-a492-13c510fa190f",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2e4594e-632d-4d04-8fef-6caef6f7f6f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6dec69a8-48f6-4a76-bacb-ca3f6184b7e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ebad3cf-0f89-402a-a749-046ae4b1b6ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09c2208c-ccad-451d-bcd4-80bc0b7532b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2db42a12-a3a1-47e5-89eb-492a9e0a08a7",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cda0a598-31e8-4b5d-b81b-c3f407406507",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "90758276-9200-4ff9-86ba-6293361b0d60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7908996a-229b-4d3c-87b2-48cf9957b0f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "188032a0-3a16-48f6-916e-e8c3c14570bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5fa8035-49db-4753-b700-63142a349aec",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3335d7fd-e657-4200-8a9b-96b1ab2f4eba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "41f718ae-2e6a-4c8c-93ee-4960bea1ef30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db9871f3-a64b-48d3-bf40-844bcfce9083",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8875adf1-92ec-4da0-a24a-3839ea109d26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6f35015-edb6-49ec-9f1d-c33604728485",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c74c9360-44a5-4305-b711-8668b8f97d27",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c53b71c1-1e88-4c07-93f0-2593ef7193d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "829a659f-cf38-4148-b68e-c1da0d037743",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14a60a75-c2f9-4edb-adc6-7b4d3d63f963"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa3f2af6-c072-4c60-ad19-7998918125bc",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7fb8723-b95c-42e1-9aa7-ad0b9576e7fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f266a19-6662-46b8-bd78-477ee977d730"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6b62e7b-e445-4a7d-a3f4-f06e70ba82af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "308c571f-ab48-40aa-b870-0548d41c7ad2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "737c820a-b378-4cc3-929a-df8b39442087",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dee02e7-c648-45b7-83c9-7cec7fcda664",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "710c706c-dbd6-4260-8295-7ceb8e401967"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9428d89a-3289-4bd4-87ab-fe09c5099d84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e97cf188-5a5d-4cf9-b4dd-fe7c55bb3b9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "912b0a71-bf94-440c-8856-bb89a082cff5",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77521290-9e9a-4940-9196-49737f446111",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c30300cd-2dff-4517-8c48-14acb0c827a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d367e1c7-5209-4276-adae-9ca5958a10be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7553cde-2fdd-48d4-b29c-9fab494abb19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6ce6e7a-4f0b-4386-8e1d-ea5c2b123e2c",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "340c3a67-99e5-414e-a2ad-ff6ac45dba22",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e31491f-a2c8-4704-941c-2f0ceb8e7f7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eff4017f-ac9e-4344-83b6-66129afc0c78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c21fc61-60be-4b7f-ae44-cc7159475ce2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac096d2d-0424-4216-8866-7b7c3166262c",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f90cedc3-115b-4c17-bad7-bb4dc1447f7d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf5448fe-a09d-4625-a5b0-5735bdf7f986"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70380e6f-b6d0-4fd7-97b1-e1b45b47679d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a93b6286-0247-4573-b212-008a6ebbaa2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5b4ea87-f9b5-436e-a757-3daaeac03983",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "456fffdc-6460-4982-9681-833c97fdb64d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c696975a-f532-4d3c-93e1-5f65267335e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8a90b7a-eb30-4ce8-a663-32bdd7f651b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71170042-2206-4312-aa93-38a3b83cbf85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36b38c2b-a744-4b21-8731-94256da484ac",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2f86212-698b-412e-9b42-ee2001d2c52f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c61c75c-b48a-4055-a6b3-12b7c9f3926c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f65131e5-6d3e-4fae-bc7f-d272343fe753",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07675629-934c-42a9-aa2c-8b6f8fd5bf49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49542bb9-77af-429f-92d5-99bd30dcd633",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cbcee34-e0b5-40b8-9bc4-0f6ac8fc484e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8bcaea7a-c8ad-4407-ba78-dd0ed81d7748"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "509f158e-0dfb-4110-90d2-5ae1268872e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11cfc59c-8100-40a3-8381-b1ebbb3557c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "792261ae-d25e-4d60-86e4-b22c2feec2c5",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a887045-858f-44a3-bb8a-e22351b80057",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38f73844-f91f-44ab-8981-2295184303b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b11a020-ba8f-44e1-820e-baad6b8e581c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bdb0809-c5ca-4d11-8ee7-db9a082a977e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb395a23-2539-4bc7-980e-2c950f2bcd79",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51c36b85-bd1e-4860-b0de-d1a769bf4088",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b721c15-b434-4777-975d-2aad81d1de38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7170ab72-3bac-49fd-87b6-81d0fe9263f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "736e6c65-393a-49ad-85a6-d5c8b945be03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af730898-e400-4a25-b8f1-20f6a201cd7d",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b00b4312-886c-4df9-8fed-76f7164b2942",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d8677710-6514-4419-b276-73ff9b008d2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "801d6ceb-33ac-4f27-a234-6d6c943857da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bae32f03-348b-48b8-8c24-1bf78121b130"
                        }
                      }
                    ]
                  },
                  {
                    "id": "840330f7-eba8-4f65-89f4-975b93279e9c",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9663a0df-c0f0-4b90-909a-17c19a54cbc3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bdba399e-b851-437b-9b98-0649829778cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4517a3b3-8fe9-4af1-93d7-f7867683ac39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4c38cb1-e070-45ce-b404-72ca93b85a9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a89d9fcb-1db3-4ed3-bbe9-2b49c5294a0b",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6abb8041-58f1-47bc-b863-bfbe4edd3d17",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed1bc6bc-cc9c-4b57-a4d4-b3aca4f0d10f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34432399-8d6b-46b8-a881-853631715124",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a27e69a1-fd37-4935-aea1-92a13326be8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1bd9436-fb56-480d-881a-8677008e4a69",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "163e98b7-fe0c-45e3-8306-c19a8e94b929",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e538a385-951e-4641-b560-715835d58db7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42559959-5862-4885-a2f8-87752ed5a76f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "476da731-b435-4aab-9898-3574f2984c7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2c5f26d-a99d-441d-94a8-7f3df7f8c85f",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ded70352-e535-466c-a6c5-b8db01df2658",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "21f962ea-b180-41a6-8d66-8d9a8ea74a24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1581cd89-d5f8-4ee6-83eb-cae79b099297",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9a18e3d-bfba-4ea8-99bb-f41800731506"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efd915d9-42e9-4b8f-9f93-c64815575103",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98e8484f-801e-4771-87e6-6046da5bef6c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "26d5529a-7c3b-4f86-ac8a-7c7a693d8b66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a5b9221-dca7-433f-ab92-f62b3ef145ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62ee5b66-5f40-48b0-a46d-2e87f98c7151"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c43d4a17-cd8a-4096-807f-7af8ecddecf6",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e608cfc-2fa9-4590-ba4a-26d29799abc7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b10e8aec-fde5-47af-bb1a-410f556ff803"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d8e35dc-0b16-4925-bb35-8c23817dd944",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7875b00d-0afb-478b-80c4-65aabdf3605f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05a51b91-e3c3-47bb-8e04-bb3f29e41623",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d216e48f-30d3-4480-b5b7-4234ecf889f7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d3ae0cad-2810-4785-b6b7-ff9a7c71c48e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffef0884-8c45-48b8-a3a6-62e05a00c359",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a54e5d09-4ac9-4d15-87ef-f152b3318236"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99200944-ea35-4974-b58e-edd2fa98ff1b",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bd42506-b34c-4fc8-9bed-6a2b157bbdef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ccf02920-dabb-475b-b611-9a0af7818fb8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8eb571c-379b-480b-a2fd-b5589eb7b739",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9043a1e2-d6a8-4af4-9bf3-8f2cb7035b4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93b1cbe0-da49-4e5a-8959-ceeca08f3ab4",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b18b0610-5c97-42c8-8f16-14c8476782ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "08d0aaf8-c3ea-4979-bd36-6d8518e7c026"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb95167d-888d-4283-8e28-b15c26a0f59c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bc4a7bb-7bd6-4c86-a969-f2ea39cb8fdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e340992e-7aa6-49ea-9fbb-7f2c8d548517",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3fb3ee3-a744-41d7-9a6a-bea7090cf9e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a6891a1a-5e7f-484b-a855-3887af4b3e75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d8db8fc-6d36-47de-ae72-e9fe9e197d7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ce3ed9c-f4dd-46db-abc8-c384b9536805"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ad06721-0a37-4d59-a424-53a5197b3eee",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04f0e51c-a281-4dba-aa3b-3bf14caf97fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3cbb34c1-0ad0-457d-a2b2-d46a6b992732"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81f5597f-4c94-4a91-9edc-faa2df692e9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62b05449-6ecf-485a-9d89-f799b0ea6cd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a60f1a08-ca54-4a41-8a9e-06fc381e83d9",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8205184-d55d-436e-9499-df99e2295c8d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9dda620d-730a-4bf1-982d-93670c9ccaf0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f2bd000-9b25-47aa-b757-00cbbed675a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b318a2a-ef49-4046-b55e-cbdff4be5294"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4fbfa13-d25b-4d8d-a315-621bd7f6e7c4",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99c38508-8cb9-4d1b-9ad3-4ecf7326ffde",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "86523b71-d384-4be3-a2d3-a8800345dc31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11454a36-1cd6-40e5-9c5d-91442c5067c7",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "123b33d9-7014-40f9-8d7f-153bc0d960a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c20003ad-b54f-4a6b-a9dd-135d541674ad",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39b1ba3d-7739-428c-9b93-ce972f2809cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7903deda-814a-499f-85cf-a4e663b2c6c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fddff618-96ed-4a5d-9ea6-485a2a0e4ad8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63633a65-989a-4f1b-8178-8f0ed5aab72d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "812df6ea-473f-49c4-92ad-42b468373942",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09d5cb3e-ee69-48e9-805e-9509afee593b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c8016ec-7eaa-4d0b-a450-8d0bd38c25c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "beca0703-14cf-4930-8605-c78c8fd006ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3991895-659a-4a57-980c-b87d72af072c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d1dd04b-ab70-4e99-8baa-c9dee9babf7e",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d7b632e-e32b-4c49-8630-2ba6cfbffad0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3af51ade-73d6-47c7-bfc9-6230742c8450"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1ff9f36-946b-40cf-a46e-e042480626fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2e59dfb-9743-4810-8416-3d11f65251e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b47dfa22-77f2-4bee-9767-d4dd3531f35d",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e847f98-3dc0-469c-8d2e-7403b05bd164",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "61af1b29-d3ae-4bee-9972-797ad26f4eea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b87e9143-94fe-4555-b2e7-0da9bc066e3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd24f7ed-2115-47fa-a11c-9d2bb3094766"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94138fbb-5f89-405b-b45b-0ba4907a650e",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43116381-58a3-486d-8eaf-dd7d0c1d1fef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b626384-bbca-4405-8f0b-170062bfb521"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e1233ee-3276-4869-986d-136ed19cba28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbcafcaf-9b5d-49d2-a801-2079e0795c2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c86e589-e8d4-45dd-abce-b1aac5e67286",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "383c5102-9a30-4f86-83e5-2e44d624c7cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c5d991a2-309e-49fd-94a7-bad597e546b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7755a075-2895-486a-a6ad-58d58dd8fab1",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a3634b1-b435-4c78-ac48-35dcd882bcf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4390f0f2-f88d-4732-bb52-b79d816b9dd5",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86564e66-feb4-4221-a6b9-9ff94d5c60e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2961dd31-0ef1-4681-a950-88f20e5d627d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "137dd386-9793-49b8-913e-c1af1ac94f35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aab8215d-c64d-44a8-bd4c-f4404e43d87c"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "56d1425b-9e7c-4f14-94e0-3c32ea8fa111",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3359585a-cd74-41f2-932c-f93918bd54d9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e33bf308-f473-40b1-9b0b-a388957152a6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "aa04b1a2-b12e-4a58-97ca-0c23ebc5dcc4"
                    }
                  }
                ]
              },
              {
                "id": "5146a993-53b7-490c-86f2-fe318292c97b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ec573768-4a73-4716-aa4e-4b1911a9ea58",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19dae0e5-e388-46d5-ab3f-0ea41a6d38f3",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "00c371a7-c4c7-4846-a1d1-77addc6ce2dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d555caf-e18d-40a4-8ef6-51bfd8e30ff9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "32572be3-18b4-48dc-86de-020a648d1e9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6e9c71a-7821-41e5-9834-5db94ea8aa1d",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79216774-b877-4616-b805-6365030e2a89",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "771d3d2a-8e3f-45d5-af69-5d6ee8643168"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89dc2596-a830-404f-84f2-de63e269bed5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8ff866ca-b79c-488e-9164-7bc3952a64af"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "08578244-8c76-41d3-84c9-c88bc56fb5e8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d76eaa54-12c3-4557-a3af-4e69dcf33faf"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "40a97b5e-c9da-4249-b8e5-63c99b0a0544",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a19676aa-66e2-451f-8cb3-7f1e7c8d544e"
                    }
                  }
                ]
              },
              {
                "id": "1c3d36f8-e55d-4953-b4b9-ab56547fb3c6",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "e86f1f56-c99f-440f-8fc2-354389cf0a2c",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f04cff1-f83a-4898-99ab-27cf67c39930",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "67126d17-c679-4bf7-b7f1-9d7ed35c47f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "376bdee6-70a1-488b-a8c6-bd60988e408d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06bd4948-618e-4b87-a2a8-2143985cd191"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "f50cb64c-f926-4be7-b431-02867e181bef",
            "name": "Positive Testing",
            "item": [
              {
                "id": "273afb9d-d747-4acd-bec4-24dfced268c6",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "89e37e00-a2ed-4f08-9fd3-b44a774c9273",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "2a99d514-b807-4105-9cf0-8c064bb3fc60"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c83eb732-f936-4859-acdc-760995cc2392",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "92ac9b0d-1963-45fd-9f5a-8f5db57a5573"
                    }
                  }
                ]
              },
              {
                "id": "c0fcaf33-dec1-4545-adbb-667e608cde32",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "86029184-a17c-48ec-9c5d-f7478c0bb939",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "e57ed570-5789-422b-865c-fa973641de30"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e632bcad-1cd4-444e-98aa-5b5c012df5c7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f7ebe66e-0958-4171-b30d-038750a3ec8a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "30c184c7-3b94-49a0-b50c-84c831217a83",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "64150a3e-b4f6-437a-aea2-aa4d66da3ccb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "003bed57-184c-4915-b9bb-947cb3de92c3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "19fcf2cb-1ee4-4c21-b906-c67750728e1a"
            }
          }
        ]
      },
      {
        "id": "85a10342-7352-4265-a989-0d1d9ed21daa",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "0e210b8d-8b79-4d04-9631-10cdfdbc2f8b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fa6417ce-5baa-4043-ab21-57e8384a8643",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "94c9d251-f394-47f9-9906-c56e5fed8dd3",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d14cd188-a35b-4b8b-a2b5-334aeb86d9bf",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "919da41d-c3ee-4932-ab6f-bcae46b20b68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b2e9503-0c4b-44ca-9c1d-9c048ed0271c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0b1cd4e6-b4e1-47e5-aad4-83fce719fe4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8383a72b-b4a1-4936-941e-5a0a57716ab1",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39bec5d0-9899-47ee-85c9-94cfc4f82054",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "46118878-b08a-4c06-a7ef-8070b0869286"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cad4b8f4-9542-421a-97e9-6b4e0208d7ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c16de99f-38a0-4ec2-b392-d5c2e1e43498"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "325f30ee-02ef-457c-8175-c2456d855623",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1fa7a0cf-cd22-4bf3-8eff-1ecf51b3eee3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5dfed985-12f8-4995-925b-30a74c50c845",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7de35f63-d293-427e-8f13-29c862fc7b4f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "01f490ca-aa04-4b0c-94c3-4e6c680b1c46",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "df48a8d7-1721-4b79-92eb-485975b8e527"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cc867389-05ea-4d50-a359-515bab722812",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "01443feb-556e-48dc-a9fa-77f39047818b"
            }
          }
        ]
      },
      {
        "id": "6b026d1d-de2b-417e-8725-0981259cc7e5",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "e4f55ee9-5c52-4d9d-b155-770a24d2af2b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1104473f-8b0f-47e1-ba49-a0377ee369b9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0659f4aa-1c53-4931-abd6-88c004df54f4",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67181bc4-6537-4e62-8923-e9c2ab63c955",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bfd1fac8-7312-4d3d-aafa-a9b6825654c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9219770-08b0-4bd8-bd7f-f86950ea00fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "54f1e2b0-b244-41ca-ab66-543d41bf2bc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c05dd565-f184-4db0-aa85-4c1138701219",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5014abbc-fd44-4e6c-a2ea-d452cf395171",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "9e0eeedf-e85c-462c-8c67-a568ea9579ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13757215-b1c8-4898-971d-4539f8210761",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0a843d70-99b0-4f1b-8287-d7dc4b1753a6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f1730dee-a81c-4771-9b7c-0be78408020b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b35df99e-2686-4367-b77b-26c6f1490415"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "84a53ee9-5b0e-4dec-9f25-dcd4c15fc81d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "afb6e58a-9503-44c5-b2f4-78dd1f89cdae"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bd0118c5-3bb3-4a80-8a80-96142bc6a4ee",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "1d6e70ce-9edb-44fb-922a-22f6d8961740"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "38933c34-ec7b-4bc1-b96a-ac9bac7a6610",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "465a335f-7c67-42a7-8c13-b5811e84b95d"
            }
          }
        ]
      },
      {
        "id": "aaabbf3c-67d6-4242-803f-6d30aad179ca",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "c32a9c2d-4c56-4e45-a48e-4f3e8b087486",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6ec9a698-7872-47e8-b834-777e564b96aa",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c260362d-2bab-4f43-8314-fc5426183e2d",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bef3dd2e-4b20-4f3a-9e8f-e56a62f85c1c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7fc0e97b-96ce-4753-86a4-0b5ca326aa00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ac02ba1-67d9-4630-92a7-ec06854cf774",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "930bd2fa-b98e-4be4-8cd9-f8bb439f8c27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83f448a6-c1a8-4c45-b81c-9a7cc9052069",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2551d6b3-f749-4f22-ae37-12f172bab9fe",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "bc5fcf28-9282-4588-9711-95058e7aef38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bb12961-2edc-484d-b768-da6c34c57d2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6af7aca2-b7c4-4923-af73-6a22f1f6bd34"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5170ff42-f024-4f26-b1a2-1f7e0181f075",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "711eb199-6804-4af8-bc63-56c20c9ffc93"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3d2bd44e-c6a3-4801-8506-1ba4d65c74cf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "58e3da1e-2c1a-45be-9b33-787373b47b51"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "20a7e449-3526-4ce4-8d70-7ee196f449e7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "65184eb0-e65a-443a-be3c-8d274a6b1339"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6dfb2d5d-e7d2-480c-aa55-4530511b0e6b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6ba602d4-1339-4582-9d1a-e190da37f282"
            }
          }
        ]
      },
      {
        "id": "163d3966-91c1-4f5a-b6bd-17b31bc3339b",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "156bf99c-716c-4b1f-871a-c357de4632f2",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a5d1e9f4-e894-425e-8cfb-0448b4a318c7",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "142631b5-3010-451b-998c-64d32fcc9fb3",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a98648be-2646-4736-86a4-47c594bbcdd8",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d42511ae-de59-41ea-9aae-e3db232a7555",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1901,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 259,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 511,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 955,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 946,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 17.667953667953675,
      "responseMin": 5,
      "responseMax": 322,
      "responseSd": 37.53523153301759,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1678494966665,
      "completed": 1678494981868
    },
    "executions": [
      {
        "id": "90b64e4c-71b7-42c8-a1e7-5504235256c7",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "0fd1b445-b0d5-4003-8565-0893dd2fb9c4",
          "httpRequestId": "d387fe9d-6e14-461e-a08d-f028cf53d58a"
        },
        "item": {
          "id": "90b64e4c-71b7-42c8-a1e7-5504235256c7",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "52c82ff8-ae10-4001-ac65-76f6d4cd2283",
          "status": "OK",
          "code": 200,
          "responseTime": 55,
          "responseSize": 0
        }
      },
      {
        "id": "f91f9486-953e-4646-8891-10d3d52b25b3",
        "cursor": {
          "ref": "e1e2375f-50b1-4cba-9c5c-56eb4ba42107",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "b16a0e25-11ca-478a-89bc-c68c625661cc"
        },
        "item": {
          "id": "f91f9486-953e-4646-8891-10d3d52b25b3",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "cfc9f831-78fa-4811-87dd-05c23db7e206",
          "status": "OK",
          "code": 200,
          "responseTime": 5,
          "responseSize": 0
        }
      },
      {
        "id": "e454a969-24cb-4917-a3b5-af4e46c7b2cb",
        "cursor": {
          "ref": "d47ca121-916a-45ea-8901-baad51e9dd21",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "72229588-c75a-4a53-a009-eac7a0e55746"
        },
        "item": {
          "id": "e454a969-24cb-4917-a3b5-af4e46c7b2cb",
          "name": "did_json"
        },
        "response": {
          "id": "8c755805-244a-4b6e-8012-c71d0993587c",
          "status": "OK",
          "code": 200,
          "responseTime": 46,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5882406-5d9a-4d79-999a-9a41b461f766",
        "cursor": {
          "ref": "ae519841-6c85-41bd-bacc-83b97fe9dc48",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "96b85ebb-dcbe-4956-ad20-36cdaaa0d793"
        },
        "item": {
          "id": "e5882406-5d9a-4d79-999a-9a41b461f766",
          "name": "did:invalid"
        },
        "response": {
          "id": "37a39044-6768-41e5-ae72-8024f815db22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5882406-5d9a-4d79-999a-9a41b461f766",
        "cursor": {
          "ref": "ae519841-6c85-41bd-bacc-83b97fe9dc48",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "96b85ebb-dcbe-4956-ad20-36cdaaa0d793"
        },
        "item": {
          "id": "e5882406-5d9a-4d79-999a-9a41b461f766",
          "name": "did:invalid"
        },
        "response": {
          "id": "37a39044-6768-41e5-ae72-8024f815db22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d98c404-ae57-4573-a66b-d71c92dac2a9",
        "cursor": {
          "ref": "dcaedd18-6e82-499a-9879-77791e0b1994",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "22525e9e-b62c-4b16-85f2-469a430c6bbb"
        },
        "item": {
          "id": "0d98c404-ae57-4573-a66b-d71c92dac2a9",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "9c9930c1-8336-4cf7-b53d-41a74e66a1f0",
          "status": "Not Found",
          "code": 404,
          "responseTime": 51,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5d565e9-3a01-498f-b0a1-8951b4d51a58",
        "cursor": {
          "ref": "0ef14dda-3a97-4fc3-9dc3-8025b14a9dfd",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "f4fce575-83b2-4b6a-a1c2-a1a596c2eefa"
        },
        "item": {
          "id": "a5d565e9-3a01-498f-b0a1-8951b4d51a58",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "7a8e96d5-03d2-4dd6-8a5c-944c3519a1ce",
          "status": "Not Found",
          "code": 404,
          "responseTime": 10,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3b1442c-5650-4816-b9b4-2eec835a0f4e",
        "cursor": {
          "ref": "0c6917ec-e32c-44f9-aba2-509aef37fd30",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "6f519001-3195-4c7b-9898-dc15ad53c3fa"
        },
        "item": {
          "id": "c3b1442c-5650-4816-b9b4-2eec835a0f4e",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "01c736d1-b33c-4fe3-84dc-b094bfa16b48",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 10,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5da87022-9aa8-4746-bd12-c66dc7b640c0",
        "cursor": {
          "ref": "73f98038-f13a-499e-ace9-c0d59a4face7",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "f2628723-5c28-40ab-a796-489634ad7c32"
        },
        "item": {
          "id": "5da87022-9aa8-4746-bd12-c66dc7b640c0",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "0eb8c15c-aaf9-4e5f-bef8-ff6ae45b5b1c",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 9,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5da87022-9aa8-4746-bd12-c66dc7b640c0",
        "cursor": {
          "ref": "73f98038-f13a-499e-ace9-c0d59a4face7",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "f2628723-5c28-40ab-a796-489634ad7c32"
        },
        "item": {
          "id": "5da87022-9aa8-4746-bd12-c66dc7b640c0",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "0eb8c15c-aaf9-4e5f-bef8-ff6ae45b5b1c",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 9,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cca8c951-96a2-4390-8813-016dcb893fe1",
        "cursor": {
          "ref": "3c772dd3-5e5b-4843-9d63-c27b08889273",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "b43339a1-ee38-4479-8664-315f01563f7f"
        },
        "item": {
          "id": "cca8c951-96a2-4390-8813-016dcb893fe1",
          "name": "identifiers"
        },
        "response": {
          "id": "f667e6d2-33b8-4101-9cba-7ce12742b6eb",
          "status": "OK",
          "code": 200,
          "responseTime": 51,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2fc7cb7-7003-4d7e-ae29-0c85459b57a8",
        "cursor": {
          "ref": "1d2efc07-acc0-47df-9db8-02cf3e083b3f",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "6e831b6e-9c43-4d15-a83b-586294597962"
        },
        "item": {
          "id": "e2fc7cb7-7003-4d7e-ae29-0c85459b57a8",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "28efe260-a0df-4b48-a703-9d59d1f074c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2fc7cb7-7003-4d7e-ae29-0c85459b57a8",
        "cursor": {
          "ref": "1d2efc07-acc0-47df-9db8-02cf3e083b3f",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "6e831b6e-9c43-4d15-a83b-586294597962"
        },
        "item": {
          "id": "e2fc7cb7-7003-4d7e-ae29-0c85459b57a8",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "28efe260-a0df-4b48-a703-9d59d1f074c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49461dda-1ca1-41f5-9f1e-6528db4f17e5",
        "cursor": {
          "ref": "1f3c698e-b9ee-4e8b-badc-116ecab4e055",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "b1c3526a-face-4a6d-b4f2-03f05716354e"
        },
        "item": {
          "id": "49461dda-1ca1-41f5-9f1e-6528db4f17e5",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "a90edbbd-cf56-4710-89fc-0278708a7444",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b9f83e4-853d-4bab-afef-f1bff99f7c28",
        "cursor": {
          "ref": "f5f81d6d-29f2-4ca2-9a92-f190dab49ab7",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "cc858620-76e0-48a4-bed3-f3c88f5acdbd"
        },
        "item": {
          "id": "4b9f83e4-853d-4bab-afef-f1bff99f7c28",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "ca9fb9b2-e88b-42fc-9dc5-543766af43c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0434c21c-61d8-4c3f-aa16-7cf77e76d166",
        "cursor": {
          "ref": "c0804158-62c3-4df5-b810-cfe424a42a41",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "f7aa8190-ac92-4718-bbae-395c5fc6aa8e"
        },
        "item": {
          "id": "0434c21c-61d8-4c3f-aa16-7cf77e76d166",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "9db08668-3bf2-49c7-a5fd-d6e87a77b4a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1145501e-c385-4908-a80c-988047148a3c",
        "cursor": {
          "ref": "899bf8c4-d1b0-421d-a77d-46134c3376ec",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "6df976ee-ae06-42af-b12d-210b6a14faac"
        },
        "item": {
          "id": "1145501e-c385-4908-a80c-988047148a3c",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "281dc007-b92b-47c2-b5a0-b3d31409cd5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e123f15-38a1-426f-bbbe-b38408a3d535",
        "cursor": {
          "ref": "74c1364a-c683-43dd-98cc-24c116990934",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "48363129-49ef-4a50-9a28-da266e245a92"
        },
        "item": {
          "id": "9e123f15-38a1-426f-bbbe-b38408a3d535",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "5f384d57-5b92-4aeb-900e-27667c3d4e7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9d1eef7-5604-47b6-bb8a-92f496c87778",
        "cursor": {
          "ref": "9b790f13-b005-4a9b-aac9-4eb47278fef9",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "5b23c501-a16c-4a42-81fd-73b37012b233"
        },
        "item": {
          "id": "d9d1eef7-5604-47b6-bb8a-92f496c87778",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "4b838cfb-7f36-4107-b1d0-b99dafbdadfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0df724f-7fa6-405c-b74f-65e1f12c7d5b",
        "cursor": {
          "ref": "b31ccb49-1e16-4a5e-8458-2d10d0f495d0",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "cf078903-7710-4ab7-8113-870ea1a047bc"
        },
        "item": {
          "id": "e0df724f-7fa6-405c-b74f-65e1f12c7d5b",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "b6f42fee-aaac-48cd-8fd8-2eb95f148bb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4eb8aae-a2ec-4a8f-a86b-a5c99931f8d6",
        "cursor": {
          "ref": "cf41b9a9-4476-483c-aae4-0a512ad762e2",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "29c016e2-0fc7-4752-811f-f6e6b48e4243"
        },
        "item": {
          "id": "c4eb8aae-a2ec-4a8f-a86b-a5c99931f8d6",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "162a9596-20bf-4366-9b76-b80fa75afd69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69b06439-f920-4db0-bcaf-9627a0e2c01a",
        "cursor": {
          "ref": "01f14688-e520-4c2d-a0de-29a20f843c05",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "cf5b5d7d-6bf0-4331-a9ba-a70de89c78ca"
        },
        "item": {
          "id": "69b06439-f920-4db0-bcaf-9627a0e2c01a",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "0329932f-4639-4fcd-83fa-094c0a9fed3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "240a1907-64aa-4fde-9c50-b8b37e0dfbca",
        "cursor": {
          "ref": "4473921c-f2f8-4485-87ed-28ecfff1e6e5",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "f2ee4b60-524e-4d55-a298-5919aa2447fc"
        },
        "item": {
          "id": "240a1907-64aa-4fde-9c50-b8b37e0dfbca",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "3a6277e5-5942-4b55-9425-cc22e120d607",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05eb7171-5e47-4f5a-8d01-f0995829ff24",
        "cursor": {
          "ref": "1ce86ad1-6f32-4921-8a49-65f5ae55fdc2",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "4851f769-40c6-4643-aafe-ee2a20f0cb59"
        },
        "item": {
          "id": "05eb7171-5e47-4f5a-8d01-f0995829ff24",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "74626ae6-fc6e-4cbb-822c-16e20b99adc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39912812-7b8b-4fbe-9ace-f639301de303",
        "cursor": {
          "ref": "530fd64a-cf0c-4690-b5af-acffa14d76aa",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "033fe3ae-2325-4f07-bd81-0f9645371dc2"
        },
        "item": {
          "id": "39912812-7b8b-4fbe-9ace-f639301de303",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "c193bb5f-d463-435f-9eac-78848bdf7925",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f887f07-5b22-46ff-badb-fae1b5830212",
        "cursor": {
          "ref": "1d3831db-65e9-41c2-a211-05b9358d6fc9",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "9763ae30-b2f7-4278-829a-860059ddf9a0"
        },
        "item": {
          "id": "3f887f07-5b22-46ff-badb-fae1b5830212",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "2bb314fc-1528-45c3-9bc7-ab48db2c61e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "186f4422-efcf-4c76-9162-23d7d45e5e6e",
        "cursor": {
          "ref": "b42a78dd-55e1-4f3a-ae42-7fc1e279b0a8",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "41b51b67-b30c-4af7-af8f-abf490b1958c"
        },
        "item": {
          "id": "186f4422-efcf-4c76-9162-23d7d45e5e6e",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "b5cd3da9-855b-431e-ac0e-0e928712da15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffa3259c-182f-4b55-bad4-2b8038d4f9fd",
        "cursor": {
          "ref": "0a738726-d4fd-48cb-9e9f-281d5b667880",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "2dd07079-38d7-452b-a4e5-5c28c9541aa4"
        },
        "item": {
          "id": "ffa3259c-182f-4b55-bad4-2b8038d4f9fd",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "76e41b26-9972-4f6b-b83b-d0e04ae4f3af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c16209d-787f-4e05-adbf-4884c81ce6a2",
        "cursor": {
          "ref": "dfbbdd02-4f58-4cf4-9e73-d3426a195f1d",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "524368c6-9482-419e-8343-59f5222f7a30"
        },
        "item": {
          "id": "0c16209d-787f-4e05-adbf-4884c81ce6a2",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "1aa0438c-c6e3-4888-bb40-e5a3da1592e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0888213c-6169-4da4-acd5-8a7dd49e6272",
        "cursor": {
          "ref": "9b690f4a-7ac1-4469-a7af-60fa5db92442",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "03f2a825-2e8c-480d-9fd0-14b148e12bd3"
        },
        "item": {
          "id": "0888213c-6169-4da4-acd5-8a7dd49e6272",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "ee77948f-f5b8-40e2-9856-6ca1195825d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7d8fd64-d660-41d8-b348-2ec1263a8a4b",
        "cursor": {
          "ref": "1f1df91e-93dd-4508-bacb-51e3bb9570a8",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "f77c8d36-6de3-40dd-a861-d5d666703dd2"
        },
        "item": {
          "id": "a7d8fd64-d660-41d8-b348-2ec1263a8a4b",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "51ada20f-d9be-4334-8778-3c99a077f8e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06acd26c-cca2-4a39-8528-16a8cabc8b83",
        "cursor": {
          "ref": "6fb97516-636a-4904-bc44-e4a97502d13a",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "5b1f40da-ed70-4fdd-bf65-49802a70ff43"
        },
        "item": {
          "id": "06acd26c-cca2-4a39-8528-16a8cabc8b83",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "ba0e8e87-e7d4-4a2f-a530-f299a558c8fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c12a6a25-6f62-4799-b5f2-12ff03aea904",
        "cursor": {
          "ref": "bdfd4a4d-52a6-48e5-8ebd-68d2b6a8fe23",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "f29f2037-4bf4-49a3-93b5-403e3ff24850"
        },
        "item": {
          "id": "c12a6a25-6f62-4799-b5f2-12ff03aea904",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "542a4238-fdaa-4db6-b645-cc84fde412ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87b5355e-3066-434f-9246-052818ced494",
        "cursor": {
          "ref": "e127a35f-152f-4b7b-a97a-2bb1dfa88651",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "b0d41d24-daad-4518-83de-677a50ad0658"
        },
        "item": {
          "id": "87b5355e-3066-434f-9246-052818ced494",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "450bf26a-af76-4732-a890-fd216fb59166",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "596a9b29-4406-4945-ab03-e7093809087b",
        "cursor": {
          "ref": "aea517b7-703a-4a0c-95f2-6bdfc91b7fce",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "51fa2e68-1649-4df9-af81-818ad8d43c8a"
        },
        "item": {
          "id": "596a9b29-4406-4945-ab03-e7093809087b",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "c9badc0b-c6b3-440f-a20e-5819a59c92d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74172e94-6276-47ac-9882-3b06e2cc6cff",
        "cursor": {
          "ref": "de58a3ff-e1df-4a6e-a4d4-aa9363240a6a",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "36899bf4-2e96-403e-bcc2-4ba4436a2ce5"
        },
        "item": {
          "id": "74172e94-6276-47ac-9882-3b06e2cc6cff",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "623e8231-1e38-4e15-8c40-ddef8990f756",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6efd0d24-6de0-41c2-89ec-6c356c4cf21c",
        "cursor": {
          "ref": "cc0867ae-d563-43e4-8bf6-c5aa882aa3b8",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "b25b0a87-c3e7-47f6-9aa6-e5c05d8adff7"
        },
        "item": {
          "id": "6efd0d24-6de0-41c2-89ec-6c356c4cf21c",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "a8444f80-3400-41e0-8bbb-c8db5ae964f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a07e10ad-4085-4084-bb9a-f9bc6d4738c8",
        "cursor": {
          "ref": "4d3241ef-d136-4327-ade2-863ccff3a727",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "5267b474-aa0d-4651-ae6c-81951959efbe"
        },
        "item": {
          "id": "a07e10ad-4085-4084-bb9a-f9bc6d4738c8",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "0491330b-2e22-4133-bd3c-15dc6c26196d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d79e302-b808-4af1-a3e6-7b56a5ead521",
        "cursor": {
          "ref": "cd313d47-0190-4e28-a4f3-44f95095aa01",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "e0195445-b8f1-4e72-a7ed-2a72a0f15f82"
        },
        "item": {
          "id": "9d79e302-b808-4af1-a3e6-7b56a5ead521",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "a458d511-e533-4b05-8ac2-fc4adce0598b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee568d80-890a-4b7c-87a3-da1af6c90f0e",
        "cursor": {
          "ref": "f28abe4d-3e65-4794-8299-38d76fa4ba6b",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "2fe7e44f-0cfe-453e-8a67-a1e4528b431c"
        },
        "item": {
          "id": "ee568d80-890a-4b7c-87a3-da1af6c90f0e",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "cbab95e1-bdc1-4eea-b243-62c30d8f2697",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5cd4cbc-c110-4433-b74f-ea480f3c382a",
        "cursor": {
          "ref": "46ba7649-ecb7-441b-9dae-3afb6fc06bcf",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "19f6ba81-5c82-4004-a7c3-5c8e52b383b8"
        },
        "item": {
          "id": "f5cd4cbc-c110-4433-b74f-ea480f3c382a",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "327431a1-509e-49bf-83fd-6814e0bd8e0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3b13b44-611d-41ed-a54b-6e0cdab65c62",
        "cursor": {
          "ref": "0d1207fa-3710-4d46-a6ea-0194d77e6038",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "338e4e39-49b4-485f-873e-db8bf341e61f"
        },
        "item": {
          "id": "c3b13b44-611d-41ed-a54b-6e0cdab65c62",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "76cec404-2982-45f2-abe3-c8406daa5a16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6983d44-28c8-4dee-92a7-899360fd6508",
        "cursor": {
          "ref": "6ca9c565-32d5-459e-a21e-6e8ee15f5558",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "4540c16f-ab02-4401-8590-ab8c77fd4186"
        },
        "item": {
          "id": "f6983d44-28c8-4dee-92a7-899360fd6508",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "b7c54408-fa88-47ae-9cdc-0128cfb014bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d70b5c3-b6b1-413d-a865-79838bcc8557",
        "cursor": {
          "ref": "818610dc-2680-46b3-b386-f374717b6377",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "f18068bf-4bb6-491f-b45f-00cad66764d7"
        },
        "item": {
          "id": "4d70b5c3-b6b1-413d-a865-79838bcc8557",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "606fc65e-6080-4e34-bff2-a45769dfcf26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b49cbc3-f49a-4d70-b415-b34a361d138b",
        "cursor": {
          "ref": "b96a809d-4190-4010-8edb-20f04de6e3b7",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "02b5e69a-6c8d-40bd-983f-567e5a7fbad4"
        },
        "item": {
          "id": "8b49cbc3-f49a-4d70-b415-b34a361d138b",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "20f2dd6a-9d50-42cb-ad8e-78beb901a942",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f6d19da-3075-4a45-914a-d59d1faf1873",
        "cursor": {
          "ref": "19c4e7c4-d262-45e1-a5f7-b008050827f3",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "3a26bf2f-f5dd-4354-84a3-5b0c48794496"
        },
        "item": {
          "id": "3f6d19da-3075-4a45-914a-d59d1faf1873",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "3cf1a6e2-1952-44cc-822c-729d894ef6ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0017ddfd-c538-4872-96a5-a8c2572ee035",
        "cursor": {
          "ref": "ffbfbeb7-2072-46b9-a1a3-c7f38fb21bd9",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "1288bfb5-6af6-4ab2-80d5-30e38901afa0"
        },
        "item": {
          "id": "0017ddfd-c538-4872-96a5-a8c2572ee035",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "39c6bae3-6e71-462d-9a1c-f6c053ff397a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4b6ed1f-ccd5-4987-9f70-dca288fc9e4c",
        "cursor": {
          "ref": "332eca30-da83-4bc6-b417-7ad5f99157e8",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "f011a2e6-96e8-492a-8d62-1e460dcbad0f"
        },
        "item": {
          "id": "a4b6ed1f-ccd5-4987-9f70-dca288fc9e4c",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "b45e103f-f49f-4a00-8e39-1ad0e6cd166e",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 18,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00cddfef-7947-4f26-9ab3-5b6117366043",
        "cursor": {
          "ref": "34aaf501-3e88-4ca8-aeb4-89c5743d28d6",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "81434871-d625-4f80-a2d1-0ed65333f18c"
        },
        "item": {
          "id": "00cddfef-7947-4f26-9ab3-5b6117366043",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "8a8b9d44-b157-49c0-8b75-c00d50c46112",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f3c0ec6-8af6-42e3-8231-b2b90684b190",
        "cursor": {
          "ref": "653c278c-df0b-430a-9508-87d9399b0710",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "3ee39aca-3167-4f66-acf7-92c66fdc50ae"
        },
        "item": {
          "id": "4f3c0ec6-8af6-42e3-8231-b2b90684b190",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "d1b9da80-ca59-48e6-b91f-7f52512e4702",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "696db667-71e0-4ad1-ba9f-f37b108bb7b7",
        "cursor": {
          "ref": "bf3f5dfa-de0d-416b-b1da-6b4332a8cdf5",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "29f99dc5-3200-4605-98ec-78cefeb3ba0c"
        },
        "item": {
          "id": "696db667-71e0-4ad1-ba9f-f37b108bb7b7",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "059f8a06-6b35-400c-8cfb-bd08e1225275",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd68ad53-6729-43d6-a5c2-92c5e4af0edb",
        "cursor": {
          "ref": "ff9eaa19-f932-4ffe-acb7-848e723001a8",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "a5f4838b-56d3-4e34-9b9f-6383e8955940"
        },
        "item": {
          "id": "dd68ad53-6729-43d6-a5c2-92c5e4af0edb",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "197d251e-8e12-41fa-a0a0-3e3e8eb70640",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "559c2600-990b-4dfb-86c0-56cb04daf20a",
        "cursor": {
          "ref": "7d0286b9-6bf9-43f4-8b42-165e4b713e15",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "db8968ef-203d-4459-9dbe-4f94323f5e99"
        },
        "item": {
          "id": "559c2600-990b-4dfb-86c0-56cb04daf20a",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "689ffb9b-c4d7-4cfa-a721-0aa764875bc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e5daab1-6a05-4088-b26c-299cbc6d2e83",
        "cursor": {
          "ref": "bea327f2-3072-45b4-9134-3fc0b26664e4",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "0ac219e4-855c-402c-b213-cdedec8dda9c"
        },
        "item": {
          "id": "2e5daab1-6a05-4088-b26c-299cbc6d2e83",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "3fdb68fd-c90e-434d-ac24-43df2e04a173",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99767b3d-d69a-41c2-841f-adda9c8b1d7a",
        "cursor": {
          "ref": "bbc4a406-9400-4bfe-a8ff-3fe2784f49d6",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "feb4cdd3-4d0b-4c4c-9de7-e2b349321ff4"
        },
        "item": {
          "id": "99767b3d-d69a-41c2-841f-adda9c8b1d7a",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "2944e840-2499-4636-9b8e-71a6e1d3b6d3",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 18,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58d6fa28-d4a0-44d1-94fd-bda42f80eecc",
        "cursor": {
          "ref": "b3452d55-1ec3-48d0-bbc9-a514b6c17e13",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "fc8816e5-e351-4962-90d4-daf04a34d855"
        },
        "item": {
          "id": "58d6fa28-d4a0-44d1-94fd-bda42f80eecc",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "31b44486-1178-4140-983e-d3f5af527f01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a6ed8d8-e33f-476c-85d5-017d86fa1ea5",
        "cursor": {
          "ref": "0087e9f9-12f4-41e8-84a5-ceb4a9427583",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "fcc6e8bf-d9c0-4ab9-8395-6af9bebf8b6b"
        },
        "item": {
          "id": "4a6ed8d8-e33f-476c-85d5-017d86fa1ea5",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "8b1d9ae6-3a82-444e-beef-18f11a932dd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa6f9ab8-4929-4b0d-8c9d-8c65f0155099",
        "cursor": {
          "ref": "64be7830-8b77-4c86-a90e-5bf6c949b65c",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "c41b4557-eda0-4d3d-84d5-5d80f23c9509"
        },
        "item": {
          "id": "fa6f9ab8-4929-4b0d-8c9d-8c65f0155099",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "fb224db4-18e2-4bbd-b16c-b29ed7a68d37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff16db2e-dbc2-43f9-ac22-d02e51037740",
        "cursor": {
          "ref": "b298afc0-e9a5-4761-8177-498a42bb29a0",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "5c781b53-6c8b-40fe-8f9b-b812c7919491"
        },
        "item": {
          "id": "ff16db2e-dbc2-43f9-ac22-d02e51037740",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "101706ea-5e6e-4dc8-a914-5fb81f8669cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee4d95c2-ad93-4018-83f7-99e346d10b82",
        "cursor": {
          "ref": "6751d03c-4148-4580-a614-2caa47c497b2",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "020c9fff-2358-4969-a2c7-1e036ac7fc9e"
        },
        "item": {
          "id": "ee4d95c2-ad93-4018-83f7-99e346d10b82",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "ef8af0c3-657c-4e09-843a-2a1e4b6d78d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b87d1a75-8ef9-4cac-8981-9bd84f0e5243",
        "cursor": {
          "ref": "af5c3f45-f695-4cd3-aa37-0934a8808cc9",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "19cc6fae-bb89-4ac1-9174-dcee3c9c7f87"
        },
        "item": {
          "id": "b87d1a75-8ef9-4cac-8981-9bd84f0e5243",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "70750adc-f499-437b-b3a4-b0b8387413a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "498762c0-421e-4043-bbf7-3b29647bd620",
        "cursor": {
          "ref": "5660fb95-ffa2-47d1-897d-d9bb0ece0952",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "14e2067a-6626-450f-a7e2-6769449e5aee"
        },
        "item": {
          "id": "498762c0-421e-4043-bbf7-3b29647bd620",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "809df227-3c5c-40e3-bd6d-1cbcfdf344bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5038c90-4200-422b-9067-6bff049307aa",
        "cursor": {
          "ref": "8f2828a5-3865-41e0-afd1-e4fddc710b47",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "25b1afcd-27be-4dc3-b12e-9c48015a2028"
        },
        "item": {
          "id": "c5038c90-4200-422b-9067-6bff049307aa",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "ab0155fc-f710-4816-b2a6-6b384b9b3c00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "686cfce3-cea7-491e-9264-369e176a631a",
        "cursor": {
          "ref": "ecbe1c23-3945-48fc-a029-73c96e00a6c1",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "0c08f873-f156-41e6-96d8-ee2cc8096732"
        },
        "item": {
          "id": "686cfce3-cea7-491e-9264-369e176a631a",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "9e472fa0-9af4-4cac-9b20-bc36be572416",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf18d9df-b212-4ada-839b-d6392ac28891",
        "cursor": {
          "ref": "db1f015e-7f8e-417c-94e9-49fd190117c7",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "61d27e5d-8f53-4373-b1c6-277a0729f375"
        },
        "item": {
          "id": "bf18d9df-b212-4ada-839b-d6392ac28891",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "d86de55b-699b-4859-beb5-fbb73b7801fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cedcaa3-e4b9-4617-b5fa-0e5b36749bbe",
        "cursor": {
          "ref": "7214d80d-04d9-43d6-8a97-8e612a34b667",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "764828d6-4d5f-4f4a-b72c-db787388acaf"
        },
        "item": {
          "id": "6cedcaa3-e4b9-4617-b5fa-0e5b36749bbe",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "b98db00d-9814-4753-9122-3d2d213dabd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b12e5dec-6687-4c3e-87b4-4581899ecc81",
        "cursor": {
          "ref": "ab49bd40-c12c-4400-bb09-b670fcb1eeed",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "9fc1a1c8-c393-417e-b6fb-4e985499a4d0"
        },
        "item": {
          "id": "b12e5dec-6687-4c3e-87b4-4581899ecc81",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "807ea28c-de61-45bb-875f-9ecae0d5bb84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "077a7e74-56f9-4a67-aa7c-2bab8434f780",
        "cursor": {
          "ref": "f5398fec-dcc2-4e26-9c3f-02ca1ac98e43",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "af97779c-fa8b-41af-a954-3acac00a6428"
        },
        "item": {
          "id": "077a7e74-56f9-4a67-aa7c-2bab8434f780",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "99666175-b61c-404a-9eec-9dddc8bd7f3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a2bd180-b215-418a-82b2-8735050c5398",
        "cursor": {
          "ref": "d0fda090-2cfd-480a-9bbe-f1f2642de712",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "834cb38a-8066-437b-9592-9853ad41ce02"
        },
        "item": {
          "id": "9a2bd180-b215-418a-82b2-8735050c5398",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "ebe40b95-9e11-4e23-bb2c-bbd0f899605f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95633054-edbd-4ab7-a56e-2e7dfdde93c2",
        "cursor": {
          "ref": "ec126ec8-2a9b-4824-a232-9c6f541abf5d",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "abf94bf8-fd20-46c6-9782-278506668ab0"
        },
        "item": {
          "id": "95633054-edbd-4ab7-a56e-2e7dfdde93c2",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "b8d9bfb5-b9e1-48d4-9e18-bb62eea1eb95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6c56878-fff0-4659-a70f-f3f8246def38",
        "cursor": {
          "ref": "c03f3cfd-1a49-4141-b467-f7388ad8a5bd",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "ae7a0857-592f-4460-ad2b-1b79fa558cb8"
        },
        "item": {
          "id": "f6c56878-fff0-4659-a70f-f3f8246def38",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "d5b5a678-b19e-43c7-9b3d-cc4934b85f33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b8291be-8f47-421e-8cb2-8f61baaa1eff",
        "cursor": {
          "ref": "f13b7bee-fb56-415e-af65-4fc995a5efea",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "4e5085f8-bc89-4701-b270-61bf8f56c3b0"
        },
        "item": {
          "id": "2b8291be-8f47-421e-8cb2-8f61baaa1eff",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "6727734a-01e6-4c6b-acad-8f375569f85c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b67a3a2-eb18-4b9e-a6f6-56b04a277888",
        "cursor": {
          "ref": "37548350-1690-45bb-a8a3-07e38a0e67f0",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "08a50164-744e-4405-ab0c-0ba90903d347"
        },
        "item": {
          "id": "4b67a3a2-eb18-4b9e-a6f6-56b04a277888",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "c76f5063-7faf-4b96-8b26-9e8338614016",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2051d41-6f2f-4657-8a7f-f22e6a5ef017",
        "cursor": {
          "ref": "4119fd07-cd26-401b-839d-7ecd1448d3d4",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "a51998e0-aaef-4d83-ac9d-66eb1a3862c2"
        },
        "item": {
          "id": "b2051d41-6f2f-4657-8a7f-f22e6a5ef017",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "6efcfa44-bb4c-4936-93ab-2e8f46f6b94a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0c4de5e-324b-4ebf-b399-42f166a2ce79",
        "cursor": {
          "ref": "07528aa7-c8c3-4df1-88fd-249cf7d85238",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "34c62ad9-d02e-4f35-8431-47f4ad5fa497"
        },
        "item": {
          "id": "c0c4de5e-324b-4ebf-b399-42f166a2ce79",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "9ae80e37-2eb6-44b1-b818-a2f35e0963ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77071033-0d56-4103-8207-0a6039d43e78",
        "cursor": {
          "ref": "e82c9d52-5ed3-4c7b-8129-dff90feb299b",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "662de715-d4f4-4914-8e60-77fa17c8e3ea"
        },
        "item": {
          "id": "77071033-0d56-4103-8207-0a6039d43e78",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "11ccd784-0a3b-46e8-b0c0-3ca6be0395d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9f25044-9262-4173-a965-a43fe71d26f5",
        "cursor": {
          "ref": "f535eae0-283f-4747-8566-38054622f65d",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "b4db3080-1545-4a8e-b76b-9c4f2e6dbc79"
        },
        "item": {
          "id": "b9f25044-9262-4173-a965-a43fe71d26f5",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "aec92dc1-dba7-404b-8005-4cfb1ae5c806",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c67a07c-1f3c-47af-a0c8-ac6e149e7e55",
        "cursor": {
          "ref": "ffb7f84c-42b0-4d4f-9503-805e9e6f0f3b",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "017fb8a3-9db3-4c1d-b752-d4feefeb3c80"
        },
        "item": {
          "id": "6c67a07c-1f3c-47af-a0c8-ac6e149e7e55",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "d35fbf7b-5076-4183-b335-713407e8da0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43aa8a85-42fc-473d-83c7-c305536a7b06",
        "cursor": {
          "ref": "0fd778f3-5f6e-44f6-ae35-edff80578f17",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "931566f6-2b5a-49d7-8c65-f8e26e2c3371"
        },
        "item": {
          "id": "43aa8a85-42fc-473d-83c7-c305536a7b06",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "6f3c3b02-0c06-452d-bd0e-00fcc4da8223",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abfa7333-7b05-4c70-87d8-736ece21f480",
        "cursor": {
          "ref": "0317ddf2-455a-4905-9309-a1d1664fc2ca",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "56211071-255f-4cc0-aee0-4033d0893b3e"
        },
        "item": {
          "id": "abfa7333-7b05-4c70-87d8-736ece21f480",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "ae9604a2-5a6c-48b2-b8b4-787637f6351e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "beae8107-b933-4ba0-842e-25c810ecd397",
        "cursor": {
          "ref": "611baa8e-4c3d-4c81-be2c-207e3caa9fbb",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "2b4fdf2f-3ad0-4213-a5cd-86812d33a773"
        },
        "item": {
          "id": "beae8107-b933-4ba0-842e-25c810ecd397",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "8a5e4f26-e277-43d5-8da0-5127a606c18b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09fe3e57-c4b5-4127-bc1c-320943b93c71",
        "cursor": {
          "ref": "ae16fbf8-0fc7-4cd4-a3d3-94885edf454a",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "f16c8cc6-566d-4aa1-a54a-8fa6171e4031"
        },
        "item": {
          "id": "09fe3e57-c4b5-4127-bc1c-320943b93c71",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "651b83f6-d41c-4ce7-9fc4-63abbaec58bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9843e983-ae44-4295-92e8-aeab7481e938",
        "cursor": {
          "ref": "18498c6e-8bab-4b7e-b4f3-672635ee3e89",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "12b1779a-ea7f-4ed0-85c9-0ccff84b67fd"
        },
        "item": {
          "id": "9843e983-ae44-4295-92e8-aeab7481e938",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "9f29249c-637b-48a5-a0b8-c4add8d4445b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3abc5518-19c7-4279-b54f-ac2aedc9a82f",
        "cursor": {
          "ref": "07102772-0e21-412a-9445-bd34221124d4",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "812d0a34-b5ae-4646-900b-9e9144096bd0"
        },
        "item": {
          "id": "3abc5518-19c7-4279-b54f-ac2aedc9a82f",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "b157296f-da66-4eac-b181-83f86634f68e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "372a723b-5542-4f11-8a75-1208b5658bf7",
        "cursor": {
          "ref": "8f9a3bdc-63ab-47ae-9ac6-263871fbaddb",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "386a982d-199d-4776-8bd2-d45c4762df69"
        },
        "item": {
          "id": "372a723b-5542-4f11-8a75-1208b5658bf7",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "5bf7e213-3043-4014-9883-4a036bed5786",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7625ca00-5133-4f1f-a134-240f0112fb12",
        "cursor": {
          "ref": "a76c8db5-f58c-400a-a863-a4b07a4b78a6",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "08379f07-b775-445d-af53-61da07d334be"
        },
        "item": {
          "id": "7625ca00-5133-4f1f-a134-240f0112fb12",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "5adeec65-0682-42e8-9e9e-4906721f335d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98091852-c197-4c01-b588-5459198167a1",
        "cursor": {
          "ref": "8a6136d6-501c-41b0-a9ba-6edea3b3053b",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "cf6d8fd2-c553-4615-ad5d-ec77f93f54e1"
        },
        "item": {
          "id": "98091852-c197-4c01-b588-5459198167a1",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "25c29f85-5cb8-41fd-ae83-5758efc9e922",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e072f9e2-0d17-43f8-ad59-44e7f95098d2",
        "cursor": {
          "ref": "480bec7b-6943-4b83-9d64-479506b5f901",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "80b337ba-dba5-4199-b080-57c68df099f1"
        },
        "item": {
          "id": "e072f9e2-0d17-43f8-ad59-44e7f95098d2",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "a7e853b7-29a4-48ab-8d07-80d2e08f043d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52b83cb0-3c9f-418d-82d5-53d1861b3a39",
        "cursor": {
          "ref": "83f5ae8a-9518-4b4e-aa20-31a0c01d2128",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "621d2b89-9ea2-45e5-aa5e-afabb3ffd8e2"
        },
        "item": {
          "id": "52b83cb0-3c9f-418d-82d5-53d1861b3a39",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "76c928f4-c7fb-46ed-a20d-e821125f548e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1a162f7-c194-4e1d-ae88-77e067c437b1",
        "cursor": {
          "ref": "a583ec88-256f-43eb-b04e-bf410b589492",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "6a4836fb-e5c7-48d1-b1e3-369d2278c0bf"
        },
        "item": {
          "id": "a1a162f7-c194-4e1d-ae88-77e067c437b1",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "2be6a6b1-ad33-4727-9d66-47046475eeff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bbd628a-a58d-4d2a-8219-7a1f13a9ed46",
        "cursor": {
          "ref": "b1848851-e61a-48b6-b3ac-49e325dc4a3b",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "38a4bf30-b1c7-48d6-bedf-094e3427b53e"
        },
        "item": {
          "id": "7bbd628a-a58d-4d2a-8219-7a1f13a9ed46",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "d03d2580-491f-4404-88f7-cb0a0ab29ff1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "befd99d3-80a8-427f-b4bd-792abbd018e2",
        "cursor": {
          "ref": "b55f5ed3-7032-49ec-a3d3-52bb72ff849c",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "251d316c-1f4b-4f7e-82cf-0aa0051c29fb"
        },
        "item": {
          "id": "befd99d3-80a8-427f-b4bd-792abbd018e2",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "312be93d-6d98-4c23-9a66-f8047e115977",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a4f5189-2d63-4622-a3ff-79c0b7e29274",
        "cursor": {
          "ref": "8f220e37-b9ad-4b36-a536-cc99ad24e2a4",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "5cbce9ec-359a-48bc-ae9a-4bb3b3526ff6"
        },
        "item": {
          "id": "1a4f5189-2d63-4622-a3ff-79c0b7e29274",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "74def0b3-9eda-4c5c-b3d2-94eb027bb9fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87bf4deb-4a71-44d1-8436-979e5014eed6",
        "cursor": {
          "ref": "917a610d-6578-4cba-80e2-45464fcb2399",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "fce2b7d3-922f-4f94-8445-0140a07e152c"
        },
        "item": {
          "id": "87bf4deb-4a71-44d1-8436-979e5014eed6",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "119ed2a0-f995-40d2-b1fa-c10eaebc7781",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f03bcb0c-f1cd-4374-bff7-27754c989e32",
        "cursor": {
          "ref": "7783187c-5c00-41c6-92d3-1ad99d67419a",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "d4a18771-0383-4805-b2f0-ba4f79b2e707"
        },
        "item": {
          "id": "f03bcb0c-f1cd-4374-bff7-27754c989e32",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "aba503d4-9541-404d-bff7-08582129b667",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1476a7ca-a36c-4a7b-9fd1-4bd846b3755e",
        "cursor": {
          "ref": "947b2825-2d8b-42fa-9735-302c64170d37",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "21b7d2b2-47db-461a-b70c-9f6ed2b0a9eb"
        },
        "item": {
          "id": "1476a7ca-a36c-4a7b-9fd1-4bd846b3755e",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "31fbd556-7ed1-4679-9b00-e7be70bb9f49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdd611cd-9530-4336-ae96-490bd3360790",
        "cursor": {
          "ref": "69f629fa-a8d3-447a-98bc-69a29c5e205c",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "ef7bf4eb-710e-4a37-a756-f4c7dd6ea86f"
        },
        "item": {
          "id": "fdd611cd-9530-4336-ae96-490bd3360790",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "44b5b7af-99e8-4c63-b20b-3a4f5874d78e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e761ea6a-36c2-4c6b-b51b-04b2affd6ec4",
        "cursor": {
          "ref": "00f5b064-589d-4e03-aba9-e4cee640f09d",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "d85cfff3-c552-4023-83de-64591d7034f0"
        },
        "item": {
          "id": "e761ea6a-36c2-4c6b-b51b-04b2affd6ec4",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "da8d1aa8-c2fe-4954-b674-729c3dc36ca1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82d49ad0-589e-4d70-a867-9f412a729317",
        "cursor": {
          "ref": "b32b931d-9d50-4058-a53d-e80a87442d6d",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "6d689d7b-e155-4e8a-be59-73ddcf205eae"
        },
        "item": {
          "id": "82d49ad0-589e-4d70-a867-9f412a729317",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "aa7268f0-09be-4b17-abd5-d84ee3a56fb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff59b378-f215-4cd7-ac61-b01e0a978af5",
        "cursor": {
          "ref": "16d72011-f694-487b-946f-c30a3c533319",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "51c7fd03-84b7-4925-a1f4-debb0f7216d4"
        },
        "item": {
          "id": "ff59b378-f215-4cd7-ac61-b01e0a978af5",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "6c168cff-32dd-4930-90ed-c901b89d1067",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17340fb9-8539-4103-8d7c-c178ad126e44",
        "cursor": {
          "ref": "976a76ca-cd68-4a87-a833-fe3deec7328c",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "c5ae46cb-6afd-4558-abb7-f0de18baa722"
        },
        "item": {
          "id": "17340fb9-8539-4103-8d7c-c178ad126e44",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "c55729bf-67e9-4a21-8176-95de2278050d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5ae2c66-0ab4-4bba-aac4-511eb8c50b3e",
        "cursor": {
          "ref": "1fbae008-afc5-42a9-b339-5dca12d4a984",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "c8a1fc4c-666e-4b15-b0e7-d79f1226e0a1"
        },
        "item": {
          "id": "e5ae2c66-0ab4-4bba-aac4-511eb8c50b3e",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "4a388841-9e35-4d41-9759-60e006fe2d29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cbb2333-3148-4989-831b-520f1b7f218a",
        "cursor": {
          "ref": "a0fa269c-f838-404d-a50e-bb98eddac01c",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "dd54aac7-70b0-435f-b6ec-ad630b7f8d4b"
        },
        "item": {
          "id": "3cbb2333-3148-4989-831b-520f1b7f218a",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "a25e9946-0ae9-4631-9247-1b585583796e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c65c0e6-d61e-491f-a0b4-75800c436c02",
        "cursor": {
          "ref": "5cf48a48-d8c7-4cb5-bb51-5cd7c237ff80",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "d793f9a5-6035-4566-a678-b3aa44c81dd8"
        },
        "item": {
          "id": "7c65c0e6-d61e-491f-a0b4-75800c436c02",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "7b4d1a37-a380-4c50-9273-11d33a9fbf53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f3ce8bf-859f-4ade-bf06-cc38cf14166d",
        "cursor": {
          "ref": "2f45d69a-b07c-4b4b-8d65-f7f9e5536fe5",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "21510b23-df4d-4e5f-9bfa-7f945652a340"
        },
        "item": {
          "id": "2f3ce8bf-859f-4ade-bf06-cc38cf14166d",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "94b1293a-5531-4c03-ad85-ca29b86f16f5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 11,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a3e547d-ffd2-41bb-8a68-ec9eb1ea9381",
        "cursor": {
          "ref": "6b26b4a9-b28a-4212-9015-6c4b25d80e86",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "697a304a-8dda-40cd-92af-afc054b69524"
        },
        "item": {
          "id": "8a3e547d-ffd2-41bb-8a68-ec9eb1ea9381",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "16fc7bbb-fdef-4dcf-926b-08fcd4140719",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 55,
          "responseSize": 162
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79980b9d-46c0-4e73-bad9-345afb4dba5c",
        "cursor": {
          "ref": "b4a008eb-5dcd-48e5-97a5-3546c0e3b0e2",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "ff782dcd-7221-436c-a066-9805c31c7c59"
        },
        "item": {
          "id": "79980b9d-46c0-4e73-bad9-345afb4dba5c",
          "name": "credentials_issue"
        },
        "response": {
          "id": "ec5406b3-6ada-4cf4-a649-2552f7b3dc61",
          "status": "Created",
          "code": 201,
          "responseTime": 48,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "da2b1d12-52e0-4e0b-a3df-d3e26dcfa75a",
        "cursor": {
          "ref": "f19bcafe-e094-41a6-86cc-afc03eac4f8f",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "b04dbedf-8439-4cd3-862c-0c00099048c0"
        },
        "item": {
          "id": "da2b1d12-52e0-4e0b-a3df-d3e26dcfa75a",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "5d1f1510-9efa-45ae-b2b8-18eb096cc7aa",
          "status": "Created",
          "code": 201,
          "responseTime": 29,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "864a1377-5836-49a8-8058-fec7d77c1de4",
        "cursor": {
          "ref": "5f954987-d5cc-4cb6-8bd6-055a83f1d431",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "2a80e8b3-6041-4e0a-9f9b-292c32cab671"
        },
        "item": {
          "id": "864a1377-5836-49a8-8058-fec7d77c1de4",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "b87519d3-7f07-4c86-90ed-dcbb025e9e73",
          "status": "Created",
          "code": 201,
          "responseTime": 28,
          "responseSize": 926
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c7cac9d-5701-4747-a23d-01d8daf36f9b",
        "cursor": {
          "ref": "f3956d99-e085-4928-99a9-6663a9956d03",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "61fba6f4-f2fe-4c2a-ac71-23e8d3c43d50"
        },
        "item": {
          "id": "6c7cac9d-5701-4747-a23d-01d8daf36f9b",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "dbde8a8b-c382-4131-806f-45fb299fca04",
          "status": "Created",
          "code": 201,
          "responseTime": 27,
          "responseSize": 894
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1510711-07b6-4c80-8341-51dfcbf966b5",
        "cursor": {
          "ref": "2701a0aa-d0a6-45e4-a5f7-cc6cc469fe36",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "fc8aae3c-8138-4985-8c2f-c7477fed23d5"
        },
        "item": {
          "id": "b1510711-07b6-4c80-8341-51dfcbf966b5",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "053ffb22-1256-4777-9f85-36f6ca93e6d9",
          "status": "Created",
          "code": 201,
          "responseTime": 27,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          }
        ]
      },
      {
        "id": "71af9626-e7d6-488b-a45e-88391ec34b51",
        "cursor": {
          "ref": "6c23b23d-b1d3-474c-93da-c23105c7ec62",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "cf5b5f32-fb2d-490b-a723-623d2bedbf2c"
        },
        "item": {
          "id": "71af9626-e7d6-488b-a45e-88391ec34b51",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "b7c74227-256f-430a-9d15-a5fe5d28fc1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71af9626-e7d6-488b-a45e-88391ec34b51",
        "cursor": {
          "ref": "6c23b23d-b1d3-474c-93da-c23105c7ec62",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "cf5b5f32-fb2d-490b-a723-623d2bedbf2c"
        },
        "item": {
          "id": "71af9626-e7d6-488b-a45e-88391ec34b51",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "b7c74227-256f-430a-9d15-a5fe5d28fc1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4b991cf-07d4-48f2-8877-6b686a77b8f6",
        "cursor": {
          "ref": "9a75db9a-d5c0-4558-a928-f773964e8bf6",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "a4e67bef-5c93-4cfd-bcbe-a2850c7bedaa"
        },
        "item": {
          "id": "e4b991cf-07d4-48f2-8877-6b686a77b8f6",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "8eeea0a2-b61f-4770-ba1a-a321b3cbba7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "300e1b26-fdee-4071-8f80-89c80604f2a1",
        "cursor": {
          "ref": "dbef012d-10b5-452b-bbcc-bf75abd530c1",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "1f759b2a-6b4a-4d1b-9212-a1487a76e897"
        },
        "item": {
          "id": "300e1b26-fdee-4071-8f80-89c80604f2a1",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "0653d60d-09fa-4c8f-ac23-126bbbd67ab9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e8e5476-85d5-4992-b7bb-d0dff24f25fd",
        "cursor": {
          "ref": "ff274b5a-ab83-47df-a26b-c89c50e62b6b",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "5d81f817-c95d-429d-bc9e-e594ddacaaea"
        },
        "item": {
          "id": "5e8e5476-85d5-4992-b7bb-d0dff24f25fd",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "5b4b3e22-7067-419e-b670-7ba60fbd479c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d9d6008-1b94-496a-8964-89dba73a7041",
        "cursor": {
          "ref": "b9a86980-200a-450c-af19-f47115508c6d",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "7b16de7f-3519-4a53-975c-0e0dc3a357b1"
        },
        "item": {
          "id": "1d9d6008-1b94-496a-8964-89dba73a7041",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "8d41d679-7b3b-4106-a8f6-8eeaa908d197",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63876d74-f48d-48c6-b72d-0920caadd406",
        "cursor": {
          "ref": "42ae3bf1-16ae-4839-9283-dce3c806413c",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "9913f9d7-e8fe-47d2-acc4-a1ad789c3b84"
        },
        "item": {
          "id": "63876d74-f48d-48c6-b72d-0920caadd406",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "56076fc9-63f1-4d4d-ac19-365c19dc7af3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fc0797a-50b5-4207-92c5-c2bf8b92ae3b",
        "cursor": {
          "ref": "900db204-55e8-48b3-8884-81d78bf9caed",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "ca7925e6-4430-409b-b2ed-a433a39b744f"
        },
        "item": {
          "id": "7fc0797a-50b5-4207-92c5-c2bf8b92ae3b",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "0788025a-139e-4c8e-aec5-8bd339c3599b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b4418cc-77b2-4aa1-a049-5dbb7005a693",
        "cursor": {
          "ref": "322fc878-4466-41a7-8412-ff2ead1d91b9",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "9dc33bfc-57e6-43f3-b9e2-ef2fcd4f3049"
        },
        "item": {
          "id": "3b4418cc-77b2-4aa1-a049-5dbb7005a693",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "1fb0480a-878e-49ae-81eb-bee2d9ab3296",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8dad901-8c84-40cd-a702-9a5ee03af32d",
        "cursor": {
          "ref": "4467ee98-c42b-463e-9aa3-d160f4499ea3",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "0ca7e909-ff4e-4df3-a16c-6e40381b5dc2"
        },
        "item": {
          "id": "c8dad901-8c84-40cd-a702-9a5ee03af32d",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "bbedaa64-b010-442c-9ed3-2695d3070a7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39d93796-c68e-4e41-b44c-e776f9113475",
        "cursor": {
          "ref": "8d638549-3323-4e0e-9846-8eacd644cc50",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "fa8dced5-87a0-4603-952c-741390f36599"
        },
        "item": {
          "id": "39d93796-c68e-4e41-b44c-e776f9113475",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "169a8fba-60df-449d-bae4-38ff211a6550",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f879c925-3474-40f9-a10b-d13b9fee3bf9",
        "cursor": {
          "ref": "15daa620-87ab-498e-8b61-e37fe23e7ac0",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "f007917f-dd62-4968-ba3c-3b46070b5a58"
        },
        "item": {
          "id": "f879c925-3474-40f9-a10b-d13b9fee3bf9",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "cfe6ca67-183a-4e4a-a23f-5aa617a7d9e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ba3d4a8-aa6c-4ab9-a768-6bbaa2f8cccd",
        "cursor": {
          "ref": "267e94f6-d9c2-4327-ba9a-ad9e3a7bd8e4",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "4234cd9f-12b7-49ae-a566-70d7f6370551"
        },
        "item": {
          "id": "4ba3d4a8-aa6c-4ab9-a768-6bbaa2f8cccd",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "0f5fc177-4ac8-4fe8-af4a-08869c6d2fdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "373fd9bf-791f-41ad-b6c7-01ba11afe99b",
        "cursor": {
          "ref": "a9c643e0-3f69-4353-9e34-3a743f11b53c",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "f2f7b1a9-6fb1-4f14-a36a-26ce27ca88d8"
        },
        "item": {
          "id": "373fd9bf-791f-41ad-b6c7-01ba11afe99b",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "c39a46cb-ce5f-4208-9f59-49858444e9d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "058bcaf0-3ce5-4c4b-a0af-9073c159f063",
        "cursor": {
          "ref": "81f75b97-f53c-4504-8a7d-2c9e8a0b2e1c",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "f192f839-616e-427c-ab62-5d6e2daeff83"
        },
        "item": {
          "id": "058bcaf0-3ce5-4c4b-a0af-9073c159f063",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "033db17a-7ebf-48cd-9141-676ab6637713",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43dbe542-5fe8-4dea-a4ed-37b2ed781bc8",
        "cursor": {
          "ref": "2b02fa07-97b3-47d5-af2a-57531c0396ce",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "ff99b299-5898-4992-be8a-24e8738b65fb"
        },
        "item": {
          "id": "43dbe542-5fe8-4dea-a4ed-37b2ed781bc8",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "7dc95ba6-12a0-4d9f-b6ff-5de5a102c4c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27f40741-f2a0-47c4-809e-0df2c086959f",
        "cursor": {
          "ref": "bfcaa6b2-be2d-4f81-a242-ef15860acd1c",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "80fff7a7-5a72-4ff6-a9ca-b97a1efce8db"
        },
        "item": {
          "id": "27f40741-f2a0-47c4-809e-0df2c086959f",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "9893b595-5dfe-4003-bfc7-f1788416df9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e0bac9a-8cd9-4c77-b963-d1fe7eaf70a4",
        "cursor": {
          "ref": "5191515d-aba7-4077-8574-6ddab5b51ec6",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "12be29c3-dd38-4f5f-be2f-0f649cc8d1d8"
        },
        "item": {
          "id": "7e0bac9a-8cd9-4c77-b963-d1fe7eaf70a4",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "97c06b84-e156-4d9e-9c7a-6c1a2e28f6ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "240dd0d5-d9bf-4d50-817a-f4ebab057a38",
        "cursor": {
          "ref": "aed0dc10-e5eb-45a2-9864-a68aacbc49ae",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "0f3f97f4-d269-442f-99cc-81c7a7803845"
        },
        "item": {
          "id": "240dd0d5-d9bf-4d50-817a-f4ebab057a38",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "82455072-46c9-4ac7-9cbf-d1c7bea3a530",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b341cfe-51d2-4dc6-85fd-c707dc4bdc14",
        "cursor": {
          "ref": "9c0b635f-e0fc-4c7f-8d02-42340295d426",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "adab0556-38f7-43d4-a6b9-be443bf5a946"
        },
        "item": {
          "id": "0b341cfe-51d2-4dc6-85fd-c707dc4bdc14",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "8b4efadf-5cdb-4b7e-996e-0c51fa12e546",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c1f461b-1827-4e18-9feb-2a9e7e90edb6",
        "cursor": {
          "ref": "e7781260-7de5-4a4e-b610-3c7049b94ba2",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "a763f9c7-2129-4a18-b77c-483aaaca97de"
        },
        "item": {
          "id": "9c1f461b-1827-4e18-9feb-2a9e7e90edb6",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "64cbf424-7ab2-49b3-87b0-eb437a95430a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82da4b4a-7895-41ec-8b23-985179bca5d7",
        "cursor": {
          "ref": "1420e5eb-1989-4a7a-824f-f8ae40db7583",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "43969cf0-7a2d-4258-92a6-ce23af31ae23"
        },
        "item": {
          "id": "82da4b4a-7895-41ec-8b23-985179bca5d7",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "a44ff95f-bd51-4339-bee3-bd4f125b82dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca3a0054-1868-4ed4-a6c0-32c74595efc0",
        "cursor": {
          "ref": "bd430146-a617-44ba-8053-3fe6d77bcc96",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "ae64969a-d2c5-47f6-a51f-b2e78819cfea"
        },
        "item": {
          "id": "ca3a0054-1868-4ed4-a6c0-32c74595efc0",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "3f73eef2-c4f8-43d7-a21f-a64137c17876",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23c7e194-50bd-4b9c-bd34-47067377a572",
        "cursor": {
          "ref": "6eef996c-c7f5-4c28-aceb-7d8943be581e",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "51d1648d-933f-4cf8-b3e7-c6bfc2b575c8"
        },
        "item": {
          "id": "23c7e194-50bd-4b9c-bd34-47067377a572",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "a390d81c-3b6c-4b52-861f-aa6ff693d526",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "100fdf4b-1321-4f75-8c2b-a5d1374c6f9c",
        "cursor": {
          "ref": "e0e6f3c9-f71b-4a80-b3d8-218f8488b2f9",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "6314370d-7780-4111-b3a8-edcea47117cb"
        },
        "item": {
          "id": "100fdf4b-1321-4f75-8c2b-a5d1374c6f9c",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "9a96925c-345d-4b74-9ca0-0ac534f44fb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53030cd4-8c04-448f-9284-269c3eacf3e4",
        "cursor": {
          "ref": "a1678640-e991-4505-89cc-73edc1d5bd68",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "50434393-615d-4942-815a-2863a1921270"
        },
        "item": {
          "id": "53030cd4-8c04-448f-9284-269c3eacf3e4",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "f158e8b0-eaab-41a1-af83-82628fa2389b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5877a76-cb4b-4806-b3ef-ed96290ed5d0",
        "cursor": {
          "ref": "63bd4d78-5fcb-4da1-afff-653a7a178527",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "64d67d01-159f-40b9-a0a7-4514f3c4e845"
        },
        "item": {
          "id": "e5877a76-cb4b-4806-b3ef-ed96290ed5d0",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "c7129726-df52-4a24-8ee6-281d3f146ad7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31d3555d-e97d-4cad-a15c-772be9d0d5bd",
        "cursor": {
          "ref": "83417de1-42f6-42b2-b0bd-f242d32990af",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "6ca51792-3bf7-4208-8e1c-fbd93e4afe67"
        },
        "item": {
          "id": "31d3555d-e97d-4cad-a15c-772be9d0d5bd",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "6a087c4c-29f3-4fd9-9da2-89969bcc2517",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c74f27c4-d1fc-4646-b060-2c0f3d1d50d3",
        "cursor": {
          "ref": "eb06253e-0313-4828-b72a-9cbc25027672",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "9d2eb408-6c01-499c-8390-51106b9e78dc"
        },
        "item": {
          "id": "c74f27c4-d1fc-4646-b060-2c0f3d1d50d3",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "9c857ff0-f7f6-47ee-b062-b22bb36ff353",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f31c55a6-cdc0-4ab1-a604-ca90bdad36b6",
        "cursor": {
          "ref": "fcc7ce9d-c845-40b3-8c9a-8f50ba8349d7",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "7bf4d3a0-f7f6-418e-a9c1-e691b25f2fa4"
        },
        "item": {
          "id": "f31c55a6-cdc0-4ab1-a604-ca90bdad36b6",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "86fbf5b1-d096-4e28-88a5-61e54af608b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "663dbd88-95b6-42f1-a467-73351110e808",
        "cursor": {
          "ref": "4adb0fce-f213-4860-8fe8-3cbad2b2b502",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "a59bb545-166a-4dc2-a752-33ed342854ef"
        },
        "item": {
          "id": "663dbd88-95b6-42f1-a467-73351110e808",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "6e3188c0-fabb-43d3-a5c7-0eb54abfdf85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39ca2d5f-1104-404f-af00-d33b34ea1c1f",
        "cursor": {
          "ref": "00ca5a8b-9c1e-4a78-ac54-6aab9bbd1fa0",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "e5236e7c-85b1-4a1b-8656-27cc0f2a65b0"
        },
        "item": {
          "id": "39ca2d5f-1104-404f-af00-d33b34ea1c1f",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "411b2340-7d62-4b8e-abba-734717d35cf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51047ed4-a556-45ac-8c6b-c050c9dd2599",
        "cursor": {
          "ref": "70859365-df1b-48a8-8a0f-fb035bbc8c56",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "302e296e-48de-4e92-a995-02b9fc93658c"
        },
        "item": {
          "id": "51047ed4-a556-45ac-8c6b-c050c9dd2599",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "af9e1fc4-cbb3-423e-93f6-355f8ba31949",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9246f433-856f-49bd-a16a-5c2fb1fcba9b",
        "cursor": {
          "ref": "678f900e-2624-4f05-89b1-f9f4c239409b",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "450af2d7-c569-4605-8a8b-f5b14e6884d3"
        },
        "item": {
          "id": "9246f433-856f-49bd-a16a-5c2fb1fcba9b",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "0194c1be-b31d-424e-8d55-89ab8a458b87",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbf22d81-9828-453c-be7c-b5f18eb53367",
        "cursor": {
          "ref": "762975b4-1a64-485f-b2e8-a726f740351b",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "e5449299-bc69-4892-8964-81b4abc04b9e"
        },
        "item": {
          "id": "bbf22d81-9828-453c-be7c-b5f18eb53367",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "bab37d03-2e74-4d7e-bf62-114871db4d82",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 9,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ee648cc-1624-4476-bd4a-813e116b1822",
        "cursor": {
          "ref": "1bc1f44c-5e4f-43d4-9d03-1640644bff27",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "497e1272-2070-47e7-a88d-5a1090d91761"
        },
        "item": {
          "id": "3ee648cc-1624-4476-bd4a-813e116b1822",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "eb0e8531-a5fa-49cd-bb4f-cb2e6dd34c1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ee648cc-1624-4476-bd4a-813e116b1822",
        "cursor": {
          "ref": "1bc1f44c-5e4f-43d4-9d03-1640644bff27",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "497e1272-2070-47e7-a88d-5a1090d91761"
        },
        "item": {
          "id": "3ee648cc-1624-4476-bd4a-813e116b1822",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "eb0e8531-a5fa-49cd-bb4f-cb2e6dd34c1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "714477e8-0f9b-4277-bfa9-7411c0cd5820",
        "cursor": {
          "ref": "dac84d36-74f8-4301-ae18-967dbf6f8f7b",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "32a5a19e-b189-40cc-a176-379e808bd8a6"
        },
        "item": {
          "id": "714477e8-0f9b-4277-bfa9-7411c0cd5820",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "e0d8784a-8b5b-421e-9568-734f4becfa53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "717d76ef-3f14-44d6-91c8-2b54bd75062f",
        "cursor": {
          "ref": "a26b210c-7ee5-486d-9466-093a96ab773b",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "f0f5e4aa-c042-49b1-9c7e-d56b3b7f752c"
        },
        "item": {
          "id": "717d76ef-3f14-44d6-91c8-2b54bd75062f",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "1fba718c-cebb-478e-a358-138ec9724e8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bac677ac-3e23-42c0-8b0f-0a5dd6c05f32",
        "cursor": {
          "ref": "b38cfe75-2895-4bec-939d-bee3e5e97bdc",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "e50282d1-bc48-44c8-8430-fdb58821d962"
        },
        "item": {
          "id": "bac677ac-3e23-42c0-8b0f-0a5dd6c05f32",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "0edd1881-a625-456a-bd83-76b337514ea9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "925db34b-a2d9-4fea-8ff2-60852edc8785",
        "cursor": {
          "ref": "3ab7c49d-37bf-4637-9e06-c990b7dddd54",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "c3473cc0-4f07-4a41-bfcb-e86b4b7bd995"
        },
        "item": {
          "id": "925db34b-a2d9-4fea-8ff2-60852edc8785",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "586f0366-5cc0-407a-8f3c-4f224ac214b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0df62797-f41d-4b83-a39a-a21387dcc83e",
        "cursor": {
          "ref": "12ffeb3a-1ec6-4dc2-b989-0eded5c497c7",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "6a8c8a5d-ba9d-44ea-9ca8-3d734747cba0"
        },
        "item": {
          "id": "0df62797-f41d-4b83-a39a-a21387dcc83e",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "c7d7b36b-ffe2-4b4a-a9e6-0dcd83e8d3f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7022b83d-d9e6-4575-941c-41f8ed4e6d73",
        "cursor": {
          "ref": "1405b9da-7202-4b20-833b-1df9c782902a",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "a30653da-ff5c-4839-b272-f8bdab14ed43"
        },
        "item": {
          "id": "7022b83d-d9e6-4575-941c-41f8ed4e6d73",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "824e392e-1004-4259-bce4-a2c7e97d9a88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c833f03a-d74b-46b5-b8e1-b42764ef0dbe",
        "cursor": {
          "ref": "fbf71ed5-d8b5-44e3-8192-b471cdda4172",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "f77131fe-70da-4800-944e-2890e7ff0417"
        },
        "item": {
          "id": "c833f03a-d74b-46b5-b8e1-b42764ef0dbe",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "1c3fad8d-843c-4533-8a06-88679e501906",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a579f21-f9b1-4513-82f7-3f45dd62cb9f",
        "cursor": {
          "ref": "b9f35824-0b1a-4f8a-93f7-1b39ba484839",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "49fb16d2-e049-489e-ac6c-a175885a7178"
        },
        "item": {
          "id": "6a579f21-f9b1-4513-82f7-3f45dd62cb9f",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "20b52604-3ba7-40c9-b610-5222d89a29e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ed313ae-8fe9-48b9-b519-debb592e667f",
        "cursor": {
          "ref": "f07deb90-53a2-4b07-ac64-87ecfb91f791",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "760c5472-b7ff-4714-a9d8-201b6a0c9cee"
        },
        "item": {
          "id": "4ed313ae-8fe9-48b9-b519-debb592e667f",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "2753467b-87f0-4693-a6a6-5b97152e7fff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dda4b61-917d-4394-a001-287356f191a0",
        "cursor": {
          "ref": "8521385f-8363-4e34-880a-501e78f064fc",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "81c46bdb-13a7-472e-86dc-023322d7cbbc"
        },
        "item": {
          "id": "6dda4b61-917d-4394-a001-287356f191a0",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "68df8db3-8d46-4bbf-abe2-b4cea37e2a7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a6d4bdc-0eb8-421b-99cb-a539cd2af582",
        "cursor": {
          "ref": "304090ef-bfb9-4a9d-ab2f-875a87583767",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "5f5ed5a4-fac6-4f8c-bfc1-13da907ff00f"
        },
        "item": {
          "id": "3a6d4bdc-0eb8-421b-99cb-a539cd2af582",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "dfeab06a-0d07-4fd2-9342-7ae2df7db1d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9f4c291-96f5-44dc-a9b6-14e751fc5617",
        "cursor": {
          "ref": "c3cc57a9-158e-4ac0-9fb1-c072e38e1630",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "61911016-9117-4232-874b-c025be8c0485"
        },
        "item": {
          "id": "e9f4c291-96f5-44dc-a9b6-14e751fc5617",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "3432375b-2b2d-4e3e-9e4c-da6aed8e4d5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40d0cd5c-2584-4ccd-866a-55f0f8c99ddd",
        "cursor": {
          "ref": "f6c94d2a-4ceb-4a0d-bd91-d3b2f445b806",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "1d7f0164-0601-4fb4-a509-27f4cdeb6b85"
        },
        "item": {
          "id": "40d0cd5c-2584-4ccd-866a-55f0f8c99ddd",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "f07d8e26-959c-4793-996f-ac4af3c612d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3695190-6168-4a49-ae72-e1ea3463ef27",
        "cursor": {
          "ref": "26926b76-d334-44bd-b056-74feb005764b",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "ab124572-435a-4a54-90bc-5b7171ea1227"
        },
        "item": {
          "id": "f3695190-6168-4a49-ae72-e1ea3463ef27",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "f08ed14f-5585-45c2-b7a6-ad2b0eb7a375",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e282878-262d-415b-ba50-bbb7a208ab43",
        "cursor": {
          "ref": "7995a1d1-4707-4fcb-9927-30f592d7cbab",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "0adf6907-1f1c-4802-ae27-6747eef38ed1"
        },
        "item": {
          "id": "6e282878-262d-415b-ba50-bbb7a208ab43",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "61aee668-fcd5-4bb9-ad0d-4b05dd7bbb20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25c78096-e94e-4448-beac-a0c265a86d88",
        "cursor": {
          "ref": "1046b8ad-f3a9-42ef-af97-76c99f3315a6",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "cfad2010-14fb-4968-9afb-f7746782db85"
        },
        "item": {
          "id": "25c78096-e94e-4448-beac-a0c265a86d88",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "f77134d6-997c-4ff5-9748-34bd66106e47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43711b27-9e13-4c2b-96d0-2906bd77ad6f",
        "cursor": {
          "ref": "89d1d6c4-c743-435a-ba58-6ad2a374f728",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "e8047070-17cf-489a-bc7b-28d357e0b249"
        },
        "item": {
          "id": "43711b27-9e13-4c2b-96d0-2906bd77ad6f",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "692bd26e-2e2e-4f73-8f0b-fce0b86058bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2719a607-928c-4b68-865a-610e9c0ddad2",
        "cursor": {
          "ref": "2779ba7e-4d80-4b34-b659-835249339fae",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "eac08f16-682c-4422-a77a-9fdbc3b80b10"
        },
        "item": {
          "id": "2719a607-928c-4b68-865a-610e9c0ddad2",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "01cc4bb7-a823-4f8a-a2aa-7da4ad7f7854",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04f2e392-dea6-4ba3-a80a-e5e8fb95ddea",
        "cursor": {
          "ref": "e9e959ef-58b2-4aec-b737-861f7566ff1d",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "f984bc41-0d8f-43ae-bfc0-2a1a89e7f6d7"
        },
        "item": {
          "id": "04f2e392-dea6-4ba3-a80a-e5e8fb95ddea",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "b1b1eab7-3b25-4e5c-89c8-b9a12de2d307",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa11e839-f6b4-4601-b200-89f428ddaf39",
        "cursor": {
          "ref": "ca94ed9e-e444-48ad-95fa-018b9c9518d0",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "a71d63fc-3957-4639-8986-eb07057e0dcf"
        },
        "item": {
          "id": "aa11e839-f6b4-4601-b200-89f428ddaf39",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "3cc94e6a-3b4f-4312-8d3a-62b9512b8ce0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55add423-7162-4966-b899-9acf07395eb6",
        "cursor": {
          "ref": "94ec038d-709c-4357-ad23-0b66c831bc67",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "e0a0a422-cf16-4ff2-acb8-03dbb99b2b8d"
        },
        "item": {
          "id": "55add423-7162-4966-b899-9acf07395eb6",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "ec68f99b-0446-4e8e-a506-5c6e86a7bf71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c45fccf-cb76-4574-8916-8bfaf9d31748",
        "cursor": {
          "ref": "5aa98f76-0429-4503-9963-c1d11998e2da",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "deff011d-edc3-49d0-807f-08f95ae9c991"
        },
        "item": {
          "id": "1c45fccf-cb76-4574-8916-8bfaf9d31748",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "7b7f73f9-f6bb-4654-abcb-0fd8d0e1dd9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aff8e753-e417-4d04-bc42-7f1fb1ff8973",
        "cursor": {
          "ref": "3336b9d8-1918-4673-bd06-05b8d3324693",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "86506c7a-467c-48b7-8bd4-49dd2efbf5aa"
        },
        "item": {
          "id": "aff8e753-e417-4d04-bc42-7f1fb1ff8973",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "29fb211c-686e-4ddb-b70c-e9fc3105d2ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b796193c-b675-448a-a113-26655e9c48bb",
        "cursor": {
          "ref": "7d4d447c-a9af-4172-b64b-805e5bf3a0fe",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "9b570823-b9e1-49e5-98c6-4abaa4c54485"
        },
        "item": {
          "id": "b796193c-b675-448a-a113-26655e9c48bb",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "7d12047a-3649-45a6-84dc-cfce9c48acdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f52121cd-8802-4f8c-93c1-39928ba14d3f",
        "cursor": {
          "ref": "98025da9-571e-41f5-a594-78343b2117f3",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "2d488c2b-c658-4d55-b9f2-ba0d7a50592e"
        },
        "item": {
          "id": "f52121cd-8802-4f8c-93c1-39928ba14d3f",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "cd642b3b-4218-46cb-9b81-1bb1ec8581a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2f73f08-1e9a-4f7b-9a52-6e8036e0639b",
        "cursor": {
          "ref": "cfe71726-a3ce-4c6b-bbd4-10403fe2f33d",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "f01b12fb-7a3a-44b2-8bbe-6b5db9dc4827"
        },
        "item": {
          "id": "f2f73f08-1e9a-4f7b-9a52-6e8036e0639b",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "1d64f4cf-180d-461f-93ac-bc0396d49d65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5525b114-7936-41a8-ae74-a5caabf9c4a9",
        "cursor": {
          "ref": "e69b489e-249b-478b-ac57-ec9ee0463a4e",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "43f107b5-1639-4676-b382-b171e1e5b2c5"
        },
        "item": {
          "id": "5525b114-7936-41a8-ae74-a5caabf9c4a9",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "2ddc5934-9db5-459c-8910-a5b5c6e25797",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55aa56c1-de5d-46ae-931b-6964c4eed036",
        "cursor": {
          "ref": "865eeb1b-4b39-4d52-84f2-9c686e6ffaec",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "faff59e9-d16c-414b-9a38-7fba9edd5c1f"
        },
        "item": {
          "id": "55aa56c1-de5d-46ae-931b-6964c4eed036",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "44052bef-e524-46b1-868a-5b72a2b3c321",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43715bc9-ae5a-486c-8f18-c8fb6b2661c6",
        "cursor": {
          "ref": "21e2c716-4dbe-4c84-ae45-1ca1a8ea9d91",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "88b4b33b-8e9b-4780-9db9-9269dec20271"
        },
        "item": {
          "id": "43715bc9-ae5a-486c-8f18-c8fb6b2661c6",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "301cf0bb-9e77-4b2d-a0dc-feac699cef8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc47cbc1-30b6-4968-a74f-6dd91b6e2dd4",
        "cursor": {
          "ref": "ea6465bd-fbf1-43f8-b8e1-f72b4930e004",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "a6d5e7de-068a-43fe-b216-e489120358b2"
        },
        "item": {
          "id": "bc47cbc1-30b6-4968-a74f-6dd91b6e2dd4",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "c9a73cf8-df23-4ff6-afa5-7bb44e87711b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdcc639a-1967-4836-b1d3-ef443341b5fd",
        "cursor": {
          "ref": "3de97db2-c98a-4760-b31d-f2abd08078a7",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "81d199a6-8a81-463a-9b24-eb812cd12775"
        },
        "item": {
          "id": "cdcc639a-1967-4836-b1d3-ef443341b5fd",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "bb3fab64-8b66-449d-b9da-0cc0f3d6841f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea62d43a-4d8c-4c27-bd29-8bffc3bac75c",
        "cursor": {
          "ref": "384193e9-86e5-4c06-a72d-9fe2c4c44e52",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "7cc62de3-97ee-4dce-8e43-731d1f6455c7"
        },
        "item": {
          "id": "ea62d43a-4d8c-4c27-bd29-8bffc3bac75c",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "b689c741-21e5-4bc1-ab90-e0e2d37e6cec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f768ff9-ae26-48e0-bb91-3e42dbda42a0",
        "cursor": {
          "ref": "dfd33587-a2e2-4343-9040-1948811b87c6",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "10a744de-e150-404a-af8e-f62a54d1cdd2"
        },
        "item": {
          "id": "4f768ff9-ae26-48e0-bb91-3e42dbda42a0",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "3dc9fab3-3443-44de-b229-5168909ca0dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95658ffe-ef35-41e9-8594-2c6587fa70ef",
        "cursor": {
          "ref": "0bb6a801-bffa-485d-9b7d-c9846037586b",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "e4784f0d-687e-4928-aa0d-f251a145d85c"
        },
        "item": {
          "id": "95658ffe-ef35-41e9-8594-2c6587fa70ef",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "13c2cfad-191f-4be7-807a-1d6cf1d44995",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e1d3237-143f-448b-833f-790527b42508",
        "cursor": {
          "ref": "51ea3af2-1b77-4bd7-8b1a-3969833a1533",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "c81e70ae-8a3b-43c5-9bbd-f220c4501b12"
        },
        "item": {
          "id": "3e1d3237-143f-448b-833f-790527b42508",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "8c870b7f-3e27-4249-b0ca-467ae7c065f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bd0ced4-4c07-4b3b-827e-abf6148fe78c",
        "cursor": {
          "ref": "909699b3-923a-4123-abff-e0aa82fca06b",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "198b319f-e4f1-47f6-aa58-2163a8704d80"
        },
        "item": {
          "id": "3bd0ced4-4c07-4b3b-827e-abf6148fe78c",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "dfd02669-0909-49d1-8deb-623129c0274e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6efbaa4e-85bc-49af-9e72-7c161dcadc6e",
        "cursor": {
          "ref": "77f7870e-b793-48e8-a651-7552cabd8cd3",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "67fddba8-d288-4842-85cb-702f3c753d08"
        },
        "item": {
          "id": "6efbaa4e-85bc-49af-9e72-7c161dcadc6e",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "070dd091-e6e3-4492-9f7a-8ebc9d8caa2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfe37ab8-b2d0-4507-b03a-5618719e649f",
        "cursor": {
          "ref": "6ecc0f64-3726-4da0-89f3-24c6da7569e0",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "541b29a8-757f-4a55-a7c9-760d1b38c54c"
        },
        "item": {
          "id": "dfe37ab8-b2d0-4507-b03a-5618719e649f",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "cd5aadc8-4d93-4f75-b9d8-d8a318ec1904",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84d02e61-ec16-4e09-a3a3-373a177d5d4f",
        "cursor": {
          "ref": "a583b3bf-3691-44f2-ad8f-728a0f28312d",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "b6d12281-3eff-45a9-a0f6-310b089113fa"
        },
        "item": {
          "id": "84d02e61-ec16-4e09-a3a3-373a177d5d4f",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "fc2af3bd-7961-4629-9187-277a2e7832ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9092ce12-c099-4493-b93c-283b1c8dfe47",
        "cursor": {
          "ref": "630b6086-dfb2-4d25-b9bc-ddfc97caee06",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "4a1936f6-2855-4772-8ead-8d85068eef1d"
        },
        "item": {
          "id": "9092ce12-c099-4493-b93c-283b1c8dfe47",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "19b06111-9be6-4b85-9a98-8140a1828ead",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7961dcc7-b859-4c82-b8ad-567b70242d60",
        "cursor": {
          "ref": "c0c05922-470b-4c1a-b772-50e7a7330175",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "ccbc73a4-6bec-490a-a90c-1ae9268d556b"
        },
        "item": {
          "id": "7961dcc7-b859-4c82-b8ad-567b70242d60",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "70512c16-c68f-4e48-a91e-1ab63b652fc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0f94fb8-7e1a-4b2b-8891-ea318af8686c",
        "cursor": {
          "ref": "224c777c-9db7-4c54-b86b-8012a211f024",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "b2e01cc8-3741-422d-93e7-068cdc3d0d40"
        },
        "item": {
          "id": "d0f94fb8-7e1a-4b2b-8891-ea318af8686c",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "02505672-f0df-4c8b-ba8f-8f0c1c5d8827",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52e7f5b3-279d-473f-b189-2257eaccfa03",
        "cursor": {
          "ref": "779d81ac-d12c-405d-8881-092932abb621",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "17f04286-40ce-483e-bb89-6972f602de50"
        },
        "item": {
          "id": "52e7f5b3-279d-473f-b189-2257eaccfa03",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "f9bc4d4e-4755-4ec3-8f88-3d19752ce0bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d622848a-30c9-4467-82f2-69b02004cee3",
        "cursor": {
          "ref": "57139307-e811-490b-abfd-624782c5ecb9",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "203bf889-a11d-4aac-91e9-0b513f088f88"
        },
        "item": {
          "id": "d622848a-30c9-4467-82f2-69b02004cee3",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "76b4a188-886d-4ddb-9824-4d3450607f35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d68d1b82-a6ff-4023-bcf2-67a30a47d69a",
        "cursor": {
          "ref": "fe3eeb53-f228-4372-9c49-fd37997ef169",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "e3e4c981-e351-4f90-a7b7-c9d334a39d69"
        },
        "item": {
          "id": "d68d1b82-a6ff-4023-bcf2-67a30a47d69a",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "5819d8c0-12bc-4de8-a9d3-6834197b7d95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59b3318d-0f64-4019-9014-05518946a0b9",
        "cursor": {
          "ref": "534e5284-9cb8-4b55-b66f-3100c518b8d2",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "23c71a94-5db0-4093-ba63-1c89235a4ad7"
        },
        "item": {
          "id": "59b3318d-0f64-4019-9014-05518946a0b9",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "79c75648-ed86-4958-af60-1bc7223f5359",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5a67910-cefd-4d0e-90a0-f1a4617c8e91",
        "cursor": {
          "ref": "1337b7b3-9193-48e5-a064-e24fa760625c",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "d1e35fb4-3bd8-4899-9f9e-52eb6abf085d"
        },
        "item": {
          "id": "e5a67910-cefd-4d0e-90a0-f1a4617c8e91",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "423ab604-7d8a-4534-8468-ef1124ecae9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a87e42b-d2bb-477c-8be2-1c87da895f34",
        "cursor": {
          "ref": "75a449bd-3c79-4eb9-a310-e32aedd47a94",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "b4440655-d2ea-4fad-9143-1d04511612f0"
        },
        "item": {
          "id": "9a87e42b-d2bb-477c-8be2-1c87da895f34",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "c0f08975-685e-4fd8-a246-0b7165162dd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fa025a1-a676-43db-aa74-51ddb1717b8f",
        "cursor": {
          "ref": "15645a9e-9135-4124-903e-705415441f24",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "1cfda5e1-5025-4926-80b1-249000284bc0"
        },
        "item": {
          "id": "9fa025a1-a676-43db-aa74-51ddb1717b8f",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "f6728af9-0a3e-4fa7-b340-a5241bff7aeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e44a6c7-662b-4cee-ada4-81cb05324cd6",
        "cursor": {
          "ref": "3429faf3-d6dd-4c3e-b23c-2ec82ed78f1b",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "27eca690-6f43-4729-860b-54ff5298bbf8"
        },
        "item": {
          "id": "5e44a6c7-662b-4cee-ada4-81cb05324cd6",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "f45a9b5a-4ac6-4935-9ce9-c0e1edf268b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9a5ca6a-9d21-47e5-b6eb-b24a0a2d5428",
        "cursor": {
          "ref": "06832556-1172-44c1-88d5-97bb28a3a921",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "a0c9dae6-56b8-4265-a0e9-48c35aea1517"
        },
        "item": {
          "id": "d9a5ca6a-9d21-47e5-b6eb-b24a0a2d5428",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "7ba0cd2c-254e-48d9-985e-a196b1905550",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b1e5761-c4a6-4b0c-bf02-11ad7e6af895",
        "cursor": {
          "ref": "f52f5804-73bf-4878-b1ea-140c7958e397",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "58b5477a-a5c2-439b-b7eb-e737b10ff3fd"
        },
        "item": {
          "id": "8b1e5761-c4a6-4b0c-bf02-11ad7e6af895",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "bbca020e-b1a5-490c-81a9-7a9cd57c5ba8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6ed5be8-5757-4f70-941c-cb99cccb5548",
        "cursor": {
          "ref": "1309506c-aa43-4ba2-907b-1fdefd277159",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "eb39fe40-73a9-47f8-9138-ff0c6591e190"
        },
        "item": {
          "id": "a6ed5be8-5757-4f70-941c-cb99cccb5548",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "7fe2ab84-d5a2-43c1-a691-107e00b151e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d455c63-7a1b-4ead-9716-f3a005d6544f",
        "cursor": {
          "ref": "1c668eb3-c71b-498a-9e69-7b4951c7e981",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "73341ef7-1d86-4ef8-87ce-02d52468bc55"
        },
        "item": {
          "id": "3d455c63-7a1b-4ead-9716-f3a005d6544f",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "4a4704cd-cc13-4b2b-9df9-41ea6f56a65c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abb2263d-5ac6-4027-9ef9-f6cb0966bb2c",
        "cursor": {
          "ref": "7480ade1-a999-47e6-aed9-b8ca4834de18",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "73b40e07-7438-40d3-9457-effda0708f11"
        },
        "item": {
          "id": "abb2263d-5ac6-4027-9ef9-f6cb0966bb2c",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "877a7bf5-380d-4a86-b89b-fc0a6481d9ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09693b59-7379-412c-8d31-25137fd78051",
        "cursor": {
          "ref": "041613f1-d83a-4034-8c5b-eb727a1c849b",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "8f0c2a25-a5ee-411b-9bcc-a02d3618db1b"
        },
        "item": {
          "id": "09693b59-7379-412c-8d31-25137fd78051",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "bd60714b-4c1f-4c30-b4d2-1c4b6750b5ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6c7fc62-7e5e-4740-a78f-c7287a23b076",
        "cursor": {
          "ref": "de29831c-94eb-4f69-ac55-f9acddab1420",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "83ae7a13-520f-49ff-b090-342b436ff2ed"
        },
        "item": {
          "id": "d6c7fc62-7e5e-4740-a78f-c7287a23b076",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "d2651779-24ab-4d4c-afaf-e61943011cdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d359aeb-21b3-4c5f-b4a9-980528b3a3fa",
        "cursor": {
          "ref": "4a9a231b-b1c9-4554-a074-c7ff88cdea37",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "a0e6afcd-c491-4f47-bc99-91e5d242d52d"
        },
        "item": {
          "id": "3d359aeb-21b3-4c5f-b4a9-980528b3a3fa",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "18126547-6ec9-46fa-9521-4aaaeb84fb2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "460eab4a-bdba-4d1c-895b-5ce85fe41614",
        "cursor": {
          "ref": "6bc55073-ddfd-425f-b925-61c2d21bb1cb",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "dd74efdd-db77-444d-8ae3-75183184f522"
        },
        "item": {
          "id": "460eab4a-bdba-4d1c-895b-5ce85fe41614",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "3af80731-867a-434b-9688-88279d9621c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3b72507-bcb1-49dc-9df2-24d93d1b37a5",
        "cursor": {
          "ref": "360dabea-7759-464c-be97-88bcdcba8479",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "e196ff1d-e1cb-4964-8a86-7b8072c89e72"
        },
        "item": {
          "id": "b3b72507-bcb1-49dc-9df2-24d93d1b37a5",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "d9934584-f1e7-4925-93ce-4d22072aa4d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03088956-2b96-4aaa-a9bc-a82cfdcc0f82",
        "cursor": {
          "ref": "ff8d8b76-bb47-4826-8d8c-d599264ba474",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "f5cec877-d6b5-4513-a39e-91354357f225"
        },
        "item": {
          "id": "03088956-2b96-4aaa-a9bc-a82cfdcc0f82",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "ff5732b1-1e9c-4e48-b3c3-84305f35d46e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6318fdf-0385-492a-a492-13c510fa190f",
        "cursor": {
          "ref": "4c62ee98-4c25-4448-af0c-7203658e2326",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "aedcb742-89c4-49a6-b1ec-d7854a5512fc"
        },
        "item": {
          "id": "a6318fdf-0385-492a-a492-13c510fa190f",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "a126475b-1c75-40c7-89c9-7f63a8cc0169",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2db42a12-a3a1-47e5-89eb-492a9e0a08a7",
        "cursor": {
          "ref": "e0ee284f-3ddd-4021-85de-15312e1eacf9",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "ecddfa10-a3bf-45df-a690-5995c34d1bcf"
        },
        "item": {
          "id": "2db42a12-a3a1-47e5-89eb-492a9e0a08a7",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "e4b7ff79-8a18-407d-8808-3eb4133c2f6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5fa8035-49db-4753-b700-63142a349aec",
        "cursor": {
          "ref": "0db3211d-0f29-4f62-93f4-1be8a0292d54",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "865d24e5-b01a-40a0-80d9-0e1f51710168"
        },
        "item": {
          "id": "c5fa8035-49db-4753-b700-63142a349aec",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "dc480976-da42-48e1-b01e-e96952e043a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6f35015-edb6-49ec-9f1d-c33604728485",
        "cursor": {
          "ref": "83937d15-64b1-4a92-a513-58f3f5112864",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "512a3330-2d8a-4c3d-a06b-b9398b00c656"
        },
        "item": {
          "id": "c6f35015-edb6-49ec-9f1d-c33604728485",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "49a2b52f-6207-4035-8277-a8c977e40fd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa3f2af6-c072-4c60-ad19-7998918125bc",
        "cursor": {
          "ref": "07eb5579-230a-4230-8c7a-e96fb93b0883",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "7cc80b9d-76df-42bd-a356-242667e8a44b"
        },
        "item": {
          "id": "aa3f2af6-c072-4c60-ad19-7998918125bc",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "cf6ad333-058f-4da0-95db-309f40e4be40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "737c820a-b378-4cc3-929a-df8b39442087",
        "cursor": {
          "ref": "ca12adc1-2483-409d-85c3-c484183c3d61",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "07eb8bfe-3219-48b3-8a9a-4e1fb3f088a7"
        },
        "item": {
          "id": "737c820a-b378-4cc3-929a-df8b39442087",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "192b549f-a1e3-4111-88a4-acb715e4dcd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "912b0a71-bf94-440c-8856-bb89a082cff5",
        "cursor": {
          "ref": "6d71a21a-e54d-4625-948f-a0c928941df2",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "42700d85-2126-43f4-b243-c7f927b5c0cf"
        },
        "item": {
          "id": "912b0a71-bf94-440c-8856-bb89a082cff5",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "84c4bfc5-72a1-4da6-a204-ff517996b91c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6ce6e7a-4f0b-4386-8e1d-ea5c2b123e2c",
        "cursor": {
          "ref": "2a950bd2-58df-4ee9-8655-8718c2a15920",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "ec5106bc-a4df-4883-85ae-7336b18bb1ff"
        },
        "item": {
          "id": "c6ce6e7a-4f0b-4386-8e1d-ea5c2b123e2c",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "23d1f5b4-89d7-4802-91ca-b262afed0b71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac096d2d-0424-4216-8866-7b7c3166262c",
        "cursor": {
          "ref": "b452f3d5-aed6-4981-aa8e-624990bfb2f4",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "c79b0b84-a6fd-48a4-bc86-b0ccf8a02961"
        },
        "item": {
          "id": "ac096d2d-0424-4216-8866-7b7c3166262c",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "cf273f4d-ce5f-47fe-804f-26ce542d3d71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5b4ea87-f9b5-436e-a757-3daaeac03983",
        "cursor": {
          "ref": "fead67f8-88fb-4bc2-960b-05503f20fcc6",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "dec975d7-4354-4896-afc9-3e4005983d2a"
        },
        "item": {
          "id": "e5b4ea87-f9b5-436e-a757-3daaeac03983",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "52592419-d399-44cc-8c75-7dd603200e1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36b38c2b-a744-4b21-8731-94256da484ac",
        "cursor": {
          "ref": "750ec06c-cc5c-4ae6-acd6-d05d7538babf",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "c227f494-48d3-4f52-8a89-7550a23477b6"
        },
        "item": {
          "id": "36b38c2b-a744-4b21-8731-94256da484ac",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "24580224-0f11-4fdb-b3dd-7fd3ccac53bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49542bb9-77af-429f-92d5-99bd30dcd633",
        "cursor": {
          "ref": "c078fae5-dc56-40fa-846e-ffa50830dd63",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "c856d6df-cbed-425e-b220-5d1639ff0cab"
        },
        "item": {
          "id": "49542bb9-77af-429f-92d5-99bd30dcd633",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "fa053930-d298-401e-87df-4de188e78b6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "792261ae-d25e-4d60-86e4-b22c2feec2c5",
        "cursor": {
          "ref": "f3fa1308-85d3-422d-b604-a1371761c55a",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "91ab4396-c499-41fb-a0a6-739f71d63418"
        },
        "item": {
          "id": "792261ae-d25e-4d60-86e4-b22c2feec2c5",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "38865c78-8298-4a60-a3fd-8a2cbbeb09e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb395a23-2539-4bc7-980e-2c950f2bcd79",
        "cursor": {
          "ref": "38187ad5-fd80-45fc-b7a5-ae6486641b26",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "d9b2f5f4-8515-472a-a961-326cdc4e9d90"
        },
        "item": {
          "id": "eb395a23-2539-4bc7-980e-2c950f2bcd79",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "7410c9f5-b5aa-4943-98c6-920bfe6f5eaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af730898-e400-4a25-b8f1-20f6a201cd7d",
        "cursor": {
          "ref": "6ea81581-01ce-4f2a-85d9-b69b86be26bd",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "c3bf7554-83b0-4b3d-8be8-03852180a819"
        },
        "item": {
          "id": "af730898-e400-4a25-b8f1-20f6a201cd7d",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "3be38354-bf92-4be3-8ccc-9c30594a6bcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "840330f7-eba8-4f65-89f4-975b93279e9c",
        "cursor": {
          "ref": "4068c8ca-2c94-4c8f-af2a-7222fa5bb4ec",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "0cb7f496-2032-4593-99a7-31d988febf63"
        },
        "item": {
          "id": "840330f7-eba8-4f65-89f4-975b93279e9c",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "4072f0ae-eda9-4f59-8e09-f2f2e18e5f55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a89d9fcb-1db3-4ed3-bbe9-2b49c5294a0b",
        "cursor": {
          "ref": "c07a5c70-41c8-4523-9eb2-e1fa1b1fe99d",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "1cb0ebb8-9c28-468c-855a-4b1fc3b265cd"
        },
        "item": {
          "id": "a89d9fcb-1db3-4ed3-bbe9-2b49c5294a0b",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "98f7bfbc-0c02-4b8a-8a3f-04b8be56407c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1bd9436-fb56-480d-881a-8677008e4a69",
        "cursor": {
          "ref": "46de84a5-84b7-4c80-9af4-b19099e5570e",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "07e1838c-b9e5-45bc-a817-1a2ae22c2f43"
        },
        "item": {
          "id": "a1bd9436-fb56-480d-881a-8677008e4a69",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "158b1a2d-c6db-4b52-a49b-6cd0cfe96c28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2c5f26d-a99d-441d-94a8-7f3df7f8c85f",
        "cursor": {
          "ref": "190bb160-0b05-4b4b-91b7-a653cc95bc72",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "04f71b3c-ba18-4ce3-9c83-4eef4e40a680"
        },
        "item": {
          "id": "d2c5f26d-a99d-441d-94a8-7f3df7f8c85f",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "d1d0292c-3237-4059-8e16-21bef07a229b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efd915d9-42e9-4b8f-9f93-c64815575103",
        "cursor": {
          "ref": "dba76757-0270-4503-8233-a448279eb4dd",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "6e41cd85-9d50-4528-8170-c21c27dd7504"
        },
        "item": {
          "id": "efd915d9-42e9-4b8f-9f93-c64815575103",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "0caca031-8bed-4d0c-a9be-12e6a71af374",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c43d4a17-cd8a-4096-807f-7af8ecddecf6",
        "cursor": {
          "ref": "4861c1b5-adfd-4e1a-a8e1-f1d672c17a8b",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "d462d502-5609-4af9-8252-23a1e55911af"
        },
        "item": {
          "id": "c43d4a17-cd8a-4096-807f-7af8ecddecf6",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "d0a939ce-6b4f-4b08-aa63-d052ab845076",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05a51b91-e3c3-47bb-8e04-bb3f29e41623",
        "cursor": {
          "ref": "5339bb7a-40a7-4c49-8bc7-471c471546a3",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "60709d6d-d10b-46ba-8724-9776dcc5615c"
        },
        "item": {
          "id": "05a51b91-e3c3-47bb-8e04-bb3f29e41623",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "a7d6a4f1-cfa3-4ec9-9626-20338022a437",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99200944-ea35-4974-b58e-edd2fa98ff1b",
        "cursor": {
          "ref": "c14f3837-489c-4d54-ad41-94c523a22eb0",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "e5734e5a-b05c-41d6-ac4b-5179f50f7ace"
        },
        "item": {
          "id": "99200944-ea35-4974-b58e-edd2fa98ff1b",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "b6a153d0-1e7b-4836-a205-bc8f4b008923",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93b1cbe0-da49-4e5a-8959-ceeca08f3ab4",
        "cursor": {
          "ref": "54ee9df9-09f2-4341-aabb-bb6b7e8d5004",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "e9486cfe-278b-4051-9b14-037d18d0194a"
        },
        "item": {
          "id": "93b1cbe0-da49-4e5a-8959-ceeca08f3ab4",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "dcef149e-c50b-4585-b6e7-f45476c34ef5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e340992e-7aa6-49ea-9fbb-7f2c8d548517",
        "cursor": {
          "ref": "d5d73fee-0449-42da-ba0f-8620bd9f12a0",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "ee7ef975-3c4b-4eb3-944f-33344610a9dd"
        },
        "item": {
          "id": "e340992e-7aa6-49ea-9fbb-7f2c8d548517",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "5bfb714b-88e8-4401-b7dc-296ffb4cc3e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ad06721-0a37-4d59-a424-53a5197b3eee",
        "cursor": {
          "ref": "dcc84e83-00af-4ec7-9195-2eda7757ecf3",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "d415b6ae-4d9f-4161-9cc1-232e39f22527"
        },
        "item": {
          "id": "2ad06721-0a37-4d59-a424-53a5197b3eee",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "9d7c5acd-75f1-4730-b509-4d0b6d77efc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a60f1a08-ca54-4a41-8a9e-06fc381e83d9",
        "cursor": {
          "ref": "efe836df-c671-4a14-8473-7fa5ac00b0a6",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "c4b87a62-fa62-4d21-949e-1661b538b012"
        },
        "item": {
          "id": "a60f1a08-ca54-4a41-8a9e-06fc381e83d9",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "bb53596a-38a5-4cfa-93f6-7389a5d5b230",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4fbfa13-d25b-4d8d-a315-621bd7f6e7c4",
        "cursor": {
          "ref": "00ab72bd-6dc0-4cd4-8ba2-f812e3cf2df5",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "dc517551-8fb0-46b0-88bf-d9eeef0b7d9b"
        },
        "item": {
          "id": "c4fbfa13-d25b-4d8d-a315-621bd7f6e7c4",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "9262bb34-dd6f-4ecb-9c6b-d36517201e16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c20003ad-b54f-4a6b-a9dd-135d541674ad",
        "cursor": {
          "ref": "f94c01a4-aa20-4862-865d-028db975b98a",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "3a23570d-96f7-49d8-a425-98ac499fd33e"
        },
        "item": {
          "id": "c20003ad-b54f-4a6b-a9dd-135d541674ad",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "c402972f-df2a-4863-9db5-4bb418c3818f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "812df6ea-473f-49c4-92ad-42b468373942",
        "cursor": {
          "ref": "fc3a3dd5-3cfd-4317-b64e-a6a33251d25d",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "13564270-d466-4cdb-8da3-0903f17fdbbc"
        },
        "item": {
          "id": "812df6ea-473f-49c4-92ad-42b468373942",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "0f7bea7b-b239-4262-8c12-222395cc07d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d1dd04b-ab70-4e99-8baa-c9dee9babf7e",
        "cursor": {
          "ref": "f7ca6578-2647-4f59-8593-6e3aebc3ba9a",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "3981a700-5626-4da1-aca7-a6abab2c9811"
        },
        "item": {
          "id": "7d1dd04b-ab70-4e99-8baa-c9dee9babf7e",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "acdf2d08-8211-4130-b8f1-0548d8f50a02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b47dfa22-77f2-4bee-9767-d4dd3531f35d",
        "cursor": {
          "ref": "ddfeeada-c0c9-4a3d-8e07-c101eebe776d",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "92b0e0d9-ff42-4191-b311-49691341d97d"
        },
        "item": {
          "id": "b47dfa22-77f2-4bee-9767-d4dd3531f35d",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "52cfc1b5-13b1-422c-8065-41e71e3655e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94138fbb-5f89-405b-b45b-0ba4907a650e",
        "cursor": {
          "ref": "ff31620c-3f94-4e3a-9627-da4db3472e8d",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "efb73c21-56c3-4160-8ead-f2d01b49e2a0"
        },
        "item": {
          "id": "94138fbb-5f89-405b-b45b-0ba4907a650e",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "1c2062b7-e271-4949-b078-92261e9d845e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c86e589-e8d4-45dd-abce-b1aac5e67286",
        "cursor": {
          "ref": "b5838eac-0d2e-44a3-91f3-2a26c2dd2f5c",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "63f99da5-3944-4893-8e48-02f0c2800290"
        },
        "item": {
          "id": "1c86e589-e8d4-45dd-abce-b1aac5e67286",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "72466748-6b77-4758-9fda-5ffad588b914",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4390f0f2-f88d-4732-bb52-b79d816b9dd5",
        "cursor": {
          "ref": "4bbaed83-a57a-40c7-b223-0546e79ebd78",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "b6b89279-3dec-4723-aada-2e3f9fc07d3d"
        },
        "item": {
          "id": "4390f0f2-f88d-4732-bb52-b79d816b9dd5",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "e2f4c7c8-4094-42dc-b713-fc1105f7ca42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec573768-4a73-4716-aa4e-4b1911a9ea58",
        "cursor": {
          "ref": "87e0d222-4a09-4f1a-a181-2e3b336a2076",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "4103e56c-43b4-44c1-852a-2d66a75d739f"
        },
        "item": {
          "id": "ec573768-4a73-4716-aa4e-4b1911a9ea58",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "a41846d0-47ed-4b8b-9457-01b90898c0ec",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 10,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6e9c71a-7821-41e5-9834-5db94ea8aa1d",
        "cursor": {
          "ref": "bcd47b00-9c1f-4773-9431-1ddc3bc9346f",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "1e55ff28-405c-42c2-8107-6da55803a6c0"
        },
        "item": {
          "id": "e6e9c71a-7821-41e5-9834-5db94ea8aa1d",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "04691a5e-94e2-400b-8154-ea1bbbde1694",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 9,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e86f1f56-c99f-440f-8fc2-354389cf0a2c",
        "cursor": {
          "ref": "2b5a682b-19e8-4c96-b346-a012cfa43aa2",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "c533cbe7-fafc-4135-acc0-c4d73d3a99c4"
        },
        "item": {
          "id": "e86f1f56-c99f-440f-8fc2-354389cf0a2c",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "9da5921d-836f-489c-8aa0-865a7ec60096",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "273afb9d-d747-4acd-bec4-24dfced268c6",
        "cursor": {
          "ref": "2859b32b-28dd-425d-9c86-df2d9612b9a0",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "efee43b1-2961-4305-b914-063f13989a3e"
        },
        "item": {
          "id": "273afb9d-d747-4acd-bec4-24dfced268c6",
          "name": "credentials_verify"
        },
        "response": {
          "id": "55fd2039-af84-4824-a4c3-69f7effd01b1",
          "status": "OK",
          "code": 200,
          "responseTime": 26,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0fcaf33-dec1-4545-adbb-667e608cde32",
        "cursor": {
          "ref": "c1630bc0-39b6-4f54-84e0-1e232827d464",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "57924023-8031-4ce2-aef2-a7de59a6e2d9"
        },
        "item": {
          "id": "c0fcaf33-dec1-4545-adbb-667e608cde32",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "fae11f83-582c-4d02-99e2-45f73ba6d5d1",
          "status": "OK",
          "code": 200,
          "responseTime": 25,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "94c9d251-f394-47f9-9906-c56e5fed8dd3",
        "cursor": {
          "ref": "2e6d63ef-c09a-4e5f-8da4-90f5279fb2ac",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "d9ded15c-0dc3-448d-99e2-5630f8cc37b7"
        },
        "item": {
          "id": "94c9d251-f394-47f9-9906-c56e5fed8dd3",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "74a3be17-da73-47c3-8b32-3a7c49c0c2bc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 10,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94c9d251-f394-47f9-9906-c56e5fed8dd3",
        "cursor": {
          "ref": "2e6d63ef-c09a-4e5f-8da4-90f5279fb2ac",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "d9ded15c-0dc3-448d-99e2-5630f8cc37b7"
        },
        "item": {
          "id": "94c9d251-f394-47f9-9906-c56e5fed8dd3",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "74a3be17-da73-47c3-8b32-3a7c49c0c2bc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 10,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94c9d251-f394-47f9-9906-c56e5fed8dd3",
        "cursor": {
          "ref": "2e6d63ef-c09a-4e5f-8da4-90f5279fb2ac",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "d9ded15c-0dc3-448d-99e2-5630f8cc37b7"
        },
        "item": {
          "id": "94c9d251-f394-47f9-9906-c56e5fed8dd3",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "74a3be17-da73-47c3-8b32-3a7c49c0c2bc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 10,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8383a72b-b4a1-4936-941e-5a0a57716ab1",
        "cursor": {
          "ref": "69ffac43-50eb-432d-a2ff-910b6db07802",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "d2921857-77eb-4eb1-8f5b-7008a417b940"
        },
        "item": {
          "id": "8383a72b-b4a1-4936-941e-5a0a57716ab1",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "e7a32b7e-ae16-473b-b1f1-77d81b458975",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 9,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0659f4aa-1c53-4931-abd6-88c004df54f4",
        "cursor": {
          "ref": "eccb85bf-479e-480d-a814-c7e2dd67bf0c",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "2fee6ffa-d835-48f3-8ef1-0fb3def48e2c"
        },
        "item": {
          "id": "0659f4aa-1c53-4931-abd6-88c004df54f4",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "2e9a0050-9cb0-4c90-bc14-66aadb8842cf",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0659f4aa-1c53-4931-abd6-88c004df54f4",
        "cursor": {
          "ref": "eccb85bf-479e-480d-a814-c7e2dd67bf0c",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "2fee6ffa-d835-48f3-8ef1-0fb3def48e2c"
        },
        "item": {
          "id": "0659f4aa-1c53-4931-abd6-88c004df54f4",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "2e9a0050-9cb0-4c90-bc14-66aadb8842cf",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c05dd565-f184-4db0-aa85-4c1138701219",
        "cursor": {
          "ref": "7aaec145-c3a7-4a48-bf83-9db7b935524c",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "f853a72b-24a5-451a-96aa-746663a28eb4"
        },
        "item": {
          "id": "c05dd565-f184-4db0-aa85-4c1138701219",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "49b9c353-3b02-4f06-a18c-721804e775cc",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 9,
          "responseSize": 164
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c260362d-2bab-4f43-8314-fc5426183e2d",
        "cursor": {
          "ref": "dba09cdc-2f55-4702-9c02-5b178d670636",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "fe920e47-1f13-49f8-b2bb-ff729fd63618"
        },
        "item": {
          "id": "c260362d-2bab-4f43-8314-fc5426183e2d",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "8fdddc85-ae86-447a-be48-03cde053e6ab",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c260362d-2bab-4f43-8314-fc5426183e2d",
        "cursor": {
          "ref": "dba09cdc-2f55-4702-9c02-5b178d670636",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "fe920e47-1f13-49f8-b2bb-ff729fd63618"
        },
        "item": {
          "id": "c260362d-2bab-4f43-8314-fc5426183e2d",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "8fdddc85-ae86-447a-be48-03cde053e6ab",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83f448a6-c1a8-4c45-b81c-9a7cc9052069",
        "cursor": {
          "ref": "0497da8a-5c9c-41c1-bc68-1cf9bbf013c0",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "82647b16-37b7-41b3-8880-51ea7a288832"
        },
        "item": {
          "id": "83f448a6-c1a8-4c45-b81c-9a7cc9052069",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "4730ee16-df5a-425a-8c44-c29175ec1813",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 9,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}