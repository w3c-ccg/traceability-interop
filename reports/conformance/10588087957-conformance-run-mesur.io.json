{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "3d71af89-4d72-4914-a74e-4cfaba4943a5",
        "name": "Clear Cache",
        "item": [
          {
            "id": "4d755eab-29a1-4a34-aa83-59a3a6691ee5",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b1950a32-47c5-4a83-8e54-18672c22351e",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "332020cd-b8e6-4b13-87d0-2ddff27fe98d"
                }
              }
            ]
          },
          {
            "id": "ff9571d1-1683-4ffa-a0e9-6078def9e2ff",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "bf26b733-3884-4440-82a2-2f9f129ace33",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "7d2c82db-59be-484e-ab3f-014bbe9ce389"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "787f525c-26c6-4feb-b784-80480b41975c",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "878568a2-c8c7-4057-b6c0-0d23eb413b68",
            "name": "Positive Testing",
            "item": [
              {
                "id": "668acb1c-a69d-499b-b672-e19db831e659",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b06483b0-b16f-441b-814e-096c61c5eb6d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0ff07fbd-d723-44d0-97c9-a3ce9c7289fe"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7bb93cea-802b-460b-9641-f0f327f0bb39",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c0ce1ccc-47de-4e8d-800c-b2a5f62b107b"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "8d121eae-7683-4eb1-8a90-e97b327778d8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2ec49b71-f236-4878-b7d2-dc397d0ad3a5"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fa1b083c-352e-42f1-9102-f8b947aac8e9",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "59575ed2-128b-41f9-aa5b-f347071b99b1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0b189d1f-9c8e-4c47-9ecc-3c1f06ea9c8c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "42b24a29-d71a-4297-9709-246683ffe6ea"
            }
          }
        ]
      },
      {
        "id": "3d608d1e-6d51-41b2-966e-2aa00836e5a1",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "84a73829-7151-440e-a0a8-b26e9f7854ce",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f57d2a9a-5c91-4f6c-804c-6467e40f27e7",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "57d1e393-c3e5-4844-8387-b0893e507151",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06314a68-0400-419c-90a5-a808d5c5e2bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3ff8aa05-ceb8-4963-9445-4b976405b1c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f53bfa3-5a15-4022-9c24-52291199ef4a",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50b2b9ad-e026-4d29-93e0-d413e38e5709",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dd9fe2bc-be0e-4f49-a7da-d5cdfa4014b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30a0a3ad-c617-4dbe-b2e1-9383b24a0c13",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f83ad5d8-2e94-41c1-981e-3651a5ba9b67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5a4ce17b-3848-420b-b8a8-e06752535fc6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "15144ac2-d608-4eb5-841f-9151cc344a4d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9ab97780-5463-4e3d-a69b-81ac395284ae",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52664ac0-e6a5-45c8-aef8-b8cc123f6822",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b2cb89c8-0479-44f5-853e-70d2d55173bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d7259f4-860b-418e-a701-d57db5bcc181",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "baae7c17-7c47-4b7e-8d48-5bfbc08388ab"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "c8ce20bf-78da-43da-a8bd-bad154b74046",
            "name": "Positive Testing",
            "item": [
              {
                "id": "36aa04ec-3f22-4877-b142-1e9cf3ef1aad",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d604ae33-adfd-4fec-a96b-f3212378ad6a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "e598e03d-ab71-4c5a-95d2-249b57db938c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fcea7817-2ffe-48b8-a974-fb847fbb5226",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "b52d5e48-4cab-4798-8c9f-f3d4161b70c2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e13d6915-39c6-4c7c-ba5d-62bdb5d9e735",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "20335ee7-a780-419f-aa2d-056ee296f6b6"
            }
          }
        ]
      },
      {
        "id": "0d66b720-cb54-40df-ad52-013fabf42db4",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "47322243-a77c-42cb-bb3c-d5a00b94016c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1200b6a2-5190-4301-a41c-9658717c0d2d",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "8f848446-655d-4c93-9d30-5b1ce6185ee2",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "604975a2-72bb-4cb8-a861-d715d18ae202",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75c6117c-d625-47d4-8c14-b9bbdd339051"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa47bc72-e067-4d5e-8618-0bcc9c59b06e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5e7f938b-5af6-4727-97a7-151909c50f55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b367e001-41a2-4621-b56e-a478d705db3b",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "606e9f8c-43ab-4310-bc7a-bf3cebea0c80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eff9a1be-35a6-4780-9236-84d77b63b60e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df655399-15e4-4611-b2e7-7007fe6be6c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d27e78e3-9150-4657-a5a6-792f145df914"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6de6b2c9-cac1-4c1a-b717-901283aad398",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cebcaff-393b-4ef4-bede-e9a3382824b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c21b220b-b691-40d5-ace3-3d320dd7da49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c0df4a1-8237-40f4-ab40-ceb042b1f189",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d52d3902-69f2-4c56-9aa1-9f6af17e6a96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e5c2856-7370-4686-9da3-cec7e77def74",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88616191-c2a0-41df-b7ac-041644efec4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "956ff992-a7fd-4455-bf53-d146dfa15927"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6f287ce-0971-4a27-b448-33236a5b1fda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "01c857b2-8418-4b9c-9915-913cfef93a68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c3afa41-37c1-48ee-a9f7-832cb9144e0c",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ab2eea6-2caf-42da-899b-229fabb0f1e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2b13bb2-7e6e-4cab-921a-bb773115349a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30d99b37-9d0b-4cfe-b5b8-6ee931201afb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2870444f-4fc0-40ce-abdd-f3dd0d36a04f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "436c5bbd-8c91-4bcf-ac1f-a1d9ecfdb82b",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "881235a1-82d8-456b-8e35-fb2426b971eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfc860fd-8a6a-4826-a5d2-c53c05f5c154"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f41acbf-c58a-4b2b-a8bd-d967995c7582",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e17bc499-9ede-4a15-89ff-6a3547d88533"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0862c205-97ed-40e0-b3ac-dd4bb3b2ccf5",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "480f8eed-9f85-4e32-b72e-4fbdcbb419fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d708d8f3-ef11-40fe-af62-8a446bff19ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "142d4697-75bb-42f8-91a9-e7d43a006000",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "086c31f9-16e8-45de-b3bf-a5c29a7fba31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72475ab9-db89-45d9-98ff-5ad6068aff36",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "918f83b5-6eec-465f-b5d6-9c8830e83bd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c58995f-4c8f-4ddf-9a66-d2b237c2a0eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "904b3069-86c0-4fa7-86e6-85f3f77b65b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f9304247-61ad-47d9-8c11-cb05f60f5bee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f922f05-7ece-4075-b98f-e650c2ae834f",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c660fdb3-69bc-4b30-b41b-ccb3249f71d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62a126d3-0481-447f-b88a-1e4ccd068937"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d60ce3c-4f83-4567-8807-ec9acf463ef2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c4a20d15-95a4-4b87-81b4-97513e19c9c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ac3aa49-e721-4be7-bc0a-1f185cb4aaf7",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f360a1bb-8217-4831-b867-c7153b9b3085",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8153ad7-a0b4-4463-b0b8-d6b40773f892"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94c4393d-74e4-426b-987d-e0df1e3dfabf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "178ee96f-4793-4102-952f-d51329784f44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c9c1544-0095-4b98-9eb4-9eb833969f6f",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa6ca6e5-9d62-4de5-a488-609fb01b94b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c47f7752-3b74-4340-a411-417b1ca6ab5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e7e1725-63a3-48b7-9e5f-0553be575d84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cfdbf24d-346f-4cff-994b-133af95e1592"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba37a395-d013-46de-884a-79c8732784f0",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2347bd8c-aed9-434d-98b7-4f496ba33dfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b1467c2-2537-48a5-87c7-02d1db0a8470"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d02f6d4c-c16e-4537-a64b-ea3474060079",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "be70b05c-2e89-45cd-8461-7a6fcbf6bf99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6005b46d-fd68-4987-b746-3b95c05b1540",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2de2d646-a8da-4405-9bb5-ce14f946a978",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c32e4b66-05dd-4657-8f66-02f930304089"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29726e72-2180-42fa-bd81-90952b1df406",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0b151555-9363-4923-96df-6fd724ec7683"
                        }
                      }
                    ]
                  },
                  {
                    "id": "834940e0-8549-4cdb-88cb-dd7f36bf5939",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b6de4dc-f5b8-4b35-a22a-03e73ae3024c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78142d6c-c60f-4e5b-a73c-58684bfd12d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "944f34cb-e898-4437-a9c2-daa4fea1e352",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bf0780be-1e65-475a-9a93-dc4b7d79c34d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddf37959-c1e2-426d-bf08-dae8e5ce0dc7",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99ad18d2-832c-4e1e-8f8a-dd6ea540db2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c24b778f-7ee9-4627-94af-ca9ed681ae7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "516bbf71-efc9-453c-aec7-8e9b31dc1dfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bc56a793-cc28-40c6-9b87-2935b3b18e63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d839ba31-fe6a-4d28-b155-6b84d6fffa45",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5343ac69-416a-4bfe-b779-ba82e46c0b4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8c40516-58c4-45c7-b0a9-e18d52651734"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a0321a5-52bf-4520-bf11-d9e34e6a98b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a9ab7494-ea68-4d54-8bca-85d14371cc52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69df010f-fa26-4085-8444-cad1b1e628ac",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64c8462b-1157-48e5-9ab4-e35b8f741037",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a62ce6e-f427-4043-8a13-f990e06f0e19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "886d66b2-51ab-477e-9caa-7062fe06ac85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bd2347f6-77e3-4f83-b356-efbb9c4e12ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "361e5daa-a1a2-467b-b295-780de36bcc71",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4021d3f-8f75-4509-8c4d-b84cd2197235",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46633651-326a-499f-a350-fe7c051b4147"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1267ae67-e811-493b-b433-7a65a1864453",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "b1f2071a-95b6-40a2-8795-c2e17f3cb706"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1005336e-4dd8-4b64-b416-0a905ace987f",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0786547c-1531-4efe-b5ab-94c0480f50aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f488caa6-2626-42b9-8de5-94666755c34d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7455e38-1603-412b-af72-c244d12fedda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9cd7c702-3040-4c80-bee1-ccb00376ac84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82d9d0c5-9ccd-476a-8454-90eb388566f0",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1ef41e5-7f64-43dc-9aa8-f4778998aa66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e06c666c-8737-45ba-ba8f-8544aa068bc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c5b1747-23cd-4cac-a2f7-aa3dfb95f967",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f252cdf6-5d92-4528-a25b-bc8e3d70ebb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfaaf8b8-b07e-4aa2-9249-82bc17fac0c7",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "309b7734-0c89-45dc-b477-f01a6a0923d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e5ca7e2-5341-4b3c-abba-e783b7601dff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f68aa9e-a10f-4f92-b0eb-190612e30678",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "78e8e73f-ed35-4fa9-9d6e-d58dec7b2fb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa4fcc1f-cfa4-4170-9f85-7d2e68688832",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7caa3e6-e2b2-40c9-b6fe-f0a660569dea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a849e1a-922c-4223-886e-39ab2ebaa0eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acd7ab0e-4034-4428-b5f1-fefe88b01c19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4eb2b2a7-6d15-4d57-96cf-00fc78507674"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffbbe183-18ac-4024-978c-1678820976d5",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce238a46-c03e-4ffa-bcbf-11ed22f0d0ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71b91c64-34f5-4da5-b6cf-edd2b9587d80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d4e209d-cf47-4018-8a63-4bc83e2fbd9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "97e12a73-86cb-42ac-9077-e92bb33c1925"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddb7f783-4858-47cb-a176-88bb3113ec86",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f9d2c89-0028-4f2d-bd93-410ea9462dbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2c9e0c8-4a28-4760-8f80-74674cdec3f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a20f4aa-00e5-4626-b939-33a18e6fb442",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "612c66a4-9c6f-4755-af35-d415fac293ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "563e84ec-9eb5-4c10-a5de-ad7a4f8c87ac",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dea012cb-6e63-46df-9b2e-9beab6ad6a95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c21c817e-b71c-4615-9837-a0535f9d14f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bcfd088-80ea-45b4-9c63-9ba19b696e74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a962daf5-941e-4eb0-a8e3-d5ab2ea6cc74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3f0a5f8-661a-48b3-9773-ddfb12fdf61c",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec5f9184-b2ef-4605-8137-11b8d1d9d2de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3c8cc4b-b6e1-4710-b507-b5193a2ef810"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9b9be0d-6e95-433a-9950-49f28077a702",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "37e4d9d4-7c1e-43fa-b28f-5bb02d018f46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4081fdb9-eeef-4321-b5a1-c862de14287f",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "436ed0b7-5cf9-4853-b0ad-ab2cc6dee3ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23beccaf-e17f-4eb6-9dee-b431e853d0c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a28ea07-3c2d-4d4c-a1b2-ad0c18f4e2a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "df4c9625-5436-486c-b0ee-3e43011fff15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c1d0fb9-82af-4754-b86f-e211f37bccbd",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59bd328d-7302-4d52-a474-018c688a306a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e3672d0-fdbc-4d1a-b720-4a10e3c05123"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33f13902-0a85-499a-bde8-78e0cd8dfd9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f799897-e34a-44e1-b90f-8cf228daef01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e07346d6-2c1d-4caa-86c1-bae1105124fe",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0867f716-a0d9-41c7-814a-cb4421dc629d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b773546b-6258-4eef-9821-6be6a517f1f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49a095fb-715c-407b-99bf-60bfe61852c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b4218e49-51e1-451e-9e5a-2ab70f95014b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34437b07-1cf8-47fb-8d10-7b4ddde14eb9",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e716963-5b2b-4f55-9d62-da85116fbdad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5f3e830-b92e-4b3a-8888-f73a4e608115"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94da99e5-1357-4eb7-bf66-525f29b93bfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "e8829c42-02a5-4718-a78d-98fc739ff6ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4316ed8-858b-4e23-b544-bed0ec9dd73d",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae86cb91-2919-419e-801c-ee37524f0b40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47c1c9fe-6cf2-4902-bca8-78959b98153f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c9be534-8fcc-4643-913a-f40d0dbef1da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "30a93561-2a4a-4695-abc4-938f4524362c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "626252db-5b06-49be-85e4-4fa1f7e2045f",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2805fa8-93f3-489c-9f51-9a8acb69f692",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e15c65d-1a4b-42e5-86e3-a9519b578f1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a8974e1-f267-46ac-854b-fc73e96ea520",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "baf329e0-6b88-4210-8f45-fa0e774ebb54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d783a2e6-277a-4851-b698-3f0c81e0ed75",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9712f3e5-19ee-42f1-99cc-5aad4a32555d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c271f22-89c7-47b5-8148-4471cbba0fb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8fd8f20-1a09-4cfb-8598-04e87850a49d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d978cd24-5618-491e-8bfd-5522ddd73a71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfecf862-fef0-4a86-9255-215f6d903510",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b37888e-1a38-42b0-9119-6bff53cae89b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1640f5a5-6aa5-4be1-ae63-e286f9679789"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bef9f62e-f7f8-42a0-a090-db6bdcd69c2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "11408b3b-6986-4c28-9db7-4adf9f410277"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62b34d5f-03fc-412a-99a6-404a8ddddcfb",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec04794e-58e1-4901-82d4-cc628b250d07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b16a6d23-af77-4e20-895e-8542f754d264"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "793455f4-bbf5-4f2a-bbf1-4fea4e1fa27d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "9d6e4a06-4090-4ec4-80c8-6ef6d19437ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5eacbc79-5eeb-4576-9712-3c231319f1c6",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41a23dbe-3a54-4382-96a9-4cc190cf11b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b9c94b1b-3ac0-45ce-8a23-cd37b589b9c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "504c3c68-46be-4f06-9c92-7813b5976175",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "187a63de-c001-433d-9601-604590e06b99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9458b509-5b9a-4e13-adf5-e427d60ca302",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11072cc1-58ed-4dcb-85e1-fb6d7d7a9aed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d7ff787-e253-46d9-90a0-7121cd101718"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bb04db6-3349-4f1e-abf8-3c6d5311aec4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5678ce09-d4ec-4bd1-ae05-a21aa02ffc29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e2ae0f6-19d1-4269-bc5b-53eae15bb3ab",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5975555-4e32-4b75-9d81-526920d1df01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6f7c633-021c-41bf-af66-f0b62992068d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d873fe3-c113-4d9c-a638-397c216feb01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e80b82e0-20a5-4673-9707-2343a2724875"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ea92331-116a-42d4-8eee-e48edbcb11ea",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "501dc6cd-6013-4176-80e7-8525e45fd39d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1cad7db-7569-4da2-acd5-0060669428f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ee4043b-18bc-4629-b722-7abcbc09d9f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "db7ce33e-6bb9-420b-b78b-e3928dc68d0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b74b769d-7e60-4009-bf4c-3d3bef6502c8",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0e77ef2-3875-45f5-8203-f31334c3eae2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "644df2b2-ba97-4244-a298-3b9031d9bedf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e470c983-e490-4048-ab2a-f11b75407da3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "5ca65576-cb47-4673-b4c9-d72a35ec4c13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a676759-6201-4088-9db2-bfe7481b9971",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "794b7641-428a-492a-88c5-6d4db676d8b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd101580-29bf-4846-af5b-b2565a51e652"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95596199-cea3-44a1-8a5a-5a2d05ce017b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "d1339ce0-e5c5-430b-8329-346e365db96f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f3daee1-c0b3-47e3-8dc7-28150b549047",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94b7f588-bc97-42f2-8519-e6ab9f277cc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc986456-0f34-4b45-ade2-649afa99e3f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dcbbd04-dd3b-43bf-813f-e1a07b4a9081",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "8f2c7291-a2e3-48e8-8d16-d60fa7134ab0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc3f649d-2383-4ca9-8135-b3d587c5c31e",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64100e99-4287-43b5-a4fb-00bb5b09dfda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "253fef90-c7e8-4188-9ec2-b599d16f41dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ebb8fec-1e16-4fa1-bfe0-16f6a70c82f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "2dee28f4-8b8a-498b-9bd8-edb6b6ebb761"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3312acf0-d580-439f-970e-5b1398f6bbc0",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83584cb0-3b9c-4ef7-9c49-c5108839dcd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb07c2af-5c16-4f7f-8565-1da480f1f2fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef8b322b-cb41-472d-a876-1398b16d5db7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "f9a6c09b-6e61-4572-95ba-0a1293b18bd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c604c30-15bc-49ee-a970-eaeb0ff2458f",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec1e055b-8749-41a9-a488-c42836b979df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c09a48a-3452-4b93-adfa-e6702fe88124"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d0ba987-dd0d-4840-96f4-29eaf3fbc3a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "94184ca9-158c-4c64-a5ad-49b87e48a614"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb75d8cb-5e3e-47b1-8151-762f17eca21b",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da0df49f-9a4f-4607-8a17-dbcdac7dc192",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a6c1516-386c-4a6e-a8c4-3a466b3241af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27ca15ef-4221-4ff9-b7fe-ab16ca00653f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d58fcaff-8679-429f-86d9-bb25ea28cbf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55986b4a-6616-4977-a4dd-970f0198b7f3",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f0ebad1-9864-4903-b1b2-677b36b8650c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e7fdb68-0693-43c6-a0be-ac276695179c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b44b32b-8444-498b-9907-68b60ecf5dab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fc792ed5-30ed-42bd-92b6-64f6b9b19349"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68e45f68-2a1c-472e-8f44-8ec9e6b3a0fc",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bc4b0fa-eb9b-4c32-a21b-38fbdc463158",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39166cb3-baa3-4a39-a7ff-684a3ff08d8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a4c1c48-aa6c-4799-84d3-00b44d73d0c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fc9b5073-2fb9-458d-8828-3f8817925470"
                        }
                      }
                    ]
                  },
                  {
                    "id": "075c0034-92b8-4c59-9af7-8b86c0553a6b",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0211edc-fce9-4b48-937f-e09e8683e247",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0789c6d4-bae0-4055-833c-95ddf5c2d318"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eedcdd1e-042b-421a-83bd-ffde1f76b95f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3e95f481-b071-4b28-b36e-668e45b997f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64b301f1-00b2-49ab-ab10-48af059c7bf9",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be8df6c1-2d98-43aa-8852-2f7fc9feb8f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b82291c-8d09-44d1-a8ad-82b1daa6a4e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9906fea0-9438-48ff-a06c-5e0aa83dfef3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bf70e469-af35-4264-9a4a-6ae70f89a856"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f1e3141-09a8-4fff-8b7f-0e53305b30b0",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "baa29f55-55b2-4dfd-8700-ebe4edf3f316",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8469af0e-4a77-4520-a2e4-6e44dc791b08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac0ab449-384f-4ae7-9221-f3aa1cad0f12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "9d8b1149-52b4-4f1e-9992-3706f8c953db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "321b44f5-a0d7-406b-b3fc-40a49cd40af4",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2f12209-545b-4b3b-9ea0-d51d9c596171",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "167de04c-d29b-4fcf-beb9-7909865365d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c255cc4-746b-4a99-bff5-f4e34701c537",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c7101f9-8c05-430a-9dc6-70dd3c09b496"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c83b9078-125b-44e6-8b3f-375dfa25353a",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83089c27-cb25-4427-9a6f-dfbb10e83d47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08fb5046-82e4-48a3-b875-51d00d39a15d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41c0e20c-7ad8-4fed-90aa-e93abd995800",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "371f9097-4322-4f02-a541-2e0b7503dd2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "514ade0f-2a36-43b1-ab52-15a37b606869",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59010148-aa8b-41eb-8e8a-74aa5b450173",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f2ff523-9c82-4fd7-b63d-627e9600006e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e283a00a-b8c3-4852-8d63-a392ccfd516e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "aa9372c4-a15c-4ea8-85b8-4a33460e723f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04e1edb8-4999-413d-97e2-7f8ba0259066",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfe9914f-cc85-46e2-bf32-610a4104810e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9729c383-8822-4ef1-8e27-1381a3d08842"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbfb793c-ba0e-4394-8cc1-a1e5ae708f51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ef045d7d-e95b-4da5-b784-7d9c6b979714"
                        }
                      }
                    ]
                  },
                  {
                    "id": "841c18fa-f3ba-4bb9-8ea7-be64ba472321",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4a77608-f8a1-4791-a633-987e1c186359",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e159de7a-84e8-4077-97d4-5cd0646dedc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf18b54d-4242-4aec-8a3b-e2c3e233dcaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "9c90067d-7129-4b69-8858-7e4b4a9a67af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9016f945-3af9-489e-acb5-7ab130d8b0f4",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9eeaefbe-f436-428c-b1d2-c484f0267ded",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5415f7f-1a1f-4197-b703-25adaf126bb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea02fcdc-31cd-4b23-a65f-b4a899f495f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "154e9eff-0c3d-49bf-9dc1-9b65a4db38fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "315c2fb1-8637-45fb-91aa-bfda38416aef",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c78e4cd5-a1be-42d9-b547-090a78426f0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf2d0a48-11e3-4b3f-986b-9da9d662fadc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4325e7c3-cdd1-4629-b56e-a9b7a01f88c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "3598f5cb-bc54-4629-81e2-eceafc5444fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e64c534-f254-4ce8-b133-21a22364ba89",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "333c45aa-204a-4339-aa5c-96892c269867",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9096a948-bb80-4aa7-a959-a436fe9b029c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5be3f20-58a9-4cf6-9c84-4a429df7bacb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "97b1639f-656e-4771-aa5c-4ab53d50940a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ca263ff-28f2-4988-adac-007c16dd6e7c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44a306b4-22f9-4ebb-8bd1-5175a2928c61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b08edd6-3570-4b9c-ac2a-9220e9692e84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "feff4935-817c-45b0-a385-202e53fb5d5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "cd6c6e71-8645-4f77-b667-771d808bd26d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f03518f5-9d0f-4c13-9b67-916640048593",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57571604-a7fb-4a05-8c23-09343c6c1410",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8877cbe7-0738-451d-beac-c4fba60b2984"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fed6be9a-09d5-4c70-a23d-1e77149ae963",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "9760bde7-5785-4574-9b24-b95ae3aa8552"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab2cff7d-29b4-4e2d-86d4-38d14ffc5cba",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a468f1f-e1f4-49e0-8652-d9b2c33d870b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b99c4df-21f3-4b6c-88bb-09a7cc229d26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0499035e-d17f-4b5f-a1b2-84d37554c457",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "87302872-81cb-4370-a3b5-1e46e8a21422"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d23b7305-414f-4cee-810c-8121ce6fcc01",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc9281bc-3603-4122-b9ae-e0d3c3ba3481",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7df01d7c-cb88-44ee-81ab-b7ff5a15c276"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71689ef8-e4ff-4822-94a3-6bac9daad6d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "6c0dd499-adc0-470a-844a-76263ea305ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "332e885d-5d73-463c-8f36-7c7faf829c3a",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05c6d3e0-f643-4c0b-ab8d-06571a71afaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b71f0ff9-dd70-4ffb-a725-2d2347baf986"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0c1c055-d5bc-4029-a480-81f0f99aea9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "88c974c6-7a73-483d-b2b8-75060d80a347"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1404d568-8f60-48cb-828b-652b8ce9f715",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05a98636-6a5e-4b67-9f98-228bdaf4cd74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d85a1523-7a67-44ef-8914-ba6d0846c71e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01375893-db84-453f-927f-0c8eb646175f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "84dc54c5-5c61-4f9a-8856-e948ee179453"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af77a07c-fcca-4e9f-8504-0b083058301c",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "423aaced-b156-4fca-90d5-4f7af2bb197c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f314fa9-b428-4eb9-8ccc-997bd5fab706"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f260a7d-3a99-4f24-a79f-d2f4d2eb5c63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9b2c3caa-071c-4ca3-8c4c-370864a717f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bae815b8-efb6-4cb5-8a1d-bfdefde69309",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38859ca3-b238-4bc1-a60c-1910b147112c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbd842cd-c920-482a-8757-ab2a1424eb9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b562248-816e-4654-80de-e355aa3937e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4def6b95-38b9-438d-ad02-2ed640fc3b1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4c54ad9-ae21-4939-a672-c3775132f020",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd625697-9fb8-428e-9c24-a3e6937c2f26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6621c333-5bc4-4259-9de8-7dcc0d69d4e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1665702e-a614-4b07-b9d6-af7edb562012",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "4036f140-f298-40f6-a6a4-b6d40e6ee6ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81827f96-0ada-4a2f-ab17-268b1f8a8061",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab1b96da-536c-43c0-8dc5-48f4f51b2d4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f5258a7-4274-4f05-93e5-72d4e552974b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99753772-0966-4610-a172-ef83f92cd5d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "096a6e16-0fa2-40fd-b7b8-f2eaef84e370"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a89f1b93-ef06-4ba3-8a13-eab0c586a64d",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d83258a-68ce-4d2e-981a-da569fdff649",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a79995a6-b22c-4fbf-9c69-c862bbaed407"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45cc7f71-df58-4cf7-bf0a-3fb84abf315d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1abde862-2cd6-4050-8298-abd5a9816b0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d423a0f-3b03-41f1-9418-898285346263",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed64d864-6c7e-4576-9332-eaf5009ea35c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9dc6e58e-fc3f-4f65-94ce-8c6eb0926dab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef1e4892-1ac9-48a8-99bd-9ffab0a43780",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2097eb0f-a86a-4118-b230-13caa9f0868f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "144f67ff-9352-4cfb-b24c-f9a637b39f66",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe44525b-f6da-4c99-a806-39d5da863c20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33abf57b-5f43-4c9f-b7eb-ead42aedc8c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ba57666-bc92-4ab2-92f1-72c474db6273",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "01fc06db-2f9b-4e04-8d8a-57084eebf238"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fe4e0d6-753b-4d3c-8182-1602e9e4f903",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8b91d4e-5d5c-4d13-b127-b8cdd1387a8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc553ef0-861d-438d-94f2-debbd9a4d230"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39545e69-fa5f-47e8-a1d7-be324e2cbdce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "598affe2-3290-4db6-b79a-85175e2593c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47a01892-eaba-4914-b13b-f55e8c9170f2",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88cae2fa-9f67-4a28-9414-c6b381b577ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdcadb2d-3b86-4310-a6d3-fb4f013e4e06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0374d17c-0a4f-4f09-8586-07d6e826edd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "27cc383f-a4d8-44ae-b0e8-b20df65a872e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92bb792a-8cdd-4fe7-8aa2-d5adfa4f0169",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f5b5dac-1b4a-4efd-8740-d37f8fd6a310",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48008795-eff8-4648-8905-3bcbff35eb25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8d93977-a4ae-4b44-a27e-af5bb2fffc7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b9b29cf2-3f83-4c76-ac9d-712fb5c75a4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3fa6cbb-848e-4ceb-ad34-22299e09a6d6",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6448519-9f91-4bfb-aa4d-d7224c5ed848",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f92ed6be-4213-4f77-8e4d-71e87dc17aa2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd681eff-1bcf-4082-bb94-915d72218f21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "05fbaebe-a948-44a6-960d-ca866cdb0381"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27b891cb-51f1-4ed0-b7ac-d096f0313280",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bea22259-99ab-4096-ac18-6ecedfcc583a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aaa3c470-843d-4734-a708-24761ea193e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ada7f24-86c1-45e2-b821-e78414da3935",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "366b652a-992c-469c-bf54-d17b6dae03b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f55532a8-fc35-41c9-93d5-6a41129fdc7c",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ecd1ff2-f5c1-4af2-97f0-858c5f948c8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58488591-0d64-4b83-92bf-fd169a2d8963"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c66fd27-0b0f-41d4-b9b1-bb4e286b4240",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dc4892cb-4f4e-4665-ae14-742839cb48ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "615c3754-fdfe-4b65-a44a-9da22dc90303",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74535cdd-8f5f-44c5-a60a-b0601928ed1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a232504-79d9-410f-97f6-49f594277195"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6c73276-4387-46fc-a933-e1b8896d5526",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b2cbe2bd-2abb-41ff-8c55-987c4141b2b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f1d99f0-bb55-4305-a0f5-f72e03fa5a3e",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17fb3c71-4aaa-46cc-84cc-4929e46a1e0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ca0f77e-008f-4bdc-b4cf-0ffe720e31d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80953079-5fde-4fe7-b73d-143bfaf851e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1fdc012a-7f7e-44a2-ba26-70d609dc3714"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9d01c43-6d67-45ec-8d58-c273b9bd1a45",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f63cff2a-37cd-4195-a62f-cdd463bb2c6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8902c4eb-3c10-457c-ac89-9753c9ca4eb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3575d01a-7dff-40cc-9461-a753eb09eee3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "6d138ed4-ad2f-4596-a7ee-91f9b5e5b0f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9dcc1fd-e9e3-4924-85a2-1c571de0c5a4",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d113670f-57a5-4deb-9371-b97c8f3fdc8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "107505dc-733f-4c82-929f-9de4804d177f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e0f3e17-3781-4bbf-89a2-d85e9c1ba025",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "db5c9d6c-ea38-4689-90bc-0ea474d1288c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baf1197a-a598-41a1-9a3b-71927fccec46",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae6c096b-5e55-4306-8a64-bff12ae7b684",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07ee5496-a545-41a9-a2bc-8066a82d33e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb7b06b3-7fdf-4b43-a825-8cafb646758f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d94b8fa8-6659-49df-b678-673b4c064b2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae2f4ede-e34a-4c5b-8e02-e668ab73d6ad",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c620094f-d659-44dc-9ed5-feedf49fbc9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7e3950d-e46f-4174-bff6-384e6338b04e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b86c38d-56c1-434d-ae25-f55477f43aa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "68b37a74-e96b-4851-9ada-3366aafe83ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfc60db5-52fc-4110-b6df-7254c36aa7b5",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61b53bcb-3d1f-4be5-a567-e7aad2bbd1a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "340fe622-705b-415e-86db-649134b7501c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7b5c641-7da7-4f96-8931-db9502f15170",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6c65262c-5878-47ec-9de7-23cd0c01df2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7a31db1-56a4-452f-a422-6f155e462b37",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0aba50c-3dc4-4c20-be5b-df89c733fa66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bad53cf-fd50-492e-9846-8a4a0f506ee4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36eb21f0-d577-448a-975b-0923a698cdad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "33c9995f-7cf3-4d00-ab76-475db3e266bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f5d822c-d12d-417a-87a8-8b85f6b3bfba",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db891d9f-84da-4ccb-9204-7e64552a31bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19e5bbf2-1d3d-463f-a52f-96ee1ac52b25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "996f3c08-8228-48f7-b049-799eb52bfab0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "973130ed-2a15-4c5b-9d3b-d9d715eed072"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b34835f-77f9-4784-aad3-a8b2fb485d3f",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c354422-a1d3-4f3f-af44-fa60ec2c0211",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b491416-84df-4df4-b711-319b2b5c6f5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e5e68e5-49a2-42e7-808e-40dcf0637076",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "6e86aa93-ccc9-4a2d-bd1a-3c3e11271a0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e22f260-530f-4bfd-b2db-d3fd655d12ca",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55ea44cb-2d49-4e92-8204-25b905db4dff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "deddfb82-711d-4f84-949d-3b97c4657c49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "179684d1-0cfb-4fe1-b923-5f278d5ee96b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "3980e11e-2cd6-479f-960f-4bdf3f2f039b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c189f119-2873-4a33-9002-22c9ffda4af3",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e943f3e2-1f40-4dba-abdf-e3e597769713",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b6b28c8-e7e2-4e84-abf3-15424dba01b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2bb721b-0e06-42f0-8eb2-7446107efc01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "550e982e-9981-46c8-a2dd-700f3a52495a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4e9c362-e2f4-455a-9272-cbea462acfba",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3fe8995-78eb-4c0c-9cde-e9f3816adaa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57898cd5-8944-4ef4-abfc-0e672c68ef76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a0973f2-4cf9-46c1-8268-f3d207a4bb48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "10ab87a1-ef30-43fa-93d9-1c5c531bbd68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13ce03a8-d375-4adc-b84d-548a7181c098",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c88f9d1-196f-47b0-bf6c-89516fd340db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "13e9fa07-1815-49ce-97e8-98bb622469b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c56ae0e2-c8d2-4cfa-8c12-17f8f3d52874",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "5abde50a-822c-4292-9237-bddf63273283"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ad57725f-c6f1-4d65-a889-63d14356bc7c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "29111c85-3866-467b-b990-fac715abfffc",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28906f56-2f75-4981-ad64-598928156184",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c014a1cb-ced4-4d9d-9842-9bbfa364e1e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8ba1208-3a47-4a2d-afd9-cbdb235fff05",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8d8cd62f-604b-4089-a8b4-c3f883a9b598"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "20c5ab36-7007-492f-8eeb-afb317c2986d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "96e1333d-9b2a-406f-b0cd-6ba941008b30"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7f20b657-ae7c-4aba-a487-1a9c86bfb65f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6b14996f-73ea-4e27-8ab1-db33bf10bb9b"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "947c01f7-1e9e-44ee-a50e-b4b384b8a838",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f5d44ee1-96ed-47b4-b503-b74a3b8c48d5"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c9a7eccc-aed6-4830-8f21-50e251011135",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "74bdd84c-db9b-445c-8f17-de0dad71ab3f"
                }
              }
            ]
          },
          {
            "id": "c7727c05-17e3-4c39-befe-a3ccbbd2b489",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9745be84-a68d-4a81-b30a-fc31e1c44e19",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "9f2160c3-785f-438c-b76e-28a2e062800a",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3cebc8f-fbd2-452b-babd-65e223b7e093",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "6bd56ef9-78b2-4335-ab77-db9903ae8463"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37b3e5f6-0904-48b9-8f51-384c117f8c3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39bd3e6e-8625-41be-b4ee-95f95ea1d765"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "dbec2f5b-cf5f-4635-97ed-beb2be833804",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2aa4b146-b19f-41c7-b603-44c13aa824f5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "dfb6948b-69eb-4c99-9359-cd1171a15f5c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "270f37f6-3e8c-49e9-a363-a8b8ced19619",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "84d9764a-be2f-4cbb-b716-a8f161cd9984"
                    }
                  }
                ]
              },
              {
                "id": "02865b87-0eb5-4176-a79f-5e646cb87d6f",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "877a5099-bb8e-4743-b0a7-88b0efad3b61",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "91e50dd9-894b-4f5d-9c20-8913377b0a6f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f685e036-49b7-4342-afdd-f5f7fa92d1b4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "4aa4576f-97bd-4c61-a076-17c02ae5a292"
                    }
                  }
                ]
              },
              {
                "id": "f86f8f6d-6386-4539-911c-56014c83d6c9",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7ad0bc3d-6210-42a5-a094-1ab618a5f2c5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3be7f1a5-17f4-420c-a660-d67183dc776c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5ffcc7b2-a93c-47be-8597-6f33b5e0865e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a6c24427-2d8a-4842-912f-a45e387062f6"
                    }
                  }
                ]
              },
              {
                "id": "573876e6-4857-40c6-9979-b539ac3d35d2",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "27d0c27e-5946-4324-9cfb-fee669d068c3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0c8aac83-3a39-40f0-8b73-f9e9d4f3a27a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "54a1ac96-9ef9-43ca-b772-a283ea3fb415",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "f559481a-8996-4901-aa8f-3abafebfdc0b"
                    }
                  }
                ]
              },
              {
                "id": "7914c9cf-741f-455a-a19d-8ef282429ebf",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f8bb03eb-56a7-46e8-93a1-663e0d90e513",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "55722a73-ff43-4c76-8e99-8d569cf88ea5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "aa6ed1c6-f8dd-4880-a9c2-1443819e998d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "9d51edb9-11ee-4249-bcb1-f71f82e233b3"
                    }
                  }
                ]
              },
              {
                "id": "f5f9d7c6-f95e-468f-bb74-92bec940822e",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "08e3e639-ee74-4e54-8c2a-3507380d9d07",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d8dc9f3f-64a6-458c-9193-fa9a4d887082"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dc1ab008-33af-4584-a34a-7cca3776df00",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "425fee14-0093-4264-b4e9-583595347894"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b5a9b6db-8d07-40e6-8034-5443b8152bde",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "121545f0-a820-4d38-bef1-d4f11662e04e"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "1744a20d-9bfd-4b1d-9dcc-b5d0cd79b9ce",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "40d6fd94-b6a2-4593-8f20-bfe8afcc6a06"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3463deb0-8e50-4c4d-a685-1582a9b68f92",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "e3929f12-dec3-479d-bf48-ab064243b2b7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c4f725c3-1b61-41c1-865a-14a0c5c79059",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c6e9713b-76f9-4821-b2a8-1d4e3269fa02"
            }
          }
        ]
      },
      {
        "id": "5ab7ebf7-53b8-46c7-93e9-627c1c310ce0",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "d714b204-871a-4b63-a505-0b7db548c4c9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "61aadfd6-17f1-41dd-9bbf-af6c8545e602",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "001d3a56-9732-454e-b087-61976becdb6b",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f11dfe2-acc2-4267-af98-16d4c1f15928",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f5cc9de-3432-4cc5-907c-9b8e2a827cd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4415c71-69db-4ad0-a6b2-2b2e34126a9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "90c473ea-dbb6-44be-a75e-e004fb4a3972"
                        }
                      }
                    ]
                  },
                  {
                    "id": "746160ee-dfbb-4601-bde2-5c826ee80035",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4929a14c-d981-4176-a805-37f6d4abffe8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a05f2674-c308-4782-99ca-6f805d8ebe41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d882e02-9369-4b48-886b-b610379e2bfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d27c9aaa-bf70-4376-9e42-e55e0a023d23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3b41e07-b4d8-4a72-aafb-5b89f2c8e8dd",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ee7038d-0e09-4509-9e57-97d01b1c6cac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17cef5ba-2b90-4047-8ac6-842aa5616e59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaa975a6-facd-4fc5-b9c3-5eb363ff567a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "daffc13d-2277-47e3-806c-2e00b0a4b5dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9dbf21b-46ee-420c-a0a9-9ec7e269e3e5",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fdd2a93-8146-4868-abd1-b415cdb74c51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f152a9d-ccc2-47ef-b58f-b45066420608"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60590d84-f23c-4ba3-a05a-afd9bc3f4738",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c3ea44e1-549f-48ed-81d1-de472c57d6c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28d19092-597c-49f6-8053-73b8a3705d3e",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49f6d8e4-ca6b-4e3b-854e-f9b5ff77f198",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "318299cd-f5e2-41a6-b718-febf604169f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbe6346d-dd3e-491b-88e5-1e8b1c6d6a72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e01111bb-0d6d-4e9a-be95-2cb284008295"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a5ec8fe-e101-462e-90a0-a66388e5272b",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1edb598e-4d2d-4ec5-884e-67c315e12133",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80dd3ee3-e285-4e4d-8fc8-5db28d17058c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee47dee2-9f06-4a5b-94f6-45c1cc671267",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "31e61c01-9377-4b3a-8b91-fdb157fc676a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84489eac-e825-4206-8784-29dce45f0a07",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81f1eb9f-e676-4838-a35e-bdde5f8f65d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47176f0b-8247-49a6-ad33-7768391962f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "250cf88b-ce02-44f9-81eb-e06f85cf3036",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "c8a00fb9-b370-42ad-af9f-84387fa0f6fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb4bfdab-9dd0-42b3-8e52-772938138dea",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36152ff5-09a0-4eab-a35f-86f91d225de0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a7e9127-a63b-458a-b2b9-588b50faec4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8183b533-ad05-4de4-b9f5-df8a722418ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0bfe15a1-2026-468d-a9b5-4c029ca05b0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dc96737-bbf5-4dc3-94d2-3e917f252a42",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9d57d45-92a6-49a2-a0e3-7404d079e57d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed62aab1-36ce-4847-96ed-7d158adf34be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaea97dd-957f-42b2-b2b9-9f61d4bc541f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "10a22153-30ee-4474-8bf0-30d8daf553db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aca941b3-4184-4a13-82fa-f8862c2a1382",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2943b3c-84ac-4120-86ef-238145e0162b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4787bd0c-642e-4ccd-a5ee-bfb5a6bf08a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3db96759-6708-4a29-a70f-2bf6c64defb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6d5269cb-a7fe-46a2-85c7-e6c6e2372e48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfcd1b91-01bb-4800-989b-7c7d34c06dab",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aafd0681-9100-4b68-8dbb-81d58e8043d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c73e2df0-aa9f-4f09-8aed-321740db32fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "318061dc-700b-4c28-86bd-2e88d99563b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "b5a7140d-2d8a-4711-ba1a-fbfe827c825d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1b86aa2-8659-4361-858a-a28e84b4132e",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "babb5e22-c844-4e35-88bd-a74bcfdaef44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "813af24c-a1e2-4118-a477-ab08fbe8b20b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "236b5697-9ad0-4fc2-9bf3-5a8b456a07b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "de0ac54c-0dda-4c05-b719-3b25ad659c8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03b0b71d-b289-4d38-be4f-d1d6979a1ed4",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8e45cc0-ba30-492a-8673-2e17ba1561c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "968687e0-006a-4523-bedd-e2128a4d1da7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46e0d011-d9c6-4d5b-9b9a-4a81f3e615e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2207e1fb-ac1d-480c-8f7c-99898bf8525c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4447417-fae2-4954-a2ef-f0d8faec8f19",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75fcc2b3-932e-46f3-aaeb-dc2c6f777027",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ab07179-f16a-4500-8e4c-27006e3610e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cdc3278-a923-4261-b711-c02401f1b617",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "c5478bf8-3617-4e22-ab69-a36f78c01298"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dadaf8a8-da82-4493-b653-a055d88c158c",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b72ba00-7a30-41d0-992e-a8c21b86976b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0db08f20-3801-4723-b736-9834a9e4b10b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0d77fd2-bc0d-4b13-96a9-dd21db20eb77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c05882e-6b12-478b-9a70-28c91b56ece9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae96b42b-252c-404d-bcb7-a670f7edadbb",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "554026ab-0df7-4797-a2a9-d65660fe9888",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4852cac-c7ee-4377-bdff-e20a41cf18ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "219ba5b4-acf4-427b-b5c7-09e664c8d9cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "06435a2e-dd36-49e2-aa16-7d7c8af0b4b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb55673c-3503-4cd9-805b-af8b7bdfe318",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dca3f33b-2140-475a-a82a-249433577d84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3aa47194-a678-47ec-94c1-8e0b0e3b32b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c0241e8-82ce-41d2-bd6b-d51d998f0a38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b2a1b18-3866-466d-9e41-c7c5debeab1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dc545b3-562a-435a-8546-f2d21d11e634",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77a6aafc-ed2e-40cf-b676-8d9b98c56a9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67c64ccf-9249-4bea-b8a1-4de92a813765"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76561a11-e843-4b24-abd2-143927320f7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d310809-daf9-4b7e-9ea0-ee67954d7dcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d95808dc-d5cf-4d3a-b91d-ed20464780bf",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c1d3bd7-c41b-47a1-acc1-57bdae50441d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e3045fb-25a6-4509-81b1-3837e977e098"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d2ed085-885a-48e1-b5ad-02d96c432135",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "03c0f7d2-8264-4d6d-b223-f73b0d82e097"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea9ea0d0-b4aa-4205-ad94-875f56fce589",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "541820a4-b139-46e1-858f-e5255e40fb9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9127ae57-d48d-4a7e-bb12-c5c82f21ebd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5003176b-be0b-43bb-9d90-973800dc8d01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0052b395-420d-4f81-a8d1-b4ae0826e486"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1698c9ac-13ad-4b43-95a2-da0218209861",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37120734-c76a-4483-b7ed-d80bd6d7b505",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31d35b26-d7af-4e00-ba46-f6494086ffb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab02691f-31c4-4db4-b76b-3fba366b9b26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e4e7595f-d830-4003-bcd9-db958ff4a54c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3f50c4c-da75-4667-a789-a4c938fc6451",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8da24cb6-5322-419f-be52-adb11a794448",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85f19ebd-2116-4ffe-971b-dbd1b3575dfc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8455945b-eb68-4d87-a5e2-fbfd79bb5ce3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6ef83f32-d314-41f1-9cc4-dc80fe102f25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98f85311-72f6-404c-bacc-b3330c9bdabc",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4e3dbdf-97ce-4c6d-a907-43f6713292b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bf5648d-d917-4fa0-b788-2f0ef20713a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e4e9321-253f-4a2e-8dcd-0912ec9207b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e742ef92-2226-49b7-9459-eff4e2d6625e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f4f3d65-a98e-4840-b189-23693163d1b9",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18b7304d-2f3d-4ed7-b36b-3e1c8588b65f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4dea5538-bf9c-4b14-81cb-7ffcf9de608e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b59735a-e1e5-47fb-a93f-9739d34f0230",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "772951e4-df38-40d7-ba62-0b0de864cb4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94c52023-4823-453b-84ce-d0100655ae26",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8406798f-eafa-456e-aa27-010c4e92e436",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e42bbf2f-33a6-4862-82d7-43725278473f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5edf6a45-18ec-4af0-a963-fbd75ac30daa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c301f7f-9976-4963-acb0-1ea0484d34d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddbf90b3-6cc9-4b36-94fd-e7c593f66d1e",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c881c99e-e93b-477c-b374-6205bb12adff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b51c7871-f34b-4e24-ac11-ac0562205983"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0cda4a6-ba54-4547-bddd-88f3aa8ccaeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a88ed6ca-0a73-42c0-86f3-4ae6235fbdcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40066e66-7e39-4e5d-82aa-4a2a5c935151",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92ab271b-3c96-4fcb-a08a-dd640402cc7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a113b5c5-3c7a-4cdb-b4b5-b1ab4e244764"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a677ddf-4488-4df7-b0e9-1d24e2d4fdf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b693b6bf-0c52-4130-ad30-efbd67e5aae4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ceb7f88-e9d2-4805-b89d-82f706817a47",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60d27272-2d16-4237-9a30-f6b55d049bf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f1c07c8-cd52-45a7-994c-6e60556f6e8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f30386e-9e75-4034-b8fc-b09f70d0651a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c2edfaed-b0b9-4839-9624-fce8063d913f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b66ddc6-2770-4213-b5c0-242d18b94dd0",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8c84890-6e37-4f80-bf1c-24bffc6692f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9536da3c-4ecf-4ca4-b480-cffbe122b20c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "796e2271-e08c-4b9d-a4c2-7a354497b188",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "253e2603-0309-46e9-b47c-a9d07c992daa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a22e5a7e-3555-439a-904d-12ee1bcc87d0",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9a44a8c-db55-4f6f-b2bc-4d00e8db5a2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d544364-82ea-447b-9eaa-1784e5b38614"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5879432-d5fb-4d78-80fd-0a52a85be8b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "79ded7c5-2fc5-431b-aa92-4c7b5b090239"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5088bc9e-c56f-4b1b-9479-1eb0762670a1",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "772340a1-0c66-4f0b-b379-5e840d6369d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f055780-63f5-4e35-8835-a6d0c8524f5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ad79503-47fe-40ec-abb3-3d311bc36f1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b4614382-f927-4f0b-81ef-ba0f83a19208"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf37e084-3e4e-435f-8361-5d8a68c28d67",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5a45893-6050-40dc-8cc0-cd023e751e96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a03ad48-60c9-4027-ae6a-0cb8ba303b6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3451b152-4fe4-4121-840e-2d43ede9907b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "28a26524-53ab-4e08-beff-0108f2978834"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28f88c01-2fb6-4273-a783-10b843a8410c",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "853e259f-34d5-4ebf-a7f9-9d2ebca5d043",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2afd2b8-bc3d-4b49-ba5c-d038d095afe2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cdc74a0-90e8-4d89-8b25-3d486e009b5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd2f363a-7029-4b39-9630-675749bf686e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b123f419-eedf-4648-be7b-7584225151de",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93e260af-0e62-4c72-9d6e-38e20105de7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7df279d-8563-4f42-925b-99126420a847"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdd96741-510c-4040-8746-1087610b2615",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9fd5a678-1dcd-471d-b272-2746ec692e60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2eb8f20-ec7a-41c1-a9de-a97dc4cc9187",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5ed9f54-34bb-4ca9-aad3-7b5176cf6d31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53575b27-6c4f-4eb9-b54c-c7c0b425bff3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "759837f2-9afa-411f-a5ad-ebf7bd1bfaa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "15c50068-46b8-4bf5-b4d2-0359938437f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bce2c33-3663-4ece-9f26-ba6dd82483b1",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6217b54-33af-44af-be4b-2da92636c2c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ae13944-00f1-49c4-b299-1d685c6a4538"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35d6e21e-c7ec-4e92-b744-98b55dbc1583",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eabaf026-a624-409a-809c-03efa64e7d14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c34dbca-c9a4-4476-805e-74ab5df177eb",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "694499c4-1437-4225-bb86-28291d19c38f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27aa04b3-0029-4848-9c00-dc8c0e73af6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95240979-7337-4a9e-89cd-9a1014786695",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b1c3966b-6e95-4ed6-b21e-5a45fe9ceb5e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3983a812-d54b-487e-8e56-cc9f7c79cf15",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e187d310-c94e-4250-a30c-05b689f06745",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "717a4e5c-2502-4ced-b101-7ca89ba4b447",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "c69da992-6e9c-4181-9c48-d0fa55e3849b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e03a63e1-2dcb-4e30-8aac-71b6e7db0350",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "40c1a510-79f9-414c-ae67-a729451fba40"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "db09643d-2afe-4e45-8cdc-de4b9fa1cfba",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "610d582e-1722-4aab-8e9f-3a69a1bbc9f7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "10031ad2-10ff-4b21-9294-3bd68b8af87a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "173b69d3-5209-4241-ba4f-5cf67836fb85"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a850c491-ed5b-4cd4-85c4-d2d0d62826b9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "540a8a51-9a52-4fed-9ccf-717419238ea9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3a624551-228b-4580-a43c-c14f25094162",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "00786908-18f9-410b-b373-954ba3c6489e"
            }
          }
        ]
      },
      {
        "id": "49677f34-00b9-4f88-b9b9-a553b67d344d",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "0da69162-d0cc-46b9-9b6a-8678ab2828bd",
            "name": "Negative Testing",
            "item": [
              {
                "id": "23732b34-d894-4bc6-8ff4-70f5376ba8fa",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "76b17bc0-4944-4ff0-8c13-18432995a25f",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7803b8be-7193-4db2-903a-a4d02696c690",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fdc820d-9e42-4260-bd38-831278d8facf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb5f74aa-230d-4bbc-9a36-fbe49b4ffe61",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18d18fa8-fb9c-47a9-bb73-ee5521246995",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75d8d347-d399-4f82-811a-fda291c76298"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da1e9ce9-b5d9-4d59-a2b4-cb3c3b100a15",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe460373-3dbb-4aa7-b1fa-c2b7da2c996c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25d99e62-6df5-40a2-8b75-076b9e2de88a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c055ff01-757e-4951-9a22-2984875862e3",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ed933eb-771b-4502-824b-a0073318c8f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "528480f2-4d11-47b6-8d1f-fa5b83fc0b49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e2c4adb-f828-4a02-af87-be6d754a6781",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c1e7f1d-c2bf-4496-a7de-c6a07454c0b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15f3ab2f-5b8b-4925-87c7-c596f11f692e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61ba9e85-4850-43a4-b17b-0816b8197c93",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fee5bff2-30c6-41f0-8b17-26a5d7b071ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f353700-3d20-4aeb-84d5-8f22ff45f881"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a36e7407-c2fe-4792-9244-bae37a96fabe",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1492fe0-2779-46f4-a32d-3808a792de97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b74371d-43d3-49aa-a340-8e201c9d87db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba73ba33-1fd1-43e8-a912-c296ff78b152",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14ad7a8a-9b0c-48f0-9ff7-373fcf09ec5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26d1ad21-0e62-4ee0-b663-2b2299b34051",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2031bdd-66e4-4d36-8548-b3603f7bfa15",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5a4c9ad6-d665-40c9-b15e-74df97d3bdb3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cf9470c-43c2-4d42-b13a-8cbeabe0d78b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04aafcd4-4886-427a-a834-03442df5666c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14c25f68-f77b-4418-9af5-95e02b2ea903",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4793cc3-d051-4df6-8261-04bae7d72cf4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d89e4bc1-53ed-4b0a-871b-414228c1245a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22a98120-0252-433b-bb73-0e12839dfb05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c9bf313-a3bb-4b70-a1e6-0bcb7c722ed3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34534b42-2b19-4c7b-a817-652c7a698227",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cdb347f-78cb-402b-bd5e-f2592c4135b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e53f38fb-6f7a-4e42-9b7a-3a3f643b6b2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de40a647-7813-40f3-a143-04e401d8ffab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1458955-981f-4d84-87bd-c21e99d527bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a88d65c7-971a-45fe-b62c-1f7bf04bc926",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9809b23-6424-498d-a89c-e7762dbb3418",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd75a265-f140-468a-82a3-13df31f592ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42ee9262-768b-4a45-8803-a607063acf4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b51a35d0-eafb-489f-8fa3-131df7bf2483"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1980c8a8-d4c2-4cdb-93a0-d7624f711385",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6e4aa00-3578-4c66-8807-abd4e07a8e73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e16dd06-96ef-4d8c-a4f9-cbbe059b34f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0d9affb-39d1-43b5-83b1-60b78066593b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f8643dc-33b4-4c07-a624-84726e826efe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81c9e274-39af-4972-a4f0-4c6689f1576e",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e39ff824-37ff-4c4b-a889-ab3756e07192",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e92a03f7-15b2-4e3b-8ce9-105e6315e053"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f52730e-1b78-457d-aa35-37f21c31b7dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa0f37fe-2d48-4147-8005-d3eeb9032965"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5ebaeb3-d62e-4ff6-b551-1b2a322036b7",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76f31fb3-594b-4b42-90f8-a5a943d46298",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "20d47cad-5c9e-430c-80c5-f6e58df4f22c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c89da14-dd32-49ff-9a57-c6593703f518",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b665fe9-1b25-43b4-b9d0-cfcd3da87553"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29dbcef4-451f-4226-aadd-450287b1164d",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b084574-52cd-4297-87b8-9a0cdb4fa764",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e2d47b1-430f-4033-9d44-7014ad8353fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df96b7ca-f98a-44c7-96bf-3d355003915c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a12ca94-89a9-4466-92c4-3c74ba542cbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b2958b3-94de-4f0a-a68f-bcea60c2c111",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e83d4a2c-640e-493e-b731-515299763d5c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f56b4760-67ad-4d7f-9a28-9afd32978f12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c27bbcc-5424-4d58-9f2f-9fda2d3ed104",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6512b64-2838-4c2e-abfd-1a2495550f26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "156ec959-e5a2-48b3-ba8b-84d8659baff9",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "966b50e8-176b-46fa-a888-69b7b877d8bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e08b6e65-6013-4130-9a6e-be50360d38cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36964a3b-1dec-4692-b9e0-5f1554e3a1a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f899004b-7f19-4e55-b288-751c090861dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c1c03a6-d137-40ab-8460-f7a98302c0c3",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bca3b0e4-e7ca-4d59-90a2-c8a812328742",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da9dddeb-0eb9-4009-882a-da00b73102d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e25b6d31-4723-46dd-a049-c1840c1eee11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d00dd322-f5ac-4f85-8643-032b965246d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4df50256-de74-4ba2-a981-c12405a2fd5d",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "118a9ce7-fe58-4433-b83e-77251ff058b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71b0edf2-769c-4502-8c1f-a01e2e998376"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14dfd07a-89bf-4b0d-bee2-4b1721f1af5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af5ec08a-1e09-43bf-9a3e-ca3a82faa000"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbe5001d-59d3-434a-97f2-2e73ea0c2363",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdcf40c8-4a17-419e-994d-1940f9aa635c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c5e25ee-b110-4472-a14b-e61ce9a050e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79c510ba-7762-4368-a2d9-4a66b281e7cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bdd773c-06b4-4efe-bfbf-5f649a55522a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18075522-0bb6-4cb8-aa12-9ccbb632fc98",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e93e81d-d78a-46fd-81f6-dede1f321e39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59c4f6f3-f671-4a32-8b18-9455ec22afbc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07a11fe8-7dd6-4419-8ff9-19d7b0095ee9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afdad88a-6913-4f02-9850-cce6e06fdbb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab000448-6c68-4d7e-a365-45468e6ad768",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c75c5bfe-87b4-4976-bbe2-14bbaa6c1822",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e88b82aa-ae13-4996-9aeb-45a3b00813a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6fb0527-73e5-4d3c-b22c-447654bd979c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2827706a-e86e-4b1a-893d-e0c06986dd24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8099003-53ce-41fa-9def-e54423c5f917",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0491ea12-b86c-43cf-b9ed-ea9bcc84f562",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6bde41a-c2d7-46c6-bd1b-d13595dc970e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "636247d0-fe4e-4e13-a47a-06fc129e5303",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa282a83-709a-4fb7-9f24-eaa4c237d502"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f946aafb-888f-455b-b6e4-f00ea875a080",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae085585-0f70-452c-a2ee-c37f78002807",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ddf09c5f-82cc-49cc-a679-d0a37b2632ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2435bbb1-68f6-4a11-a6af-57ac1f52d9a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af3f7687-5695-4d52-86ee-083bb43d0dc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5ec1da0-a179-4c08-b96b-567475d053bb",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fc0e0b7-916d-4af9-96c0-1760edf649f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a38ca0a-be52-4dbc-90db-dbd35f4dc5ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22a96ea4-6663-4e23-a543-15bd8f5bd83d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba4b4a36-1ac5-44c3-913d-2312811f10c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea0380ef-8493-4269-8bcf-93934c533866",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9080211-c630-486d-bc9b-ea7f7a1e6160",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "33dec86b-c919-4422-86aa-d0b249161de2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e11b8a27-f77b-4d76-b350-acd73b5e8bcf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e8fd5cf-78e1-41ba-b245-ca1e177a8114"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a0ff1ed-36e7-4d67-9557-3c71ed55aab5",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0bd461b-d6b9-4f8e-b4e5-503b7ec8d160",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e82bb6f0-3fba-4e8c-b0a6-508d7a45f2b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bc2c331-d762-403e-9718-132315b0ad63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "468ba572-384e-4523-a17c-3dbc05e19400"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d96d551-d0f6-4385-9fe7-32d2a3e27b63",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8462b20d-a026-4583-becb-b125c666f9e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb415022-750f-4c1c-80e0-362eab8ca0a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f284afcf-c663-41a3-9185-52c3f68e3a92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d766ce55-410c-43f6-a8ba-a56142b205e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3af1060-77c8-4da1-b8f6-ad811b5d6207",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dec4c1cb-b86f-428e-a520-c97a7831bbcc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "731ee583-e627-4550-b1c5-2ffd93af51bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe6e6647-96e1-4dc2-8b38-41144978033e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a639a2e9-f136-4de5-a364-8532bcaa9b0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c6b8317-6f0f-4371-8acf-06b2f8e28b70",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afa0fbf5-16bc-447a-94c3-fc4cd3943723",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c1f986c-bf4e-417d-913b-f6d1fa3db6a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac8960c3-8dbd-46a3-8126-5eadd613751e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5ebbcfc-efad-4373-b220-5db221527bcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4770e60-6a49-4c8a-9ded-28ab8ee978ab",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d35871bf-f206-4836-a97f-d6303ac4b4fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4bb5ea38-31cb-4be7-8d78-1e0a4782c6e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0faf8764-f039-40e4-acfe-fb120b34bfbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c63fcb7d-c0dc-4d25-a017-db5240d10c53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60cdf11b-34b8-4a3b-9731-b19e402120ad",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0341c90-a63d-4613-a040-09b6c50d456f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "689e5877-fdf0-421d-8451-30d38420e39b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6f2d66c-9a45-473a-8bed-e37d5e18318f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb8896fc-ac4e-464a-aa3a-55ee13c45484"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33e0728b-c73c-44d2-83be-2cb874cbb83f",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20731ece-8fe4-4496-b011-3d3089731f03",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "58b3b488-e6cb-4fa7-8ae4-1cdd06d63f04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07c41b28-a43d-43c1-a05b-592316211eb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2b7463c-cf74-4e8c-b794-3a454c0d8474"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89fe3f7e-5ea6-40ac-bf84-f97ccbfe7b78",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4f0bf31-efe9-41b7-b5b3-d8f875a978bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cd9cb24a-2072-475c-9df8-7e48d9ea08b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a55fad71-2d80-45bc-b218-e8b1b509c947",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bafa1813-f45d-47d2-8aee-bafb486dc362"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cf716ee-b322-4fa8-98a6-ec9daa4d52f1",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1930ba27-6872-4b7f-91d9-0006ec08df8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e581ad9-9b15-4c10-a0b8-f373e9182d22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69b20575-297a-4767-ac49-c4c771398b3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56574ff4-47d9-437e-b68e-a767119331a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f769aa0-56b7-4c39-bf90-7c1cdbeca744",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd7c56e6-eb3f-4932-bbf4-b34d0a322369",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ed697cf-a5cf-4873-b01a-98a734add723"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8a55107-b61a-444f-8a86-d53f593945a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55a28f70-be03-494c-92c9-397a35b599b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a60a53ca-74da-4a1f-b6e8-c02f3d850484",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7b5d862-d244-4d97-9fce-ebcc9fbed131",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1194a81d-8ac1-4248-b6d9-717810550f0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0ed283d-544d-46af-a931-fa73fec44e7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce19b4a3-7b38-4d10-920f-62a972fee59c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "deed1902-747a-4024-bb5d-0b56dc310b49",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e1bd7a7-8671-46c8-87b6-99a27887d24b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10a0f62a-383e-42aa-a443-cd7faec24a63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0540ac76-7de7-4f02-9fd1-55573de00790",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50200dd5-3457-4aa8-8f7b-27693f111cbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6559b1fe-c2d2-40a2-bb0b-bb57ad8af0a9",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e503cbea-66e0-4b57-97fa-441e3b97dc0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5dc7f565-720f-438d-b7c5-fc2c72aa6423"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "424356c2-3c64-4a23-a35e-dabc78453809",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ab4cf82-e7e1-4571-800d-013480b486e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af6de600-4a06-407c-94e9-3659d610387f",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9946086-3e0e-449f-848a-6603b9d71072",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bac28f9b-d1b3-4449-89c7-647aa6bc3e43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55417ce6-794b-4494-8aa7-43392a07a319",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e6cef0b-3539-4f8f-b5e6-1d95b56854dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faee8eaf-a768-48b2-98a2-217b3c7210c9",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc0fe65f-a959-4597-a152-14b093f4fedd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d578b7f-5a11-42c7-9002-bd3b56636538"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbffd9eb-b7f5-4450-a8e7-754fec51a001",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b3550ba-7649-4e49-a728-57b2c1e474b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18497fb4-7153-4e04-906a-724c4f10f510",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61313603-d65e-43e7-bba2-73b13b883e6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56924fa1-3704-475f-b36b-3da8ea663783"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2116634-c9bc-4564-bf91-6551f600a4ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "983cc292-cb99-4975-8037-f5bbeaac1ccc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e0d9bfc-8bc7-445b-8563-e48c53495498",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa088ed9-a1c9-474b-9854-5c80a96c9cc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bc590c6-269f-44e8-ab68-877f2ebbda92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c81996c-e747-4756-8d9e-636130a21259",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9053b3c4-0282-4134-aa99-7369ae679883"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb38ca7b-7ce3-4fc4-8166-4b5a26e726ee",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af1dae57-4768-4163-88b5-8466c8b15915",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01f9dd62-8dde-4f6a-a292-97de52162075"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c53dddb-a90c-46fd-aaf5-b2a2634f07a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5c43505-c4c9-426d-b361-1933e39e53f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42fb62df-eade-4d45-ac42-1dc25f838174",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8d4a3ec-4518-443a-b4e4-cd7dd3e0d63f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd0ea088-79c6-4a3a-864a-4c69ff53c9e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b44917d-bb54-4629-95a3-b5d80f2b93a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80a769aa-db73-4c08-9ce3-ab6ac1eb1b2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "295c1bf1-e53f-4f45-9e25-203d540e42b8",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78448ec3-af4b-4fc9-8842-fc84eb211a59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2aebb8f-590e-48c9-8635-b9aa84aa2c4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7c9c614-5126-468d-82db-e1192770018f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "884dc8d3-20a0-4aa3-98e9-17ed78fbd4e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f806d242-4a6f-4a67-89be-e45f8a002c73",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5df41c7c-7896-490f-9d55-7cee65c68542",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f2547d0-d0cc-49a1-9895-550bc113100f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4625560b-3c5a-4d80-9793-bc10a789c11e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7893baff-0ff3-4221-a66f-80337be4219a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e69815b-bc8b-4494-a70e-49e000ddda96",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6408e8b7-2d7e-4625-aac7-326dfaaeea18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcc864df-3a2c-4e90-86c9-36d50f97e968"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "899393b5-8eee-41b7-b890-18073f8021da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3dadc3f6-f765-486c-a61d-9adf809f12f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37451fc2-de68-4d8a-a809-fdbfb29d9324",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d549c2f-917f-4af9-964e-21182598ed8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc05b5b5-39bb-4d61-bd26-83c3c8a64d31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eed6cf63-62fa-4748-a03b-90a5c9ab172a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82877c97-5a1b-4c44-a027-8bba12fbbecf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd8c10a9-2404-4716-9a99-8466455ba8c8",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e928048-284d-4de6-80d3-7ab63796315f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3e7ee4a-d842-4872-9131-d8032aba03e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe30a31e-5df3-4ccd-a0ab-613a6d58a7c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65bde5d5-730c-41df-b860-e7d0099fe96a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7aabce8-f204-468e-86a8-dbc8e78573e8",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caca59ff-cbdd-4872-88e1-900f654d1776",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "738f8136-42c8-434b-a107-1a0034d674e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31c61d7c-3b1c-43cb-af98-60e16f048c9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "292266bd-6fd3-4e10-b5cd-f577c3b8cafe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8b95764-9b40-4e25-acf8-0617f680d83b",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0f0ade2-017c-460a-8e79-30b2b8c32222",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48a286f2-d406-4ea7-83b8-9932f37895d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "909ff6dc-83de-416a-a841-a96d04c8abed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4a1c099-40b7-4c26-9ade-8504353ae86f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ac14528-ec33-4475-a479-f97973a94b00",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1499f75e-d690-4c8f-a5c0-deadae6c0d47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2036a9f-da10-40a1-a626-b803bafd9941"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "effe420b-1201-4fb7-b017-f9d4ca11d8f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80c64947-e904-4c1b-a8c0-14eb3b75dfc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8ff1044-95d3-4eee-907a-d0eabca44102",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55ff6749-4ce2-41da-945c-b6ce27532b85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e617150d-773f-4148-94d6-8c4669b229e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57bcd66a-9338-4536-b9b5-ba5e5078916f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "112320b8-27f1-4a1a-89b7-f55162aab1ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70604ce4-eff8-4cad-9125-f23a70ad6449",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a3a256e-05b7-4dc0-8de1-6842f24760bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0ffd5e3-528f-43c1-a275-6a18b18e1410"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e0d4f3e-f9bc-447c-9afa-b5e9c5bb3cd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6ccc883-7c7e-4baf-98a4-54e518136752"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3705b9e3-c004-46b5-b5d1-843e1d838548",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52941758-2cee-442f-90bc-fd236daacaf7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1eb814f-c573-418f-bbe6-0516daf43d00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec3960bd-20ca-415a-b1e8-d193ff060429",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f964cfad-2af4-460b-9e94-677a4b4ca489"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4f33994-61e1-4a94-abae-3327197f9811",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cd82983-eec0-4b18-a0fa-f101bc7c8862",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "577eecc1-f020-45e9-9e77-e9ff9aaa3e40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ec70578-15d7-4bcc-b081-494b4c04a589",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bf365d5-e5a4-4701-9b3d-345e88c17328"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74bb86ed-b4aa-4172-aaec-9a60a18404d6",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "046a6c1d-17ad-4016-8249-903ab2f05122",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7840f9d-4630-4145-8476-ce2ad7f78511"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e47b4531-c9c1-4fb6-8cc3-ef08a473d92f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9d3d076-62cf-4ec0-be76-56c7581d5201"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b766904-51b7-41b4-8a5f-aca86cce2833",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4ca9a2c-f7ad-4236-b121-922b2c1aa6bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be4ac69b-8eb0-4273-b3a2-635495b9389c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25d4f32b-33a8-4292-91d7-65d967f161fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "931f4246-b325-4058-a3ff-d20e160d070a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcb1dbb6-cbdb-4630-8188-b06aacfb4b9e",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2ab63c1-dd34-48bb-b0c4-89e4cd6fc149",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8405ca62-7b1e-40e9-9409-b42d6e64b4d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f943ffa4-d02b-416e-9699-eb7d1a41622b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0daf2238-781a-421c-a78e-f711a345b0d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64421d58-2786-4f53-8bd3-765d09ee859e",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "080a7051-cc84-4787-81ca-085a24e49542",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "749c5a4d-2dfd-4e6d-9a71-1e821ab4b233"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d068418-6b44-4c61-9c6b-364de06e4c1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42c47b33-8d52-4fc8-bfce-682b19ed3885"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c60bc41-928e-44c8-9003-de6efaddbfc8",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2ac62a7-77b8-4819-b83c-e22c5d826177",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73aab49b-5101-4b50-bf40-223414daa743"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3773aebc-2c4d-4286-b6a5-a8676e43ba57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "520e32ce-aa7b-4949-bd79-d33b2b924821"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fc806be-3edf-4676-9d16-745a0e0e50a0",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9db8f04a-4a3b-48af-8e45-ebd8a1bb7f84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba1a1e86-42ee-4841-bd27-06122a1c590c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac63155e-1df8-41b4-ab7e-2baaa5b72632",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "089b5f52-6972-4453-9eab-b2ed71e3f8dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cfc01be-01e8-4fde-861e-02c1f75f014f",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad68476c-3d78-4638-aa0e-088e7735fa1d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "34103cfb-a03c-4a26-83d7-097bfecce5e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dae33d68-4f24-4ff4-bc8c-e2dbdfea62a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37d28091-89da-4758-9378-32078708e702"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaca577b-c11e-40ca-b3e6-8bd6976a7e23",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59279742-b388-46e1-930b-5a859b3d210c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d7f425b6-84ea-4c1d-a822-3049173903c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9f75820-373c-4fd5-9788-dee84523a051",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "583dfad9-8999-4293-8eeb-81aa28b3ab62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42c5304f-d8c9-411a-9e69-eb311f2110d4",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdbbe2ab-5879-41cf-b354-7f31f1c9fe09",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69c7df36-eee8-472d-b82d-8c51486a6d48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "caf41e7c-dfb4-4c7c-91f0-a61bc1827405",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd93de2e-928b-4d15-8d43-3f5b137197da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b50aaa75-a3f4-456a-bf71-937039570397",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a848b212-0c55-46d5-90b8-c72078fc0da2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f6f7cc42-4ed4-4bf2-a3dc-a8cc9c75eb36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd022d98-4dca-4587-a248-0110c0c141bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81a4830d-cd85-4e6e-bc85-f3a4fa5ceb87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da4093f3-b3cf-4ca0-b457-71d8f7ea1627",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91098710-474d-42c0-886d-0598f073c03f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ca9739a-7945-44d9-84ae-8ebaf61e0b8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f73efc8f-40ba-4d0c-8f04-e8375fc90f18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42669018-5ef7-413a-9af1-6ba28a5bb01f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25472db0-c592-4e47-9120-dd05c078c821",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2e401da-306d-4605-aa6e-8717d0e04491",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fd24b9d2-c7cb-46a8-b4ce-df9f6485ad7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2959a94c-46de-46e6-acb0-29b5951fdf97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24d326b6-e41b-4e64-8950-6449071e5f8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38593ef3-eb48-432f-9e21-7af9bd60eae0",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "344ca7ce-9967-4cbc-898a-5b410b7282fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a17d8fa1-f563-4884-97a0-27dc8c9fe453"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b25a6556-6c05-4a62-a868-c6350943c03e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "666aae11-04cc-45c6-bd85-b4706b5f0c37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3115603-d618-4750-b4c1-7cc5c12c8654",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e34589a6-baa2-4a9b-97a9-14f09732a66a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d11a0b54-960d-4be5-b846-7c4c4a17380e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa6a4f36-5fa8-40f2-9cc6-01ca6833069c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e925965-6b0f-4762-bf32-8e16fb63d866"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2212c2d-3fe8-4423-b1e5-1369978d6cd8",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "520e1597-e955-4a5d-ba6e-72c70f99087b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "85e17d48-b60e-4892-bb57-8fb4f8c471a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34407779-05e4-4618-996a-550cc742ce43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "556c69b2-68ba-47f5-8095-4558d8afb23a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9e864b8-1d8f-44b9-b7cf-eeae65786ef9",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "187115c5-9c66-4fc6-8f17-4d8627cbbe2a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a1058185-db0a-4e14-a29e-6e145d535281"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cedbf8b-3313-4e7a-a0fd-8cac98504299",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b3a0454-670d-4257-86be-7f99cf999b7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e463ebe4-4e51-496c-8834-1625d50d2d1a",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ff79aeb-38af-425e-8f18-df686500d303",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f2ab5de0-329f-4f4c-a974-638ea2f9f7c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2243a66b-27be-49c0-b5f7-ca1cd0eb6de5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20735ff4-769f-42a9-84e7-844a219dea77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bceac37-1fb3-4935-9264-79f25b7b8109",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2969409-0eee-4199-9a5b-ae8512134520",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "80269fe2-2795-4d7b-bb64-7ac3eb5be6ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a68cd228-25ca-4fcb-b50f-95bada8739d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d7cf5e6-26c0-4929-88c7-9308309de57b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f2496f7-8a1e-4954-8d3b-bb7434886d76",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d654ba6-4c45-4c3b-ad57-04c76acd779a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "573ed7d0-f807-40b1-86c5-77c12b93e09f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a22303f8-6673-4991-905f-896ebe415e20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11a0e130-6112-49e9-afad-84626bbbb8f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e7c62d8-4a97-4a84-854f-e955b1a98ac9",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1d6272e-79b2-45cc-b165-0ab93fbcbc4b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f4fa71e5-40b9-4d19-ad3e-1fe8462e2bcd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dda91d2-8569-450d-9da5-01ac3f41c067",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da504969-cd0e-40ae-b9ea-415af2939d0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b02aeb37-aca3-46cc-aff5-8bcf88d7d39c",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8ca1a02-f5d1-4ce8-bc82-db4e9f9de1b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d5ecb94-0de1-4d29-b7c9-8b18ee191475"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8452ea2-14a0-4784-8112-8fc5664ea4a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4282f334-aaf7-4297-a550-49605bc35f27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd95ff6c-fd4d-4327-b9b8-50e399b9f78b",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acf5be4d-f540-4ab4-8e72-8d9bbdc96d06",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fbbdee94-0626-4aa2-9659-535858ea228d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc5cf923-bbc7-4f12-8efe-c47b104c95bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e385389-a9d2-414a-979c-d8c6ef9b03b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70813d4a-7783-4090-9042-566e907ebbec",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21dd178a-a01d-418c-867a-5c79a3858646",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "af2eee3e-76f6-491a-8365-21536eab52ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cfbd90d-a53d-4661-94e4-361303d64c1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d63c0e6-85c1-4ed9-b56e-82a476bc5110"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53565d18-64d9-40f6-a266-db1dde2da5f5",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f18b323f-eddc-4ef2-b914-60760f42709a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e425275-d7b1-45d6-a89b-95592ef09cec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d1b1c35-88e5-499d-bd0c-7bc05af2b657",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bf2e7bd-502a-42cb-8873-9c4693d327c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7497085-c75a-4ce4-a5c8-265c25ef055d",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "740ce257-7c04-4e73-92e9-550b60b4d9b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "68a9cc8c-e224-4648-9eda-650d2110b5a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ab9b903-b484-48e1-a09c-a0a8b191f2ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af12aef4-f96d-45c5-887d-b4b894d71ce2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3077c09b-771e-4890-8683-3895cdbb9e7e",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8a4b5d0-2055-47d8-b8b0-3f42d1de3934",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "08b8931d-45a9-43c9-9e76-44dff2663984"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47452f61-395b-4487-a7ea-2ad81938f0b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "414e16f1-2222-4711-818d-bbb654ebddde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5098583e-9291-4df5-a70b-e565904fea13",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba1c241e-6f8b-49b4-a1ca-640315cd8324",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b2e920fd-5399-4252-813b-15ec25576bcc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "797d1494-337f-458f-9a8c-270c7836799a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f0985b5-2abe-4bb3-925a-177a9d85749d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42b86f51-5902-41f6-bce8-45f1dc641c9e",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64f1f001-7fb1-4e42-b8b5-a1fe9daab54a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "768a70b4-1efb-4396-8567-0ccf4d61cedf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc8a381e-5337-4af6-942d-8f12e04bc3f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5199293c-4113-4414-ac44-8d314f33a8a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "895b7c00-e1c0-4475-9537-7e16c3742a5c",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b3d5a19-ca59-4209-b61a-10d9dbe944f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5754075-21cf-45dd-81b7-094489c7666e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a49008a2-0f89-4271-b803-009684ae8e12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "059c64b4-1f29-4352-8fb2-343332f75d64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6271efdc-9034-47cd-9277-8b471021f24d",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b1ca61f-5662-4287-ad16-630f0f66f831",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f2b6841-fcd0-4e80-bc48-0e06d7634b94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01f90f1c-fad4-48aa-9c88-27c641aecbcc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27c1bf15-01bb-41de-aeaa-3766f080f3a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c48bb183-324c-4d7d-892b-6f1f40a4d40c",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57041e83-166d-411f-aeb4-e2604caa9762",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "91501b55-c914-4d0c-8c97-f0e1ada8868f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d27d86a5-a6ca-4e02-8d7c-198155b7b74b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "815f50d6-6816-4720-97dd-2ba94a326735"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3eaadd0-10be-497f-b7f1-c400be4f2a32",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "467cf8e5-56be-41dd-86f1-5178f8109aa2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec13f86e-67b9-43ad-89ac-f323aab5b3f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5576a5a1-feb5-4efb-b832-8860695cb700",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d0e62e3-802a-430c-9baa-19377e01f4b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1eb7644e-11b1-480f-860a-c10a7353b35f",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22ac41a5-2ee7-41b9-9f06-11c7c85552ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c694b24f-d888-490f-b0a4-b4a95c750735"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0acb4310-c269-4ed5-b498-9a36dfc4638b",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c722886a-237c-46ab-ba13-844ce5db72c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57b3b23b-b2a8-496f-9342-2833a51d71a5",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95d0b095-b7c8-4f07-94e7-f5bb0930675f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c152f14b-3a2d-45f5-8dc6-0cb6b076b183"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2046dc5-dea1-451a-8836-3f3178093c18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43837987-42b2-4885-9ec3-0f04151b87af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed95c23a-0bac-473c-b39c-8b8b7a6a5ae9",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a299e67e-cf99-4109-9566-296d34eac91b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c4c4695-824f-450e-bcc8-fb269f3ecbba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "572e0d34-ff61-41f5-a8fb-c62dce7dc309",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4911d078-6d3f-4e17-906b-65ad4585b9bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34a03770-7e6e-4ece-844c-8911713784cf",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32479a94-fef2-40da-af0a-9324a94d3ff2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c7dd02ab-0288-4fd6-b4bf-d480bab25e75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1106d4fd-c1c8-4dde-9384-c518e9f8b323",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e3be655-c4e6-4567-bb95-6e6b8674e93e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5bcbfe4-ce14-41e2-87b8-0faeeacb5de8",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "715555c7-4e1f-4819-aea6-e7c4876aabc2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fadef7a6-35a6-46f8-8a94-ebafd58a8039"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dea258ae-7f23-44eb-8d54-720ea70ddef2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d39a099-d26d-44ab-97ea-ca0968825944"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abd93af9-62be-4c96-b7f6-e5002c71bf37",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25a15e59-6961-42c9-a602-5f9d6692809e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "68355b39-436f-4cbf-bf8d-c97f0c7b0312"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cdc7f91-03ec-4f10-a2c0-33a9e49725f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "880ead83-e3c7-4ff3-8427-44666241c4a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9a322e3-5052-4c9a-a27b-781ac77256bf",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7661c480-e9bc-48f7-95b5-ce9249690a6a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "40c187b6-f6f6-4042-9e6a-9058d99bc363"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2760fa2f-c830-4042-957a-403c1110ba3f",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96c600ae-2565-4457-9dcf-5df50ad332dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7566f597-7163-49d3-a4f1-9b33b8f7f048",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36b46ce9-ec06-4385-ba7c-f0cff1e6f7eb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e652f45-2c19-400a-b9b1-a4ba4a7369c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50ae9f0a-93a5-46d7-8c4d-f34bd5b2f57b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37b0f4a9-ec68-4cf6-9764-30734a21abe2"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7b647892-91f8-403b-bc0a-2e6bb78dec42",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9f6feaf6-6d92-4604-b006-e20252f1eff8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2e101d25-0b78-45db-9618-c634ad66d22d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "90e7c635-79a7-4717-a5ca-3c42ebaf2816"
                    }
                  }
                ]
              },
              {
                "id": "89486e46-c2a0-41cd-8a3b-2c7c01b0d29a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "816cbab7-e815-4ad7-828b-7016a87e9518",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcdcab91-2269-4cd7-92bf-a344eed62495",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "aa8dca65-020e-443e-ab48-857f628936ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "947f9b1b-ee6a-4ef4-9c48-56352ca1263b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "17a0cded-222a-442f-9e40-b118f4326610"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3df25fec-f4f3-44b5-a1b3-2bc7b47c3788",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ad564d91-2a2a-4ff3-99f6-424a73416611"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ef6b4ce3-8d0e-4fe3-b508-397667e171d6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c1cb993a-4804-4851-92be-290ed82d3cd7"
                    }
                  }
                ]
              },
              {
                "id": "1602a069-9111-4544-9831-e35c9eef0238",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "f7378755-4955-4ff2-9d2b-d92013ceb4d3",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8889c300-6cc4-4d19-9669-ee7ed2e980e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "bc1cda9c-c62a-42c0-83ed-2921ae365ca9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5ba6f64-7b16-4f6c-ab32-86461535aa8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "066841af-ccc3-40f8-a2ab-fbfa9b7a818d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "de06d6a2-f457-4a47-a223-2c12bdc00e25",
            "name": "Positive Testing",
            "item": [
              {
                "id": "20e78e5c-98f3-4480-90f4-d55ceef4e798",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "399c432d-8433-454a-bebf-d3fd0c5ac51a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "b1ce94b3-1c49-4df1-8c6d-b51d7088d7db"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b5acc3aa-ec91-4783-8b40-e93159ea183a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b61bc490-a28f-4193-ab2b-f960284de6ce"
                    }
                  }
                ]
              },
              {
                "id": "0a65f1f8-5210-4fda-8789-0b55e9a8d73c",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2bea8146-c480-4123-ad8f-70535f8a0241",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "8e08e261-d92b-4811-973e-709dbe995135"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "318a7536-8d2b-4d0d-8e93-8a11184ec93b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d9944ad1-5f26-4eb9-9254-9c064e2e15b4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ced150e5-fe23-4f53-867a-2390dd08b928",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "a471028c-ddea-4d7d-a320-cb0c045020bd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d1fcf7ad-c82e-43f3-84fc-cfba5dcdc890",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9aebeffb-181e-40ff-ac72-f7fc9ef19047"
            }
          }
        ]
      },
      {
        "id": "165080db-fbaa-4e43-954b-757995d92610",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "f7207263-00c5-4fbc-a7a3-002fa495693c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a1c3205f-9213-458c-8abd-ec88d7ca330a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9aeb79d5-ba15-4f00-bc45-69cdc7a15813",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "634d24da-8413-48f6-a430-8fcebff14964",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "f9f3118b-60a5-49f1-9ea7-37a9471bf233"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3b5122d-8d23-4b0c-ad30-72af4912205c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5ad67fca-a537-468a-aa75-1bee140df680"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5b0a5731-0025-42e9-ae6f-d8b7dee47b04",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "097b65fd-b613-4dff-9991-d7a9523fffe5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "45fde23d-8b54-4f59-bb17-98c7e7e3e355",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b993003d-22be-4af7-8dba-3fabfd36aa0c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3b214422-e21b-40ea-88ca-7db342b708c3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "fd572738-ff3a-413e-ab67-781d64bc2ad7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "35ecf713-8cdd-4649-8793-88bcd8adcac6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "aec21c3d-1872-4553-bc38-973da8d14d68"
            }
          }
        ]
      },
      {
        "id": "70f0fb6f-4180-4099-80b1-d199a5c15ad2",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "6f68df4e-2050-4c85-ba6f-c9cb5bd3c88d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "28468ec5-c012-412b-bf4f-9e2fa46eda26",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3286e659-78e2-4660-bb29-aa3a185f2d7d",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c18ef09-4db9-46f6-816f-02c7d5cebbf7",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fb01b522-d009-45f3-bfa5-7da883df306f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ac13ac9-a396-4045-9ff2-0df7ceef7d17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "96c19e51-eb51-4d05-85fb-1650c1bc8efc"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1e96808c-a165-4b70-a934-5969e93d9ce0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e4578a03-8c4d-4a31-b515-b8062575e49a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "090bc970-ec77-4f9d-a02b-5357670abe16",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c3460d85-71d0-4868-a6e1-24f381ed93e7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "87a6969f-403c-4070-af94-7e00c3628c52",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "4babe996-72db-4fde-b169-3141c2b7f166"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e8d9949b-efb5-4389-b616-9ca51965c35c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a7a6cc23-2a32-4bd3-bbd0-bd1265bb415b"
            }
          }
        ]
      },
      {
        "id": "ca736401-3175-4ea4-90ce-dbecfb9e3a25",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "20a4ae84-6099-4a50-9268-01241fdb3ef7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ec2a9345-1e86-4c6b-a108-56c4d461fd3f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4c39e264-4989-4741-8997-f8083917ad20",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9315070-aadc-474e-aa88-01c8d7c2d29a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0d0c3fad-7fa5-4ff9-b42f-7d2212dbf4df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd614264-e3e6-45b6-a918-957b267dee0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "44dc8a86-8e6e-4e1f-abab-a0de5a256a91"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5481f3af-a86a-4d28-b108-607f4a0a3535",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bc599e37-39ce-47bf-a974-30a94039f7d2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b9cc745c-9592-4547-be5d-990ed249b92d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "97d5a7d4-678e-49a8-8094-7d04ec5c26d1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7ee4a876-8894-4494-b9d0-683d0707bd3c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "1bd1f658-552e-452d-804b-9705141785db"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "11f9f249-af30-4348-8647-8f3888c70e36",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8348a954-3e81-4fcf-85e4-6fc9de83a5ed"
            }
          }
        ]
      },
      {
        "id": "af026c09-7153-42ad-a2b2-82c26596dbcd",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0d60b318-9700-4259-88d5-d934c974c5f0",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9c5c80dc-b7c6-464d-b4cf-de0f46232819",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "fb09d0ee-4cd5-4ffc-bfcb-dac7a155a799",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "708269d9-08ac-42f6-bda2-41955b367830",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8a781d44-9da9-4c74-ad8e-8479bfed08e7",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 38
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 31.496031746031722,
      "responseMin": 15,
      "responseMax": 726,
      "responseSd": 49.07869434103976,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1724805697201,
      "completed": 1724805713165
    },
    "executions": [
      {
        "id": "4d755eab-29a1-4a34-aa83-59a3a6691ee5",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "437d5bcb-bdaa-47f4-a905-34bf8e77f175",
          "httpRequestId": "55b96f30-8623-4a67-b011-299d48ed58e8"
        },
        "item": {
          "id": "4d755eab-29a1-4a34-aa83-59a3a6691ee5",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "d7aacd23-e581-4ed7-a6f3-336f49e89f70",
          "status": "OK",
          "code": 200,
          "responseTime": 58,
          "responseSize": 0
        }
      },
      {
        "id": "ff9571d1-1683-4ffa-a0e9-6078def9e2ff",
        "cursor": {
          "ref": "4d1bc7b9-6d25-43b0-9448-a1ed5950a711",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "6770ba05-2765-45a6-8ea3-63a6af58b9ff"
        },
        "item": {
          "id": "ff9571d1-1683-4ffa-a0e9-6078def9e2ff",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "a21b29c6-b9b8-4d04-ae55-c1ea326edbe3",
          "status": "OK",
          "code": 200,
          "responseTime": 15,
          "responseSize": 0
        }
      },
      {
        "id": "668acb1c-a69d-499b-b672-e19db831e659",
        "cursor": {
          "ref": "357c3bbb-71c0-467d-b80f-0ac728173d60",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "bf76e34b-c1eb-47c8-a8cc-c0778c9495cf"
        },
        "item": {
          "id": "668acb1c-a69d-499b-b672-e19db831e659",
          "name": "did_json"
        },
        "response": {
          "id": "867d9779-8511-424b-add8-8d2df9b12af0",
          "status": "OK",
          "code": 200,
          "responseTime": 254,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57d1e393-c3e5-4844-8387-b0893e507151",
        "cursor": {
          "ref": "6840e74d-831f-4c97-9655-7a3031919bf8",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "3028e94b-3a4d-4100-8f81-bb334020d9aa"
        },
        "item": {
          "id": "57d1e393-c3e5-4844-8387-b0893e507151",
          "name": "did:invalid"
        },
        "response": {
          "id": "b8a373f6-9acd-4c8c-8060-cf6ecb51cb0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57d1e393-c3e5-4844-8387-b0893e507151",
        "cursor": {
          "ref": "6840e74d-831f-4c97-9655-7a3031919bf8",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "3028e94b-3a4d-4100-8f81-bb334020d9aa"
        },
        "item": {
          "id": "57d1e393-c3e5-4844-8387-b0893e507151",
          "name": "did:invalid"
        },
        "response": {
          "id": "b8a373f6-9acd-4c8c-8060-cf6ecb51cb0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f53bfa3-5a15-4022-9c24-52291199ef4a",
        "cursor": {
          "ref": "bb1b43df-fe21-40bb-b02b-b9bfb66c2d5e",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "d8dadfc2-8930-4861-a070-b1e3b2a8e6fd"
        },
        "item": {
          "id": "1f53bfa3-5a15-4022-9c24-52291199ef4a",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "c4a8774d-5085-4be4-a0f3-30d00ac0b195",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 140,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 404",
              "message": "expected response to have status code 404 but got 500",
              "stack": "AssertionError: expected response to have status code 404 but got 500\n   at Object.eval sandbox-script.js:1:5)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30a0a3ad-c617-4dbe-b2e1-9383b24a0c13",
        "cursor": {
          "ref": "57f8f849-e4ea-46f3-9c3d-6959466c8ccd",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "e0251602-a195-4150-bc05-d32865684301"
        },
        "item": {
          "id": "30a0a3ad-c617-4dbe-b2e1-9383b24a0c13",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "e120d7a9-2960-43a2-9245-7862c24d2bb1",
          "status": "Not Found",
          "code": 404,
          "responseTime": 27,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ab97780-5463-4e3d-a69b-81ac395284ae",
        "cursor": {
          "ref": "ee9e64a1-a639-490c-8c5e-97e487de2dc0",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "f86c83b8-0d29-4cea-8d60-ccc070dfb994"
        },
        "item": {
          "id": "9ab97780-5463-4e3d-a69b-81ac395284ae",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "e2a6e89a-6bc6-48d3-b3a4-753a2b340b1d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36aa04ec-3f22-4877-b142-1e9cf3ef1aad",
        "cursor": {
          "ref": "49ba874c-00d7-48f0-8928-f55abaa37e6b",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "7fdce285-3c25-4502-b3ae-4f14979471dc"
        },
        "item": {
          "id": "36aa04ec-3f22-4877-b142-1e9cf3ef1aad",
          "name": "identifiers"
        },
        "response": {
          "id": "98cd2a07-111d-4697-860a-e5747f44dee9",
          "status": "OK",
          "code": 200,
          "responseTime": 265,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f848446-655d-4c93-9d30-5b1ce6185ee2",
        "cursor": {
          "ref": "8b35a05a-c144-47df-9e48-5866827970bf",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "e9c008e2-d337-4ecd-b11e-44b335b41c7d"
        },
        "item": {
          "id": "8f848446-655d-4c93-9d30-5b1ce6185ee2",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "e8309d61-06cd-4146-b440-60d5f0e2b3f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b367e001-41a2-4621-b56e-a478d705db3b",
        "cursor": {
          "ref": "d1d0ee6a-68aa-4548-8026-48eb078e7d88",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "de25500a-525d-4cd6-8bce-ddfc5cda0934"
        },
        "item": {
          "id": "b367e001-41a2-4621-b56e-a478d705db3b",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "b59303a4-781c-4c78-bdea-7ff494cdbab0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6de6b2c9-cac1-4c1a-b717-901283aad398",
        "cursor": {
          "ref": "8e905da8-21db-4a4d-9399-278bae5b35c2",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "0f1f3c6b-a369-4f4f-a471-3bc88aaa4fa9"
        },
        "item": {
          "id": "6de6b2c9-cac1-4c1a-b717-901283aad398",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "cf9511d3-64b6-4851-acd3-437e07213697",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e5c2856-7370-4686-9da3-cec7e77def74",
        "cursor": {
          "ref": "89618ccb-d1b9-4d42-9c8b-1641441a3526",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "1da79745-342b-498d-8385-b06ddb1dc610"
        },
        "item": {
          "id": "5e5c2856-7370-4686-9da3-cec7e77def74",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "5d86421e-7865-434a-bf03-994c1d616267",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c3afa41-37c1-48ee-a9f7-832cb9144e0c",
        "cursor": {
          "ref": "6e0148a3-a5a7-4a6d-95d2-3998e93fb3b7",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "a260e8df-2979-4178-8e5e-c4c3eac898cf"
        },
        "item": {
          "id": "5c3afa41-37c1-48ee-a9f7-832cb9144e0c",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "48f5f9b8-581a-4ed1-92ec-46f81a289f40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "436c5bbd-8c91-4bcf-ac1f-a1d9ecfdb82b",
        "cursor": {
          "ref": "29c89e47-aa28-44ca-a931-a1931869eb94",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "0699e8c4-2b7c-4aef-b32e-837c4cfa45ea"
        },
        "item": {
          "id": "436c5bbd-8c91-4bcf-ac1f-a1d9ecfdb82b",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "5dc872f9-ec9f-42b9-80f0-385af2e5440c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0862c205-97ed-40e0-b3ac-dd4bb3b2ccf5",
        "cursor": {
          "ref": "d77233d8-af3d-4ff6-acef-ee39506df784",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "a1b67b90-c5a2-4641-b579-21416f160282"
        },
        "item": {
          "id": "0862c205-97ed-40e0-b3ac-dd4bb3b2ccf5",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "dbaee96a-7687-4cc8-9fdb-9d75b224d99f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72475ab9-db89-45d9-98ff-5ad6068aff36",
        "cursor": {
          "ref": "9a0ff9c8-aadc-4591-bdcc-1128d505a0e4",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "aceba734-f2fc-455c-b611-16652540b5c0"
        },
        "item": {
          "id": "72475ab9-db89-45d9-98ff-5ad6068aff36",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "0f301dd0-a8f6-4559-b81d-acf1765ab48d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f922f05-7ece-4075-b98f-e650c2ae834f",
        "cursor": {
          "ref": "98652a59-aedc-4022-9b8f-13ee74b70a67",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "7fde88ff-040b-41f5-9fac-a0709074ad40"
        },
        "item": {
          "id": "4f922f05-7ece-4075-b98f-e650c2ae834f",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "619b521f-ef29-4c85-bc31-ef67702ffd2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ac3aa49-e721-4be7-bc0a-1f185cb4aaf7",
        "cursor": {
          "ref": "cf9ad6ef-2db7-4e21-b6f6-49b2b118c48a",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "f2fc248d-f094-4d10-ac11-3f3b9674aa9f"
        },
        "item": {
          "id": "9ac3aa49-e721-4be7-bc0a-1f185cb4aaf7",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "1e4ae16d-d245-485c-baeb-31dfbc75c987",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c9c1544-0095-4b98-9eb4-9eb833969f6f",
        "cursor": {
          "ref": "a0acda28-ae36-4ef6-9a9d-bced4f7e43f2",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "c8fc31c9-719c-4a5b-9514-2ee00000e566"
        },
        "item": {
          "id": "5c9c1544-0095-4b98-9eb4-9eb833969f6f",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "8f3c64bc-5821-47b9-a382-acdd386c03a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba37a395-d013-46de-884a-79c8732784f0",
        "cursor": {
          "ref": "de2c99e1-fde3-4523-91c3-f89fc5f64262",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "82fbd645-13d8-4280-9cac-f36d5275f23d"
        },
        "item": {
          "id": "ba37a395-d013-46de-884a-79c8732784f0",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "98b7ff7d-03fa-4f31-9c3a-09df1e9a847b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6005b46d-fd68-4987-b746-3b95c05b1540",
        "cursor": {
          "ref": "780b5f7e-37fe-4c65-901a-f1317465726b",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "7fd64b15-e4c1-472b-aa9e-30c40f4bc9d4"
        },
        "item": {
          "id": "6005b46d-fd68-4987-b746-3b95c05b1540",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "0e8f2037-494e-4bd6-9f5b-2be0ea210354",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "834940e0-8549-4cdb-88cb-dd7f36bf5939",
        "cursor": {
          "ref": "919d3dd4-2e01-45c1-964d-8ea105303e3f",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "91d78437-cad2-4e9d-82d7-550847ba1c66"
        },
        "item": {
          "id": "834940e0-8549-4cdb-88cb-dd7f36bf5939",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "0d95aa5c-8d02-4e92-82bc-909471214935",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddf37959-c1e2-426d-bf08-dae8e5ce0dc7",
        "cursor": {
          "ref": "9c15ae51-9512-47ee-ad3e-c9e113046f66",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "e0778812-6b41-433c-96d9-c68526887211"
        },
        "item": {
          "id": "ddf37959-c1e2-426d-bf08-dae8e5ce0dc7",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "3b9f9c62-bb09-40da-ba53-de855c99eaa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d839ba31-fe6a-4d28-b155-6b84d6fffa45",
        "cursor": {
          "ref": "8649cd4f-79a4-45cc-ad9e-bae7e8ff5350",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "deef59a5-82d7-42b0-aea2-f31893a27a32"
        },
        "item": {
          "id": "d839ba31-fe6a-4d28-b155-6b84d6fffa45",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "3042afed-dd69-4835-bf55-171883937990",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69df010f-fa26-4085-8444-cad1b1e628ac",
        "cursor": {
          "ref": "ed190641-f177-4547-bbfd-28217af0a69f",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "0ffc1632-0bfa-4ea3-8224-3c692a61862a"
        },
        "item": {
          "id": "69df010f-fa26-4085-8444-cad1b1e628ac",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "64b68dad-e08c-4f3a-9d7e-bd8e9582b2b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "361e5daa-a1a2-467b-b295-780de36bcc71",
        "cursor": {
          "ref": "36437fd6-4350-4f50-b930-6df6e66ccb8a",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "6c5d6a35-6e60-4fff-abde-f4e18eb2d708"
        },
        "item": {
          "id": "361e5daa-a1a2-467b-b295-780de36bcc71",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "aa8bf665-ced1-4b7e-b836-480ce6b95ac4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1005336e-4dd8-4b64-b416-0a905ace987f",
        "cursor": {
          "ref": "bc4b46c7-03bc-49df-896a-415129afffe8",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "6fa6ecd1-9b6c-49a1-8535-1114616a0bfb"
        },
        "item": {
          "id": "1005336e-4dd8-4b64-b416-0a905ace987f",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "d4376edb-69eb-4165-88a3-ae63961d2c8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82d9d0c5-9ccd-476a-8454-90eb388566f0",
        "cursor": {
          "ref": "a80ac6fa-7cba-44e9-bd7f-67bac2cddb3e",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "276be0db-443f-4d39-b539-cbf3e64364c4"
        },
        "item": {
          "id": "82d9d0c5-9ccd-476a-8454-90eb388566f0",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "24b9debe-eaac-47b0-95d6-936802c12189",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfaaf8b8-b07e-4aa2-9249-82bc17fac0c7",
        "cursor": {
          "ref": "a8415737-cb2f-4ae0-aad0-edf54a34646f",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "16036bfc-dd13-4049-a6f2-ba03df8d5c89"
        },
        "item": {
          "id": "cfaaf8b8-b07e-4aa2-9249-82bc17fac0c7",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "88e8f56b-d9d6-4a0b-b50a-cd1f5bcf379c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa4fcc1f-cfa4-4170-9f85-7d2e68688832",
        "cursor": {
          "ref": "e1237ce3-a1cd-4a40-bbde-969c35cebb37",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "06412374-1a88-4eb0-90d7-ad2db7646c7c"
        },
        "item": {
          "id": "fa4fcc1f-cfa4-4170-9f85-7d2e68688832",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "d00149fc-0bb0-423c-93d9-4d55c12c0f7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffbbe183-18ac-4024-978c-1678820976d5",
        "cursor": {
          "ref": "16ad95f6-224c-405b-854c-5609b0ef3194",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "2cc97458-8a52-4d4c-a3e6-b88ff2df5391"
        },
        "item": {
          "id": "ffbbe183-18ac-4024-978c-1678820976d5",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "ac800a40-5f7c-49dc-bea5-cebd6d32ff9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddb7f783-4858-47cb-a176-88bb3113ec86",
        "cursor": {
          "ref": "31e52425-e109-4e0b-9431-c19409da21db",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "8108deea-c21a-4a52-ba38-a1b710ba50b5"
        },
        "item": {
          "id": "ddb7f783-4858-47cb-a176-88bb3113ec86",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "de797a1c-229e-45cc-9c7b-504c9843e7d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "563e84ec-9eb5-4c10-a5de-ad7a4f8c87ac",
        "cursor": {
          "ref": "c518a8d6-a99d-4038-ae75-d04ca67c803d",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "fecbae3c-aef3-4ff9-a566-a91fc94235d2"
        },
        "item": {
          "id": "563e84ec-9eb5-4c10-a5de-ad7a4f8c87ac",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "645c11f4-662d-4616-9f90-6e77483c234d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3f0a5f8-661a-48b3-9773-ddfb12fdf61c",
        "cursor": {
          "ref": "618febf8-ac87-47e2-afa8-a596ec03b0b6",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "6a7970f0-9ba0-44cd-aaa2-aaf44874d266"
        },
        "item": {
          "id": "b3f0a5f8-661a-48b3-9773-ddfb12fdf61c",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "a8821a46-faad-4220-9cf9-df19405dc876",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4081fdb9-eeef-4321-b5a1-c862de14287f",
        "cursor": {
          "ref": "f15e805e-7834-49ac-b943-be3b1dc83a05",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "3cb51cc0-cc04-4f4a-aa1c-88256033dba7"
        },
        "item": {
          "id": "4081fdb9-eeef-4321-b5a1-c862de14287f",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "0ee4661e-407d-4c3b-a54c-33eaf137625b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c1d0fb9-82af-4754-b86f-e211f37bccbd",
        "cursor": {
          "ref": "5b52815c-bc6d-4f16-bc35-182483e1f849",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "c470646e-38c4-4a21-8088-26792ca89649"
        },
        "item": {
          "id": "4c1d0fb9-82af-4754-b86f-e211f37bccbd",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "c59a7f46-45a8-493e-8e46-6c423c1a10a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e07346d6-2c1d-4caa-86c1-bae1105124fe",
        "cursor": {
          "ref": "d2dddf24-8c33-4c36-bb48-7a8dc1782c4b",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "be61d1fa-98b3-4499-9d6b-6b98f3191808"
        },
        "item": {
          "id": "e07346d6-2c1d-4caa-86c1-bae1105124fe",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "135eeb8d-3de9-492d-9bd0-73c59d7211c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34437b07-1cf8-47fb-8d10-7b4ddde14eb9",
        "cursor": {
          "ref": "fcf82e2c-35d7-4014-82df-27cf8949d9a3",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "f6a640f4-e4ac-4f82-bba2-64e11710f96c"
        },
        "item": {
          "id": "34437b07-1cf8-47fb-8d10-7b4ddde14eb9",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "a1600da9-2b84-4333-b81c-d846aca53f8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4316ed8-858b-4e23-b544-bed0ec9dd73d",
        "cursor": {
          "ref": "8df36be9-5855-4df5-8a34-a8df46d55104",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "89d21f13-0d08-4d3f-a2ed-dfbc17ebc781"
        },
        "item": {
          "id": "b4316ed8-858b-4e23-b544-bed0ec9dd73d",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "03f60b4e-6dc6-4cbd-8106-e21553049b84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "626252db-5b06-49be-85e4-4fa1f7e2045f",
        "cursor": {
          "ref": "aaa5dbe3-f6c5-4c76-9e8f-7f13452ca083",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "b69eb317-fc96-45e2-b6b2-717123ffc5d4"
        },
        "item": {
          "id": "626252db-5b06-49be-85e4-4fa1f7e2045f",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "f0d27816-4811-4716-92cd-3a1630849c96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d783a2e6-277a-4851-b698-3f0c81e0ed75",
        "cursor": {
          "ref": "798528f8-e1e8-42ef-ad20-c4876ac1622e",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "2ad44965-d1d2-48de-a92e-661d4e4a46f7"
        },
        "item": {
          "id": "d783a2e6-277a-4851-b698-3f0c81e0ed75",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "b22f18c4-b958-4af4-9d0c-d9d91465cf45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfecf862-fef0-4a86-9255-215f6d903510",
        "cursor": {
          "ref": "aa049c0c-25e7-4b67-8ae4-71ffc84fcbef",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "3859d44b-939c-4d49-8ec8-65130e550df8"
        },
        "item": {
          "id": "cfecf862-fef0-4a86-9255-215f6d903510",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "a9b39e10-a48e-4b68-90e0-ce13766e86a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62b34d5f-03fc-412a-99a6-404a8ddddcfb",
        "cursor": {
          "ref": "a1880f77-857e-4aae-93c0-0c8d9db2a2dc",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "ec7bcf42-a6ee-421b-8e3a-6a14f5b591d9"
        },
        "item": {
          "id": "62b34d5f-03fc-412a-99a6-404a8ddddcfb",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "733cf2fa-753b-4832-a6b5-a974fdae2768",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5eacbc79-5eeb-4576-9712-3c231319f1c6",
        "cursor": {
          "ref": "c691f5b6-99aa-4b68-aa6a-0385161f40be",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "a8757d44-649c-4252-a4c0-25532a0b009c"
        },
        "item": {
          "id": "5eacbc79-5eeb-4576-9712-3c231319f1c6",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "237769f2-5c99-4e8a-9aa6-25e067d3484d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9458b509-5b9a-4e13-adf5-e427d60ca302",
        "cursor": {
          "ref": "12938f59-741c-4353-b5ec-1d0791120706",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "57e052e6-b02c-4f45-9c0f-799a6161cb06"
        },
        "item": {
          "id": "9458b509-5b9a-4e13-adf5-e427d60ca302",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "bf4e7568-757d-4df7-b147-83b5fb1b4a57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e2ae0f6-19d1-4269-bc5b-53eae15bb3ab",
        "cursor": {
          "ref": "5bea44cf-3d56-4da8-8164-a636f18264e8",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "8adcf4d8-b6bb-4f66-b5c3-c4240ffa55f8"
        },
        "item": {
          "id": "6e2ae0f6-19d1-4269-bc5b-53eae15bb3ab",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "7e199904-ce65-4501-8541-7bb10f88fdd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ea92331-116a-42d4-8eee-e48edbcb11ea",
        "cursor": {
          "ref": "d7a56983-881e-4fea-9733-d8fd92f08353",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "bd58fe42-7934-49f7-b8e4-b86994c54765"
        },
        "item": {
          "id": "0ea92331-116a-42d4-8eee-e48edbcb11ea",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "411ad0c0-dac1-4d33-a70f-9e428a6b7422",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b74b769d-7e60-4009-bf4c-3d3bef6502c8",
        "cursor": {
          "ref": "0e12f622-f9c7-49fa-8ebd-d71f4ca5ea44",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "6f87e4b0-42b8-4bbe-8c1b-d1308996d939"
        },
        "item": {
          "id": "b74b769d-7e60-4009-bf4c-3d3bef6502c8",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "7f68da67-673c-43a3-afed-0c0725e19694",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a676759-6201-4088-9db2-bfe7481b9971",
        "cursor": {
          "ref": "40c99e78-59b2-4240-82dc-b8a9ffb6fba1",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "45e3038a-310c-4fcc-9276-b8cdc8abf5b6"
        },
        "item": {
          "id": "1a676759-6201-4088-9db2-bfe7481b9971",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "0da5513f-932e-4dfa-81f8-2b9a0182d160",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f3daee1-c0b3-47e3-8dc7-28150b549047",
        "cursor": {
          "ref": "731fe363-98c9-4471-9d33-1eb876d60cb2",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "11760c86-da6d-497e-ac76-9dcdcb3aface"
        },
        "item": {
          "id": "3f3daee1-c0b3-47e3-8dc7-28150b549047",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "3545e810-60ea-4f01-a3a1-4d0bc5d93c43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc3f649d-2383-4ca9-8135-b3d587c5c31e",
        "cursor": {
          "ref": "f1233511-ccaf-452b-8350-902eb93e3b79",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "36d0d37e-a65c-46f7-a47a-93375ada9c65"
        },
        "item": {
          "id": "cc3f649d-2383-4ca9-8135-b3d587c5c31e",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "50cc30b5-1ae7-4bd1-bb6a-0987b3601fbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3312acf0-d580-439f-970e-5b1398f6bbc0",
        "cursor": {
          "ref": "e6bd5e5a-450f-451f-b24e-3befcb0d485a",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "a0f95b2e-380b-43a5-8445-1c413bfd48f1"
        },
        "item": {
          "id": "3312acf0-d580-439f-970e-5b1398f6bbc0",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "b53fa62d-da82-4c15-9fbc-100b8c9342a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c604c30-15bc-49ee-a970-eaeb0ff2458f",
        "cursor": {
          "ref": "e2b25181-257a-484b-9237-427885c087cd",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "0740ae50-06c5-4929-9ea8-e7a2aa5aaeba"
        },
        "item": {
          "id": "9c604c30-15bc-49ee-a970-eaeb0ff2458f",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "8f678c7a-2ae7-4f21-b24d-e597deaa2a82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb75d8cb-5e3e-47b1-8151-762f17eca21b",
        "cursor": {
          "ref": "aa35a48f-6df0-45db-9388-5478f84d3ab1",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "a285e4dc-0f63-4c18-9db9-76a2fbe8185a"
        },
        "item": {
          "id": "cb75d8cb-5e3e-47b1-8151-762f17eca21b",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "c7f48240-7551-4b75-b310-d1ea57aa2ff7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55986b4a-6616-4977-a4dd-970f0198b7f3",
        "cursor": {
          "ref": "22af0ba2-b431-422d-ab40-89958e1f1915",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "c53e5c9e-c40b-436e-a99e-e3eb7f259cdd"
        },
        "item": {
          "id": "55986b4a-6616-4977-a4dd-970f0198b7f3",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "41200be4-1424-4fc9-865e-ee7ca64bbcd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68e45f68-2a1c-472e-8f44-8ec9e6b3a0fc",
        "cursor": {
          "ref": "0d7627c5-3bd3-4b8f-a324-4794f9a8ee8d",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "fbcd9072-cd20-45c4-b552-69db849ec504"
        },
        "item": {
          "id": "68e45f68-2a1c-472e-8f44-8ec9e6b3a0fc",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "d6c82b77-a199-48db-8118-4129f89898ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "075c0034-92b8-4c59-9af7-8b86c0553a6b",
        "cursor": {
          "ref": "3ba7360e-9f73-455c-bad9-05ab456aecf1",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "83a63ded-e8b0-4f2e-b1f3-fedb91435dad"
        },
        "item": {
          "id": "075c0034-92b8-4c59-9af7-8b86c0553a6b",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "d2d3a926-7702-46d4-81e9-77022b62dbf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64b301f1-00b2-49ab-ab10-48af059c7bf9",
        "cursor": {
          "ref": "93b30ede-76ab-4d56-87e6-09fb5f227373",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "90d84078-2781-4f1b-886f-0bc14a200ce8"
        },
        "item": {
          "id": "64b301f1-00b2-49ab-ab10-48af059c7bf9",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "8892848b-450e-4120-b340-82b17fd37619",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f1e3141-09a8-4fff-8b7f-0e53305b30b0",
        "cursor": {
          "ref": "8660e7ff-ec02-4ff1-aae5-07ba854a1b53",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "e2b363fd-e04a-445a-ab09-3fab83be29ed"
        },
        "item": {
          "id": "7f1e3141-09a8-4fff-8b7f-0e53305b30b0",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "f1d49681-3957-44c7-99ee-181e4caf27cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "321b44f5-a0d7-406b-b3fc-40a49cd40af4",
        "cursor": {
          "ref": "8f3ae5d2-a7f0-4067-b1d7-8804fd78c238",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "87e873a6-2c03-41c9-8c04-1e37d84e6d4d"
        },
        "item": {
          "id": "321b44f5-a0d7-406b-b3fc-40a49cd40af4",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "48c3cfd0-67fb-4731-abe8-9639ad0e6b57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c83b9078-125b-44e6-8b3f-375dfa25353a",
        "cursor": {
          "ref": "c3e229ed-b8b3-476e-aa90-d4b0f0d86bec",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "ebf69146-e2cc-4aaf-8092-f584ce13c553"
        },
        "item": {
          "id": "c83b9078-125b-44e6-8b3f-375dfa25353a",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "d9d4fc7c-b492-443e-8ff4-8da196ded043",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "514ade0f-2a36-43b1-ab52-15a37b606869",
        "cursor": {
          "ref": "53740b44-4f19-4340-aea0-7d79fb2c23dc",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "098ae2d3-0cbc-4ed7-a2a3-240ea7d6e943"
        },
        "item": {
          "id": "514ade0f-2a36-43b1-ab52-15a37b606869",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "e8945b66-546b-470f-9678-caa9def58db5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04e1edb8-4999-413d-97e2-7f8ba0259066",
        "cursor": {
          "ref": "770fe988-b18e-46c1-9855-c72da2e1f167",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "ad2e22a1-0f13-49b8-8b2c-a86eb86ac61c"
        },
        "item": {
          "id": "04e1edb8-4999-413d-97e2-7f8ba0259066",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "98a733ce-9adf-41ab-baed-c50cd69f415d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "841c18fa-f3ba-4bb9-8ea7-be64ba472321",
        "cursor": {
          "ref": "f9c46c54-013f-4aa3-9d7b-88dd90d5c3e3",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "a261698e-0715-4601-9d75-ee10269bec66"
        },
        "item": {
          "id": "841c18fa-f3ba-4bb9-8ea7-be64ba472321",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "3b0079ca-ff3d-4c52-af5b-e8ec8c08ba25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9016f945-3af9-489e-acb5-7ab130d8b0f4",
        "cursor": {
          "ref": "87e090e8-0134-4dab-87c0-44efba50e537",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "9666ff2e-ea73-4eb0-bfbe-1eaa2e57eb8a"
        },
        "item": {
          "id": "9016f945-3af9-489e-acb5-7ab130d8b0f4",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "a5ab8e4d-4cd3-4827-b5b1-ef733badb537",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "315c2fb1-8637-45fb-91aa-bfda38416aef",
        "cursor": {
          "ref": "d9deaf77-2790-4019-b018-056dae478b61",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "6846c3b3-e8c8-4361-a488-572877fb892f"
        },
        "item": {
          "id": "315c2fb1-8637-45fb-91aa-bfda38416aef",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "4a5c00f7-5283-45f1-84cd-6fb3015afc4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e64c534-f254-4ce8-b133-21a22364ba89",
        "cursor": {
          "ref": "d49e87ad-b129-4fcb-81d5-a21f5b7f9b27",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "a4a2f3f7-46c5-4ebc-b513-a50905c00359"
        },
        "item": {
          "id": "3e64c534-f254-4ce8-b133-21a22364ba89",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "8093dceb-9ce7-4ad1-8715-8ca74b02f74b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ca263ff-28f2-4988-adac-007c16dd6e7c",
        "cursor": {
          "ref": "990ba7d3-42ed-4fcf-8ef0-20c7ac446709",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "ca6cfbfc-ab5e-4eab-8c88-8a9be9c06ab6"
        },
        "item": {
          "id": "8ca263ff-28f2-4988-adac-007c16dd6e7c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "a79d41ba-5d0a-4ba7-a712-bea805bcc840",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f03518f5-9d0f-4c13-9b67-916640048593",
        "cursor": {
          "ref": "36174d18-9be4-499d-973a-fbd29f74cac2",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "e943e052-1779-4657-aebd-159f1b1b0de6"
        },
        "item": {
          "id": "f03518f5-9d0f-4c13-9b67-916640048593",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "165b5bcf-0bdc-4bac-abf8-0eba880d8627",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab2cff7d-29b4-4e2d-86d4-38d14ffc5cba",
        "cursor": {
          "ref": "0d769f83-6101-4f0a-a51b-097622f91f74",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "ceff571a-7a5a-4a8c-88d9-28d1283fb760"
        },
        "item": {
          "id": "ab2cff7d-29b4-4e2d-86d4-38d14ffc5cba",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "02f66bb0-4f77-4c6e-a5f3-32c96344936e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d23b7305-414f-4cee-810c-8121ce6fcc01",
        "cursor": {
          "ref": "70d9fd13-839f-4a14-b944-f784f15c2360",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "15edcfa4-4dac-4f44-b585-8a8a264f3cc7"
        },
        "item": {
          "id": "d23b7305-414f-4cee-810c-8121ce6fcc01",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "130b2dc7-b968-4ce3-a0b8-611c702b0aa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "332e885d-5d73-463c-8f36-7c7faf829c3a",
        "cursor": {
          "ref": "00d62d7d-676f-4afe-9c16-7442fd98ebd8",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "dbad8941-7122-4bac-8ca0-ca4ee550d8ea"
        },
        "item": {
          "id": "332e885d-5d73-463c-8f36-7c7faf829c3a",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "5c7d3714-6cb3-4ee6-a1bc-0a8aa52c4184",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1404d568-8f60-48cb-828b-652b8ce9f715",
        "cursor": {
          "ref": "d53ce8a2-d357-4c33-b86e-00e82123742a",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "93e65484-1ded-40e9-ad20-4e3d2c603947"
        },
        "item": {
          "id": "1404d568-8f60-48cb-828b-652b8ce9f715",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "240bd405-d03d-444a-88d9-e12d6fad4045",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af77a07c-fcca-4e9f-8504-0b083058301c",
        "cursor": {
          "ref": "6a2ee828-4e62-4133-9da0-d1e35fe0c9a2",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "e0805422-08f0-4649-ae6d-110b43b10c91"
        },
        "item": {
          "id": "af77a07c-fcca-4e9f-8504-0b083058301c",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "2a609351-b467-4f59-96a4-843678a9652f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bae815b8-efb6-4cb5-8a1d-bfdefde69309",
        "cursor": {
          "ref": "f483d49c-387e-426a-9ca8-7682b74cb994",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "b08d3383-4552-46f6-986c-bc3f38a97431"
        },
        "item": {
          "id": "bae815b8-efb6-4cb5-8a1d-bfdefde69309",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "6e81b8cd-3a95-4088-8569-d0ede2b6f690",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4c54ad9-ae21-4939-a672-c3775132f020",
        "cursor": {
          "ref": "7ec03ad8-5c1a-4ea1-9bf2-3a1570e8f1cc",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "6e820833-9212-4d01-b9e8-0e0230909700"
        },
        "item": {
          "id": "f4c54ad9-ae21-4939-a672-c3775132f020",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "0a7f041a-8c8a-4b6f-9c43-433626d9f6ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81827f96-0ada-4a2f-ab17-268b1f8a8061",
        "cursor": {
          "ref": "b40a8de1-6289-4313-8b5b-16346145ce1d",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "20744a12-8bb9-4a59-b53d-5a112b74d401"
        },
        "item": {
          "id": "81827f96-0ada-4a2f-ab17-268b1f8a8061",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "f473bbae-75a8-4ec1-a6d5-dacb1f0147ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a89f1b93-ef06-4ba3-8a13-eab0c586a64d",
        "cursor": {
          "ref": "dbee1998-563e-469e-8d59-b5e8cc63c177",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "482d5f10-8ee6-4dd9-bf19-7ecb382d27bc"
        },
        "item": {
          "id": "a89f1b93-ef06-4ba3-8a13-eab0c586a64d",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "d0fc03bc-2e82-4da7-bb50-e3664417fe1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d423a0f-3b03-41f1-9418-898285346263",
        "cursor": {
          "ref": "2b37f4c7-1525-4108-8323-4a387a1f1c01",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "10e70a3c-8b5c-4d81-816a-a4a032b5a480"
        },
        "item": {
          "id": "0d423a0f-3b03-41f1-9418-898285346263",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "4fdee1e4-b4c9-43fe-90bd-53ebc9b49879",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "144f67ff-9352-4cfb-b24c-f9a637b39f66",
        "cursor": {
          "ref": "690149bf-ae35-4a12-9045-340abad6a2b5",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "70324262-8556-4696-a7b2-2b566b19d58f"
        },
        "item": {
          "id": "144f67ff-9352-4cfb-b24c-f9a637b39f66",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "ac6f6e7f-5c9c-409e-b8f8-d6603e83035c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fe4e0d6-753b-4d3c-8182-1602e9e4f903",
        "cursor": {
          "ref": "37db1b36-3e4b-445d-8498-531eb084882f",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "cc522f81-7a63-43bb-84f6-611a415e991d"
        },
        "item": {
          "id": "7fe4e0d6-753b-4d3c-8182-1602e9e4f903",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "396ecd67-e6f1-43cf-842a-349aad82b9e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47a01892-eaba-4914-b13b-f55e8c9170f2",
        "cursor": {
          "ref": "33260fe5-1420-4b62-b9cd-9d8d2cdba6d9",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "e3bd7919-b442-480d-826e-0438d8e1f52e"
        },
        "item": {
          "id": "47a01892-eaba-4914-b13b-f55e8c9170f2",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "18fa7fdc-d3da-4989-bb85-785df0640df7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92bb792a-8cdd-4fe7-8aa2-d5adfa4f0169",
        "cursor": {
          "ref": "fa81f685-ab5e-4fd7-827e-cfbd8f19a10f",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "4b4bed01-8562-47e4-ac48-72bf44209b31"
        },
        "item": {
          "id": "92bb792a-8cdd-4fe7-8aa2-d5adfa4f0169",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "0b46460a-1e5c-46f1-99fd-0e9711d69241",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3fa6cbb-848e-4ceb-ad34-22299e09a6d6",
        "cursor": {
          "ref": "02a36e14-5f81-48f1-8023-df78148a44b1",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "27501b01-f273-4ca5-ada6-97b69641e443"
        },
        "item": {
          "id": "e3fa6cbb-848e-4ceb-ad34-22299e09a6d6",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "a7f58197-2157-45ab-ab28-35cec18dd99b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27b891cb-51f1-4ed0-b7ac-d096f0313280",
        "cursor": {
          "ref": "4a49ecd7-99b5-4e58-af28-8171adc51be1",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "b9590c73-d6d0-4c33-ba88-5608cf665a34"
        },
        "item": {
          "id": "27b891cb-51f1-4ed0-b7ac-d096f0313280",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "ee641573-5f53-44c4-922e-bc1aaa62d32c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f55532a8-fc35-41c9-93d5-6a41129fdc7c",
        "cursor": {
          "ref": "37b54fbc-4fc0-451e-97b0-78bba61e34c6",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "94560c83-1429-444e-9b2b-b0d135d9dd10"
        },
        "item": {
          "id": "f55532a8-fc35-41c9-93d5-6a41129fdc7c",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "85947684-9532-491c-836b-e8f3b5706f88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "615c3754-fdfe-4b65-a44a-9da22dc90303",
        "cursor": {
          "ref": "18f13cc4-33de-48e9-86ba-c13e6bbc5b21",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "0c4f04e8-1f56-4740-8673-56c48a898a68"
        },
        "item": {
          "id": "615c3754-fdfe-4b65-a44a-9da22dc90303",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "67a9abf0-0d17-4aa5-b99c-10d9034cbc8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f1d99f0-bb55-4305-a0f5-f72e03fa5a3e",
        "cursor": {
          "ref": "d48f5561-c432-4a29-b627-3640c5b4acec",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "8a3c8e1a-48f6-49df-b1a0-ece30345637e"
        },
        "item": {
          "id": "3f1d99f0-bb55-4305-a0f5-f72e03fa5a3e",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "d37b6819-166b-4db1-a36d-f3fb2095ac6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9d01c43-6d67-45ec-8d58-c273b9bd1a45",
        "cursor": {
          "ref": "aa876a5e-09ac-4ab8-af9f-c5f654b3f18c",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "654b39a1-7803-4946-af40-2f0f9bacbc7a"
        },
        "item": {
          "id": "d9d01c43-6d67-45ec-8d58-c273b9bd1a45",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "95525a7d-b8cc-489f-80e8-7d4dc50efc4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9dcc1fd-e9e3-4924-85a2-1c571de0c5a4",
        "cursor": {
          "ref": "1b070e95-2836-4a19-a623-4c85b5d92e04",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "5687187a-78fe-4529-a645-e1a018ab3b4a"
        },
        "item": {
          "id": "b9dcc1fd-e9e3-4924-85a2-1c571de0c5a4",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "e74308a2-77bd-44ee-b69d-2bb956433a32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baf1197a-a598-41a1-9a3b-71927fccec46",
        "cursor": {
          "ref": "228693c7-5e0e-4103-87e5-e1f91aeb39b5",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "a3b68ea0-50bf-4584-8f32-4b268a42e50d"
        },
        "item": {
          "id": "baf1197a-a598-41a1-9a3b-71927fccec46",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "96aab4a4-980b-4ff5-b751-18bcdeabcbc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae2f4ede-e34a-4c5b-8e02-e668ab73d6ad",
        "cursor": {
          "ref": "00fb28f1-f07a-4dc0-b48e-4099c63bfdbf",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "93a7af26-2d28-4dfe-807b-68be8a00c76f"
        },
        "item": {
          "id": "ae2f4ede-e34a-4c5b-8e02-e668ab73d6ad",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "05b60b40-333c-407c-895f-e4e75fd7f5c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfc60db5-52fc-4110-b6df-7254c36aa7b5",
        "cursor": {
          "ref": "ecd5bfb9-e740-4f9a-b4cb-36ddf0fa6372",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "abb35398-21c1-412b-9c0f-9534ca16b665"
        },
        "item": {
          "id": "dfc60db5-52fc-4110-b6df-7254c36aa7b5",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "0d281e99-20c5-456b-83a7-deab83f31b24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7a31db1-56a4-452f-a422-6f155e462b37",
        "cursor": {
          "ref": "9545d6c6-abe7-4e2b-ae07-a968af88bbe0",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "bc91c366-3167-4c93-86a7-0fdf18f6d6a5"
        },
        "item": {
          "id": "c7a31db1-56a4-452f-a422-6f155e462b37",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "c4e4a478-32cf-419d-8cc8-dc2e954c85d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f5d822c-d12d-417a-87a8-8b85f6b3bfba",
        "cursor": {
          "ref": "5cda4efc-1c3d-457f-9958-726f014a0c40",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "19d7e14c-e42e-493d-9ad7-51a748bcff17"
        },
        "item": {
          "id": "9f5d822c-d12d-417a-87a8-8b85f6b3bfba",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "2ee5aa19-9192-41c1-8044-dc73756a7730",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b34835f-77f9-4784-aad3-a8b2fb485d3f",
        "cursor": {
          "ref": "d27fd039-9f35-481c-8e55-18a299e67971",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "3f4de963-b70e-430e-a9b9-c612d8549875"
        },
        "item": {
          "id": "1b34835f-77f9-4784-aad3-a8b2fb485d3f",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "2a530ad1-fef5-4495-93de-4c33887e9ce3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e22f260-530f-4bfd-b2db-d3fd655d12ca",
        "cursor": {
          "ref": "215eed3a-a1b7-4ebf-9f71-82eb0bbcfb11",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "ecd4468f-d871-4e57-ac36-f786257bfc1a"
        },
        "item": {
          "id": "3e22f260-530f-4bfd-b2db-d3fd655d12ca",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "ab12c84e-7139-4552-a000-67430523bce2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c189f119-2873-4a33-9002-22c9ffda4af3",
        "cursor": {
          "ref": "07b42412-e2bb-47ac-9bde-c82cd4694cd8",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "dbd0033f-ecfb-4663-819d-8620992a70be"
        },
        "item": {
          "id": "c189f119-2873-4a33-9002-22c9ffda4af3",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "d4570656-ed32-44f1-9a1d-fb85d3d3f8d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4e9c362-e2f4-455a-9272-cbea462acfba",
        "cursor": {
          "ref": "11e2cdcd-55c7-4044-92f4-4701cdabc668",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "c7514d92-fc07-4e24-9e31-a555d69d1aee"
        },
        "item": {
          "id": "a4e9c362-e2f4-455a-9272-cbea462acfba",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "42f1af7e-131a-4e0f-acfc-e4b3baad482e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13ce03a8-d375-4adc-b84d-548a7181c098",
        "cursor": {
          "ref": "5e589dd7-b248-40a8-b8e9-beb5cfdf08c3",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "17709505-f612-4dc9-96db-035f30b232b1"
        },
        "item": {
          "id": "13ce03a8-d375-4adc-b84d-548a7181c098",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "39091e7d-e321-406b-b5c2-f72b1ae71e0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29111c85-3866-467b-b990-fac715abfffc",
        "cursor": {
          "ref": "427086ec-195c-432a-be75-66c9930d0b9a",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "0c375b01-8e5e-4067-a112-b6b6731054e5"
        },
        "item": {
          "id": "29111c85-3866-467b-b990-fac715abfffc",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "f21cda0b-a8e6-460d-b77a-1fb9fc4b4293",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:101)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f2160c3-785f-438c-b76e-28a2e062800a",
        "cursor": {
          "ref": "1b825089-a945-46a1-881a-c2fe7f2a9c7c",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "94ba4c54-1f9a-4f76-a98f-2951055d6ebc"
        },
        "item": {
          "id": "9f2160c3-785f-438c-b76e-28a2e062800a",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "ff48922b-23a4-4261-96b5-150cb31d74f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "dbec2f5b-cf5f-4635-97ed-beb2be833804",
        "cursor": {
          "ref": "d3abcb0b-3321-46fc-8d26-279784af8f13",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "954ccd6d-50eb-4f2f-9a13-3e2cd175eea5"
        },
        "item": {
          "id": "dbec2f5b-cf5f-4635-97ed-beb2be833804",
          "name": "credentials_issue"
        },
        "response": {
          "id": "4600c5ca-bbf1-476c-99f3-dfb8cfbac439",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "02865b87-0eb5-4176-a79f-5e646cb87d6f",
        "cursor": {
          "ref": "311604d3-9a05-46f5-b167-98e619a2311a",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "1f803ec3-c8a8-4e40-bf10-efc585735f1c"
        },
        "item": {
          "id": "02865b87-0eb5-4176-a79f-5e646cb87d6f",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "dee8ae1b-6669-4737-9422-3903b8221748",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "f86f8f6d-6386-4539-911c-56014c83d6c9",
        "cursor": {
          "ref": "37842f45-a919-4216-aed0-6f26da4602dc",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "661c850f-ec01-4cfa-a272-2b6df782b5a5"
        },
        "item": {
          "id": "f86f8f6d-6386-4539-911c-56014c83d6c9",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "bb23d107-c358-4af4-9ba0-c3529684e834",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "573876e6-4857-40c6-9979-b539ac3d35d2",
        "cursor": {
          "ref": "99844e8b-e193-405c-b500-dfcfeb05f192",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "1c946089-1605-44ea-b5d6-973f8918aa29"
        },
        "item": {
          "id": "573876e6-4857-40c6-9979-b539ac3d35d2",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "92832340-eb67-4a67-901c-971538e97a00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "7914c9cf-741f-455a-a19d-8ef282429ebf",
        "cursor": {
          "ref": "fde06e5a-77ad-4888-a168-e3d0f356c2c5",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "c5f683f8-c90d-4eeb-bccc-9501ca83329c"
        },
        "item": {
          "id": "7914c9cf-741f-455a-a19d-8ef282429ebf",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "b4eba53d-84da-4cba-af60-87bbae884b02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "f5f9d7c6-f95e-468f-bb74-92bec940822e",
        "cursor": {
          "ref": "0548819d-318c-4590-aa50-7a735497c0fd",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "d9d603cf-3b75-48ba-b9f0-349592b62422"
        },
        "item": {
          "id": "f5f9d7c6-f95e-468f-bb74-92bec940822e",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "c8e24f9f-d7b0-43e6-aff1-532b94fb13cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "001d3a56-9732-454e-b087-61976becdb6b",
        "cursor": {
          "ref": "f3ab2f42-b82c-43b4-bfb9-4afb4a1e1602",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "28ce89f1-a7b3-4f6d-85d6-62fb543a4702"
        },
        "item": {
          "id": "001d3a56-9732-454e-b087-61976becdb6b",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "7c078c9e-0fc3-47ff-b965-ab2539dc896b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "746160ee-dfbb-4601-bde2-5c826ee80035",
        "cursor": {
          "ref": "941a35c6-55b3-4dd3-937f-d2405216e088",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "cb3cfff1-ff46-4c35-b0a0-9dc3c4fcf6b6"
        },
        "item": {
          "id": "746160ee-dfbb-4601-bde2-5c826ee80035",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "395f447d-953f-44d5-8d91-d8c371d69d3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3b41e07-b4d8-4a72-aafb-5b89f2c8e8dd",
        "cursor": {
          "ref": "60706dd4-ff3e-4c85-a8ba-5cd300a5bd8b",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "43791b39-332e-487c-a5e0-02b69d308fcb"
        },
        "item": {
          "id": "f3b41e07-b4d8-4a72-aafb-5b89f2c8e8dd",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "088030c6-1fb6-4481-8249-0c42480f2e46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9dbf21b-46ee-420c-a0a9-9ec7e269e3e5",
        "cursor": {
          "ref": "648186a1-1018-4d87-9293-086036b4a297",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "876f1445-3342-45d8-a89f-cb25f28d6f98"
        },
        "item": {
          "id": "b9dbf21b-46ee-420c-a0a9-9ec7e269e3e5",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "10ce7e68-af4d-4deb-ad66-83b49f401723",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28d19092-597c-49f6-8053-73b8a3705d3e",
        "cursor": {
          "ref": "3a07df8c-e032-4a2b-bcb8-37cb1ac128aa",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "280e6d97-dc31-4434-a7ce-5d2489f9d4c4"
        },
        "item": {
          "id": "28d19092-597c-49f6-8053-73b8a3705d3e",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "fad44e24-9d60-4a57-94a2-6a843d0cd4ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a5ec8fe-e101-462e-90a0-a66388e5272b",
        "cursor": {
          "ref": "1198497d-7ce1-415d-bd0a-978873a60d18",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "25e7cbec-5f2f-422e-934d-e3998c1ed4d5"
        },
        "item": {
          "id": "1a5ec8fe-e101-462e-90a0-a66388e5272b",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "4aaf47c4-d3e7-4910-8e63-57fc561ccd21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84489eac-e825-4206-8784-29dce45f0a07",
        "cursor": {
          "ref": "7091fea8-fd69-408d-88e3-e5be306fd334",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "259b68ed-6935-4cca-ad9c-a97564748661"
        },
        "item": {
          "id": "84489eac-e825-4206-8784-29dce45f0a07",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "5fe6d9eb-5ca2-4d70-bca6-48561bf34c50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb4bfdab-9dd0-42b3-8e52-772938138dea",
        "cursor": {
          "ref": "6b83c797-cace-4e5e-b53c-e99b7933d857",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "243a8ea9-f042-4b61-be22-4e215d16e045"
        },
        "item": {
          "id": "eb4bfdab-9dd0-42b3-8e52-772938138dea",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "a2ed7619-5241-43e5-b100-aeeab453ce87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dc96737-bbf5-4dc3-94d2-3e917f252a42",
        "cursor": {
          "ref": "66400c0d-221f-4cdb-a0f6-06a28e5ae90e",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "59378daa-651c-49f0-b467-1b78627b69e0"
        },
        "item": {
          "id": "1dc96737-bbf5-4dc3-94d2-3e917f252a42",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "12719709-901c-48fb-8202-32a8da5ebbeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aca941b3-4184-4a13-82fa-f8862c2a1382",
        "cursor": {
          "ref": "53edf115-1900-41de-91a0-708f181020c7",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "8cb32e9d-699e-411d-89b0-a60aee520c05"
        },
        "item": {
          "id": "aca941b3-4184-4a13-82fa-f8862c2a1382",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "5e506130-a2dd-424d-8d81-fa98e46e0d7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfcd1b91-01bb-4800-989b-7c7d34c06dab",
        "cursor": {
          "ref": "275546f2-b2d8-41c0-a3fd-beb1058ecd2a",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "913a493a-5466-4436-b321-9f8e9a3a9a7f"
        },
        "item": {
          "id": "dfcd1b91-01bb-4800-989b-7c7d34c06dab",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "84bf27a7-00d2-4920-91bc-05ab2040c97a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1b86aa2-8659-4361-858a-a28e84b4132e",
        "cursor": {
          "ref": "f5b34c7d-9893-48e0-b55c-5405836d6c28",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "98f831d4-66b6-40e5-b90f-bb3299a4dfea"
        },
        "item": {
          "id": "c1b86aa2-8659-4361-858a-a28e84b4132e",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "143d14ea-c131-4d2b-a754-e8e14b837d56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03b0b71d-b289-4d38-be4f-d1d6979a1ed4",
        "cursor": {
          "ref": "519f0cb0-f4df-4f3d-862e-275e5af9d475",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "a061a1f0-726a-4eb7-9f9b-d187bac0a610"
        },
        "item": {
          "id": "03b0b71d-b289-4d38-be4f-d1d6979a1ed4",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "fc00bac7-13ca-4bd3-9f54-86dd01d77b52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4447417-fae2-4954-a2ef-f0d8faec8f19",
        "cursor": {
          "ref": "287b6e4a-ebda-480e-9dbf-161600172afd",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "2d973f06-46c0-4930-a3c0-a93ab337b14e"
        },
        "item": {
          "id": "d4447417-fae2-4954-a2ef-f0d8faec8f19",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "9d383e21-8832-4280-bfd6-d17f376c31cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dadaf8a8-da82-4493-b653-a055d88c158c",
        "cursor": {
          "ref": "3ec9a4b5-ad63-4609-a7fe-cdf2793b4ede",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "7b5453ae-5ca3-4267-bd97-db770ed62025"
        },
        "item": {
          "id": "dadaf8a8-da82-4493-b653-a055d88c158c",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "361cf8a8-939e-452e-b3fd-d9b6331c1682",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae96b42b-252c-404d-bcb7-a670f7edadbb",
        "cursor": {
          "ref": "4b0e5031-f3d4-425e-9747-5f55ca416850",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "c43760e3-7227-473d-9044-c500411d185a"
        },
        "item": {
          "id": "ae96b42b-252c-404d-bcb7-a670f7edadbb",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "a2b59ac2-72d8-49ec-b4f6-dbf3a0cf96c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb55673c-3503-4cd9-805b-af8b7bdfe318",
        "cursor": {
          "ref": "f52ce0e2-0ab7-413b-8098-007159adc60a",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "b595fef7-9d2e-4dc2-9960-2500789d47eb"
        },
        "item": {
          "id": "fb55673c-3503-4cd9-805b-af8b7bdfe318",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "313478fe-ee23-41bf-a39d-c83c929bdfef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dc545b3-562a-435a-8546-f2d21d11e634",
        "cursor": {
          "ref": "b9e09ec1-2735-45c1-a22f-10b01bc0011f",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "4d6916c6-0466-4e42-9070-e7031e4ddc7a"
        },
        "item": {
          "id": "2dc545b3-562a-435a-8546-f2d21d11e634",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "dcef809b-7546-4603-ace9-87a9fe9e2f2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d95808dc-d5cf-4d3a-b91d-ed20464780bf",
        "cursor": {
          "ref": "29836193-6105-43fa-a6aa-10c2908e5651",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "c45a8867-d2df-4c4f-a3d1-d2db530b09d9"
        },
        "item": {
          "id": "d95808dc-d5cf-4d3a-b91d-ed20464780bf",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "d5d0c63c-7f00-4833-b2ed-e3704e297d54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea9ea0d0-b4aa-4205-ad94-875f56fce589",
        "cursor": {
          "ref": "ea7fc47d-dcad-4055-8c2f-1d72b1e1c987",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "76a96eca-6800-4496-a32c-57112f408323"
        },
        "item": {
          "id": "ea9ea0d0-b4aa-4205-ad94-875f56fce589",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "0316cce2-9e44-42fd-b36a-a7f73683a012",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1698c9ac-13ad-4b43-95a2-da0218209861",
        "cursor": {
          "ref": "c0b1c286-3b72-4ab1-85a6-8858df2480a9",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "223a4e42-53fe-4fd0-b864-8669d31b1e9b"
        },
        "item": {
          "id": "1698c9ac-13ad-4b43-95a2-da0218209861",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "3b23ea5c-6518-496a-baf0-6b4d0abf51fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3f50c4c-da75-4667-a789-a4c938fc6451",
        "cursor": {
          "ref": "8c2ca390-4a43-4a7a-ba0d-fc450fb13bec",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "118a43cd-957d-437c-bea2-ec49a44b3495"
        },
        "item": {
          "id": "f3f50c4c-da75-4667-a789-a4c938fc6451",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "82f68f6a-b113-4795-89d5-380ace4a2594",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98f85311-72f6-404c-bacc-b3330c9bdabc",
        "cursor": {
          "ref": "c37ca48b-7b79-4927-a4d8-f942982a7d87",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "efaabca9-7c75-4c9b-9c8a-eec57dcda799"
        },
        "item": {
          "id": "98f85311-72f6-404c-bacc-b3330c9bdabc",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "b54d0198-f3a5-4e59-b111-b76f13ce6f53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f4f3d65-a98e-4840-b189-23693163d1b9",
        "cursor": {
          "ref": "b3e2b626-c4de-46ba-a87f-97e0f839699a",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "6fcdf189-cbf1-403f-8ffb-d5a071c8a042"
        },
        "item": {
          "id": "6f4f3d65-a98e-4840-b189-23693163d1b9",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "4d6e071b-3c66-4bcc-9940-7eb5af850371",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94c52023-4823-453b-84ce-d0100655ae26",
        "cursor": {
          "ref": "75c97138-7ebc-4501-9f15-11ea77fcf576",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "67db7a95-86fe-4ce5-8b19-b3fa29def6bf"
        },
        "item": {
          "id": "94c52023-4823-453b-84ce-d0100655ae26",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "dcdadb3b-8770-4a26-9d22-33b2ec1fa981",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddbf90b3-6cc9-4b36-94fd-e7c593f66d1e",
        "cursor": {
          "ref": "3bdafd3e-191d-4fba-85ba-49562435935c",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "66a621c3-946c-407a-b2ac-4b28d475fc0c"
        },
        "item": {
          "id": "ddbf90b3-6cc9-4b36-94fd-e7c593f66d1e",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "7667f405-4595-48d2-b22c-b2ce427f76be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40066e66-7e39-4e5d-82aa-4a2a5c935151",
        "cursor": {
          "ref": "e538017e-ff5c-4070-aef8-70ba2aec14f3",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "9ae8b405-af00-4a16-839a-3138b113a48c"
        },
        "item": {
          "id": "40066e66-7e39-4e5d-82aa-4a2a5c935151",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "5da4642a-800d-4fd0-ab13-1d704106acba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ceb7f88-e9d2-4805-b89d-82f706817a47",
        "cursor": {
          "ref": "dcb737e9-e8d9-4546-bfee-18394c455618",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "12fcf9cb-ae3e-44a3-bbb4-e185757251d5"
        },
        "item": {
          "id": "5ceb7f88-e9d2-4805-b89d-82f706817a47",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "27d6c54b-f9c7-420c-a550-d39a00dddc37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b66ddc6-2770-4213-b5c0-242d18b94dd0",
        "cursor": {
          "ref": "103ad180-3054-4d9d-882a-ea7c905c9d13",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "c4ae1f75-c8ee-4db9-875b-69b7097e2e7a"
        },
        "item": {
          "id": "9b66ddc6-2770-4213-b5c0-242d18b94dd0",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "e12ee620-3e59-461e-9066-481accd6352e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a22e5a7e-3555-439a-904d-12ee1bcc87d0",
        "cursor": {
          "ref": "e7d26479-e987-401b-8d20-b0270bbce1a1",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "a5fdf790-1138-484f-87f7-3106429c5e09"
        },
        "item": {
          "id": "a22e5a7e-3555-439a-904d-12ee1bcc87d0",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "fdc8ce5b-ddb7-47c6-a9ad-3809afd66fff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5088bc9e-c56f-4b1b-9479-1eb0762670a1",
        "cursor": {
          "ref": "d09fe079-869e-4839-bcbc-88d405741a00",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "798d35d8-5b1d-44d9-876f-22e211a96f86"
        },
        "item": {
          "id": "5088bc9e-c56f-4b1b-9479-1eb0762670a1",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "c7ab2a50-6a74-43bf-9d72-aa042790fa52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf37e084-3e4e-435f-8361-5d8a68c28d67",
        "cursor": {
          "ref": "7f5526ca-f24f-453f-b6c0-1fb2da801938",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "95994fb6-0c41-4957-8d6f-bf56ed0a24dd"
        },
        "item": {
          "id": "cf37e084-3e4e-435f-8361-5d8a68c28d67",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "052fac8e-f21f-48fd-8263-357ca4610fe0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28f88c01-2fb6-4273-a783-10b843a8410c",
        "cursor": {
          "ref": "4bf99721-6258-4478-841a-8f0fbf6720df",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "8d2512e1-e5d1-4819-ab53-4276276e837e"
        },
        "item": {
          "id": "28f88c01-2fb6-4273-a783-10b843a8410c",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "ec02e4eb-c24e-4a48-bbfe-c003f596ccfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b123f419-eedf-4648-be7b-7584225151de",
        "cursor": {
          "ref": "deb4bf54-b694-4f4d-96a3-7512be785c45",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "36d86d7b-c342-4628-b5e0-e2ceb884a5b9"
        },
        "item": {
          "id": "b123f419-eedf-4648-be7b-7584225151de",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "1653cf04-b44f-4e76-9b90-91414a1dfac5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2eb8f20-ec7a-41c1-a9de-a97dc4cc9187",
        "cursor": {
          "ref": "db61b06f-17cd-4268-a218-cc237d6a3059",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "6bbf3d1a-4a82-43e3-a364-921f796e3977"
        },
        "item": {
          "id": "c2eb8f20-ec7a-41c1-a9de-a97dc4cc9187",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "0951eaa8-e409-40b8-b553-3f90b8aeda40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bce2c33-3663-4ece-9f26-ba6dd82483b1",
        "cursor": {
          "ref": "251e7065-3fcc-4a53-9e4a-771bf92cde35",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "e07ae7ce-1d1b-406b-a361-865b4fcbf329"
        },
        "item": {
          "id": "0bce2c33-3663-4ece-9f26-ba6dd82483b1",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "4fcc3c2b-b6d8-4e0c-950f-737e67f26162",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c34dbca-c9a4-4476-805e-74ab5df177eb",
        "cursor": {
          "ref": "e3d2c8ea-af4e-4e2f-a8ac-0c0d19ea16ed",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "0f35a70f-22cc-4614-a833-d3d55411ed9b"
        },
        "item": {
          "id": "0c34dbca-c9a4-4476-805e-74ab5df177eb",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "27388e52-a073-42a8-8bd9-6b8268576c82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e187d310-c94e-4250-a30c-05b689f06745",
        "cursor": {
          "ref": "147293b8-c4af-4097-bf85-d398d6ede5fb",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "c84ea519-a03f-4dd9-bb70-3ad0ade79459"
        },
        "item": {
          "id": "e187d310-c94e-4250-a30c-05b689f06745",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "540c20e0-7dc6-425f-8900-ffb0025ca1ef",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76b17bc0-4944-4ff0-8c13-18432995a25f",
        "cursor": {
          "ref": "110860b5-6bae-457f-98a5-c9d3242e8e04",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "6386ffa7-f1e4-4363-81d8-b1bdf10fad80"
        },
        "item": {
          "id": "76b17bc0-4944-4ff0-8c13-18432995a25f",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "dd7e95c3-20d0-4d90-a060-977b9452545c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb5f74aa-230d-4bbc-9a36-fbe49b4ffe61",
        "cursor": {
          "ref": "7d8be881-2f4d-4ced-bb4a-cc6094d0be80",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "dd29177a-26f7-4d27-9750-02fbb2b21ff7"
        },
        "item": {
          "id": "bb5f74aa-230d-4bbc-9a36-fbe49b4ffe61",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "f5f314b0-4d91-4d3b-967f-2c8673981206",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da1e9ce9-b5d9-4d59-a2b4-cb3c3b100a15",
        "cursor": {
          "ref": "a69725ef-ca76-4ea8-895d-c0b9216e5e55",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "510504fa-4e4e-48a3-9597-8d28c50dd293"
        },
        "item": {
          "id": "da1e9ce9-b5d9-4d59-a2b4-cb3c3b100a15",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "e55c0ec9-0c58-496d-bee7-770ac789fe0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c055ff01-757e-4951-9a22-2984875862e3",
        "cursor": {
          "ref": "b85ed504-f42a-499c-878c-17d353c04181",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "5df0f78c-461b-4ee7-92c9-22d528c43ca9"
        },
        "item": {
          "id": "c055ff01-757e-4951-9a22-2984875862e3",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "ae0543ab-af77-4aea-8d6f-90746a91d172",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e2c4adb-f828-4a02-af87-be6d754a6781",
        "cursor": {
          "ref": "f7954ab7-aaf3-48b0-bf5c-edf0136805a9",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "9c092448-1683-4ed9-a137-de6390c39edb"
        },
        "item": {
          "id": "3e2c4adb-f828-4a02-af87-be6d754a6781",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "e7c0131e-dde3-4055-a208-fee1e7352543",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61ba9e85-4850-43a4-b17b-0816b8197c93",
        "cursor": {
          "ref": "68eeaa23-54b1-4d44-939e-8b7ed5440e73",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "e8228149-b66d-4839-b646-4551529d9f12"
        },
        "item": {
          "id": "61ba9e85-4850-43a4-b17b-0816b8197c93",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "cd926cc8-5686-4c24-ba5e-1f241bbe9de6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a36e7407-c2fe-4792-9244-bae37a96fabe",
        "cursor": {
          "ref": "7ab119b1-332b-43ef-9693-781ceaca918b",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "106de7f2-4731-4745-9a9f-70225c16897e"
        },
        "item": {
          "id": "a36e7407-c2fe-4792-9244-bae37a96fabe",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "289c619e-cca7-437c-adea-da8019d5875d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26d1ad21-0e62-4ee0-b663-2b2299b34051",
        "cursor": {
          "ref": "7287018e-5811-4573-8acc-5982d941b12f",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "882d6eb7-c70d-4a6c-8341-0310310c24ee"
        },
        "item": {
          "id": "26d1ad21-0e62-4ee0-b663-2b2299b34051",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "ac2c311a-dedc-4e7a-8954-090f607ed1a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14c25f68-f77b-4418-9af5-95e02b2ea903",
        "cursor": {
          "ref": "63991866-ddaa-4b6a-aab9-ca4cbf9021ff",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "e8ad7e76-c045-496f-9cfa-b25f7437fadb"
        },
        "item": {
          "id": "14c25f68-f77b-4418-9af5-95e02b2ea903",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "cc00f971-5858-4658-affb-49b4ceff9e5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34534b42-2b19-4c7b-a817-652c7a698227",
        "cursor": {
          "ref": "d93158c1-f749-4a9e-b62a-f2ea4489e343",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "cc3c4c0f-8349-41dc-960c-e540438cffae"
        },
        "item": {
          "id": "34534b42-2b19-4c7b-a817-652c7a698227",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "1bf546b6-671d-4886-8134-ae85864f9e33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a88d65c7-971a-45fe-b62c-1f7bf04bc926",
        "cursor": {
          "ref": "754889c9-cc6f-48c4-868a-8e780d4a1521",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "2a3ac9b0-5f6a-40fa-bc6b-493357b71877"
        },
        "item": {
          "id": "a88d65c7-971a-45fe-b62c-1f7bf04bc926",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "f0bc956d-085f-4738-9a75-86b19a381403",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1980c8a8-d4c2-4cdb-93a0-d7624f711385",
        "cursor": {
          "ref": "47394592-b60e-4bfc-bb6b-ff325d0f16d2",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "d6b67467-34d0-49d5-a70f-f1b9669cddb7"
        },
        "item": {
          "id": "1980c8a8-d4c2-4cdb-93a0-d7624f711385",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "95fb2eba-360b-424d-b838-72d2b99d7728",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81c9e274-39af-4972-a4f0-4c6689f1576e",
        "cursor": {
          "ref": "279a066f-fbed-4ea0-8c12-604ccbd8b11c",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "b4cab1b1-e1e1-419a-91d7-3fe244dcef8f"
        },
        "item": {
          "id": "81c9e274-39af-4972-a4f0-4c6689f1576e",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "024357a3-e167-4a7a-ac16-d50bbf4875b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5ebaeb3-d62e-4ff6-b551-1b2a322036b7",
        "cursor": {
          "ref": "ddea713f-5ec4-4619-8898-c26df296b1f6",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "19c2ea44-d7d9-42f3-af0b-59394c0255a2"
        },
        "item": {
          "id": "f5ebaeb3-d62e-4ff6-b551-1b2a322036b7",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "2714d1eb-08c4-4a6d-b53d-1e738f887acb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29dbcef4-451f-4226-aadd-450287b1164d",
        "cursor": {
          "ref": "eb7917b5-2604-46c6-8a5f-75d3b8f23cec",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "166879e2-3cef-460c-a541-9ad590ff88be"
        },
        "item": {
          "id": "29dbcef4-451f-4226-aadd-450287b1164d",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "bdc9088e-910a-4ece-917b-40ce47745772",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b2958b3-94de-4f0a-a68f-bcea60c2c111",
        "cursor": {
          "ref": "45d355ea-8dc3-4c92-926a-9d50a186bf1b",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "bca82994-3ea9-454f-b1e4-f5d374450b81"
        },
        "item": {
          "id": "4b2958b3-94de-4f0a-a68f-bcea60c2c111",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "1d3d566a-11ff-4f5c-8bee-425ad503a742",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "156ec959-e5a2-48b3-ba8b-84d8659baff9",
        "cursor": {
          "ref": "9ec4717f-9b84-451b-9adc-de4080b1a4cd",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "4f2e50ec-3436-47cd-874d-06f7e56daffb"
        },
        "item": {
          "id": "156ec959-e5a2-48b3-ba8b-84d8659baff9",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "d20237e1-6333-4ba9-b962-28c553e33008",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c1c03a6-d137-40ab-8460-f7a98302c0c3",
        "cursor": {
          "ref": "648702f0-636f-4561-ad9f-cb8d40f0c2ad",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "0c9f71db-0f31-4945-9f99-3e7a106f8dea"
        },
        "item": {
          "id": "9c1c03a6-d137-40ab-8460-f7a98302c0c3",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "f2d60581-5f65-4926-b350-49617e72afec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4df50256-de74-4ba2-a981-c12405a2fd5d",
        "cursor": {
          "ref": "050173cc-aed8-4681-a71c-1c3e5231059b",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "fe296231-350c-4883-bc61-d4569554fcfb"
        },
        "item": {
          "id": "4df50256-de74-4ba2-a981-c12405a2fd5d",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "4b4ac020-7591-4a9c-9f17-d3c223024916",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbe5001d-59d3-434a-97f2-2e73ea0c2363",
        "cursor": {
          "ref": "3d6bb69c-b3a5-41c4-92c2-d52a5b05ce35",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "49a07cd8-885c-4c5b-9ac9-a07890a0f413"
        },
        "item": {
          "id": "bbe5001d-59d3-434a-97f2-2e73ea0c2363",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "61869bc3-90db-48ec-a825-807971721ef2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18075522-0bb6-4cb8-aa12-9ccbb632fc98",
        "cursor": {
          "ref": "f9784d2a-9972-49d1-9d10-8e3c756a2577",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "5aa2cd27-3ec8-4982-800d-9ed12ebc337b"
        },
        "item": {
          "id": "18075522-0bb6-4cb8-aa12-9ccbb632fc98",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "81f8c3c5-6a6a-47ea-88ef-dd445575a89c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab000448-6c68-4d7e-a365-45468e6ad768",
        "cursor": {
          "ref": "702d2521-c5b2-4b7e-8a6d-67798966911a",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "867ad6e8-3cdb-404a-b6cc-d7576c6d9005"
        },
        "item": {
          "id": "ab000448-6c68-4d7e-a365-45468e6ad768",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "e436b278-b137-42bf-81ee-f5041d232bc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8099003-53ce-41fa-9def-e54423c5f917",
        "cursor": {
          "ref": "1db1289e-3f9c-4384-9e1b-d70f5aa1be9e",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "fc500859-a60d-41b4-af42-ee60a61f5c8a"
        },
        "item": {
          "id": "c8099003-53ce-41fa-9def-e54423c5f917",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "599cd8b1-4c4a-48c6-b7b6-1c5f93fd1947",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f946aafb-888f-455b-b6e4-f00ea875a080",
        "cursor": {
          "ref": "780804df-0f5b-49b3-b475-241e2d147c84",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "a4cbb3c7-9f84-45b5-b637-678959b30dfe"
        },
        "item": {
          "id": "f946aafb-888f-455b-b6e4-f00ea875a080",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "76940e9a-086a-4150-9575-53261a12ac6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5ec1da0-a179-4c08-b96b-567475d053bb",
        "cursor": {
          "ref": "bb14f863-c03f-41fa-a197-598bf759d6f9",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "2af6a141-e317-4ebc-8216-a4c65c675e2a"
        },
        "item": {
          "id": "f5ec1da0-a179-4c08-b96b-567475d053bb",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "ee953492-136d-4a9f-89c7-fc0e5cea93a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea0380ef-8493-4269-8bcf-93934c533866",
        "cursor": {
          "ref": "4cddf106-c396-4587-8874-593a86f6d5af",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "41c9dce8-1f30-4207-90d9-370e179d6636"
        },
        "item": {
          "id": "ea0380ef-8493-4269-8bcf-93934c533866",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "cfed14bc-307b-4bde-998b-79704977db1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a0ff1ed-36e7-4d67-9557-3c71ed55aab5",
        "cursor": {
          "ref": "a5ede35e-eefb-479b-b38b-d4b677d19b93",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "27d01f9e-d771-44a0-82c1-f28428755022"
        },
        "item": {
          "id": "8a0ff1ed-36e7-4d67-9557-3c71ed55aab5",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "4d934050-ac64-406f-a81c-2c889acf71c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d96d551-d0f6-4385-9fe7-32d2a3e27b63",
        "cursor": {
          "ref": "5d8c2ea6-41a2-494a-be17-401798cdabb8",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "c817b13a-f0eb-4ba1-98d7-1a82067cd07f"
        },
        "item": {
          "id": "5d96d551-d0f6-4385-9fe7-32d2a3e27b63",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "eb9ec035-1343-41c1-8b99-997698a6db56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3af1060-77c8-4da1-b8f6-ad811b5d6207",
        "cursor": {
          "ref": "a305b6cd-76b4-49f4-9325-e07fb7651a76",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "9f81ead6-9a3a-4cc6-b3e2-4bd6306d7fbf"
        },
        "item": {
          "id": "d3af1060-77c8-4da1-b8f6-ad811b5d6207",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "69d6d500-e18b-44d0-b345-2802d3303e21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c6b8317-6f0f-4371-8acf-06b2f8e28b70",
        "cursor": {
          "ref": "50e1d270-d37a-47c0-9f53-15abdd2928ae",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "f7dc19c6-cfaa-45ec-b897-8cfc0d876d12"
        },
        "item": {
          "id": "6c6b8317-6f0f-4371-8acf-06b2f8e28b70",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "69b158e3-9c00-45f0-9e48-4a23f1837797",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4770e60-6a49-4c8a-9ded-28ab8ee978ab",
        "cursor": {
          "ref": "51ddc187-dce9-4e41-a205-2007b245914b",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "49536e54-1022-448e-838f-bb20fcf060f1"
        },
        "item": {
          "id": "b4770e60-6a49-4c8a-9ded-28ab8ee978ab",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "7307597c-ccce-433c-910b-ef46966ce3be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60cdf11b-34b8-4a3b-9731-b19e402120ad",
        "cursor": {
          "ref": "de730f56-7e80-4c56-91d8-6717b1be5f99",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "42808f11-a0f0-4c1d-a921-d847bb439d79"
        },
        "item": {
          "id": "60cdf11b-34b8-4a3b-9731-b19e402120ad",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "67526e6f-323b-4c28-9f45-009a0678fa90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33e0728b-c73c-44d2-83be-2cb874cbb83f",
        "cursor": {
          "ref": "97496baa-425f-4c56-a0ce-135fbf261672",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "affe9bf4-77f5-41a9-b0aa-bec36a550577"
        },
        "item": {
          "id": "33e0728b-c73c-44d2-83be-2cb874cbb83f",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "58968834-e4de-4866-97ed-f6db20b3dd85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89fe3f7e-5ea6-40ac-bf84-f97ccbfe7b78",
        "cursor": {
          "ref": "3e97a79b-c533-432a-8a53-6ac982fee2c2",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "319bf864-3d2a-4d61-83e6-6c3a3856a780"
        },
        "item": {
          "id": "89fe3f7e-5ea6-40ac-bf84-f97ccbfe7b78",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "fd9f915a-94e8-48a5-a8e6-17ee8c779b87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cf716ee-b322-4fa8-98a6-ec9daa4d52f1",
        "cursor": {
          "ref": "9d255685-18cd-4de4-9414-f5011b1e0eed",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "272d577f-a6f2-4dea-9fc5-00aa741871db"
        },
        "item": {
          "id": "1cf716ee-b322-4fa8-98a6-ec9daa4d52f1",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "34def05a-0a86-4a07-99af-f459df23cd5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f769aa0-56b7-4c39-bf90-7c1cdbeca744",
        "cursor": {
          "ref": "8ef368f1-002c-4520-b4f0-c20f1369a348",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "a3c645d5-f526-4747-be53-66439e7fcc53"
        },
        "item": {
          "id": "9f769aa0-56b7-4c39-bf90-7c1cdbeca744",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "c367105d-33eb-4fe9-93ce-f14f538a54c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a60a53ca-74da-4a1f-b6e8-c02f3d850484",
        "cursor": {
          "ref": "6bc068d0-ae18-4983-b356-24e87481fc5f",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "94601efe-de1d-4536-ba2e-c1411001c5d6"
        },
        "item": {
          "id": "a60a53ca-74da-4a1f-b6e8-c02f3d850484",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "e7f7e0ca-ba96-45ac-9180-606ff474194a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "deed1902-747a-4024-bb5d-0b56dc310b49",
        "cursor": {
          "ref": "df76a088-37df-48e3-a4fc-f01dc17bfa6b",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "dec9fcfb-504e-419e-99da-ab01dd54897c"
        },
        "item": {
          "id": "deed1902-747a-4024-bb5d-0b56dc310b49",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "955b5a6d-0557-46c2-83eb-972c3053065f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6559b1fe-c2d2-40a2-bb0b-bb57ad8af0a9",
        "cursor": {
          "ref": "8775a685-7442-4b5d-bada-cf5d7d5c4410",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "17d7fce2-fcc2-47c8-b528-75d8b9751c9c"
        },
        "item": {
          "id": "6559b1fe-c2d2-40a2-bb0b-bb57ad8af0a9",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "403a26f5-b170-418b-8138-dcede720adf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af6de600-4a06-407c-94e9-3659d610387f",
        "cursor": {
          "ref": "6a0a78eb-e1fe-4dc7-ac7e-865db0d951e0",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "08591d7f-ed89-4e43-be64-dc79fe3a49d3"
        },
        "item": {
          "id": "af6de600-4a06-407c-94e9-3659d610387f",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "92986679-efc1-4457-90a2-fbcee6910ae5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faee8eaf-a768-48b2-98a2-217b3c7210c9",
        "cursor": {
          "ref": "189ca49d-2b2b-4285-a367-d4ca7292322d",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "2ee43fb1-b654-4022-af30-73da6b4d1644"
        },
        "item": {
          "id": "faee8eaf-a768-48b2-98a2-217b3c7210c9",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "b9472293-b8f2-4e5c-a20f-b15eaf4f788e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18497fb4-7153-4e04-906a-724c4f10f510",
        "cursor": {
          "ref": "737f1ef7-448d-4ab7-9524-bf841eff8d71",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "fb28b79b-fa6a-4f48-8122-cc2cc35be705"
        },
        "item": {
          "id": "18497fb4-7153-4e04-906a-724c4f10f510",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "2068c303-9882-43c4-a24b-8f247a0169f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e0d9bfc-8bc7-445b-8563-e48c53495498",
        "cursor": {
          "ref": "111b5b38-ac2b-4219-9674-28b935326593",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "7aa02e9e-0921-470a-be65-b643ed59e2bb"
        },
        "item": {
          "id": "8e0d9bfc-8bc7-445b-8563-e48c53495498",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "8e3c3713-f0a8-4994-8ba1-8033fe49e40a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb38ca7b-7ce3-4fc4-8166-4b5a26e726ee",
        "cursor": {
          "ref": "5007a529-8c68-4c20-8d5f-f181ff59db5b",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "bf1cdf34-9082-4266-8680-52b8c448b441"
        },
        "item": {
          "id": "bb38ca7b-7ce3-4fc4-8166-4b5a26e726ee",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "33579f57-59e9-4d11-8077-94876befdd23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42fb62df-eade-4d45-ac42-1dc25f838174",
        "cursor": {
          "ref": "024b72b3-6772-43e6-a743-d9aa9bfa89df",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "354fdc38-3c4c-45ce-9eef-e27df069426f"
        },
        "item": {
          "id": "42fb62df-eade-4d45-ac42-1dc25f838174",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "96cfa57e-91e3-420a-8290-fec2ca5935ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "295c1bf1-e53f-4f45-9e25-203d540e42b8",
        "cursor": {
          "ref": "2c4bed03-6018-4f44-9a00-ceac14ed74a9",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "24dd8969-7ddc-49cf-823d-3284de5a18c0"
        },
        "item": {
          "id": "295c1bf1-e53f-4f45-9e25-203d540e42b8",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "0aeebf64-8536-40ee-a1bf-52f31f28efdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f806d242-4a6f-4a67-89be-e45f8a002c73",
        "cursor": {
          "ref": "43945bba-134b-40e6-bd56-89d78b7d459f",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "7fb8fda7-4fc3-403a-a079-6d1bf11ca65b"
        },
        "item": {
          "id": "f806d242-4a6f-4a67-89be-e45f8a002c73",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "24f6ae21-42cc-414f-829c-be0af42dbcf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e69815b-bc8b-4494-a70e-49e000ddda96",
        "cursor": {
          "ref": "0d52d288-e042-4a97-ade5-fc5c73a56021",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "e62f95b4-ef0e-47af-8bd4-73688639150b"
        },
        "item": {
          "id": "6e69815b-bc8b-4494-a70e-49e000ddda96",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "543d6f93-79e0-4f6a-86a7-302b6940e940",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37451fc2-de68-4d8a-a809-fdbfb29d9324",
        "cursor": {
          "ref": "ccd830ba-d78c-4fd2-b31b-229dbe5d1271",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "b0a5cfaa-71e7-4f9f-aedb-9011f0b5aa4a"
        },
        "item": {
          "id": "37451fc2-de68-4d8a-a809-fdbfb29d9324",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "360cb24e-ca9a-4efd-a2e9-2cd2912c54d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd8c10a9-2404-4716-9a99-8466455ba8c8",
        "cursor": {
          "ref": "685cf136-2a14-47cd-9800-86499ec13183",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "e5cbdea5-2e88-4e09-8586-83310691b0a3"
        },
        "item": {
          "id": "dd8c10a9-2404-4716-9a99-8466455ba8c8",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "8dc42114-23aa-43f4-adcf-080a6f268c7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7aabce8-f204-468e-86a8-dbc8e78573e8",
        "cursor": {
          "ref": "e12e47b8-f592-4211-97f9-97fa386b8ec6",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "f16b8560-a94e-4d09-abc5-2e81d978eeb9"
        },
        "item": {
          "id": "e7aabce8-f204-468e-86a8-dbc8e78573e8",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "d8418f6b-a693-4972-a8fd-67e1775b8b3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8b95764-9b40-4e25-acf8-0617f680d83b",
        "cursor": {
          "ref": "7f84b93b-f8e3-440d-92aa-f22c0861e02a",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "7ea95a29-4032-4f4c-a08b-0c6c1a012d68"
        },
        "item": {
          "id": "b8b95764-9b40-4e25-acf8-0617f680d83b",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "55ea47ed-45f4-40ad-803e-d94121b6ecaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ac14528-ec33-4475-a479-f97973a94b00",
        "cursor": {
          "ref": "acfe4e9a-e540-4160-b9a3-b9c051967cda",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "799548ca-85a2-43d1-aa2b-e058b4b728d7"
        },
        "item": {
          "id": "5ac14528-ec33-4475-a479-f97973a94b00",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "97e40e97-1cb4-4394-a026-0bdd6f73ea38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8ff1044-95d3-4eee-907a-d0eabca44102",
        "cursor": {
          "ref": "5e203940-44ae-4a9f-a0cf-987a3dfbecf8",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "3900136d-7725-4d39-a809-c3a063da7fc2"
        },
        "item": {
          "id": "b8ff1044-95d3-4eee-907a-d0eabca44102",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "1d572b25-6345-4e76-b94d-fd3b7a725233",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70604ce4-eff8-4cad-9125-f23a70ad6449",
        "cursor": {
          "ref": "3a7a4577-6d8b-40bb-b1cb-a98c2b4b9f05",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "c0854efd-f2af-4ad5-a383-4cbeb77dc43a"
        },
        "item": {
          "id": "70604ce4-eff8-4cad-9125-f23a70ad6449",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "c23f0440-db60-4619-a532-e2ea451fe825",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3705b9e3-c004-46b5-b5d1-843e1d838548",
        "cursor": {
          "ref": "622984b3-bc51-4868-9ce2-1c5fcb1e9cf2",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "8d3dc364-84b8-4b2c-b1b9-99d7f192a095"
        },
        "item": {
          "id": "3705b9e3-c004-46b5-b5d1-843e1d838548",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "221c5b01-08f6-4182-b3f3-3bc07ae13228",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4f33994-61e1-4a94-abae-3327197f9811",
        "cursor": {
          "ref": "79618a73-f4a4-4a2c-aa9f-cc8355bf4049",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "50489d56-e2a4-4ac1-9bf5-5f591841410b"
        },
        "item": {
          "id": "b4f33994-61e1-4a94-abae-3327197f9811",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "958c666f-edbc-4f87-9f19-b2af5f0b5a9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74bb86ed-b4aa-4172-aaec-9a60a18404d6",
        "cursor": {
          "ref": "2176cd8e-c320-47b3-b077-b8c3419b13a8",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "2c953f84-be08-4250-9b5a-8afad2f8997f"
        },
        "item": {
          "id": "74bb86ed-b4aa-4172-aaec-9a60a18404d6",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "405fb791-b0fe-4e17-9339-6ec41fdadc8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b766904-51b7-41b4-8a5f-aca86cce2833",
        "cursor": {
          "ref": "2e788b61-4e3a-4c6f-aa8c-dd83ee452676",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "edee60a0-0792-4374-a418-80a53eecb7fb"
        },
        "item": {
          "id": "0b766904-51b7-41b4-8a5f-aca86cce2833",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "79baa547-5a26-41bd-bd1f-f302d144f3cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcb1dbb6-cbdb-4630-8188-b06aacfb4b9e",
        "cursor": {
          "ref": "bd72453f-a8d6-4098-88b8-73c0d1362a9a",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "0dc81e44-9790-4828-b9b9-81ab0b1b061a"
        },
        "item": {
          "id": "bcb1dbb6-cbdb-4630-8188-b06aacfb4b9e",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "436502fb-9d26-4b86-9749-d94f886c6802",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64421d58-2786-4f53-8bd3-765d09ee859e",
        "cursor": {
          "ref": "af2530d4-222b-4b61-bc19-f4f3b11135b0",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "62f8c04b-fcef-4ea4-8326-8ce791e96e7f"
        },
        "item": {
          "id": "64421d58-2786-4f53-8bd3-765d09ee859e",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "85abe583-f47b-485f-84e9-6c4c5626ffdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c60bc41-928e-44c8-9003-de6efaddbfc8",
        "cursor": {
          "ref": "24170526-0438-4b21-a331-7feb4a636ab9",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "5d47c046-49fb-4113-9206-0045b75abf46"
        },
        "item": {
          "id": "0c60bc41-928e-44c8-9003-de6efaddbfc8",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "3035267f-4ade-4f66-922b-d915373f196d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fc806be-3edf-4676-9d16-745a0e0e50a0",
        "cursor": {
          "ref": "47850027-fbe4-469f-ac21-efd2652456d6",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "b5902c2b-6a90-4299-81d6-2a146be372be"
        },
        "item": {
          "id": "3fc806be-3edf-4676-9d16-745a0e0e50a0",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "d223d876-b4f2-4c25-86b5-d62654bf3b24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cfc01be-01e8-4fde-861e-02c1f75f014f",
        "cursor": {
          "ref": "a89bc915-2ea8-4716-af7b-03b3e4fd5b0f",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "a9df151b-fcaf-46b0-91be-80860e80a07f"
        },
        "item": {
          "id": "8cfc01be-01e8-4fde-861e-02c1f75f014f",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "1e2256e2-f9e5-41c3-aed2-ed3fbf5584c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaca577b-c11e-40ca-b3e6-8bd6976a7e23",
        "cursor": {
          "ref": "7519044e-402c-44e6-9d50-184bb27260ac",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "5bf158d9-a973-4bf3-9fca-538064a256d7"
        },
        "item": {
          "id": "eaca577b-c11e-40ca-b3e6-8bd6976a7e23",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "ee5fd1e0-3d28-4e6c-846f-3f5f2f52472f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42c5304f-d8c9-411a-9e69-eb311f2110d4",
        "cursor": {
          "ref": "473a2159-962a-405d-9e19-641a43bdfba6",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "03ea0182-6b0a-44de-b639-08a3837b6470"
        },
        "item": {
          "id": "42c5304f-d8c9-411a-9e69-eb311f2110d4",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "466cf9b1-9d09-4007-ba25-eae5dc27ed72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b50aaa75-a3f4-456a-bf71-937039570397",
        "cursor": {
          "ref": "24d87c1b-375b-4d6b-bfc6-314c151b1262",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "e89a9b36-908a-4627-8d80-3519baa73bd1"
        },
        "item": {
          "id": "b50aaa75-a3f4-456a-bf71-937039570397",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "efe510b5-2834-482b-9807-46d1706bfed7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da4093f3-b3cf-4ca0-b457-71d8f7ea1627",
        "cursor": {
          "ref": "4e20520f-f078-44da-ad38-476570e6fd65",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "2285d668-def8-4594-a1b4-5222064f14b9"
        },
        "item": {
          "id": "da4093f3-b3cf-4ca0-b457-71d8f7ea1627",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "547aa54c-1276-4b52-a870-740f6692191d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25472db0-c592-4e47-9120-dd05c078c821",
        "cursor": {
          "ref": "d2b35e55-e92d-450d-9fc8-6a4a5ef8044c",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "ae554782-6069-42b2-8408-a9a394a97990"
        },
        "item": {
          "id": "25472db0-c592-4e47-9120-dd05c078c821",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "9d59496a-270b-4c8b-a18d-c49a28549cd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38593ef3-eb48-432f-9e21-7af9bd60eae0",
        "cursor": {
          "ref": "c9f3e9f5-73c1-4773-9545-e748445e2dcb",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "b86d5af9-fce8-47c0-bfe4-c2e9a61afc1b"
        },
        "item": {
          "id": "38593ef3-eb48-432f-9e21-7af9bd60eae0",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "b060ee77-a1e1-4846-8bc6-cc9970c4fa8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3115603-d618-4750-b4c1-7cc5c12c8654",
        "cursor": {
          "ref": "f03a5096-09fd-4d96-9e6e-e327431687f2",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "d9b11356-0b87-4683-bd2c-c2925cfb83f6"
        },
        "item": {
          "id": "b3115603-d618-4750-b4c1-7cc5c12c8654",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "f5048184-8106-4f32-aea8-e72c517b442a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2212c2d-3fe8-4423-b1e5-1369978d6cd8",
        "cursor": {
          "ref": "76e545ed-df58-4c31-b753-03c3d224627d",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "b74e8ba3-e9e6-4eb8-9d67-9624eff8f914"
        },
        "item": {
          "id": "c2212c2d-3fe8-4423-b1e5-1369978d6cd8",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "e6954e99-84cc-49c3-b138-97c1f3eda5c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9e864b8-1d8f-44b9-b7cf-eeae65786ef9",
        "cursor": {
          "ref": "3df5523b-3a56-4fb4-87de-a56e9085f16e",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "c20cd7be-9bc0-4841-81f4-cf65577dd1da"
        },
        "item": {
          "id": "d9e864b8-1d8f-44b9-b7cf-eeae65786ef9",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "af874d0a-1621-457d-a921-fbffe546f43f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e463ebe4-4e51-496c-8834-1625d50d2d1a",
        "cursor": {
          "ref": "48fafdcd-82af-4e72-9df2-80c6cc524fba",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "a79b5d3f-e63b-4980-bd2d-05d2cc921502"
        },
        "item": {
          "id": "e463ebe4-4e51-496c-8834-1625d50d2d1a",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "4c79d932-cb83-40b9-832b-eb6b01252ac6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bceac37-1fb3-4935-9264-79f25b7b8109",
        "cursor": {
          "ref": "3bff1ee9-535b-4491-8112-6b6acd6e8432",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "0842a7d5-f743-4531-8839-754dae68f948"
        },
        "item": {
          "id": "3bceac37-1fb3-4935-9264-79f25b7b8109",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "72773288-b5ad-4b54-a209-30af942281c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f2496f7-8a1e-4954-8d3b-bb7434886d76",
        "cursor": {
          "ref": "092ef3db-f2ca-4db5-97d2-7be6b48c428b",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "f5aee2d0-1870-4e82-b835-dd5f8fe1bd72"
        },
        "item": {
          "id": "6f2496f7-8a1e-4954-8d3b-bb7434886d76",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "e71d86c9-cd6b-4a8a-8a73-ecf5aa6a0543",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e7c62d8-4a97-4a84-854f-e955b1a98ac9",
        "cursor": {
          "ref": "22198360-21dc-48a4-9732-4886f8a88192",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "0b3bb443-e813-4994-bb57-cfb9ad466279"
        },
        "item": {
          "id": "7e7c62d8-4a97-4a84-854f-e955b1a98ac9",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "0455757f-9ef8-440a-8fd3-a865d86d56b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b02aeb37-aca3-46cc-aff5-8bcf88d7d39c",
        "cursor": {
          "ref": "e94c3d3b-50dd-43a7-a73c-c167a09af71d",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "1a43c90c-a046-4f5a-aef0-cf03ef2023b8"
        },
        "item": {
          "id": "b02aeb37-aca3-46cc-aff5-8bcf88d7d39c",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "e130aed4-4e6f-4617-aae9-e72ae56b3c03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd95ff6c-fd4d-4327-b9b8-50e399b9f78b",
        "cursor": {
          "ref": "6ba7c966-9d09-4933-950e-1ef3e72a7a7e",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "c3ebbea5-d389-4a4c-9277-a73860d498e4"
        },
        "item": {
          "id": "cd95ff6c-fd4d-4327-b9b8-50e399b9f78b",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "f45b5466-ac2a-42a6-a187-0a1f67c2d88f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70813d4a-7783-4090-9042-566e907ebbec",
        "cursor": {
          "ref": "cf6e9d85-9c87-4cfa-86b0-d91b48302521",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "f8c0fb0c-6ba2-45ef-b1e9-dd4e13bfd32d"
        },
        "item": {
          "id": "70813d4a-7783-4090-9042-566e907ebbec",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "5e7776cf-baad-4e5a-bcbe-779ff04f4d97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53565d18-64d9-40f6-a266-db1dde2da5f5",
        "cursor": {
          "ref": "b9924ec3-a5f3-4b4f-8a7c-2f1c86f716cd",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "5d7cf9af-9dce-48a7-aca1-6e84486289f9"
        },
        "item": {
          "id": "53565d18-64d9-40f6-a266-db1dde2da5f5",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "e6f77a93-ba51-4002-9f60-1fe065596a84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7497085-c75a-4ce4-a5c8-265c25ef055d",
        "cursor": {
          "ref": "b7101fa3-21a4-45c9-9ebc-70fcac44e41f",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "8b7527fb-f9c5-4e55-97e4-c03a0122aa8e"
        },
        "item": {
          "id": "a7497085-c75a-4ce4-a5c8-265c25ef055d",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "a8ae39db-b080-424f-a6b2-915fd2e56a16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3077c09b-771e-4890-8683-3895cdbb9e7e",
        "cursor": {
          "ref": "abba385d-132d-46df-a539-7f1c87f05cba",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "129a9a84-b738-4237-a652-31ad1c3f32f5"
        },
        "item": {
          "id": "3077c09b-771e-4890-8683-3895cdbb9e7e",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "23a50707-fdca-4618-b293-8f09b846adb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5098583e-9291-4df5-a70b-e565904fea13",
        "cursor": {
          "ref": "c184282f-358b-4cbd-9efa-f03bf215e719",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "f3221a1d-8919-460a-a1f3-7633a6756520"
        },
        "item": {
          "id": "5098583e-9291-4df5-a70b-e565904fea13",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "34ab9cf7-8994-473f-81ed-f8627ff2e755",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42b86f51-5902-41f6-bce8-45f1dc641c9e",
        "cursor": {
          "ref": "ed3c6ec7-451c-4d05-ae0d-67d7d1b6ad9a",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "6976ce81-7d14-4de7-b5b1-b557a90018b3"
        },
        "item": {
          "id": "42b86f51-5902-41f6-bce8-45f1dc641c9e",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "b9259fd4-65c6-4ea3-816f-7f1db9f53bc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "895b7c00-e1c0-4475-9537-7e16c3742a5c",
        "cursor": {
          "ref": "1b9550bb-98ce-4323-a3ba-900e6f01ba7b",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "77642a22-1ac7-45ba-815a-b87ef35319d6"
        },
        "item": {
          "id": "895b7c00-e1c0-4475-9537-7e16c3742a5c",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "659272d5-20af-424d-a92f-dfcf8dd5f6dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6271efdc-9034-47cd-9277-8b471021f24d",
        "cursor": {
          "ref": "e4093aad-41d5-41e4-8c26-59d2c246fd8f",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "5ffdb545-bb06-44d5-96a6-cdd88b4f2ae9"
        },
        "item": {
          "id": "6271efdc-9034-47cd-9277-8b471021f24d",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "57a18e12-48fe-478e-bee1-398459879b89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c48bb183-324c-4d7d-892b-6f1f40a4d40c",
        "cursor": {
          "ref": "9e6c5017-ec68-414b-9c89-8000daf3f3e2",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "e774c3a1-8721-4427-9280-4996fd456969"
        },
        "item": {
          "id": "c48bb183-324c-4d7d-892b-6f1f40a4d40c",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "67c873b7-926a-4a0a-85e4-c3b3c8e635b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3eaadd0-10be-497f-b7f1-c400be4f2a32",
        "cursor": {
          "ref": "c5065c94-0629-4047-8ef6-e06235b3868d",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "ce35d829-310e-4bd2-ba75-5135f1567c2a"
        },
        "item": {
          "id": "a3eaadd0-10be-497f-b7f1-c400be4f2a32",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "2995b1d4-46ca-4555-9279-9fef5a72801d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1eb7644e-11b1-480f-860a-c10a7353b35f",
        "cursor": {
          "ref": "632d7cde-e21b-4fe0-9dd4-d46d8959eafe",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "75204a21-3202-4c0b-ac74-41310058302e"
        },
        "item": {
          "id": "1eb7644e-11b1-480f-860a-c10a7353b35f",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "cc0fa48e-c784-401f-9020-22557339b65b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57b3b23b-b2a8-496f-9342-2833a51d71a5",
        "cursor": {
          "ref": "885422a8-b161-443a-81ed-89f830f6891c",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "4ca7f718-7441-4897-bb4c-046e71c2d413"
        },
        "item": {
          "id": "57b3b23b-b2a8-496f-9342-2833a51d71a5",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "9a4c42c4-79f8-414d-8123-38fa1b5d3fea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed95c23a-0bac-473c-b39c-8b8b7a6a5ae9",
        "cursor": {
          "ref": "d146c25c-7fc5-466e-aab4-939a719d0f24",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "d336b74a-99ac-4059-a444-56070aefec63"
        },
        "item": {
          "id": "ed95c23a-0bac-473c-b39c-8b8b7a6a5ae9",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "536de8f6-0e34-48ff-b926-c29aee70a088",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34a03770-7e6e-4ece-844c-8911713784cf",
        "cursor": {
          "ref": "8382a16c-7395-4e32-aad3-e187ccd1e417",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "4c1b30dc-15d7-43ea-97ff-21da926bd661"
        },
        "item": {
          "id": "34a03770-7e6e-4ece-844c-8911713784cf",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "f8e1d8c5-fc47-409c-90cb-dda4efe024c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5bcbfe4-ce14-41e2-87b8-0faeeacb5de8",
        "cursor": {
          "ref": "874add11-8b70-43d3-9755-c829188e7cf1",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "44db848e-8647-4e3a-9047-4a4dade44e25"
        },
        "item": {
          "id": "d5bcbfe4-ce14-41e2-87b8-0faeeacb5de8",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "aeed7856-fec8-47f8-ad5b-28c0aa7e5655",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abd93af9-62be-4c96-b7f6-e5002c71bf37",
        "cursor": {
          "ref": "f5dcf0ef-2411-46e3-987d-16e0c8a3d86d",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "8a8c2282-5157-47c2-8a3b-8aaad86b7350"
        },
        "item": {
          "id": "abd93af9-62be-4c96-b7f6-e5002c71bf37",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "94947ff2-2258-4b2e-9f0e-8c5f1e16f7bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9a322e3-5052-4c9a-a27b-781ac77256bf",
        "cursor": {
          "ref": "f8dfc909-c1b8-4026-90f5-de47a633f911",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "d824e69e-51bc-4439-8ff2-19395ad78593"
        },
        "item": {
          "id": "e9a322e3-5052-4c9a-a27b-781ac77256bf",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "19019c9d-a9b9-461e-a001-9c56f8016648",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7566f597-7163-49d3-a4f1-9b33b8f7f048",
        "cursor": {
          "ref": "37af5765-4ddc-49c7-a2ce-14aeeb5ecb00",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "737875b2-791f-4bf1-9d1e-b91f6df47fd3"
        },
        "item": {
          "id": "7566f597-7163-49d3-a4f1-9b33b8f7f048",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "1c40db91-abd0-4889-9eab-fca4f4fa4f9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "816cbab7-e815-4ad7-828b-7016a87e9518",
        "cursor": {
          "ref": "59dd2196-8b4f-4a50-9d13-73361ad62b85",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "f16c4581-ef01-4ff1-8cfb-66f7bb3b9661"
        },
        "item": {
          "id": "816cbab7-e815-4ad7-828b-7016a87e9518",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "cb8cfd65-1af1-4a13-b5f1-589925d04fd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:244)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7378755-4955-4ff2-9d2b-d92013ceb4d3",
        "cursor": {
          "ref": "5e748823-4873-4f52-a15a-e2b65371b654",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "920907f7-1247-4f82-a00e-30ac7503de59"
        },
        "item": {
          "id": "f7378755-4955-4ff2-9d2b-d92013ceb4d3",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "9956eb31-18dc-4c49-b87c-7716ec647c64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:245)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:245)"
            }
          },
          {
            "assertion": "response verified is false",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is false",
              "message": "expected undefined to be false",
              "stack": "AssertionError: expected undefined to be false\n   at Object.eval sandbox-script.js:3:245)"
            }
          }
        ]
      },
      {
        "id": "20e78e5c-98f3-4480-90f4-d55ceef4e798",
        "cursor": {
          "ref": "e9f0f03b-4e55-4c25-8113-1a4ed37ff102",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "ed4f1b11-4795-4230-87fc-2115035f7193"
        },
        "item": {
          "id": "20e78e5c-98f3-4480-90f4-d55ceef4e798",
          "name": "credentials_verify"
        },
        "response": {
          "id": "f1afe115-28d0-4918-a521-a87970fdcf66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:246)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:246)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:246)"
            }
          }
        ]
      },
      {
        "id": "0a65f1f8-5210-4fda-8789-0b55e9a8d73c",
        "cursor": {
          "ref": "87ceefa0-3757-4017-b03a-552d6f4676cf",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "265ea5f4-088c-4306-b3af-613b2c9bf18e"
        },
        "item": {
          "id": "0a65f1f8-5210-4fda-8789-0b55e9a8d73c",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "ffa50588-b349-4372-853f-7cf428834cb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:247)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:247)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:247)"
            }
          }
        ]
      },
      {
        "id": "9aeb79d5-ba15-4f00-bc45-69cdc7a15813",
        "cursor": {
          "ref": "9c805988-2979-46ed-a00a-77da04b321a2",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "96777e76-b1c5-47bb-88ef-578207ea8a9e"
        },
        "item": {
          "id": "9aeb79d5-ba15-4f00-bc45-69cdc7a15813",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "0f065aa3-a000-45ef-b0a6-901d5cd651b0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9aeb79d5-ba15-4f00-bc45-69cdc7a15813",
        "cursor": {
          "ref": "9c805988-2979-46ed-a00a-77da04b321a2",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "96777e76-b1c5-47bb-88ef-578207ea8a9e"
        },
        "item": {
          "id": "9aeb79d5-ba15-4f00-bc45-69cdc7a15813",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "0f065aa3-a000-45ef-b0a6-901d5cd651b0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3286e659-78e2-4660-bb29-aa3a185f2d7d",
        "cursor": {
          "ref": "e7aca986-52fd-4ffe-9fb0-2047e3fa923d",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "47997f29-1fb9-4329-839a-9cfebc047ffb"
        },
        "item": {
          "id": "3286e659-78e2-4660-bb29-aa3a185f2d7d",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "4002fdcc-7dd3-4587-8f0d-878b17e88aa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:249)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c39e264-4989-4741-8997-f8083917ad20",
        "cursor": {
          "ref": "a506877d-a753-43d1-86c0-ac2a2fe83394",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "c0ce7c95-7b04-4794-9b51-ebd628ffcdd4"
        },
        "item": {
          "id": "4c39e264-4989-4741-8997-f8083917ad20",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "f34133d0-a9d2-46cf-bac2-5742a7a785ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:250)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}